USE [LIVE]
GO
/****** Object:  StoredProcedure [dbo].[GGP_SP_Matverbrauch]    Script Date: 22.12.2017 11:52:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--SET QUOTED_IDENTIFIER OFF 
--GO
--SET ANSI_NULLS ON 
--GO
-- =============================================
-- Author:		D.S.Simic
-- Create date: 23.07.2014
-- Change date: 23.07.2014
-- Description:	Materialverbrauch im Zusammenhang mit Kostensatzüberwachung und Nachkalk
-- =============================================
ALTER PROCEDURE [dbo].[GGP_SP_Matverbrauch]
	@p_Case_ varchar(255) = '',
	@p_para1 varchar(255) = '',
	@p_para2 varchar(255) = '',
	@p_para3 varchar(255) = '',
	@p_para4 varchar(255) = '',
	@p_para5 varchar(255) = '',
	@p_para6 varchar(255) = '',
	@p_para7 varchar(255) = '',
	@p_para8 varchar(255) = '',
	@p_para9 varchar(2000) = '',
	@OUTPUT_RES AS varchar(1000) = '' OUTPUT
AS
BEGIN

	DECLARE
	@Case_ varchar(255) = '',
	@para1 varchar(255) = '',
	@para2 varchar(255) = '',
	@para3 varchar(255) = '',
	@para4 varchar(255) = '',
	@para5 varchar(255) = '',
	@para6 varchar(255) = '',
	@para7 varchar(255) = '',
	@para8 varchar(255) = '',
	@para9 varchar(2000) = ''

	SET @Case_ = @p_Case_
	SET @para1 = @p_para1
	SET @para2 = @p_para2
	SET @para3 = @p_para3
	SET @para4 = @p_para4
	SET @para5 = @p_para5
	SET @para6 = @p_para6
	SET @para7 = @p_para7
	SET @para8 = @p_para8
	SET @para9 = @p_para9

	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;


	-----------------------------------------------------------------------------------
	-----------------------------------------------------------------------------------
	-- NEU 2015
	-----------------------------------------------------------------------------------
	-----------------------------------------------------------------------------------
	IF @Case_ = 'AbteilungenAnlagen'
	BEGIN
		SELECT     TOP 100 PERCENT LIVE2.dbo.MatRueck_Anlage.ID, LIVE2.dbo.MatRueck_Abteilung.Abteilung, LIVE2.dbo.MatRueck_Anlage.Anlage
		FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
			LIVE2.dbo.MatRueck_AnlageAbteilung ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_AnlageAbteilung.Abteilung_PTR INNER JOIN
			LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_AnlageAbteilung.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID
		WHERE LIVE2.dbo.MatRueck_Abteilung.Abteilung NOT IN ('Abwasser', 'Arbeitsbekleidung', 'Bohrerei', 'Fräserei', 'Recycling')
		ORDER BY LIVE2.dbo.MatRueck_Abteilung.Abteilung
	END

	IF @Case_ = 'Abteilungen'
	BEGIN
		SELECT     TOP 100 PERCENT LIVE2.dbo.MatRueck_Abteilung.ID, LIVE2.dbo.MatRueck_Abteilung.Abteilung
		FROM         LIVE2.dbo.MatRueck_Abteilung 
		WHERE LIVE2.dbo.MatRueck_Abteilung.Abteilung NOT IN ('Abwasser', 'Arbeitsbekleidung', 'Bohrerei', 'Fräserei', 'Recycling')
		ORDER BY LIVE2.dbo.MatRueck_Abteilung.Abteilung
	END

	IF @Case_ = 'VerbrauchSOLL'
	BEGIN
		IF ISNUMERIC(CAST(@para1 AS numeric(10, 0)) ) > 0
		BEGIN
			SELECT DISTINCT TOP 100 PERCENT 
				dbo.DATA0017.RKEY AS DATA0017RKEY, 
				LIVE2.dbo.MatRueck_Anlage.ID AS Anlage_ID,
				LIVE2.dbo.MatRueck_Abteilung.Abteilung, 
                LIVE2.dbo.MatRueck_Anlage.Anlage,
				dbo.DATA0017.INV_PART_NUMBER, 
				dbo.DATA0017.INV_PART_DESCRIPTION, 
				--dbo.DATA0017.IES_DIRECT_MATL_COST AS VerbrauchSOLL,
				ISNULL((
						SELECT TOP 1 VerbrauchSOLL
						FROM LIVE2.dbo.NachKalk_MatVerteilung 
						WHERE Anlage_PTR=LIVE2.dbo.MatRueck_Anlage.ID  AND D17_PTR=CAST(dbo.DATA0017.RKEY AS INT) 
				), 0) AS VerbrauchSOLL,
				--dbo.DATA0017.IES_OVERHEAD_COST AS KSMaterial
				ISNULL((
						SELECT TOP 1 KSMaterial
						FROM LIVE2.dbo.NachKalk_MatVerteilung 
						WHERE Anlage_PTR=LIVE2.dbo.MatRueck_Anlage.ID  AND D17_PTR=CAST(dbo.DATA0017.RKEY AS INT) 
				), 0) AS KSMaterial
			--FROM dbo.DATA0017 INNER JOIN LIVE2.dbo.MatRueck_Transaktion ON dbo.DATA0017.RKEY = LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR
			FROM         dbo.DATA0017 INNER JOIN
                      LIVE2.dbo.MatRueck_Transaktion ON dbo.DATA0017.RKEY = LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR INNER JOIN
                      LIVE2.dbo.MatRueck_Abteilung ON LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR = LIVE2.dbo.MatRueck_Abteilung.ID INNER JOIN
                      LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID
			WHERE (dbo.DATA0017.S_B_N = 'N') AND dbo.DATA0017.ACTIVE_FLAG='Y'
			AND (LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR = CAST(@para1 AS numeric(10, 0))) AND LIVE2.dbo.MatRueck_Abteilung.Aktiviert=1
			ORDER BY dbo.DATA0017.INV_PART_NUMBER
		END
	END

	IF @Case_ = 'VerbrauchSOLLAlleArtikel'
	BEGIN
		--IF ISNUMERIC(CAST(@para1 AS numeric(10, 0)) ) > 0
		--BEGIN
		--	SELECT DISTINCT TOP 100 PERCENT 
		--		dbo.DATA0017.RKEY AS DATA0017RKEY, 
		--		dbo.DATA0017.INV_PART_NUMBER, 
		--		dbo.DATA0017.INV_PART_DESCRIPTION, 
		--		dbo.DATA0017.IES_DIRECT_MATL_COST AS VerbrauchSOLL,
		--		dbo.DATA0017.IES_OVERHEAD_COST AS KSMaterial
		--	FROM dbo.DATA0017 INNER JOIN LIVE2.dbo.MatRueck_Transaktion ON dbo.DATA0017.RKEY = LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR
		--	WHERE (dbo.DATA0017.S_B_N = 'N') AND dbo.DATA0017.ACTIVE_FLAG='Y'
		--	AND (LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR = CAST(@para1 AS numeric(10, 0)))
		--	ORDER BY dbo.DATA0017.INV_PART_NUMBER
		--END
/*
		SELECT
			DATA0017RKEY, 
			Anlage_ID,
			Abteilung, 
            Anlage,
			INV_PART_NUMBER, 
			INV_PART_DESCRIPTION, 
			VerbrauchSOLL,
			KSMaterial
		FROM
		(
			SELECT DISTINCT TOP 100 PERCENT 
				dbo.DATA0017.RKEY AS DATA0017RKEY, 
				LIVE2.dbo.MatRueck_Anlage.ID AS Anlage_ID,
				(
					SELECT TOP 1 COUNT(DISTINCT Anlage) AS RES
					FROM         dbo.DATA0017 AS D17 INNER JOIN
							  LIVE2.dbo.MatRueck_Transaktion ON D17.RKEY = LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR INNER JOIN
							  LIVE2.dbo.MatRueck_Abteilung ON LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR = LIVE2.dbo.MatRueck_Abteilung.ID INNER JOIN
							  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID
					WHERE D17.RKEY = dbo.DATA0017.RKEY
				) AS AnzVorkommen,
				LIVE2.dbo.MatRueck_Abteilung.Abteilung, 
                LIVE2.dbo.MatRueck_Anlage.Anlage,
				dbo.DATA0017.INV_PART_NUMBER, 
				dbo.DATA0017.INV_PART_DESCRIPTION, 
				--dbo.DATA0017.IES_DIRECT_MATL_COST AS VerbrauchSOLL,
				ISNULL((
						SELECT TOP 1 VerbrauchSOLL
						FROM LIVE2.dbo.NachKalk_MatVerteilung 
						WHERE Anlage_PTR=LIVE2.dbo.MatRueck_Anlage.ID  AND D17_PTR=CAST(dbo.DATA0017.RKEY AS INT) 
				), 0) AS VerbrauchSOLL,
				--dbo.DATA0017.IES_OVERHEAD_COST AS KSMaterial
				ISNULL((
						SELECT TOP 1 KSMaterial
						FROM LIVE2.dbo.NachKalk_MatVerteilung 
						WHERE Anlage_PTR=LIVE2.dbo.MatRueck_Anlage.ID  AND D17_PTR=CAST(dbo.DATA0017.RKEY AS INT) 
				), 0) AS KSMaterial
			FROM         dbo.DATA0017 INNER JOIN
                      LIVE2.dbo.MatRueck_Transaktion ON dbo.DATA0017.RKEY = LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR INNER JOIN
                      LIVE2.dbo.MatRueck_Abteilung ON LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR = LIVE2.dbo.MatRueck_Abteilung.ID INNER JOIN
                      LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID
			WHERE (dbo.DATA0017.S_B_N = 'N') AND dbo.DATA0017.ACTIVE_FLAG='Y'
				AND LIVE2.dbo.MatRueck_Abteilung.Abteilung NOT IN ('Arbeitsbekleidung', 'Bohrerei', 'Fräserei', 'Recycling', 'Verwaltung'
																	,'FL Diazo-Filme', 'FL Fixierer', 'FL Silber-Filme', 'FL Sonstiges' ) --'Abwasser', 
				--AND dbo.DATA0017.RKEY NOT IN (1542, 60452, 1033, 61516)
		) AS tblAlleArtikel
		ORDER BY 
			AnzVorkommen DESC,
			INV_PART_NUMBER,
			Abteilung,
			Anlage
*/


		SELECT
			DATA0017RKEY, 
			Anlage_ID,
			Abteilung, 
            Anlage,
			INV_PART_NUMBER, 
			INV_PART_DESCRIPTION, 
			VerbrauchSOLL,
			KSMaterial
			--AnzVorkommen
		FROM
		(
			SELECT DISTINCT TOP 100 PERCENT 
				dbo.DATA0017.RKEY AS DATA0017RKEY, 
				LIVE2.dbo.MatRueck_Anlage.ID AS Anlage_ID,
				(
					SELECT TOP 1 COUNT(DISTINCT Anlage) AS RES
					FROM         LIVE2.dbo.NachKalk_MatVerteilung INNER JOIN
							  dbo.DATA0017 AS D17 ON LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = D17.RKEY INNER JOIN
							  LIVE2.dbo.MatRueck_AnlageAbteilung INNER JOIN
							  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_AnlageAbteilung.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID ON 
							  LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
							  LIVE2.dbo.MatRueck_Abteilung ON LIVE2.dbo.MatRueck_AnlageAbteilung.Abteilung_PTR = LIVE2.dbo.MatRueck_Abteilung.ID
					WHERE D17.RKEY = dbo.DATA0017.RKEY
				) AS AnzVorkommen,
				LIVE2.dbo.MatRueck_Abteilung.Abteilung, 
                LIVE2.dbo.MatRueck_Anlage.Anlage,
				dbo.DATA0017.INV_PART_NUMBER, 
				dbo.DATA0017.INV_PART_DESCRIPTION, 
				LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL,
				LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial
			--FROM         dbo.DATA0017 INNER JOIN
            --          LIVE2.dbo.MatRueck_Transaktion ON dbo.DATA0017.RKEY = LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR INNER JOIN
            --          LIVE2.dbo.MatRueck_Abteilung ON LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR = LIVE2.dbo.MatRueck_Abteilung.ID INNER JOIN
            --          LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID
			FROM         LIVE2.dbo.NachKalk_MatVerteilung INNER JOIN
                      dbo.DATA0017 ON LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = dbo.DATA0017.RKEY INNER JOIN
                      LIVE2.dbo.MatRueck_AnlageAbteilung INNER JOIN
                      LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_AnlageAbteilung.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID ON 
                      LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
                      LIVE2.dbo.MatRueck_Abteilung ON LIVE2.dbo.MatRueck_AnlageAbteilung.Abteilung_PTR = LIVE2.dbo.MatRueck_Abteilung.ID
			WHERE (dbo.DATA0017.S_B_N = 'N') AND dbo.DATA0017.ACTIVE_FLAG='Y'
				AND LIVE2.dbo.MatRueck_Abteilung.Abteilung NOT IN ('Arbeitsbekleidung', 'Bohrerei', 'Fräserei', 'Recycling', 'Verwaltung'
																	,'FL Diazo-Filme', 'FL Fixierer', 'FL Silber-Filme', 'FL Sonstiges' ) --'Abwasser', 
				--AND dbo.DATA0017.RKEY NOT IN (1542, 60452, 1033, 61516)
		) AS tblAlleArtikel
		ORDER BY 
			AnzVorkommen DESC,
			INV_PART_NUMBER,
			Abteilung,
			Anlage
	END

	IF @Case_ = 'SELECT_ANLAGE_FILTER'
	BEGIN
		IF ISNUMERIC(CAST(@para1 AS numeric(10, 0)) ) > 0
		BEGIN
			SELECT 
				LIVE2.dbo.MatRueck_Anlage.ID, 
				LIVE2.dbo.MatRueck_Anlage.Anlage, 
				LIVE2.dbo.MatRueck_AnlageAbteilung.D34_PTR
			FROM         
				LIVE2.dbo.MatRueck_AnlageAbteilung INNER JOIN
				LIVE2.dbo.MatRueck_Anlage ON 
				LIVE2.dbo.MatRueck_AnlageAbteilung.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID
			WHERE     
				(LIVE2.dbo.MatRueck_AnlageAbteilung.Abteilung_PTR = CAST(@para1 AS numeric(10, 0)) )
		END
	END

	--IF @Case_ = 'Update_KSMaterial'
	--BEGIN
	--	IF ISNUMERIC(CAST(@para1 AS numeric(10, 0)) ) > 0
	--	BEGIN
	--		UPDATE dbo.DATA0017 
	--		SET 
	--			IES_OVERHEAD_COST = CAST(@para2 AS decimal(20, 7))
	--		WHERE 
	--			RKEY = CAST(@para1 AS numeric(10, 0))
	--	END
	--END

	IF @Case_ = 'Update_Materialverteilung'
	BEGIN
		IF ISNUMERIC(CAST(@para1 AS int) ) > 0
		BEGIN
			IF Exists(
						SELECT *
						FROM LIVE2.dbo.NachKalk_MatVerteilung 
						WHERE Anlage_PTR=CAST(@para1 AS INT) AND D17_PTR=CAST(@para2 AS INT)
					)
			BEGIN
				UPDATE LIVE2.dbo.NachKalk_MatVerteilung
				SET 
					Verteilung_Prozent = CAST(@para3 AS INT) ,
					VerbrauchSOLL = CAST(@para4 AS DECIMAL(20, 7)),
					KSMaterial = CAST(@para5 AS bit)
				WHERE 
					Anlage_PTR=CAST(@para1 AS INT)  AND D17_PTR=CAST(@para2 AS INT)
			END
			ELSE
			BEGIN
				INSERT LIVE2.dbo.NachKalk_MatVerteilung(Verteilung_Prozent, Anlage_PTR, D17_PTR, VerbrauchSOLL, KSMaterial)
				SELECT 
					CAST(@para3 AS INT) AS Verteilung_Prozent,
					CAST(@para1 AS INT) AS Anlage_PTR,
					CAST(@para2 AS INT) AS D17_PTR,
					CAST(@para4 AS DECIMAL(20, 7)) AS VerbrauchSOLL,
					CAST(@para5 AS bit) AS KSMaterial
			END
		END
		--SELECT Verteilung_Prozent 
		--FROM LIVE2.dbo.NachKalk_MatVerteilung 
		--WHERE Anlage_PTR=CAST(@para1 AS INT))  AND D17_PTR=CAST(@para2 AS INT)) 
	END

	IF @Case_ = 'AlleAnlagenEinerAbteilung'
	BEGIN
		IF CAST(@para1 AS INT) = -13 
		BEGIN
			SELECT 'Au-Goldbad' AS Anlage, 31 AS ID, 'CNG-01-01' AS DEPT_CODE
			UNION ALL
			SELECT 'Au-Goldbad Rest' AS Anlage, 32 AS ID, 'CNG-01-02' AS DEPT_CODE
			UNION ALL
			SELECT 'Au-Goldbad Vorreinigung' AS Anlage, 43 AS ID, 'CGIN-CV-01' AS DEPT_CODE
		END
		ELSE
		BEGIN
			IF CAST(@para1 AS INT) = 0 
			BEGIN
				SELECT 'Mat. in div. Anlagen' AS Anlage, 0 AS ID, '' AS DEPT_CODE
			END
			ELSE
			BEGIN

				--SELECT     
				--	LIVE2.dbo.MatRueck_Anlage.Anlage, 
				--	LIVE2.dbo.MatRueck_Anlage.ID, 
				--	(SELECT TOP 1 DEPT_CODE FROM dbo.DATA0034 WHERE RKEY = LIVE2.dbo.MatRueck_AnlageAbteilung.D34_PTR) AS DEPT_CODE
				--FROM         LIVE2.dbo.MatRueck_Anlage INNER JOIN
				--					  LIVE2.dbo.MatRueck_AnlageAbteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.MatRueck_AnlageAbteilung.Anlage_PTR INNER JOIN
				--					  LIVE2.dbo.MatRueck_Abteilung ON LIVE2.dbo.MatRueck_AnlageAbteilung.Abteilung_PTR = LIVE2.dbo.MatRueck_Abteilung.ID
				--WHERE     (LIVE2.dbo.MatRueck_Abteilung.ID = CAST(@para1 AS INT)) 
				--			AND LIVE2.dbo.MatRueck_Anlage.Anlage NOT IN ('Belichter 1', 'Belichter 2')
				SELECT  DISTINCT
					CASE 
						WHEN Anlage='Stopplack Foto' OR Anlage='Stopplack 2 K' THEN
							'Stopplack'
						ELSE
							CASE
								WHEN Anlage='Abwasser 1' OR Anlage='Abwasser 2' THEN
									'Abwasser'
								ELSE
									LIVE2.dbo.MatRueck_Anlage.Anlage
							END
					END AS Anlage, 
					CASE 
						WHEN Anlage='Stopplack Foto' OR Anlage='Stopplack 2 K' THEN
							61
						ELSE
							CASE
								WHEN Anlage='Abwasser 1' OR Anlage='Abwasser 2' THEN
									50
								ELSE
									LIVE2.dbo.MatRueck_Anlage.ID
							END
					END AS ID,
					CASE 
						WHEN Anlage='Stopplack Foto' OR Anlage='Stopplack 2 K' THEN
							'SIEB-01-01'
						ELSE
							CASE
								WHEN Anlage='Abwasser 1' OR Anlage='Abwasser 2' THEN
									'ABW-01-01'
								ELSE
									(SELECT TOP 1 DEPT_CODE FROM dbo.DATA0034 WHERE RKEY = LIVE2.dbo.MatRueck_AnlageAbteilung.D34_PTR)
							END
					END AS DEPT_CODE
					
				FROM         LIVE2.dbo.MatRueck_Anlage INNER JOIN
									  LIVE2.dbo.MatRueck_AnlageAbteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.MatRueck_AnlageAbteilung.Anlage_PTR INNER JOIN
									  LIVE2.dbo.MatRueck_Abteilung ON LIVE2.dbo.MatRueck_AnlageAbteilung.Abteilung_PTR = LIVE2.dbo.MatRueck_Abteilung.ID
				WHERE     LIVE2.dbo.MatRueck_Abteilung.ID = CAST(@para1 AS INT)
							AND LIVE2.dbo.MatRueck_Anlage.Anlage NOT IN ('Belichter 1', 'Belichter 2', 'QS Labor') --'FL Fixierer', 
							
											--, 'Siebherstellung', 'Siebdruck allgemein' ,'KD', 'Flexlack', 'Carbon', 'Durchsteiger', 'Stopplack')
				ORDER BY Anlage
			END
		END
	END

	IF @Case_ = 'AlleArtikelEinerAnlage'
	BEGIN
		IF CAST(@para1 AS INT) = 31
		BEGIN
			SELECT  DISTINCT 
					dbo.DATA0017.RKEY AS D17_PTR, LIVE2.dbo.MatRueck_Abteilung.Abteilung, 
					LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID, dbo.DATA0017.INV_PART_NUMBER AS Artikel, 
					dbo.DATA0017.INV_PART_DESCRIPTION AS Bezeichnung, dbo.DATA0002.UNIT_CODE AS LagerEinheit, 
					ROUND(dbo.DATA0017.STOCK_PURCH, 4) AS Umrechnungsfaktor, dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE AS EinkEinheit,
					--CAST(dbo.DATA0017.IES_DIRECT_MATL_COST  AS NUMERIC(10, 7)) AS VerbrauchSOLL,
					ISNULL((
							SELECT TOP 1 VerbrauchSOLL
							FROM LIVE2.dbo.NachKalk_MatVerteilung 
							WHERE Anlage_PTR=LIVE2.dbo.MatRueck_Anlage.ID  AND D17_PTR=CAST(dbo.DATA0017.RKEY AS INT) 
					), 0) AS VerbrauchSOLL,
					dbo.DATA0017.CONSIGN_ONHAND_QTY, dbo.DATA0017.ACTIVE_FLAG,
					ISNULL((
						SELECT TOP 1 COUNT(DISTINCT Anlage) AS RES
						FROM         dbo.DATA0017 AS D17 INNER JOIN
								  LIVE2.dbo.MatRueck_Transaktion ON D17.RKEY = LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR INNER JOIN
								  LIVE2.dbo.MatRueck_Abteilung ON LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR = LIVE2.dbo.MatRueck_Abteilung.ID INNER JOIN
								  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID
						WHERE D17.RKEY = dbo.DATA0017.RKEY
					), 0) AS AnzVorkommen
			FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
								  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
								  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
								  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
								  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
								  dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY
			GROUP BY dbo.DATA0017.RKEY, LIVE2.dbo.MatRueck_Abteilung.Abteilung, LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID,
					dbo.DATA0017.INV_PART_NUMBER, dbo.DATA0017.INV_PART_DESCRIPTION, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STOCK_PURCH, 
					dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE, dbo.DATA0017.CONSIGN_ONHAND_QTY, dbo.DATA0017.ACTIVE_FLAG
			HAVING  dbo.DATA0017.ACTIVE_FLAG='Y' AND dbo.DATA0017.INV_PART_NUMBER = 'ME-GOLDKALIUMZYANID'  --(LIVE2.dbo.MatRueck_Anlage.ID = CAST(@para1 AS INT)) --'Black Hole')
		END

		IF CAST(@para1 AS INT) = 32
		BEGIN
			SELECT  DISTINCT 
					dbo.DATA0017.RKEY AS D17_PTR, LIVE2.dbo.MatRueck_Abteilung.Abteilung, 
					LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID, dbo.DATA0017.INV_PART_NUMBER AS Artikel, 
					dbo.DATA0017.INV_PART_DESCRIPTION AS Bezeichnung, dbo.DATA0002.UNIT_CODE AS LagerEinheit, 
					ROUND(dbo.DATA0017.STOCK_PURCH, 4) AS Umrechnungsfaktor, dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE AS EinkEinheit,
					--CAST(dbo.DATA0017.IES_DIRECT_MATL_COST  AS NUMERIC(10, 7)) AS VerbrauchSOLL,
					ISNULL((
							SELECT TOP 1 VerbrauchSOLL
							FROM LIVE2.dbo.NachKalk_MatVerteilung 
							WHERE Anlage_PTR=LIVE2.dbo.MatRueck_Anlage.ID  AND D17_PTR=CAST(dbo.DATA0017.RKEY AS INT) 
					), 0) AS VerbrauchSOLL,
					dbo.DATA0017.CONSIGN_ONHAND_QTY, dbo.DATA0017.ACTIVE_FLAG,
					ISNULL((
						SELECT TOP 1 COUNT(DISTINCT Anlage) AS RES
						FROM         dbo.DATA0017 AS D17 INNER JOIN
								  LIVE2.dbo.MatRueck_Transaktion ON D17.RKEY = LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR INNER JOIN
								  LIVE2.dbo.MatRueck_Abteilung ON LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR = LIVE2.dbo.MatRueck_Abteilung.ID INNER JOIN
								  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID
						WHERE D17.RKEY = dbo.DATA0017.RKEY
					), 0) AS AnzVorkommen
			FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
								  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
								  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
								  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
								  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
								  dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY
			GROUP BY dbo.DATA0017.RKEY, LIVE2.dbo.MatRueck_Abteilung.Abteilung, LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID,
					dbo.DATA0017.INV_PART_NUMBER, dbo.DATA0017.INV_PART_DESCRIPTION, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STOCK_PURCH, 
					dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE, dbo.DATA0017.CONSIGN_ONHAND_QTY, dbo.DATA0017.ACTIVE_FLAG
			HAVING  dbo.DATA0017.ACTIVE_FLAG='Y' AND  (LIVE2.dbo.MatRueck_Anlage.Anlage IN ('Au-Goldbad', 'Au-Aktivator', 'Au-Nickelbad', 'Au-Reiniger', 'Au-Allgemein')) 
					AND (dbo.DATA0017.INV_PART_NUMBER <> 'ME-GOLDKALIUMZYANID' )
		END

		IF CAST(@para1 AS INT) = 43
		BEGIN
			SELECT  DISTINCT 
					dbo.DATA0017.RKEY AS D17_PTR, LIVE2.dbo.MatRueck_Abteilung.Abteilung, 
					LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID, dbo.DATA0017.INV_PART_NUMBER AS Artikel, 
					dbo.DATA0017.INV_PART_DESCRIPTION AS Bezeichnung, dbo.DATA0002.UNIT_CODE AS LagerEinheit, 
					ROUND(dbo.DATA0017.STOCK_PURCH, 4) AS Umrechnungsfaktor, dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE AS EinkEinheit,
					--CAST(dbo.DATA0017.IES_DIRECT_MATL_COST  AS NUMERIC(10, 7)) AS VerbrauchSOLL,
					ISNULL((
							SELECT TOP 1 VerbrauchSOLL
							FROM LIVE2.dbo.NachKalk_MatVerteilung 
							WHERE Anlage_PTR=LIVE2.dbo.MatRueck_Anlage.ID  AND D17_PTR=CAST(dbo.DATA0017.RKEY AS INT) 
					), 0) AS VerbrauchSOLL,
					dbo.DATA0017.CONSIGN_ONHAND_QTY, dbo.DATA0017.ACTIVE_FLAG,
					ISNULL((
						SELECT TOP 1 COUNT(DISTINCT Anlage) AS RES
						FROM         dbo.DATA0017 AS D17 INNER JOIN
								  LIVE2.dbo.MatRueck_Transaktion ON D17.RKEY = LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR INNER JOIN
								  LIVE2.dbo.MatRueck_Abteilung ON LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR = LIVE2.dbo.MatRueck_Abteilung.ID INNER JOIN
								  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID
						WHERE D17.RKEY = dbo.DATA0017.RKEY
					), 0) AS AnzVorkommen
			FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
								  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
								  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
								  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
								  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
								  dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY
			GROUP BY dbo.DATA0017.RKEY, LIVE2.dbo.MatRueck_Abteilung.Abteilung, LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID,
					dbo.DATA0017.INV_PART_NUMBER, dbo.DATA0017.INV_PART_DESCRIPTION, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STOCK_PURCH, 
					dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE, dbo.DATA0017.CONSIGN_ONHAND_QTY, dbo.DATA0017.ACTIVE_FLAG
			HAVING  dbo.DATA0017.ACTIVE_FLAG='Y' AND (LIVE2.dbo.MatRueck_Anlage.Anlage = 'Au-Vorreinigung Cupra')
		END

		IF CAST(@para1 AS INT) NOT IN (31, 32, 43)
		BEGIN
			SELECT  DISTINCT dbo.DATA0017.RKEY AS D17_PTR, LIVE2.dbo.MatRueck_Abteilung.Abteilung, 
					LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID, dbo.DATA0017.INV_PART_NUMBER AS Artikel, 
					dbo.DATA0017.INV_PART_DESCRIPTION AS Bezeichnung, dbo.DATA0002.UNIT_CODE AS LagerEinheit, 
					ROUND(dbo.DATA0017.STOCK_PURCH, 4) AS Umrechnungsfaktor, dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE AS EinkEinheit,
					--CAST(dbo.DATA0017.IES_DIRECT_MATL_COST  AS NUMERIC(10, 7)) AS VerbrauchSOLL,
					--ISNULL((
					--		SELECT TOP 1 VerbrauchSOLL
					--		FROM LIVE2.dbo.NachKalk_MatVerteilung 
					--		WHERE Anlage_PTR=LIVE2.dbo.MatRueck_Anlage.ID  AND D17_PTR=CAST(dbo.DATA0017.RKEY AS INT) 
					--), 0) AS VerbrauchSOLL,
					dbo.DATA0017.CONSIGN_ONHAND_QTY, dbo.DATA0017.ACTIVE_FLAG,
					--dbo.DATA0017.IES_OVERHEAD_COST, 
					--ISNULL((
					--		SELECT TOP 1 KSMaterial
					--		FROM LIVE2.dbo.NachKalk_MatVerteilung 
					--		WHERE Anlage_PTR=LIVE2.dbo.MatRueck_Anlage.ID  AND D17_PTR=CAST(dbo.DATA0017.RKEY AS INT) 
					--), 0) AS IES_OVERHEAD_COST,
					--LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent, 
					LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, 
					LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial,
					ISNULL((
						SELECT TOP 1 COUNT(DISTINCT Anlage) AS RES
						FROM         dbo.DATA0017 AS D17 INNER JOIN
								  LIVE2.dbo.MatRueck_Transaktion ON D17.RKEY = LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR INNER JOIN
								  LIVE2.dbo.MatRueck_Abteilung ON LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR = LIVE2.dbo.MatRueck_Abteilung.ID INNER JOIN
								  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID
						WHERE D17.RKEY = dbo.DATA0017.RKEY
					), 0) AS AnzVorkommen
			FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
                      LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
                      LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
                      dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
                      dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
                      dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
                      LIVE2.dbo.NachKalk_MatVerteilung ON dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR AND 
                      LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR
			GROUP BY dbo.DATA0017.RKEY, LIVE2.dbo.MatRueck_Abteilung.Abteilung, LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID,
					dbo.DATA0017.INV_PART_NUMBER, dbo.DATA0017.INV_PART_DESCRIPTION, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STOCK_PURCH, 
					dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE, dbo.DATA0017.CONSIGN_ONHAND_QTY,
					dbo.DATA0017.ACTIVE_FLAG, LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial
			HAVING      dbo.DATA0017.ACTIVE_FLAG='Y' AND (LIVE2.dbo.MatRueck_Anlage.ID = CAST(@para1 AS INT)) 
						AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(@para2 AS bit) 
			ORDER BY dbo.DATA0017.INV_PART_DESCRIPTION
		END
	END

	IF @Case_ = 'Materialverbrauch_je_Anlage_Ritzen'
	BEGIN

		DECLARE @tblRitzenArtikel table(
											D17_PTR NUMERIC(10, 0),
											VerbrauchSOLL DECIMAL(20, 7),
											LagerEinheit varchar(5)
											)


		INSERT @tblRitzenArtikel(D17_PTR, VerbrauchSOLL, LagerEinheit) 
		SELECT  DISTINCT dbo.DATA0017.RKEY AS D17_PTR,
				LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL,
				dbo.DATA0002.UNIT_CODE AS LagerEinheit
		FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
                      LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
                      LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
                      dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
                      dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
                      dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
                      LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
                      dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
		WHERE      dbo.DATA0017.ACTIVE_FLAG='Y' AND (LIVE2.dbo.MatRueck_Anlage.ID = 20) 
					AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(1 AS bit)

		--SELECT * FROM @tblRitzenArtikel AS tblRitzenArtikel

		DECLARE @tblRitzVerbrauch table(
											D95_PTR NUMERIC(10, 0),
											ArtBezeichnung char(40), 
											DatumVon datetime,
											ZeitVon int,
											VerrPreis DECIMAL(20, 7),
											Verbrauch int,
											VerbrauchSOLL DECIMAL(20, 7),
											LagerEinheit varchar(5)
											)
		INSERT @tblRitzVerbrauch(D95_PTR, ArtBezeichnung, DatumVon, ZeitVon, VerrPreis, Verbrauch, VerbrauchSOLL, LagerEinheit)
		SELECT
			D95_PTR,
			ArtBezeichnung,
			TRAN_DATE AS DatumVon,
			TTIME AS ZeitVon,
			VerrPreis,
			(
				ISNULL(tblDATA0095.QUANTITY, 0)
			) AS Verbrauch,
			(
				SELECT TOP 1 VerbrauchSOLL 
				FROM @tblRitzenArtikel AS tblRitzenArtikel 
				WHERE tblRitzenArtikel.D17_PTR=tblAnlageArtikel.D17_RKEY
			) AS VerbrauchSOLL,
			(
				SELECT TOP 1 LagerEinheit 
				FROM @tblRitzenArtikel AS tblRitzenArtikel 
				WHERE tblRitzenArtikel.D17_PTR=tblAnlageArtikel.D17_RKEY
			) AS LagerEinheit
		FROM
		(
			SELECT     LIVE2.dbo.MatRueck_Anlage.ID AS Anlage_PTR, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY AS D17_RKEY, 
						dbo.DATA0017.INV_PART_DESCRIPTION AS ArtBezeichnung,
						dbo.DATA0002.UNIT_CODE AS Lagereinheit, dbo.DATA0017.STOCK_PURCH, dbo.DATA0017.STD_COST AS VerrPreis
			FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
					  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
					  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
					  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
					  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
					  dbo.DATA0034 ON LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR = dbo.DATA0034.RKEY
			WHERE dbo.DATA0034.DEPT_CODE = 'RITZ-01-01'
			GROUP BY LIVE2.dbo.MatRueck_Anlage.ID, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY, 
					dbo.DATA0017.INV_PART_DESCRIPTION , dbo.DATA0017.STOCK_PURCH, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STD_COST 
			HAVING LIVE2.dbo.MatRueck_Anlage.ID = 20
		) AS tblAnlageArtikel INNER JOIN --LEFT OUTER JOIN 
		(SELECT dbo.DATA0095.RKEY AS D95_PTR, 
			ISNULL(QUANTITY, 0)
			/*
			+
			ISNULL((
					SELECT 
						ISNULL((
							(-1)*SUM(D95.QUANTITY) 
							--*
							--ISNULL((
							--	SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
							--	FROM LIVE2.dbo.NachKalk_MatVerteilung
							--	WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = 20
							--			AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = D17_RKEY
							--), 1) 
						), 0) AS RES 

					FROM 
						dbo.DATA0095 AS D95 --LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
					WHERE 
						D95.TRAN_TP = 23
						AND D95.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
						AND D95.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
						AND D95.INVT_PTR = dbo.DATA0095.INVT_PTR
				), 0) */ AS QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, TTIME, MONTH(TRAN_DATE) AS Monat, TRAN_TP 
		FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
		WHERE dbo.DATA0095.TRAN_TP IN (15, 16, 23) AND dbo.DATA0034.DEPT_CODE = 'RITZ-01-01'
		AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
		AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
		--AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, '01.01.2014', 103) 
		--AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, '24.04.2015', 103)  
		AND dbo.DATA0095.INVT_PTR IN (SELECT D17_PTR FROM @tblRitzenArtikel AS tblRitzenArtikel) --= tblAnlageArtikel_.D17_PTR 
		) AS tblDATA0095 
		ON tblAnlageArtikel.D17_RKEY = tblDATA0095.INVT_PTR

			
		DECLARE @tblRitzAusgabe table(
											D95_PTR NUMERIC(10, 0),
											ArtBezeichnung char(40), 
											DatumVon datetime,
											ZeitVon int,
											DatumBis datetime,
											ZeitBis int,
											Tage int,
											Stunden int,
											Durchsatz DECIMAL(20, 7),
											VerrPreis DECIMAL(20, 7),
											Verbrauch int,
											VerbrauchSOLL DECIMAL(20, 7),
											LagerEinheit varchar(5)
											)
		INSERT @tblRitzAusgabe(D95_PTR, ArtBezeichnung, DatumVon, ZeitVon, DatumBis, ZeitBis, Tage, 
								Stunden, Durchsatz, VerrPreis, Verbrauch, VerbrauchSOLL, LagerEinheit)
		SELECT 
			D95_PTR,
			ArtBezeichnung,
			DatumVon,
			ZeitVon,
			ISNULL((
				SELECT TOP 1 DatumVon 
				FROM @tblRitzVerbrauch AS tblRitzVerbrauch 
				WHERE tblRitzVerbrauch.D95_PTR>tblRitzVerbrauchBasis.D95_PTR
				ORDER BY D95_PTR
			), DATEADD(dd, 0, DATEDIFF(dd, 0, GETDATE()))) AS DatumBis,
			ISNULL((
					SELECT TOP 1 ZeitVon 
						FROM @tblRitzVerbrauch AS tblRitzVerbrauch 
						WHERE tblRitzVerbrauch.D95_PTR>tblRitzVerbrauchBasis.D95_PTR
						ORDER BY D95_PTR
					), REPLACE(CONVERT(VARCHAR(8),GETDATE(),108), ':', '')) AS ZeitBis,
			DATEDIFF(d, DatumVon, (
									ISNULL((
										SELECT TOP 1 DatumVon 
										FROM @tblRitzVerbrauch AS tblRitzVerbrauch 
										WHERE tblRitzVerbrauch.D95_PTR>tblRitzVerbrauchBasis.D95_PTR
										ORDER BY D95_PTR
									), GETDATE())
			)) AS Tage,
			DATEDIFF(hh , dbo.UF_ToDateTime(ZeitVon, DatumVon) 
						, dbo.UF_ToDateTime(
											ISNULL((
													SELECT TOP 1 ZeitVon 
														FROM @tblRitzVerbrauch AS tblRitzVerbrauch 
														WHERE tblRitzVerbrauch.D95_PTR>tblRitzVerbrauchBasis.D95_PTR
														ORDER BY D95_PTR
													), REPLACE(CONVERT(VARCHAR(8),GETDATE(),108), ':', ''))
											, ISNULL((
													SELECT TOP 1 DatumVon 
														FROM @tblRitzVerbrauch AS tblRitzVerbrauch 
														WHERE tblRitzVerbrauch.D95_PTR>tblRitzVerbrauchBasis.D95_PTR
														ORDER BY D95_PTR
													), GETDATE()))
			) AS Stunden,
			ISNULL((
					SELECT     
						SUM(
							ISNULL(dbo.ARTIKELDATEN.RITZWEG, 0) * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT)/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT)
							*
							CASE WHEN dbo.ARTIKELDATEN.LPD <= 1.8 THEN 1
									ELSE
										CASE WHEN dbo.ARTIKELDATEN.LPD > 1.8 AND dbo.ARTIKELDATEN.LPD < 2.4 THEN 2
												ELSE 3
										END
							END
							)
						AS RES
					FROM         dbo.DATA0006 INNER JOIN
								  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
								  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
								  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
					WHERE    
								dbo.UF_ToDateTime(dbo.DATA0048.TTIME, dbo.DATA0048.TDATE) >= 
										dbo.UF_ToDateTime(ZeitVon, CONVERT(DATETIME, DatumVon, 103)) 
								AND dbo.UF_ToDateTime(dbo.DATA0048.TTIME, dbo.DATA0048.TDATE) <=
									dbo.UF_ToDateTime(
														(
															ISNULL((
																SELECT TOP 1 ZeitVon 
																FROM @tblRitzVerbrauch AS tblRitzVerbrauch 
																WHERE tblRitzVerbrauch.D95_PTR>tblRitzVerbrauchBasis.D95_PTR
																ORDER BY D95_PTR
															), REPLACE(CONVERT(VARCHAR(8),GETDATE(),108), ':', ''))
														) 
														, (
															CONVERT(DATETIME, (
																				ISNULL((
																					SELECT TOP 1 DatumVon 
																					FROM @tblRitzVerbrauch AS tblRitzVerbrauch 
																					WHERE tblRitzVerbrauch.D95_PTR>tblRitzVerbrauchBasis.D95_PTR
																					ORDER BY D95_PTR
																				), GETDATE()) 
															), 103) 
														))
								AND dbo.DATA0034.DEPT_CODE = 'RITZ-01-01'
				), 0) AS Durchsatz,
			VerrPreis,
			Verbrauch,
			VerbrauchSOLL,
			LagerEinheit
		FROM @tblRitzVerbrauch AS tblRitzVerbrauchBasis 
		ORDER BY D95_PTR



		SELECT 
			Bezeichnung,
			SUM(IstKosten_je_100Lfm) AS KS_IstKosten,
			SUM(SollKosten_je_10Lfm) AS SollKosten,
			SUM(MehrMinderKosten) AS MehrMinderKosten,
			SUM(IstKosten) AS IstKosten,
			VerrPreis,
			SUM(SollV_100) AS SollV_100,
			SUM(IstV_100) AS IstV_100,
			LagerEinheit,
			SUM(Verbrauch) AS Verbrauch,
			BzgGr,
			(SELECT SUM(Durchsatz) AS RES FROM @tblRitzAusgabe AS tblRitzAusgabe) AS Durchsatz,
			VerbrauchSOLL
		FROM
		(
			SELECT
				ArtBezeichnung AS Bezeichnung,
				ISNULL((
					CASE 
						WHEN Durchsatz>0 THEN
							(Verbrauch*VerrPreis)/Durchsatz 
						ELSE
							0
					END), 0) AS IstKosten_je_100Lfm,
				ISNULL((VerrPreis*VerbrauchSOLL), 0) AS SollKosten_je_10Lfm,
				--ISNULL(((Verbrauch*VerrPreis)-(VerrPreis*Durchsatz*VerbrauchSOLL)), 0) AS MehrMinderKosten,
				ISNULL(((VerrPreis*Durchsatz*Verbrauch)-(VerrPreis*VerbrauchSOLL)), 0) AS MehrMinderKosten,
				ISNULL((Verbrauch*VerrPreis), 0) AS IstKosten,
				VerrPreis,
				ISNULL(CAST(VerbrauchSOLL AS DECIMAL(20, 7)), 0) AS SollV_100,
				--ISNULL((CASE
				--	--WHEN Durchsatz>0 THEN
				--	--	(Verbrauch/Durchsatz)
				--	WHEN Verbrauch>0 THEN
				--		(Durchsatz/Verbrauch/2)
				--	ELSE
				--		0
				--END), 0) AS IstV_100,
				Durchsatz AS IstV_100,
				LagerEinheit,
				Verbrauch,
				'Lfm' AS BzgGr,
				VerbrauchSOLL

			FROM @tblRitzAusgabe AS tblRitzAusgabe
		) AS tblGrpRitzen
		GROUP BY 			
			Bezeichnung,
			VerrPreis,
			LagerEinheit,
			BzgGr,
			VerbrauchSOLL
		ORDER BY 
			IstKosten DESC

		--SELECT SUM(Durchsatz) AS RES FROM @tblRitzAusgabe AS tblRitzAusgabe
	END

	IF @Case_ = 'Materialverbrauch_je_Anlage_RitzenChrono'
	BEGIN

		DECLARE @tblRitzenArtikelChrono table(
											D17_PTR NUMERIC(10, 0),
											VerbrauchSOLL DECIMAL(20, 7),
											LagerEinheit varchar(5)
											)


		INSERT @tblRitzenArtikelChrono(D17_PTR, VerbrauchSOLL, LagerEinheit) 
		SELECT  DISTINCT dbo.DATA0017.RKEY AS D17_PTR,
				LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL,
				dbo.DATA0002.UNIT_CODE AS LagerEinheit
		FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
                      LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
                      LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
                      dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
                      dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
                      dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
                      LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
                      dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
		WHERE      dbo.DATA0017.ACTIVE_FLAG='Y' AND (LIVE2.dbo.MatRueck_Anlage.ID = 20) 
					AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(1 AS bit)

		--SELECT * FROM @tblRitzenArtikel AS tblRitzenArtikel

		DECLARE @tblRitzVerbrauchChrono table(
											D17_PTR NUMERIC(10, 0),
											D95_PTR NUMERIC(10, 0),
											ArtBezeichnung char(40), 
											DatumVon datetime,
											ZeitVon int,
											VerrPreis DECIMAL(20, 7),
											Verbrauch int,
											VerbrauchSOLL DECIMAL(20, 7),
											LagerEinheit varchar(5)
											)
		INSERT @tblRitzVerbrauchChrono(D17_PTR, D95_PTR, ArtBezeichnung, DatumVon, ZeitVon, VerrPreis, Verbrauch, VerbrauchSOLL, LagerEinheit)
		SELECT
			D17_RKEY,
			D95_PTR,
			ArtBezeichnung,
			TRAN_DATE AS DatumVon,
			TTIME AS ZeitVon,
			VerrPreis,
			(
				ISNULL(tblDATA0095.QUANTITY, 0)				  
			) AS Verbrauch,
			(
				SELECT TOP 1 VerbrauchSOLL 
				FROM @tblRitzenArtikelChrono AS tblRitzenArtikelChrono 
				WHERE tblRitzenArtikelChrono.D17_PTR=tblAnlageArtikel.D17_RKEY
			) AS VerbrauchSOLL,
			(
				SELECT TOP 1 LagerEinheit 
				FROM @tblRitzenArtikelChrono AS tblRitzenArtikelChrono
				WHERE tblRitzenArtikelChrono.D17_PTR=tblAnlageArtikel.D17_RKEY
			) AS LagerEinheit
		FROM
		(
			SELECT     LIVE2.dbo.MatRueck_Anlage.ID AS Anlage_PTR, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY AS D17_RKEY, 
						dbo.DATA0017.INV_PART_DESCRIPTION AS ArtBezeichnung,
						dbo.DATA0002.UNIT_CODE AS Lagereinheit, dbo.DATA0017.STOCK_PURCH, dbo.DATA0017.STD_COST AS VerrPreis
			FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
					  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
					  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
					  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
					  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
					  dbo.DATA0034 ON LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR = dbo.DATA0034.RKEY
			WHERE dbo.DATA0034.DEPT_CODE = 'RITZ-01-01'
			GROUP BY LIVE2.dbo.MatRueck_Anlage.ID, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY, 
					dbo.DATA0017.INV_PART_DESCRIPTION , dbo.DATA0017.STOCK_PURCH, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STD_COST 
			HAVING LIVE2.dbo.MatRueck_Anlage.ID = 20
		) AS tblAnlageArtikel INNER JOIN --LEFT OUTER JOIN 
		(SELECT dbo.DATA0095.RKEY AS D95_PTR, 
			ISNULL(QUANTITY, 0)
			/*
			+
			ISNULL((
					SELECT 
						ISNULL((
							(-1)*SUM(D95.QUANTITY) 
							--*
							--ISNULL((
							--	SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
							--	FROM LIVE2.dbo.NachKalk_MatVerteilung
							--	WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = 20
							--			AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = D17_RKEY
							--), 1) 
						), 0) AS RES 

					FROM 
						dbo.DATA0095 AS D95 --LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
					WHERE 
						D95.TRAN_TP = 23
						AND D95.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
						AND D95.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
						AND D95.INVT_PTR = dbo.DATA0095.INVT_PTR
				), 0) 
				*/ AS QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, TTIME, MONTH(TRAN_DATE) AS Monat, TRAN_TP 
		FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
		WHERE dbo.DATA0095.TRAN_TP IN (15, 16, 23) AND dbo.DATA0034.DEPT_CODE = 'RITZ-01-01'
		AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
		AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
		--AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, '01.01.2014', 103) 
		--AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, '24.04.2015', 103)  
		AND dbo.DATA0095.INVT_PTR IN (SELECT D17_PTR FROM @tblRitzenArtikelChrono AS tblRitzenArtikelChrono) --= tblAnlageArtikel_.D17_PTR 
		) AS tblDATA0095 
		ON tblAnlageArtikel.D17_RKEY = tblDATA0095.INVT_PTR

			
		DECLARE @tblRitzAusgabeChrono table(
											D17_PTR NUMERIC(10, 0),
											D95_PTR NUMERIC(10, 0),
											ArtBezeichnung char(40), 
											DatumVon datetime,
											ZeitVon int,
											DatumBis datetime,
											ZeitBis int,
											Tage int,
											Stunden int,
											Durchsatz DECIMAL(20, 7),
											VerrPreis DECIMAL(20, 7),
											Verbrauch int,
											VerbrauchSOLL DECIMAL(20, 7),
											LagerEinheit varchar(5)
											)
		INSERT @tblRitzAusgabeChrono(D17_PTR, D95_PTR, ArtBezeichnung, DatumVon, ZeitVon, DatumBis, ZeitBis, Tage, 
								Stunden, Durchsatz, VerrPreis, Verbrauch, VerbrauchSOLL, LagerEinheit)
		SELECT 
			D17_PTR,
			D95_PTR,
			ArtBezeichnung,
			DatumVon,
			ZeitVon,
			ISNULL((
				SELECT TOP 1 DatumVon 
				FROM @tblRitzVerbrauchChrono AS tblRitzVerbrauchChrono 
				WHERE tblRitzVerbrauchChrono.D95_PTR>tblRitzVerbrauchBasisChrono.D95_PTR
				ORDER BY D95_PTR
			), DATEADD(dd, 0, DATEDIFF(dd, 0, GETDATE()))) AS DatumBis,
			ISNULL((
					SELECT TOP 1 ZeitVon 
						FROM @tblRitzVerbrauchChrono AS tblRitzVerbrauchChrono 
						WHERE tblRitzVerbrauchChrono.D95_PTR>tblRitzVerbrauchBasisChrono.D95_PTR
						ORDER BY D95_PTR
					), REPLACE(CONVERT(VARCHAR(8),GETDATE(),108), ':', '')) AS ZeitBis,
			DATEDIFF(d, DatumVon, (
									ISNULL((
										SELECT TOP 1 DatumVon 
										FROM @tblRitzVerbrauchChrono AS tblRitzVerbrauchChrono 
										WHERE tblRitzVerbrauchChrono.D95_PTR>tblRitzVerbrauchBasisChrono.D95_PTR
										ORDER BY D95_PTR
									), GETDATE())
			)) AS Tage,
			DATEDIFF(hh , dbo.UF_ToDateTime(ZeitVon, DatumVon) 
						, dbo.UF_ToDateTime(
											ISNULL((
													SELECT TOP 1 ZeitVon 
														FROM @tblRitzVerbrauchChrono AS tblRitzVerbrauchChrono 
														WHERE tblRitzVerbrauchChrono.D95_PTR>tblRitzVerbrauchBasisChrono.D95_PTR
														ORDER BY D95_PTR
													), REPLACE(CONVERT(VARCHAR(8),GETDATE(),108), ':', ''))
											, ISNULL((
													SELECT TOP 1 DatumVon 
														FROM @tblRitzVerbrauchChrono AS tblRitzVerbrauchChrono 
														WHERE tblRitzVerbrauchChrono.D95_PTR>tblRitzVerbrauchBasisChrono.D95_PTR
														ORDER BY D95_PTR
													), GETDATE()))
			) AS Stunden,
			ISNULL((
					SELECT     
						SUM(
							ISNULL(dbo.ARTIKELDATEN.RITZWEG, 0) * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT)/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT)
							*
							CASE WHEN dbo.ARTIKELDATEN.LPD <= 1.8 THEN 1
									ELSE
										CASE WHEN dbo.ARTIKELDATEN.LPD > 1.8 AND dbo.ARTIKELDATEN.LPD < 2.4 THEN 2
												ELSE 3
										END
							END
							)
						AS RES
					FROM         dbo.DATA0006 INNER JOIN
								  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
								  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
								  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
					WHERE    
								dbo.UF_ToDateTime(dbo.DATA0048.TTIME, dbo.DATA0048.TDATE) >= 
										dbo.UF_ToDateTime(ZeitVon, CONVERT(DATETIME, DatumVon, 103)) 
								AND dbo.UF_ToDateTime(dbo.DATA0048.TTIME, dbo.DATA0048.TDATE) <=
									dbo.UF_ToDateTime(
														(
															ISNULL((
																SELECT TOP 1 ZeitVon 
																FROM @tblRitzVerbrauchChrono AS tblRitzVerbrauchChrono 
																WHERE tblRitzVerbrauchChrono.D95_PTR>tblRitzVerbrauchBasisChrono.D95_PTR
																ORDER BY D95_PTR
															), REPLACE(CONVERT(VARCHAR(8),GETDATE(),108), ':', ''))
														) 
														, (
															CONVERT(DATETIME, (
																				ISNULL((
																					SELECT TOP 1 DatumVon 
																					FROM @tblRitzVerbrauchChrono AS tblRitzVerbrauchChrono 
																					WHERE tblRitzVerbrauchChrono.D95_PTR>tblRitzVerbrauchBasisChrono.D95_PTR
																					ORDER BY D95_PTR
																				), GETDATE()) 
															), 103) 
														))
								AND dbo.DATA0034.DEPT_CODE = 'RITZ-01-01'
				), 0) AS Durchsatz,
			VerrPreis,
			Verbrauch,
			VerbrauchSOLL,
			LagerEinheit
		FROM @tblRitzVerbrauchChrono AS tblRitzVerbrauchBasisChrono 
		ORDER BY D95_PTR


		SELECT
			D17_PTR,
			ArtBezeichnung AS Bezeichnung,
			dbo.UF_ToDateTime(ZeitVon, DatumVon) AS DatumVon,
			dbo.UF_ToDateTime(ZeitBis, DatumBis) AS DatumBis,
			Durchsatz,
			--ISNULL((
			--	CASE 
			--		WHEN Durchsatz>0 THEN
			--			(Verbrauch*VerrPreis)/Durchsatz*100 
			--		ELSE
			--			0
			--	END), 0) AS IstKosten_je_100Lfm,
			--ISNULL((VerrPreis*VerbrauchSOLL*100), 0) AS SollKosten_je_10Lfm,
			--ISNULL(((Verbrauch*VerrPreis)-(VerrPreis*Durchsatz*VerbrauchSOLL)), 0) AS MehrMinderKosten,
			--ISNULL((Verbrauch*VerrPreis), 0) AS IstKosten,
			VerrPreis,
			--ISNULL(CAST(VerbrauchSOLL*100.000000 AS DECIMAL(20, 7)), 0) AS SollV_100,
			--ISNULL((CASE
			--	WHEN Durchsatz>0 THEN
			--		(Verbrauch/Durchsatz)*100.000000 
			--	ELSE
			--		0
			--END), 0) AS IstV_100,
			LagerEinheit,
			Verbrauch,
			'Lfm' AS BzgGr,
			VerbrauchSOLL

		FROM @tblRitzAusgabeChrono AS tblRitzAusgabeChrono

		ORDER BY 
			D95_PTR

		--SELECT SUM(Durchsatz) AS RES FROM @tblRitzAusgabe AS tblRitzAusgabe
	END

	IF @Case_ = 'Materialverbrauch_je_Anlage_RitzenChronoEB'
	BEGIN

		DECLARE @tblRitzenArtikelChronoEB table(
											D17_PTR NUMERIC(10, 0),
											VerbrauchSOLL DECIMAL(20, 7),
											LagerEinheit varchar(5)
											)


		INSERT @tblRitzenArtikelChronoEB(D17_PTR, VerbrauchSOLL, LagerEinheit) 
		SELECT  DISTINCT dbo.DATA0017.RKEY AS D17_PTR,
				LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL,
				dbo.DATA0002.UNIT_CODE AS LagerEinheit
		FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
                      LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
                      LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
                      dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
                      dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
                      dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
                      LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
                      dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
		WHERE      --dbo.DATA0017.RKEY = CAST(@para1 AS NUMERIC(10, 0))
			      dbo.DATA0017.ACTIVE_FLAG='Y' AND (LIVE2.dbo.MatRueck_Anlage.ID = 20) 
					AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(1 AS bit)

		--SELECT * FROM @tblRitzenArtikel AS tblRitzenArtikel

		DECLARE @tblRitzVerbrauchChronoEB table(
											D17_PTR NUMERIC(10, 0),
											D95_PTR NUMERIC(10, 0),
											ArtBezeichnung char(40), 
											DatumVon datetime,
											ZeitVon int,
											VerrPreis DECIMAL(20, 7),
											Verbrauch int,
											VerbrauchSOLL DECIMAL(20, 7),
											LagerEinheit varchar(5)
											)
		INSERT @tblRitzVerbrauchChronoEB(D17_PTR, D95_PTR, ArtBezeichnung, DatumVon, ZeitVon, VerrPreis, Verbrauch, VerbrauchSOLL, LagerEinheit)
		SELECT
			D17_RKEY,
			D95_PTR,
			ArtBezeichnung,
			TRAN_DATE AS DatumVon,
			TTIME AS ZeitVon,
			VerrPreis,
			QUANTITY AS Verbrauch,
			(
				SELECT TOP 1 VerbrauchSOLL 
				FROM @tblRitzenArtikelChronoEB AS tblRitzenArtikelChronoEB 
				WHERE tblRitzenArtikelChronoEB.D17_PTR=tblAnlageArtikel.D17_RKEY
			) AS VerbrauchSOLL,
			(
				SELECT TOP 1 LagerEinheit 
				FROM @tblRitzenArtikelChronoEB AS tblRitzenArtikelChronoEB
				WHERE tblRitzenArtikelChronoEB.D17_PTR=tblAnlageArtikel.D17_RKEY
			) AS LagerEinheit
		FROM
		(
			SELECT     LIVE2.dbo.MatRueck_Anlage.ID AS Anlage_PTR, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY AS D17_RKEY, 
						dbo.DATA0017.INV_PART_DESCRIPTION AS ArtBezeichnung,
						dbo.DATA0002.UNIT_CODE AS Lagereinheit, dbo.DATA0017.STOCK_PURCH, dbo.DATA0017.STD_COST AS VerrPreis
			FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
					  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
					  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
					  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
					  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
					  dbo.DATA0034 ON LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR = dbo.DATA0034.RKEY
			WHERE dbo.DATA0034.DEPT_CODE = 'RITZ-01-01'
			GROUP BY LIVE2.dbo.MatRueck_Anlage.ID, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY, 
					dbo.DATA0017.INV_PART_DESCRIPTION , dbo.DATA0017.STOCK_PURCH, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STD_COST 
			HAVING LIVE2.dbo.MatRueck_Anlage.ID = 20
		) AS tblAnlageArtikel INNER JOIN --LEFT OUTER JOIN 
		(SELECT dbo.DATA0095.RKEY AS D95_PTR, QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, TTIME, MONTH(TRAN_DATE) AS Monat, TRAN_TP 
		FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
		WHERE dbo.DATA0095.TRAN_TP IN (15, 16, 23) AND dbo.DATA0034.DEPT_CODE = 'RITZ-01-01'
		AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
		AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
		--AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, '01.01.2014', 103) 
		--AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, '24.04.2015', 103)  
		AND dbo.DATA0095.INVT_PTR IN (SELECT D17_PTR FROM @tblRitzenArtikelChronoEB AS tblRitzenArtikelChronoEB) --= tblAnlageArtikel_.D17_PTR 
		) AS tblDATA0095 
		ON tblAnlageArtikel.D17_RKEY = tblDATA0095.INVT_PTR

			
		DECLARE @tblRitzAusgabeChronoEB table(
											D17_PTR NUMERIC(10, 0),
											D95_PTR NUMERIC(10, 0),
											ArtBezeichnung char(40), 
											DatumVon datetime,
											ZeitVon int,
											DatumBis datetime,
											ZeitBis int,
											Tage int,
											Stunden int,
											Durchsatz DECIMAL(20, 7),
											VerrPreis DECIMAL(20, 7),
											Verbrauch int,
											VerbrauchSOLL DECIMAL(20, 7),
											LagerEinheit varchar(5)
											)
		INSERT @tblRitzAusgabeChronoEB(D17_PTR, D95_PTR, ArtBezeichnung, DatumVon, ZeitVon, DatumBis, ZeitBis, Tage, 
								Stunden, Durchsatz, VerrPreis, Verbrauch, VerbrauchSOLL, LagerEinheit)
		SELECT 
			D17_PTR,
			D95_PTR,
			ArtBezeichnung,
			DatumVon,
			ZeitVon,
			ISNULL((
				SELECT TOP 1 DatumVon 
				FROM @tblRitzVerbrauchChronoEB AS tblRitzVerbrauchChronoEB 
				WHERE tblRitzVerbrauchChronoEB.D95_PTR>tblRitzVerbrauchBasisChronoEB.D95_PTR
				ORDER BY D95_PTR
			), DATEADD(dd, 0, DATEDIFF(dd, 0, GETDATE()))) AS DatumBis,
			ISNULL((
					SELECT TOP 1 ZeitVon 
						FROM @tblRitzVerbrauchChronoEB AS tblRitzVerbrauchChronoEB 
						WHERE tblRitzVerbrauchChronoEB.D95_PTR>tblRitzVerbrauchBasisChronoEB.D95_PTR
						ORDER BY D95_PTR
					), REPLACE(CONVERT(VARCHAR(8),GETDATE(),108), ':', '')) AS ZeitBis,
			DATEDIFF(d, DatumVon, (
									ISNULL((
										SELECT TOP 1 DatumVon 
										FROM @tblRitzVerbrauchChronoEB AS tblRitzVerbrauchChronoEB 
										WHERE tblRitzVerbrauchChronoEB.D95_PTR>tblRitzVerbrauchBasisChronoEB.D95_PTR
										ORDER BY D95_PTR
									), GETDATE())
			)) AS Tage,
			DATEDIFF(hh , dbo.UF_ToDateTime(ZeitVon, DatumVon) 
						, dbo.UF_ToDateTime(
											ISNULL((
													SELECT TOP 1 ZeitVon 
														FROM @tblRitzVerbrauchChronoEB AS tblRitzVerbrauchChronoEB 
														WHERE tblRitzVerbrauchChronoEB.D95_PTR>tblRitzVerbrauchBasisChronoEB.D95_PTR
														ORDER BY D95_PTR
													), REPLACE(CONVERT(VARCHAR(8),GETDATE(),108), ':', ''))
											, ISNULL((
													SELECT TOP 1 DatumVon 
														FROM @tblRitzVerbrauchChronoEB AS tblRitzVerbrauchChronoEB 
														WHERE tblRitzVerbrauchChronoEB.D95_PTR>tblRitzVerbrauchBasisChronoEB.D95_PTR
														ORDER BY D95_PTR
													), GETDATE()))
			) AS Stunden,
			ISNULL((
					SELECT     
						SUM(
							ISNULL(dbo.ARTIKELDATEN.RITZWEG, 0) * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT)/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT)
							*
							CASE WHEN dbo.ARTIKELDATEN.LPD <= 1.8 THEN 1
									ELSE
										CASE WHEN dbo.ARTIKELDATEN.LPD > 1.8 AND dbo.ARTIKELDATEN.LPD < 2.4 THEN 2
												ELSE 3
										END
							END
							)
						AS RES
					FROM         dbo.DATA0006 INNER JOIN
								  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
								  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
								  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
					WHERE    
								dbo.UF_ToDateTime(dbo.DATA0048.TTIME, dbo.DATA0048.TDATE) >= 
										dbo.UF_ToDateTime(ZeitVon, CONVERT(DATETIME, DatumVon, 103)) 
								AND dbo.UF_ToDateTime(dbo.DATA0048.TTIME, dbo.DATA0048.TDATE) <=
									dbo.UF_ToDateTime(
														(
															ISNULL((
																SELECT TOP 1 ZeitVon 
																FROM @tblRitzVerbrauchChronoEB AS tblRitzVerbrauchChronoEB 
																WHERE tblRitzVerbrauchChronoEB.D95_PTR>tblRitzVerbrauchBasisChronoEB.D95_PTR
																ORDER BY D95_PTR
															), REPLACE(CONVERT(VARCHAR(8),GETDATE(),108), ':', ''))
														) 
														, (
															CONVERT(DATETIME, (
																				ISNULL((
																					SELECT TOP 1 DatumVon 
																					FROM @tblRitzVerbrauchChronoEB AS tblRitzVerbrauchChronoEB 
																					WHERE tblRitzVerbrauchChronoEB.D95_PTR>tblRitzVerbrauchBasisChronoEB.D95_PTR
																					ORDER BY D95_PTR
																				), GETDATE()) 
															), 103) 
														))
								AND dbo.DATA0034.DEPT_CODE = 'RITZ-01-01'
				), 0) AS Durchsatz,
			VerrPreis,
			Verbrauch,
			VerbrauchSOLL,
			LagerEinheit
		FROM @tblRitzVerbrauchChronoEB AS tblRitzVerbrauchBasisChronoEB 
		ORDER BY D95_PTR

		DELETE FROM @tblRitzAusgabeChronoEB WHERE D17_PTR <> CAST(@para1 AS NUMERIC(10, 0))

		SELECT
			D17_PTR,
			ArtBezeichnung AS Bezeichnung,
			dbo.UF_ToDateTime(ZeitVon, DatumVon) AS DatumVon,
			dbo.UF_ToDateTime(ZeitBis, DatumBis) AS DatumBis,
			Durchsatz,
			--ISNULL((
			--	CASE 
			--		WHEN Durchsatz>0 THEN
			--			(Verbrauch*VerrPreis)/Durchsatz*100 
			--		ELSE
			--			0
			--	END), 0) AS IstKosten_je_100Lfm,
			--ISNULL((VerrPreis*VerbrauchSOLL*100), 0) AS SollKosten_je_10Lfm,
			--ISNULL(((Verbrauch*VerrPreis)-(VerrPreis*Durchsatz*VerbrauchSOLL)), 0) AS MehrMinderKosten,
			--ISNULL((Verbrauch*VerrPreis), 0) AS IstKosten,
			VerrPreis,
			--ISNULL(CAST(VerbrauchSOLL*100.000000 AS DECIMAL(20, 7)), 0) AS SollV_100,
			--ISNULL((CASE
			--	WHEN Durchsatz>0 THEN
			--		(Verbrauch/Durchsatz)*100.000000 
			--	ELSE
			--		0
			--END), 0) AS IstV_100,
			LagerEinheit,
			Verbrauch,
			'Lfm' AS BzgGr,
			VerbrauchSOLL

		FROM @tblRitzAusgabeChronoEB AS tblRitzAusgabeChronoEB

		ORDER BY 
			D95_PTR

		--SELECT SUM(Durchsatz) AS RES FROM @tblRitzAusgabe AS tblRitzAusgabe
	END

	IF @Case_ = 'Materialverbrauch_je_Anlage_Abziehlack'
	BEGIN
		--DECLARE 
		----@para1 varchar(255),
		--@para2 varchar(255),
		--@para3 varchar(255),
		--@para4 varchar(255),
		--@para5 varchar(255),
		--@para6 varchar(255)
		----SET @para1 = 'SES Festresist-Stripper' 
		--SET @para2 = 'SIEB-01-04' 
		--SET @para3 = '21' 
		--SET @para4 = '01.01.2015' 
		--SET @para5 = '31.01.2015' 
		--SET @para6 = '1'


		DECLARE @tblAbziehlackArtikel table(
											D17_PTR NUMERIC(10, 0),
											Abteilung varchar(250),
											Anlage varchar(250),
											Artikel char(20), 
											Bezeichnung char(40), 
											VerbrauchSOLL DECIMAL(20, 7),
											VerrPreis DECIMAL(20, 7),
											LagerEinheit varchar(5),
											Reihenfolge int
											)

		INSERT @tblAbziehlackArtikel(D17_PTR, Abteilung, Anlage, Artikel, Bezeichnung, VerbrauchSOLL, VerrPreis, LagerEinheit, Reihenfolge)
		SELECT  DISTINCT dbo.DATA0017.RKEY AS D17_PTR, LIVE2.dbo.MatRueck_Abteilung.Abteilung, 
				LIVE2.dbo.MatRueck_Anlage.Anlage, 
				dbo.DATA0017.INV_PART_NUMBER AS Artikel, 
				dbo.DATA0017.INV_PART_DESCRIPTION AS Bezeichnung, 
				LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, 
				dbo.DATA0017.STD_COST AS VerrPreis,
				dbo.DATA0002.UNIT_CODE AS LagerEinheit,
				1 AS Reihenfolge
		FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
					  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
					  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
					  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
					  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
					  dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
					  LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
					  dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
		GROUP BY dbo.DATA0017.RKEY, LIVE2.dbo.MatRueck_Abteilung.Abteilung, LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID,
				dbo.DATA0017.INV_PART_NUMBER, dbo.DATA0017.INV_PART_DESCRIPTION, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STOCK_PURCH, 
				dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE, dbo.DATA0017.CONSIGN_ONHAND_QTY,
				dbo.DATA0017.ACTIVE_FLAG, dbo.DATA0017.STD_COST, LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial
		HAVING      dbo.DATA0017.ACTIVE_FLAG='Y' AND (LIVE2.dbo.MatRueck_Anlage.Anlage = 'Abziehlack') 
					AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(@para6 AS bit)
		
		IF @para6='1'
		BEGIN
			DECLARE 
				@p_VerbrauchEURAbziehlack NUMERIC(10, 4),
				@p_DurchsatzAbziehlackGesamt NUMERIC(10, 4),
				@p_DurchsatzAbziehlack NUMERIC(10, 4)

			SET @p_VerbrauchEURAbziehlack = ISNULL((
									SELECT
										SUM(ISNULL(tblDATA0095.QUANTITY, 0) * ISNULL(tblAnlageArtikel.STD_COST, 0)) AS RES
									FROM
									(
										SELECT     LIVE2.dbo.MatRueck_Anlage.ID AS Anlage_PTR, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY AS D17_RKEY, dbo.DATA0017.INV_PART_DESCRIPTION AS ArtBezeichnung,
													dbo.DATA0002.UNIT_CODE AS Lagereinheit, dbo.DATA0017.STOCK_PURCH, dbo.DATA0017.STD_COST
										FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
												  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
												  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
												  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
												  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
												  dbo.DATA0034 ON LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR = dbo.DATA0034.RKEY
										WHERE dbo.DATA0034.DEPT_CODE = 'SIEB-02-01' 
										GROUP BY LIVE2.dbo.MatRueck_Anlage.ID, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY, dbo.DATA0017.INV_PART_DESCRIPTION , dbo.DATA0017.STOCK_PURCH, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STD_COST
										HAVING LIVE2.dbo.MatRueck_Anlage.ID = 63
									) AS tblAnlageArtikel INNER JOIN --LEFT OUTER JOIN 
									(SELECT QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, MONTH(TRAN_DATE) AS Monat, TRAN_TP 
									FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
									WHERE dbo.DATA0095.TRAN_TP IN (15, 16, 23) AND dbo.DATA0034.DEPT_CODE = 'SIEB-02-01' 
									AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
									AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  ) AS tblDATA0095
									ON tblAnlageArtikel.D17_RKEY = tblDATA0095.INVT_PTR
							), 0)
			SET @p_DurchsatzAbziehlackGesamt = ISNULL(
										(
											SELECT
												COUNT(WORK_ORDER_NUMBER) AS RES
											FROM
											(
												SELECT DISTINCT
													dbo.DATA0038.RKEY, dbo.DATA0006.WORK_ORDER_NUMBER 

												FROM         dbo.DATA0006 INNER JOIN
																	  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
																	  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
																	  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
																	  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
																	  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
												WHERE     (dbo.DATA0038.TTYPE = 2)
															AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
															AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
															AND LEFT(dbo.DATA0034.DEPT_CODE, 4) = 'SDA-'
/*
															AND
																(
																	((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.StLack.' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.StLack.')
																			OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%stoplack%' AND dbo.DATA0038.PARAMETER_2 = ''))
																	OR
																	((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.AgLack.' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.AgLack.')
																			OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%silberleitlack%' AND dbo.DATA0038.PARAMETER_2 = ''))
																	OR
																	((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.KzDruck' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.KzDruck')
																			OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%kd%' AND dbo.DATA0038.PARAMETER_2 = ''))
																	OR
																	(RIGHT(RTRIM(dbo.DATA0038.PARAMETER_2), 3)='.DS'
																			OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%durchsteiger%' AND dbo.DATA0038.PARAMETER_2 = ''))
																	OR
																	((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.Carbon.' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.Carbon.')
																		OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%carbon%' AND dbo.DATA0038.PARAMETER_2 = ''))
																	OR
																	((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.WSLack.' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.WSLack.')
																		OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%wderstandsdruck%' AND dbo.DATA0038.PARAMETER_2 = ''))
																	OR
																	((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.AZLack.' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.AZLack.')
																			OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%abziehlack%' AND dbo.DATA0038.PARAMETER_2 = ''))
																)
*/
											) AS tblAbzLackAnzFA
										)
								, 0)
			SET @p_DurchsatzAbziehlack = ISNULL(
												(
													SELECT
														COUNT(WORK_ORDER_NUMBER) AS RES
													FROM
													(
														SELECT DISTINCT
															dbo.DATA0038.RKEY, dbo.DATA0006.WORK_ORDER_NUMBER 

														FROM         dbo.DATA0006 INNER JOIN
																			  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
																			  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
																			  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
																			  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
																			  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
														WHERE     (dbo.DATA0038.TTYPE = 2)
																	AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
																	AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
																	AND LEFT(dbo.DATA0034.DEPT_CODE, 4) = 'SDA-'
																	AND ((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.AZLack.' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.AZLack.')
																			OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%abziehlack%' AND (dbo.DATA0038.PARAMETER_2 = '' OR dbo.DATA0038.PARAMETER_2 = '.')))
													) AS tblAbzLackAnzFA
												)
										, 0) 

			INSERT @tblAbziehlackArtikel(D17_PTR, Abteilung, Anlage, Artikel, Bezeichnung, VerbrauchSOLL, VerrPreis, LagerEinheit, Reihenfolge)
			SELECT 0 AS D17_PTR, '' AS Abteilung, '' AS Anlage, '' AS Artikel, 
					'' AS Bezeichnung, 
					0 AS VerbrauchSOLL, 
					0 AS VerrPreis,
					'' AS LagerEinheit,
					2 AS Reihenfolge

			INSERT @tblAbziehlackArtikel(D17_PTR, Abteilung, Anlage, Artikel, Bezeichnung, VerbrauchSOLL, VerrPreis, LagerEinheit, Reihenfolge)
			SELECT -1 AS D17_PTR, 'Siebdruck' AS Abteilung, 'Abziehlack' AS Anlage, 'Umla. Sieb.Allgemein' AS Artikel, 
					'Umlage aus Siebdruck allgemein' AS Bezeichnung, 
					0 AS VerbrauchSOLL, 
					(@p_VerbrauchEURAbziehlack/@p_DurchsatzAbziehlackGesamt)*@p_DurchsatzAbziehlack AS VerrPreis,
					'KG' AS LagerEinheit,
					3 AS Reihenfolge

			SET @p_VerbrauchEURAbziehlack = ISNULL((
									SELECT
										SUM(ISNULL(tblDATA0095.QUANTITY, 0) * ISNULL(tblAnlageArtikel.STD_COST, 0)) AS RES
									FROM
									(
										SELECT     LIVE2.dbo.MatRueck_Anlage.ID AS Anlage_PTR, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY AS D17_RKEY, dbo.DATA0017.INV_PART_DESCRIPTION AS ArtBezeichnung,
													dbo.DATA0002.UNIT_CODE AS Lagereinheit, dbo.DATA0017.STOCK_PURCH, dbo.DATA0017.STD_COST
										FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
												  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
												  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
												  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
												  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
												  dbo.DATA0034 ON LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR = dbo.DATA0034.RKEY
										WHERE dbo.DATA0034.DEPT_CODE = 'SIEB-03-01' 
										GROUP BY LIVE2.dbo.MatRueck_Anlage.ID, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY, dbo.DATA0017.INV_PART_DESCRIPTION , dbo.DATA0017.STOCK_PURCH, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STD_COST
										HAVING LIVE2.dbo.MatRueck_Anlage.ID = 27
									) AS tblAnlageArtikel INNER JOIN --LEFT OUTER JOIN 
									(SELECT QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, MONTH(TRAN_DATE) AS Monat, TRAN_TP 
									FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
									WHERE dbo.DATA0095.TRAN_TP IN (15, 16, 23) AND dbo.DATA0034.DEPT_CODE = 'SIEB-03-01' 
									AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
									AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  ) AS tblDATA0095
									ON tblAnlageArtikel.D17_RKEY = tblDATA0095.INVT_PTR
							), 0)
			INSERT @tblAbziehlackArtikel(D17_PTR, Abteilung, Anlage, Artikel, Bezeichnung, VerbrauchSOLL, VerrPreis, LagerEinheit, Reihenfolge)
			SELECT -1 AS D17_PTR, 'Siebdruck' AS Abteilung, 'Abziehlack' AS Anlage, 'Siebherstellung' AS Artikel, 
					'Umlage aus Siebherstellung' AS Bezeichnung, 
					0 AS VerbrauchSOLL, 
					(@p_VerbrauchEURAbziehlack/@p_DurchsatzAbziehlackGesamt)*@p_DurchsatzAbziehlack AS VerrPreis,
					'KG' AS LagerEinheit,
					4 As Reihenfolge
		END


		SELECT
			Abteilung, 
			Anlage, 
			Artikel, 
			Bezeichnung, 
			Verbrauch,
			Durchsatz,
			Verbrauch*VerrPreis AS abs_Kosten,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch*VerrPreis)/Durchsatz 
				ELSE
					0
			END AS rel_Kosten,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch*VerrPreis)/Durchsatz*100 
				ELSE
					0
			END AS KS_IstKosten,
			VerrPreis*VerbrauchSOLL*100 AS SollKosten,
			CASE
				WHEN (VerrPreis*VerbrauchSOLL*100)>0 AND Durchsatz>0 THEN
					(((Verbrauch*VerrPreis)/Durchsatz*100)-(VerrPreis*VerbrauchSOLL*100.000000))/(VerrPreis*VerbrauchSOLL*100.000000) 
				ELSE
					0
			END AS Abweichung,
			(Verbrauch*VerrPreis)-(VerrPreis*Durchsatz*VerbrauchSOLL) AS MehrMinderKosten,
			(Verbrauch*VerrPreis) AS IstKosten,
			VerrPreis,
			CAST(VerbrauchSOLL*100.000000 AS DECIMAL(20, 7)) AS SollV_100,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch/Durchsatz)*100.000000 
				ELSE
					0
			END AS IstV_100,
			BzgGr,
			LagerEinheit,
			ISNULL(
					(
						SELECT
							COUNT(WORK_ORDER_NUMBER) AS RES
						FROM
						(
							SELECT DISTINCT
								dbo.DATA0038.RKEY, dbo.DATA0006.WORK_ORDER_NUMBER 

							FROM         dbo.DATA0006 INNER JOIN
												  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
												  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
												  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
												  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
												  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
							WHERE     (dbo.DATA0038.TTYPE = 2)
										AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
										AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
										AND LEFT(dbo.DATA0034.DEPT_CODE, 4) = 'SDA-'
										AND ((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.AZLack.' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.AZLack.')
												OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%abziehlack%' AND (dbo.DATA0038.PARAMETER_2 = '' OR dbo.DATA0038.PARAMETER_2 = '.')))
						) AS tblAbzLackAnzFA
					)
			, 0) AS AnzFAs

		FROM
		(
			SELECT 
				D17_PTR, 
				Abteilung, 
				Anlage, 
				Artikel, 
				Bezeichnung, 
				VerbrauchSOLL,
				CASE 
					WHEN D17_PTR=-1 THEN
						1
					ELSE
						(
							ISNULL((
								SELECT
									SUM(ISNULL(tblDATA0095.QUANTITY, 0)) AS RES
								FROM
								(
									SELECT     LIVE2.dbo.MatRueck_Anlage.ID AS Anlage_PTR, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY AS D17_RKEY, dbo.DATA0017.INV_PART_DESCRIPTION AS ArtBezeichnung,
												dbo.DATA0002.UNIT_CODE AS Lagereinheit, dbo.DATA0017.STOCK_PURCH 
									FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
											  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
											  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
											  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
											  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
											  dbo.DATA0034 ON LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR = dbo.DATA0034.RKEY
									WHERE dbo.DATA0034.DEPT_CODE = @para2
									GROUP BY LIVE2.dbo.MatRueck_Anlage.ID, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY, dbo.DATA0017.INV_PART_DESCRIPTION , dbo.DATA0017.STOCK_PURCH, dbo.DATA0002.UNIT_CODE 
									HAVING LIVE2.dbo.MatRueck_Anlage.ID = CAST(@para3 AS INT)--(LIVE2.dbo.MatRueck_Anlage.Anlage = @Anlage)
								) AS tblAnlageArtikel INNER JOIN --LEFT OUTER JOIN 
								(SELECT QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, MONTH(TRAN_DATE) AS Monat, TRAN_TP 
								--FROM dbo.DATA0095 INNER JOIN  dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY 
								FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
								WHERE dbo.DATA0095.TRAN_TP IN (15, 16) AND dbo.DATA0034.DEPT_CODE = @para2
								AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
								AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  AND dbo.DATA0095.INVT_PTR = tblAbziehlackArtikel_.D17_PTR ) AS tblDATA0095 
								ON tblAnlageArtikel.D17_RKEY = tblDATA0095.INVT_PTR
								--) AS myTblSub	
							), 0)
							+
							ISNULL((
								SELECT 
									ISNULL((
										(-1)*SUM(QUANTITY) 
										*
										ISNULL((
											SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
											FROM LIVE2.dbo.NachKalk_MatVerteilung
											WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = CAST(@para3 AS INT)
													AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = tblAbziehlackArtikel_.D17_PTR
										), 1) 
									), 0) AS RES 

								FROM 
									dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
								WHERE 
									dbo.DATA0095.TRAN_TP = 23
									AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
									AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
									AND dbo.DATA0095.INVT_PTR = tblAbziehlackArtikel_.D17_PTR
							), 0)
						) 
				END AS Verbrauch,
				CASE
					WHEN @para6='1' THEN
						CASE 
							WHEN D17_PTR=-1 THEN
								ISNULL(
										(
											SELECT
												COUNT(WORK_ORDER_NUMBER) AS RES
											FROM
											(
												SELECT DISTINCT
													dbo.DATA0038.RKEY, dbo.DATA0006.WORK_ORDER_NUMBER 

												FROM         dbo.DATA0006 INNER JOIN
																	  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
																	  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
																	  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
																	  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
																	  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
												WHERE     (dbo.DATA0038.TTYPE = 2)
															AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
															AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
															AND LEFT(dbo.DATA0034.DEPT_CODE, 4) = 'SDA-'
															AND ((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.AZLack.' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.AZLack.')
																	OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%abziehlack%' AND (dbo.DATA0038.PARAMETER_2 = '' OR dbo.DATA0038.PARAMETER_2 = '.')))
											) AS tblAbzLackAnzFA
										)
								, 0) 
							ELSE
								ISNULL(
										(
											SELECT
												SUM(
													(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
													/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000) 
													--* CASE WHEN dbo.ARTIKELDATEN.LE > 1 THEN 2 ELSE 1 END 
													* CASE WHEN ISNUMERIC(LEFT(LTRIM(dbo.DATA0038.PARAMETER_2), 1))=1 AND RTRIM(LTRIM(dbo.DATA0038.PARAMETER_2))<>'.' THEN CAST(LEFT(LTRIM(dbo.DATA0038.PARAMETER_2), 1) AS INT) ELSE 1 END
													)
												AS RES
											FROM         dbo.DATA0006 INNER JOIN
																  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
																  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
																  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
																  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
																  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
											WHERE     (dbo.DATA0038.TTYPE = 2)
														AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
														AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
														AND LEFT(dbo.DATA0034.DEPT_CODE, 4) = 'SDA-'
														AND dbo.DATA0038.PARAMETER_2 COLLATE SQL_Latin1_General_CP1_CI_AS LIKE '%' + RTRIM(tblAbziehlackArtikel_.Bezeichnung) + '%'
										)
								, 0) 
						END
					ELSE
						ISNULL(
								(
									SELECT
										COUNT(WORK_ORDER_NUMBER) AS RES
									FROM
									(
										SELECT DISTINCT
											dbo.DATA0038.RKEY, dbo.DATA0006.WORK_ORDER_NUMBER 

										FROM         dbo.DATA0006 INNER JOIN
															  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
															  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
															  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
															  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
															  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
										WHERE     (dbo.DATA0038.TTYPE = 2)
													AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
													AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
													AND LEFT(dbo.DATA0034.DEPT_CODE, 4) = 'SDA-'
													AND ((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.AZLack.' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.AZLack.')
															OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%abziehlack%' AND (dbo.DATA0038.PARAMETER_2 = '' OR dbo.DATA0038.PARAMETER_2 = '.')))
									) AS tblAbzLackAnzFA
								)
						, 0) 
				END AS Durchsatz,
				CASE WHEN @para6='1' THEN 'Ofl-m2' ELSE 'FA' END AS BzgGr,
				VerrPreis,
				LagerEinheit,
				Reihenfolge

			FROM @tblAbziehlackArtikel AS tblAbziehlackArtikel_
		) AS tblAbziehlackAnlage
		ORDER BY Reihenfolge, IstKosten DESC
	END

	IF @Case_ = 'Materialverbrauch_je_Anlage_Carbon'
	BEGIN

		DECLARE @tblCarbonArtikel table(
											D17_PTR NUMERIC(10, 0),
											Abteilung varchar(250),
											Anlage varchar(250),
											Artikel char(20), 
											Bezeichnung char(40), 
											VerbrauchSOLL DECIMAL(20, 7),
											VerrPreis DECIMAL(20, 7),
											LagerEinheit varchar(5),
											Reihenfolge int
											)

		INSERT @tblCarbonArtikel(D17_PTR, Abteilung, Anlage, Artikel, Bezeichnung, VerbrauchSOLL, VerrPreis, LagerEinheit, Reihenfolge)
		SELECT  DISTINCT dbo.DATA0017.RKEY AS D17_PTR, LIVE2.dbo.MatRueck_Abteilung.Abteilung, 
				LIVE2.dbo.MatRueck_Anlage.Anlage, 
				dbo.DATA0017.INV_PART_NUMBER AS Artikel, 
				dbo.DATA0017.INV_PART_DESCRIPTION AS Bezeichnung, 
				LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, 
				dbo.DATA0017.STD_COST AS VerrPreis,
				dbo.DATA0002.UNIT_CODE AS LagerEinheit,
				1 AS Reihenfolge
		FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
					  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
					  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
					  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
					  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
					  dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
					  LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
					  dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
		GROUP BY dbo.DATA0017.RKEY, LIVE2.dbo.MatRueck_Abteilung.Abteilung, LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID,
				dbo.DATA0017.INV_PART_NUMBER, dbo.DATA0017.INV_PART_DESCRIPTION, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STOCK_PURCH, 
				dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE, dbo.DATA0017.CONSIGN_ONHAND_QTY,
				dbo.DATA0017.ACTIVE_FLAG, dbo.DATA0017.STD_COST, LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial
		HAVING      dbo.DATA0017.ACTIVE_FLAG='Y' AND (LIVE2.dbo.MatRueck_Anlage.Anlage = 'Carbon') 
					AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(@para6 AS bit)

		IF @para6='1'
		BEGIN
			DECLARE 
				@p_VerbrauchEURCarbon NUMERIC(10, 4),
				@p_DurchsatzCarbonGesamt NUMERIC(10, 4),
				@p_DurchsatzCarbon NUMERIC(10, 4)

			SET @p_VerbrauchEURCarbon = ISNULL((
									SELECT
										SUM(ISNULL(tblDATA0095.QUANTITY, 0) * ISNULL(tblAnlageArtikel.STD_COST, 0)) AS RES
									FROM
									(
										SELECT     LIVE2.dbo.MatRueck_Anlage.ID AS Anlage_PTR, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY AS D17_RKEY, dbo.DATA0017.INV_PART_DESCRIPTION AS ArtBezeichnung,
													dbo.DATA0002.UNIT_CODE AS Lagereinheit, dbo.DATA0017.STOCK_PURCH, dbo.DATA0017.STD_COST
										FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
												  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
												  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
												  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
												  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
												  dbo.DATA0034 ON LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR = dbo.DATA0034.RKEY
										WHERE dbo.DATA0034.DEPT_CODE = 'SIEB-02-01' 
										GROUP BY LIVE2.dbo.MatRueck_Anlage.ID, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY, dbo.DATA0017.INV_PART_DESCRIPTION , dbo.DATA0017.STOCK_PURCH, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STD_COST
										HAVING LIVE2.dbo.MatRueck_Anlage.ID = 63
									) AS tblAnlageArtikel INNER JOIN --LEFT OUTER JOIN 
									(SELECT QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, MONTH(TRAN_DATE) AS Monat, TRAN_TP 
									FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
									WHERE dbo.DATA0095.TRAN_TP IN (15, 16, 23) AND dbo.DATA0034.DEPT_CODE = 'SIEB-02-01' 
									AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
									AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  ) AS tblDATA0095
									ON tblAnlageArtikel.D17_RKEY = tblDATA0095.INVT_PTR
							), 0)
			SET @p_DurchsatzCarbonGesamt = ISNULL(
										(
											SELECT
												COUNT(WORK_ORDER_NUMBER) AS RES
											FROM
											(
												SELECT DISTINCT
													dbo.DATA0038.RKEY, dbo.DATA0006.WORK_ORDER_NUMBER 

												FROM         dbo.DATA0006 INNER JOIN
																	  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
																	  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
																	  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
																	  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
																	  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
												WHERE     (dbo.DATA0038.TTYPE = 2)
															AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
															AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
															AND LEFT(dbo.DATA0034.DEPT_CODE, 4) = 'SDA-'
/*
															AND
																(
																	((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.StLack.' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.StLack.')
																			OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%stoplack%' AND dbo.DATA0038.PARAMETER_2 = ''))
																	OR
																	((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.AgLack.' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.AgLack.')
																			OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%silberleitlack%' AND dbo.DATA0038.PARAMETER_2 = ''))
																	OR
																	((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.KzDruck' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.KzDruck')
																			OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%kd%' AND dbo.DATA0038.PARAMETER_2 = ''))
																	OR
																	(RIGHT(RTRIM(dbo.DATA0038.PARAMETER_2), 3)='.DS'
																			OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%durchsteiger%' AND dbo.DATA0038.PARAMETER_2 = ''))
																	OR
																	((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.Carbon.' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.Carbon.')
																		OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%carbon%' AND dbo.DATA0038.PARAMETER_2 = ''))
																	OR
																	((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.WSLack.' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.WSLack.')
																		OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%wderstandsdruck%' AND dbo.DATA0038.PARAMETER_2 = ''))
																	OR
																	((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.AZLack.' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.AZLack.')
																			OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%abziehlack%' AND dbo.DATA0038.PARAMETER_2 = ''))
																)
*/
											) AS tblAnzFA
										)
								, 0)
			SET @p_DurchsatzCarbon = ISNULL(
												(
													SELECT
														COUNT(WORK_ORDER_NUMBER) AS RES
													FROM
													(
														SELECT DISTINCT
															dbo.DATA0038.RKEY, dbo.DATA0006.WORK_ORDER_NUMBER 

														FROM         dbo.DATA0006 INNER JOIN
																			  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
																			  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
																			  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
																			  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
																			  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
														WHERE     (dbo.DATA0038.TTYPE = 2)
																	AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
																	AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
																	AND LEFT(dbo.DATA0034.DEPT_CODE, 4) = 'SDA-'
																	AND (
																			((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.Carbon.' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.Carbon.')
																				OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%carbon%' AND (dbo.DATA0038.PARAMETER_2 = '' OR dbo.DATA0038.PARAMETER_2 = '.')))
																			OR
																			((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.WSLack.' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.WSLack.')
																				OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%wderstandsdruck%' AND (dbo.DATA0038.PARAMETER_2 = '' OR dbo.DATA0038.PARAMETER_2 = '.')))
																		)	
													) AS tblAnzFA
												)
										, 0) 

			INSERT @tblCarbonArtikel(D17_PTR, Abteilung, Anlage, Artikel, Bezeichnung, VerbrauchSOLL, VerrPreis, LagerEinheit, Reihenfolge)
			SELECT 0 AS D17_PTR, '' AS Abteilung, '' AS Anlage, '' AS Artikel, 
					'' AS Bezeichnung, 
					0 AS VerbrauchSOLL, 
					0 AS VerrPreis,
					'' AS LagerEinheit,
					2 AS Reihenfolge

			INSERT @tblCarbonArtikel(D17_PTR, Abteilung, Anlage, Artikel, Bezeichnung, VerbrauchSOLL, VerrPreis, LagerEinheit, Reihenfolge)
			SELECT -1 AS D17_PTR, 'Siebdruck' AS Abteilung, 'Carbon' AS Anlage, 'Umla. Sieb.Allgemein' AS Artikel, 
					'Umlage aus Siebdruck allgemein' AS Bezeichnung, 
					0 AS VerbrauchSOLL, 
					(@p_VerbrauchEURCarbon/@p_DurchsatzCarbonGesamt)*@p_DurchsatzCarbon AS VerrPreis,
					'KG' AS LagerEinheit,
					3 AS Reihenfolge

			SET @p_VerbrauchEURCarbon = ISNULL((
									SELECT
										SUM(ISNULL(tblDATA0095.QUANTITY, 0) * ISNULL(tblAnlageArtikel.STD_COST, 0)) AS RES
									FROM
									(
										SELECT     LIVE2.dbo.MatRueck_Anlage.ID AS Anlage_PTR, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY AS D17_RKEY, dbo.DATA0017.INV_PART_DESCRIPTION AS ArtBezeichnung,
													dbo.DATA0002.UNIT_CODE AS Lagereinheit, dbo.DATA0017.STOCK_PURCH, dbo.DATA0017.STD_COST
										FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
												  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
												  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
												  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
												  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
												  dbo.DATA0034 ON LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR = dbo.DATA0034.RKEY
										WHERE dbo.DATA0034.DEPT_CODE = 'SIEB-03-01' 
										GROUP BY LIVE2.dbo.MatRueck_Anlage.ID, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY, dbo.DATA0017.INV_PART_DESCRIPTION , dbo.DATA0017.STOCK_PURCH, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STD_COST
										HAVING LIVE2.dbo.MatRueck_Anlage.ID = 27
									) AS tblAnlageArtikel INNER JOIN --LEFT OUTER JOIN 
									(SELECT QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, MONTH(TRAN_DATE) AS Monat, TRAN_TP 
									FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
									WHERE dbo.DATA0095.TRAN_TP IN (15, 16, 23) AND dbo.DATA0034.DEPT_CODE = 'SIEB-03-01' 
									AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
									AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  ) AS tblDATA0095
									ON tblAnlageArtikel.D17_RKEY = tblDATA0095.INVT_PTR
							), 0)
			INSERT @tblCarbonArtikel(D17_PTR, Abteilung, Anlage, Artikel, Bezeichnung, VerbrauchSOLL, VerrPreis, LagerEinheit, Reihenfolge)
			SELECT -1 AS D17_PTR, 'Siebdruck' AS Abteilung, 'Carbon' AS Anlage, 'Siebherstellung' AS Artikel, 
					'Umlage aus Siebherstellung' AS Bezeichnung, 
					0 AS VerbrauchSOLL, 
					(@p_VerbrauchEURCarbon/@p_DurchsatzCarbonGesamt)*@p_DurchsatzCarbon AS VerrPreis,
					'KG' AS LagerEinheit,
					4 AS Reihenfolge
		END


		SELECT
			Abteilung, 
			Anlage, 
			Artikel, 
			Bezeichnung, 
			Verbrauch,
			Durchsatz,
			Verbrauch*VerrPreis AS abs_Kosten,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch*VerrPreis)/Durchsatz 
				ELSE
					0
			END AS rel_Kosten,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch*VerrPreis)/Durchsatz*100 
				ELSE
					0
			END AS KS_IstKosten,
			VerrPreis*VerbrauchSOLL*100 AS SollKosten,
			CASE
				WHEN (VerrPreis*VerbrauchSOLL*100)>0 AND Durchsatz>0 THEN
					(((Verbrauch*VerrPreis)/Durchsatz*100)-(VerrPreis*VerbrauchSOLL*100.000000))/(VerrPreis*VerbrauchSOLL*100.000000) 
				ELSE
					0
			END AS Abweichung,
			(Verbrauch*VerrPreis)-(VerrPreis*Durchsatz*VerbrauchSOLL) AS MehrMinderKosten,
			(Verbrauch*VerrPreis) AS IstKosten,
			VerrPreis,
			CAST(VerbrauchSOLL*100.000000 AS DECIMAL(20, 7)) AS SollV_100,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch/Durchsatz)*100.000000 
				ELSE
					0
			END AS IstV_100,
			BzgGr,
			LagerEinheit,
			ISNULL(
					(
						SELECT
							COUNT(WORK_ORDER_NUMBER) AS RES
						FROM
						(
							SELECT DISTINCT
								dbo.DATA0038.RKEY, dbo.DATA0006.WORK_ORDER_NUMBER 

							FROM         dbo.DATA0006 INNER JOIN
												  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
												  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
												  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
												  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
												  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
							WHERE     (dbo.DATA0038.TTYPE = 2)
										AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
										AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
										AND LEFT(dbo.DATA0034.DEPT_CODE, 4) = 'SDA-'
										AND (
												((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.Carbon.' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.Carbon.')
													OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%carbon%' AND (dbo.DATA0038.PARAMETER_2 = '' OR dbo.DATA0038.PARAMETER_2 = '.')))
												OR
												((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.WSLack.' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.WSLack.')
													OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%wderstandsdruck%' AND (dbo.DATA0038.PARAMETER_2 = '' OR dbo.DATA0038.PARAMETER_2 = '.')))
											)	
						) AS tblAbzLackAnzFA
					)
			, 0) AS AnzFAs

		FROM
		(
			SELECT 
				D17_PTR, 
				Abteilung, 
				Anlage, 
				Artikel, 
				Bezeichnung, 
				VerbrauchSOLL,
				CASE 
					WHEN D17_PTR=-1 THEN
						1
					ELSE
					(
						ISNULL((
							SELECT
								SUM(ISNULL(tblDATA0095.QUANTITY, 0)) AS RES
							FROM
							(
								SELECT     LIVE2.dbo.MatRueck_Anlage.ID AS Anlage_PTR, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY AS D17_RKEY, dbo.DATA0017.INV_PART_DESCRIPTION AS ArtBezeichnung,
											dbo.DATA0002.UNIT_CODE AS Lagereinheit, dbo.DATA0017.STOCK_PURCH 
								FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
										  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
										  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
										  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
										  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
										  dbo.DATA0034 ON LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR = dbo.DATA0034.RKEY
								WHERE dbo.DATA0034.DEPT_CODE = @para2
								GROUP BY LIVE2.dbo.MatRueck_Anlage.ID, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY, dbo.DATA0017.INV_PART_DESCRIPTION , dbo.DATA0017.STOCK_PURCH, dbo.DATA0002.UNIT_CODE 
								HAVING LIVE2.dbo.MatRueck_Anlage.ID = CAST(@para3 AS INT)--(LIVE2.dbo.MatRueck_Anlage.Anlage = @Anlage)
							) AS tblAnlageArtikel INNER JOIN --LEFT OUTER JOIN 
							(SELECT QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, MONTH(TRAN_DATE) AS Monat, TRAN_TP 
							--FROM dbo.DATA0095 INNER JOIN  dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY 
							FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
							WHERE dbo.DATA0095.TRAN_TP IN (15, 16) AND dbo.DATA0034.DEPT_CODE = @para2
							AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
							AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  AND dbo.DATA0095.INVT_PTR = tblCarbonArtikel_.D17_PTR ) AS tblDATA0095 
							ON tblAnlageArtikel.D17_RKEY = tblDATA0095.INVT_PTR
							--) AS myTblSub	
						), 0)
						+
						ISNULL((
							SELECT 
								ISNULL((
									(-1)*SUM(QUANTITY) 
									*
									ISNULL((
										SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
										FROM LIVE2.dbo.NachKalk_MatVerteilung
										WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = CAST(@para3 AS INT)
												AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = tblCarbonArtikel_.D17_PTR
									), 1) 
								), 0) AS RES 

							FROM 
								dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
							WHERE 
								dbo.DATA0095.TRAN_TP = 23
								AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
								AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
								AND dbo.DATA0095.INVT_PTR = tblCarbonArtikel_.D17_PTR
						), 0)
					) 
				END AS Verbrauch,
				CASE
					WHEN @para6='1' THEN
						CASE 
							WHEN D17_PTR=-1 THEN
								ISNULL(
										(
											SELECT
												COUNT(WORK_ORDER_NUMBER) AS RES
											FROM
											(
												SELECT DISTINCT
													dbo.DATA0038.RKEY, dbo.DATA0006.WORK_ORDER_NUMBER 

												FROM         dbo.DATA0006 INNER JOIN
																	  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
																	  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
																	  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
																	  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
																	  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
												WHERE     (dbo.DATA0038.TTYPE = 2)
															AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
															AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
															AND LEFT(dbo.DATA0034.DEPT_CODE, 4) = 'SDA-'
															AND (
																	((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.Carbon.' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.Carbon.')
																		OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%carbon%' AND (dbo.DATA0038.PARAMETER_2 = '' OR dbo.DATA0038.PARAMETER_2 = '.')))
																	OR
																	((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.WSLack.' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.WSLack.')
																		OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%wderstandsdruck%' AND (dbo.DATA0038.PARAMETER_2 = '' OR dbo.DATA0038.PARAMETER_2 = '.')))
																)	
											) AS tblAbzLackAnzFA
										)
								, 0) 
							ELSE
								ISNULL(
										(
											SELECT
												SUM(
													(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
													/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000) 
													--* CASE WHEN dbo.ARTIKELDATEN.LE > 1 THEN 2 ELSE 1 END 
													* CASE WHEN ISNUMERIC(LEFT(LTRIM(dbo.DATA0038.PARAMETER_2), 1))=1 AND RTRIM(LTRIM(dbo.DATA0038.PARAMETER_2))<>'.' THEN CAST(LEFT(LTRIM(dbo.DATA0038.PARAMETER_2), 1) AS INT) ELSE 1 END
													)
												AS RES
											FROM         dbo.DATA0006 INNER JOIN
																  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
																  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
																  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
																  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
																  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
											WHERE     (dbo.DATA0038.TTYPE = 2)
														AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
														AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
														AND LEFT(dbo.DATA0034.DEPT_CODE, 4) = 'SDA-'
														--AND dbo.DATA0038.PARAMETER_2 COLLATE SQL_Latin1_General_CP1_CI_AS LIKE '%' + RTRIM(tblCarbonArtikel_.Bezeichnung) + '%'
														AND (
																((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.Carbon.' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.Carbon.')
																	OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%carbon%' AND (dbo.DATA0038.PARAMETER_2 = '' OR dbo.DATA0038.PARAMETER_2 = '.')))
																OR
																((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.WSLack.' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.WSLack.')
																	OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%wderstandsdruck%' AND (dbo.DATA0038.PARAMETER_2 = '' OR dbo.DATA0038.PARAMETER_2 = '.')))
															)
										)
								, 0) 
						END
					ELSE
						ISNULL(
								(
									SELECT
										COUNT(WORK_ORDER_NUMBER) AS RES
									FROM
									(
										SELECT DISTINCT
											dbo.DATA0038.RKEY, dbo.DATA0006.WORK_ORDER_NUMBER 

										FROM         dbo.DATA0006 INNER JOIN
															  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
															  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
															  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
															  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
															  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
										WHERE     (dbo.DATA0038.TTYPE = 2)
													AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
													AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
													AND LEFT(dbo.DATA0034.DEPT_CODE, 4) = 'SDA-'
													AND (
															((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.Carbon.' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.Carbon.')
																OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%carbon%' AND (dbo.DATA0038.PARAMETER_2 = '' OR dbo.DATA0038.PARAMETER_2 = '.')))
															OR
															((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.WSLack.' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.WSLack.')
																OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%wderstandsdruck%' AND (dbo.DATA0038.PARAMETER_2 = '' OR dbo.DATA0038.PARAMETER_2 = '.')))
														)	
									) AS tblAbzLackAnzFA
								)
						, 0) 
				END AS Durchsatz,
				CASE WHEN @para6='1' THEN 'Ofl-m2' ELSE 'FA' END AS BzgGr,
				VerrPreis,
				LagerEinheit,
				Reihenfolge

			FROM @tblCarbonArtikel AS tblCarbonArtikel_
		) AS tblCarbonAnlage
		ORDER BY Reihenfolge, IstKosten DESC
	END

	IF @Case_ = 'Materialverbrauch_je_Anlage_Durchsteiger'
	BEGIN

		DECLARE @tblDurchsteigerArtikel table(
											D17_PTR NUMERIC(10, 0),
											Abteilung varchar(250),
											Anlage varchar(250),
											Artikel char(20), 
											Bezeichnung char(40), 
											VerbrauchSOLL DECIMAL(20, 7),
											VerrPreis DECIMAL(20, 7),
											LagerEinheit varchar(5),
											Reihenfolge int
											)

		INSERT @tblDurchsteigerArtikel(D17_PTR, Abteilung, Anlage, Artikel, Bezeichnung, VerbrauchSOLL, VerrPreis, LagerEinheit, Reihenfolge)
		SELECT  DISTINCT dbo.DATA0017.RKEY AS D17_PTR, LIVE2.dbo.MatRueck_Abteilung.Abteilung, 
				LIVE2.dbo.MatRueck_Anlage.Anlage, 
				dbo.DATA0017.INV_PART_NUMBER AS Artikel, 
				dbo.DATA0017.INV_PART_DESCRIPTION AS Bezeichnung, 
				LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, 
				dbo.DATA0017.STD_COST AS VerrPreis,
				dbo.DATA0002.UNIT_CODE AS LagerEinheit,
				1 As Reihenfolge
		FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
					  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
					  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
					  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
					  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
					  dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
					  LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
					  dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
		GROUP BY dbo.DATA0017.RKEY, LIVE2.dbo.MatRueck_Abteilung.Abteilung, LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID,
				dbo.DATA0017.INV_PART_NUMBER, dbo.DATA0017.INV_PART_DESCRIPTION, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STOCK_PURCH, 
				dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE, dbo.DATA0017.CONSIGN_ONHAND_QTY,
				dbo.DATA0017.ACTIVE_FLAG, dbo.DATA0017.STD_COST, LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial
		HAVING      dbo.DATA0017.ACTIVE_FLAG='Y' AND (LIVE2.dbo.MatRueck_Anlage.Anlage = 'Durchsteiger') 
					AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(@para6 AS bit)

		IF @para6='1'
		BEGIN
			DECLARE 
				@p_VerbrauchEURDurchsteiger NUMERIC(10, 4),
				@p_DurchsatzDurchsteigerGesamt NUMERIC(10, 4),
				@p_DurchsatzDurchsteiger NUMERIC(10, 4)

			SET @p_VerbrauchEURDurchsteiger = ISNULL((
									SELECT
										SUM(ISNULL(tblDATA0095.QUANTITY, 0) * ISNULL(tblAnlageArtikel.STD_COST, 0)) AS RES
									FROM
									(
										SELECT     LIVE2.dbo.MatRueck_Anlage.ID AS Anlage_PTR, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY AS D17_RKEY, dbo.DATA0017.INV_PART_DESCRIPTION AS ArtBezeichnung,
													dbo.DATA0002.UNIT_CODE AS Lagereinheit, dbo.DATA0017.STOCK_PURCH, dbo.DATA0017.STD_COST
										FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
												  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
												  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
												  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
												  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
												  dbo.DATA0034 ON LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR = dbo.DATA0034.RKEY
										WHERE dbo.DATA0034.DEPT_CODE = 'SIEB-02-01' 
										GROUP BY LIVE2.dbo.MatRueck_Anlage.ID, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY, dbo.DATA0017.INV_PART_DESCRIPTION , dbo.DATA0017.STOCK_PURCH, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STD_COST
										HAVING LIVE2.dbo.MatRueck_Anlage.ID = 63
									) AS tblAnlageArtikel INNER JOIN --LEFT OUTER JOIN 
									(SELECT QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, MONTH(TRAN_DATE) AS Monat, TRAN_TP 
									FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
									WHERE dbo.DATA0095.TRAN_TP IN (15, 16, 23) AND dbo.DATA0034.DEPT_CODE = 'SIEB-02-01' 
									AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
									AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  ) AS tblDATA0095
									ON tblAnlageArtikel.D17_RKEY = tblDATA0095.INVT_PTR
							), 0)
			SET @p_DurchsatzDurchsteigerGesamt = ISNULL(
										(
											SELECT
												COUNT(WORK_ORDER_NUMBER) AS RES
											FROM
											(
												SELECT DISTINCT
													dbo.DATA0038.RKEY, dbo.DATA0006.WORK_ORDER_NUMBER 

												FROM         dbo.DATA0006 INNER JOIN
																	  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
																	  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
																	  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
																	  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
																	  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
												WHERE     (dbo.DATA0038.TTYPE = 2)
															AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
															AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
															AND LEFT(dbo.DATA0034.DEPT_CODE, 4) = 'SDA-'
/*
															AND
																(
																	((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.StLack.' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.StLack.')
																			OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%stoplack%' AND dbo.DATA0038.PARAMETER_2 = ''))
																	OR
																	((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.AgLack.' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.AgLack.')
																			OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%silberleitlack%' AND dbo.DATA0038.PARAMETER_2 = ''))
																	OR
																	((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.KzDruck' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.KzDruck')
																			OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%kd%' AND dbo.DATA0038.PARAMETER_2 = ''))
																	OR
																	(RIGHT(RTRIM(dbo.DATA0038.PARAMETER_2), 3)='.DS'
																			OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%durchsteiger%' AND dbo.DATA0038.PARAMETER_2 = ''))
																	OR
																	((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.Carbon.' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.Carbon.')
																		OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%carbon%' AND dbo.DATA0038.PARAMETER_2 = ''))
																	OR
																	((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.WSLack.' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.WSLack.')
																		OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%wderstandsdruck%' AND dbo.DATA0038.PARAMETER_2 = ''))
																	OR
																	((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.AZLack.' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.AZLack.')
																			OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%abziehlack%' AND dbo.DATA0038.PARAMETER_2 = ''))
																)
*/
											) AS tblAbzLackAnzFA
										)
								, 0)
			SET @p_DurchsatzDurchsteiger = ISNULL(
												(
													SELECT
														COUNT(WORK_ORDER_NUMBER) AS RES
													FROM
													(
														SELECT DISTINCT
															dbo.DATA0038.RKEY, dbo.DATA0006.WORK_ORDER_NUMBER 

														FROM         dbo.DATA0006 INNER JOIN
																			  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
																			  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
																			  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
																			  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
																			  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
														WHERE     (dbo.DATA0038.TTYPE = 2)
																	AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
																	AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
																	AND LEFT(dbo.DATA0034.DEPT_CODE, 4) = 'SDA-'
																	--AND ((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.StLack.' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.StLack.')
																	AND (RIGHT(RTRIM(dbo.DATA0038.PARAMETER_2), 3)='.DS'
																			OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%durchsteiger%' AND (dbo.DATA0038.PARAMETER_2 = '' OR dbo.DATA0038.PARAMETER_2 = '.')))
													) AS tblAbzLackAnzFA
												)
										, 0) 
			INSERT @tblDurchsteigerArtikel(D17_PTR, Abteilung, Anlage, Artikel, Bezeichnung, VerbrauchSOLL, VerrPreis, LagerEinheit, Reihenfolge)
			SELECT 0 AS D17_PTR, '' AS Abteilung, '' AS Anlage, '' AS Artikel, 
					'' AS Bezeichnung, 
					0 AS VerbrauchSOLL, 
					0 AS VerrPreis,
					'' AS LagerEinheit,
					2 AS Reihenfolge

			INSERT @tblDurchsteigerArtikel(D17_PTR, Abteilung, Anlage, Artikel, Bezeichnung, VerbrauchSOLL, VerrPreis, LagerEinheit, Reihenfolge)
			SELECT -1 AS D17_PTR, 'Siebdruck' AS Abteilung, 'Durchsteiger' AS Anlage, 'Umla. Sieb.Allgemein' AS Artikel, 
					'Umlage aus Siebdruck allgemein' AS Bezeichnung, 
					0 AS VerbrauchSOLL, 
					(@p_VerbrauchEURDurchsteiger/@p_DurchsatzDurchsteigerGesamt)*@p_DurchsatzDurchsteiger AS VerrPreis,
					'KG' AS LagerEinheit,
					3 As Reihenfolge

			SET @p_VerbrauchEURDurchsteiger = ISNULL((
									SELECT
										SUM(ISNULL(tblDATA0095.QUANTITY, 0) * ISNULL(tblAnlageArtikel.STD_COST, 0)) AS RES
									FROM
									(
										SELECT     LIVE2.dbo.MatRueck_Anlage.ID AS Anlage_PTR, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY AS D17_RKEY, dbo.DATA0017.INV_PART_DESCRIPTION AS ArtBezeichnung,
													dbo.DATA0002.UNIT_CODE AS Lagereinheit, dbo.DATA0017.STOCK_PURCH, dbo.DATA0017.STD_COST
										FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
												  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
												  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
												  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
												  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
												  dbo.DATA0034 ON LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR = dbo.DATA0034.RKEY
										WHERE dbo.DATA0034.DEPT_CODE = 'SIEB-03-01' 
										GROUP BY LIVE2.dbo.MatRueck_Anlage.ID, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY, dbo.DATA0017.INV_PART_DESCRIPTION , dbo.DATA0017.STOCK_PURCH, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STD_COST
										HAVING LIVE2.dbo.MatRueck_Anlage.ID = 27
									) AS tblAnlageArtikel INNER JOIN --LEFT OUTER JOIN 
									(SELECT QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, MONTH(TRAN_DATE) AS Monat, TRAN_TP 
									FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
									WHERE dbo.DATA0095.TRAN_TP IN (15, 16, 23) AND dbo.DATA0034.DEPT_CODE = 'SIEB-03-01' 
									AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
									AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  ) AS tblDATA0095
									ON tblAnlageArtikel.D17_RKEY = tblDATA0095.INVT_PTR
							), 0)
			INSERT @tblDurchsteigerArtikel(D17_PTR, Abteilung, Anlage, Artikel, Bezeichnung, VerbrauchSOLL, VerrPreis, LagerEinheit, Reihenfolge)
			SELECT -1 AS D17_PTR, 'Siebdruck' AS Abteilung, 'Durchsteiger' AS Anlage, 'Siebherstellung' AS Artikel, 
					'Umlage aus Siebherstellung' AS Bezeichnung, 
					0 AS VerbrauchSOLL, 
					(@p_VerbrauchEURDurchsteiger/@p_DurchsatzDurchsteigerGesamt)*@p_DurchsatzDurchsteiger AS VerrPreis,
					'KG' AS LagerEinheit,
					4 As Reihenfolge
		END


		SELECT
			Abteilung, 
			Anlage, 
			Artikel, 
			Bezeichnung, 
			Verbrauch,
			Durchsatz,
			Verbrauch*VerrPreis AS abs_Kosten,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch*VerrPreis)/Durchsatz 
				ELSE
					0
			END AS rel_Kosten,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch*VerrPreis)/Durchsatz*100 
				ELSE
					0
			END AS KS_IstKosten,
			VerrPreis*VerbrauchSOLL*100 AS SollKosten,
			CASE
				WHEN (VerrPreis*VerbrauchSOLL*100)>0 AND Durchsatz>0 THEN
					(((Verbrauch*VerrPreis)/Durchsatz*100)-(VerrPreis*VerbrauchSOLL*100.000000))/(VerrPreis*VerbrauchSOLL*100.000000) 
				ELSE
					0
			END AS Abweichung,
			(Verbrauch*VerrPreis)-(VerrPreis*Durchsatz*VerbrauchSOLL) AS MehrMinderKosten,
			(Verbrauch*VerrPreis) AS IstKosten,
			VerrPreis,
			CAST(VerbrauchSOLL*100.000000 AS DECIMAL(20, 7)) AS SollV_100,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch/Durchsatz)*100.000000 
				ELSE
					0
			END AS IstV_100,
			BzgGr,
			LagerEinheit,
			ISNULL(
					(
						SELECT
							COUNT(WORK_ORDER_NUMBER) AS RES
						FROM
						(
							SELECT DISTINCT
								dbo.DATA0038.RKEY, dbo.DATA0006.WORK_ORDER_NUMBER 

							FROM         dbo.DATA0006 INNER JOIN
												  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
												  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
												  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
												  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
												  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
							WHERE     (dbo.DATA0038.TTYPE = 2)
										AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
										AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
										AND LEFT(dbo.DATA0034.DEPT_CODE, 4) = 'SDA-'
										AND (RIGHT(RTRIM(dbo.DATA0038.PARAMETER_2), 3)='.DS'
												OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%durchsteiger%' AND (dbo.DATA0038.PARAMETER_2 = '' OR dbo.DATA0038.PARAMETER_2 = '.')))
						) AS tblAbzLackAnzFA
					)
			, 0) AS AnzFAs

		FROM
		(
			SELECT 
				D17_PTR, 
				Abteilung, 
				Anlage, 
				Artikel, 
				Bezeichnung, 
				VerbrauchSOLL,
				CASE 
					WHEN D17_PTR=-1 THEN
						1
					ELSE
						(
							ISNULL((
								SELECT
									SUM(ISNULL(tblDATA0095.QUANTITY, 0)) AS RES
								FROM
								(
									SELECT     LIVE2.dbo.MatRueck_Anlage.ID AS Anlage_PTR, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY AS D17_RKEY, dbo.DATA0017.INV_PART_DESCRIPTION AS ArtBezeichnung,
												dbo.DATA0002.UNIT_CODE AS Lagereinheit, dbo.DATA0017.STOCK_PURCH 
									FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
											  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
											  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
											  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
											  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
											  dbo.DATA0034 ON LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR = dbo.DATA0034.RKEY
									WHERE dbo.DATA0034.DEPT_CODE = @para2
									GROUP BY LIVE2.dbo.MatRueck_Anlage.ID, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY, dbo.DATA0017.INV_PART_DESCRIPTION , dbo.DATA0017.STOCK_PURCH, dbo.DATA0002.UNIT_CODE 
									HAVING LIVE2.dbo.MatRueck_Anlage.ID = CAST(@para3 AS INT)--(LIVE2.dbo.MatRueck_Anlage.Anlage = @Anlage)
								) AS tblAnlageArtikel INNER JOIN --LEFT OUTER JOIN 
								(SELECT QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, MONTH(TRAN_DATE) AS Monat, TRAN_TP 
								--FROM dbo.DATA0095 INNER JOIN  dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY 
								FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
								WHERE dbo.DATA0095.TRAN_TP IN (15, 16) AND dbo.DATA0034.DEPT_CODE = @para2
								AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
								AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  AND dbo.DATA0095.INVT_PTR = tblDurchsteigerArtikel_.D17_PTR ) AS tblDATA0095 
								ON tblAnlageArtikel.D17_RKEY = tblDATA0095.INVT_PTR
								--) AS myTblSub	
							), 0)
							+
							ISNULL((
								SELECT 
									ISNULL((
										(-1)*SUM(QUANTITY) 
										*
										ISNULL((
											SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
											FROM LIVE2.dbo.NachKalk_MatVerteilung
											WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = CAST(@para3 AS INT)
													AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = tblDurchsteigerArtikel_.D17_PTR
										), 1) 
									), 0) AS RES 

								FROM 
									dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
								WHERE 
									dbo.DATA0095.TRAN_TP = 23
									AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
									AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
									AND dbo.DATA0095.INVT_PTR = tblDurchsteigerArtikel_.D17_PTR
							), 0)
						) 
				END AS Verbrauch,
				CASE
					WHEN @para6='1' THEN
						CASE 
							WHEN D17_PTR=-1 THEN
								ISNULL(
										(
											SELECT
												COUNT(WORK_ORDER_NUMBER) AS RES
											FROM
											(
												SELECT DISTINCT
													dbo.DATA0038.RKEY, dbo.DATA0006.WORK_ORDER_NUMBER 

												FROM         dbo.DATA0006 INNER JOIN
																	  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
																	  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
																	  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
																	  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
																	  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
												WHERE     (dbo.DATA0038.TTYPE = 2)
															AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
															AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
															AND LEFT(dbo.DATA0034.DEPT_CODE, 4) = 'SDA-'
															--AND ((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.StLack.' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.StLack.')
															AND (RIGHT(RTRIM(dbo.DATA0038.PARAMETER_2), 3)='.DS'
																	OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%durchsteiger%' AND (dbo.DATA0038.PARAMETER_2 = '' OR dbo.DATA0038.PARAMETER_2 = '.')))	
											) AS tblAbzLackAnzFA
										)
								, 0) 
							ELSE
								ISNULL(
										(
											SELECT
												SUM(
													(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
													/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000) 
													--* CASE WHEN dbo.ARTIKELDATEN.LE > 1 THEN 2 ELSE 1 END 
													* CASE WHEN ISNUMERIC(LEFT(LTRIM(dbo.DATA0038.PARAMETER_2), 1))=1 AND RTRIM(LTRIM(dbo.DATA0038.PARAMETER_2))<>'.' THEN CAST(LEFT(LTRIM(dbo.DATA0038.PARAMETER_2), 1) AS INT) ELSE 1 END
													)
												AS RES
											FROM         dbo.DATA0006 INNER JOIN
																  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
																  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
																  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
																  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
																  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
											WHERE     (dbo.DATA0038.TTYPE = 2)
														AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
														AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
														AND LEFT(dbo.DATA0034.DEPT_CODE, 4) = 'SDA-'
														--geht nicht, muss von Hr. Wienecke noch korrigiert werden (29.05.2015/DSI)
														--AND dbo.DATA0038.PARAMETER_2 COLLATE SQL_Latin1_General_CP1_CI_AS LIKE '%' + RTRIM(tblDurchsteigerArtikel_.Bezeichnung) + '%'
														AND (RIGHT(RTRIM(dbo.DATA0038.PARAMETER_2), 3)='.DS'
																OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%durchsteiger%' AND (dbo.DATA0038.PARAMETER_2 = '' OR dbo.DATA0038.PARAMETER_2 = '.')))
										)
								, 0) 
						END
					ELSE
						ISNULL(
								(
									SELECT
										COUNT(WORK_ORDER_NUMBER) AS RES
									FROM
									(
										SELECT DISTINCT
											dbo.DATA0038.RKEY, dbo.DATA0006.WORK_ORDER_NUMBER 

										FROM         dbo.DATA0006 INNER JOIN
															  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
															  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
															  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
															  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
															  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
										WHERE     (dbo.DATA0038.TTYPE = 2)
													AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
													AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
													AND LEFT(dbo.DATA0034.DEPT_CODE, 4) = 'SDA-'
													--AND ((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.StLack.' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.StLack.')
													AND (RIGHT(RTRIM(dbo.DATA0038.PARAMETER_2), 3)='.DS'
															OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%durchsteiger%' AND (dbo.DATA0038.PARAMETER_2 = '' OR dbo.DATA0038.PARAMETER_2 = '.')))	
									) AS tblAbzLackAnzFA
								)
						, 0) 
				END AS Durchsatz,
				CASE WHEN @para6='1' THEN 'Ofl-m2' ELSE 'FA' END AS BzgGr,
				VerrPreis,
				LagerEinheit,
				Reihenfolge

			FROM @tblDurchsteigerArtikel AS tblDurchsteigerArtikel_
		) AS tblDurchsteigerAnlage
		ORDER BY Reihenfolge, IstKosten DESC
	END

	IF @Case_ = 'Materialverbrauch_je_Anlage_Flexlack'
	BEGIN

		DECLARE @tblFlexlackArtikel table(
											D17_PTR NUMERIC(10, 0),
											Abteilung varchar(250),
											Anlage varchar(250),
											Artikel char(20), 
											Bezeichnung char(40), 
											VerbrauchSOLL DECIMAL(20, 7),
											VerrPreis DECIMAL(20, 7),
											LagerEinheit varchar(5),
											Reihenfolge int
											)

		INSERT @tblFlexlackArtikel(D17_PTR, Abteilung, Anlage, Artikel, Bezeichnung, VerbrauchSOLL, VerrPreis, LagerEinheit, Reihenfolge)
		SELECT  DISTINCT dbo.DATA0017.RKEY AS D17_PTR, LIVE2.dbo.MatRueck_Abteilung.Abteilung, 
				LIVE2.dbo.MatRueck_Anlage.Anlage, 
				dbo.DATA0017.INV_PART_NUMBER AS Artikel, 
				dbo.DATA0017.INV_PART_DESCRIPTION AS Bezeichnung, 
				LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, 
				dbo.DATA0017.STD_COST AS VerrPreis,
				dbo.DATA0002.UNIT_CODE AS LagerEinheit,
				1 AS Reihenfolge
		FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
					  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
					  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
					  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
					  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
					  dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
					  LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
					  dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
		GROUP BY dbo.DATA0017.RKEY, LIVE2.dbo.MatRueck_Abteilung.Abteilung, LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID,
				dbo.DATA0017.INV_PART_NUMBER, dbo.DATA0017.INV_PART_DESCRIPTION, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STOCK_PURCH, 
				dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE, dbo.DATA0017.CONSIGN_ONHAND_QTY,
				dbo.DATA0017.ACTIVE_FLAG, dbo.DATA0017.STD_COST, LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial
		HAVING      dbo.DATA0017.ACTIVE_FLAG='Y' AND (LIVE2.dbo.MatRueck_Anlage.Anlage = 'Flexlack') 
					AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(@para6 AS bit)

		IF @para6='1'
		BEGIN
			DECLARE 
				@p_VerbrauchEURFlexlack NUMERIC(10, 4),
				@p_DurchsatzFlexlackGesamt NUMERIC(10, 4),
				@p_DurchsatzFlexlack NUMERIC(10, 4)

			SET @p_VerbrauchEURFlexlack = ISNULL((
									SELECT
										SUM(ISNULL(tblDATA0095.QUANTITY, 0) * ISNULL(tblAnlageArtikel.STD_COST, 0)) AS RES
									FROM
									(
										SELECT     LIVE2.dbo.MatRueck_Anlage.ID AS Anlage_PTR, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY AS D17_RKEY, dbo.DATA0017.INV_PART_DESCRIPTION AS ArtBezeichnung,
													dbo.DATA0002.UNIT_CODE AS Lagereinheit, dbo.DATA0017.STOCK_PURCH, dbo.DATA0017.STD_COST
										FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
												  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
												  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
												  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
												  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
												  dbo.DATA0034 ON LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR = dbo.DATA0034.RKEY
										WHERE dbo.DATA0034.DEPT_CODE = 'SIEB-02-01' 
										GROUP BY LIVE2.dbo.MatRueck_Anlage.ID, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY, dbo.DATA0017.INV_PART_DESCRIPTION , dbo.DATA0017.STOCK_PURCH, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STD_COST
										HAVING LIVE2.dbo.MatRueck_Anlage.ID = 63
									) AS tblAnlageArtikel INNER JOIN --LEFT OUTER JOIN 
									(SELECT QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, MONTH(TRAN_DATE) AS Monat, TRAN_TP 
									FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
									WHERE dbo.DATA0095.TRAN_TP IN (15, 16, 23) AND dbo.DATA0034.DEPT_CODE = 'SIEB-02-01' 
									AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
									AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  ) AS tblDATA0095
									ON tblAnlageArtikel.D17_RKEY = tblDATA0095.INVT_PTR
							), 0)
			SET @p_DurchsatzFlexlackGesamt = ISNULL(
										(
											SELECT
												COUNT(WORK_ORDER_NUMBER) AS RES
											FROM
											(
												SELECT DISTINCT
													dbo.DATA0038.RKEY, dbo.DATA0006.WORK_ORDER_NUMBER 

												FROM         dbo.DATA0006 INNER JOIN
																	  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
																	  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
																	  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
																	  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
																	  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
												WHERE     (dbo.DATA0038.TTYPE = 2)
															AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
															AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
															AND LEFT(dbo.DATA0034.DEPT_CODE, 4) = 'SDA-'
/*
															AND
																(
																	((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.StLack.' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.StLack.')
																			OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%stoplack%' AND dbo.DATA0038.PARAMETER_2 = ''))
																	OR
																	((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.AgLack.' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.AgLack.')
																			OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%silberleitlack%' AND dbo.DATA0038.PARAMETER_2 = ''))
																	OR
																	((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.KzDruck' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.KzDruck')
																			OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%kd%' AND dbo.DATA0038.PARAMETER_2 = ''))
																	OR
																	(RIGHT(RTRIM(dbo.DATA0038.PARAMETER_2), 3)='.DS'
																			OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%durchsteiger%' AND dbo.DATA0038.PARAMETER_2 = ''))
																	OR
																	((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.Carbon.' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.Carbon.')
																		OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%carbon%' AND dbo.DATA0038.PARAMETER_2 = ''))
																	OR
																	((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.WSLack.' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.WSLack.')
																		OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%wderstandsdruck%' AND dbo.DATA0038.PARAMETER_2 = ''))
																	OR
																	((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.AZLack.' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.AZLack.')
																			OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%abziehlack%' AND dbo.DATA0038.PARAMETER_2 = ''))
																)
*/
											) AS tblAbzLackAnzFA
										)
								, 0)
			SET @p_DurchsatzFlexlack = ISNULL(
												(
													SELECT
														COUNT(WORK_ORDER_NUMBER) AS RES
													FROM
													(
														SELECT DISTINCT
															dbo.DATA0038.RKEY, dbo.DATA0006.WORK_ORDER_NUMBER 

														FROM         dbo.DATA0006 INNER JOIN
																			  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
																			  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
																			  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
																			  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
																			  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
														WHERE     (dbo.DATA0038.TTYPE = 2)
																	AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
																	AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
																	AND LEFT(dbo.DATA0034.DEPT_CODE, 4) = 'SDA-'
																	AND dbo.DATA0038.PARAMETER_2 COLLATE SQL_Latin1_General_CP1_CI_AS = 'Semi-Flexlack grün'
													) AS tblAbzLackAnzFA
												)
										, 0) 

			INSERT @tblFlexlackArtikel(D17_PTR, Abteilung, Anlage, Artikel, Bezeichnung, VerbrauchSOLL, VerrPreis, LagerEinheit, Reihenfolge)
			SELECT 0 AS D17_PTR, '' AS Abteilung, '' AS Anlage, '' AS Artikel, 
					'' AS Bezeichnung, 
					0 AS VerbrauchSOLL, 
					0 AS VerrPreis,
					'' AS LagerEinheit,
					2 AS Reihenfolge

			INSERT @tblFlexlackArtikel(D17_PTR, Abteilung, Anlage, Artikel, Bezeichnung, VerbrauchSOLL, VerrPreis, LagerEinheit, Reihenfolge)
			SELECT -1 AS D17_PTR, 'Siebdruck' AS Abteilung, 'Flexlack' AS Anlage, 'Umla. Sieb.Allgemein' AS Artikel, 
					'Umlage aus Siebdruck allgemein' AS Bezeichnung, 
					0 AS VerbrauchSOLL, 
					(@p_VerbrauchEURFlexlack/@p_DurchsatzFlexlackGesamt)*@p_DurchsatzFlexlack AS VerrPreis,
					'KG' AS LagerEinheit,
					3 As Reihenfolge

			SET @p_VerbrauchEURFlexlack = ISNULL((
									SELECT
										SUM(ISNULL(tblDATA0095.QUANTITY, 0) * ISNULL(tblAnlageArtikel.STD_COST, 0)) AS RES
									FROM
									(
										SELECT     LIVE2.dbo.MatRueck_Anlage.ID AS Anlage_PTR, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY AS D17_RKEY, dbo.DATA0017.INV_PART_DESCRIPTION AS ArtBezeichnung,
													dbo.DATA0002.UNIT_CODE AS Lagereinheit, dbo.DATA0017.STOCK_PURCH, dbo.DATA0017.STD_COST
										FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
												  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
												  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
												  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
												  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
												  dbo.DATA0034 ON LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR = dbo.DATA0034.RKEY
										WHERE dbo.DATA0034.DEPT_CODE = 'SIEB-03-01' 
										GROUP BY LIVE2.dbo.MatRueck_Anlage.ID, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY, dbo.DATA0017.INV_PART_DESCRIPTION , dbo.DATA0017.STOCK_PURCH, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STD_COST
										HAVING LIVE2.dbo.MatRueck_Anlage.ID = 27
									) AS tblAnlageArtikel INNER JOIN --LEFT OUTER JOIN 
									(SELECT QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, MONTH(TRAN_DATE) AS Monat, TRAN_TP 
									FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
									WHERE dbo.DATA0095.TRAN_TP IN (15, 16, 23) AND dbo.DATA0034.DEPT_CODE = 'SIEB-03-01' 
									AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
									AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  ) AS tblDATA0095
									ON tblAnlageArtikel.D17_RKEY = tblDATA0095.INVT_PTR
							), 0)
			INSERT @tblFlexlackArtikel(D17_PTR, Abteilung, Anlage, Artikel, Bezeichnung, VerbrauchSOLL, VerrPreis, LagerEinheit, Reihenfolge)
			SELECT -1 AS D17_PTR, 'Siebdruck' AS Abteilung, 'Flexlack' AS Anlage, 'Siebherstellung' AS Artikel, 
					'Umlage aus Siebherstellung' AS Bezeichnung, 
					0 AS VerbrauchSOLL, 
					(@p_VerbrauchEURFlexlack/@p_DurchsatzFlexlackGesamt)*@p_DurchsatzFlexlack AS VerrPreis,
					'KG' AS LagerEinheit,
					4 AS Reihenfolge
		END


		SELECT
			Abteilung, 
			Anlage, 
			Artikel, 
			Bezeichnung, 
			Verbrauch,
			Durchsatz,
			Verbrauch*VerrPreis AS abs_Kosten,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch*VerrPreis)/Durchsatz 
				ELSE
					0
			END AS rel_Kosten,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch*VerrPreis)/Durchsatz*100 
				ELSE
					0
			END AS KS_IstKosten,
			VerrPreis*VerbrauchSOLL*100 AS SollKosten,
			CASE
				WHEN (VerrPreis*VerbrauchSOLL*100)>0 AND Durchsatz>0 THEN
					(((Verbrauch*VerrPreis)/Durchsatz*100)-(VerrPreis*VerbrauchSOLL*100.000000))/(VerrPreis*VerbrauchSOLL*100.000000) 
				ELSE
					0
			END AS Abweichung,
			(Verbrauch*VerrPreis)-(VerrPreis*Durchsatz*VerbrauchSOLL) AS MehrMinderKosten,
			(Verbrauch*VerrPreis) AS IstKosten,
			VerrPreis,
			CAST(VerbrauchSOLL*100.000000 AS DECIMAL(20, 7)) AS SollV_100,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch/Durchsatz)*100.000000 
				ELSE
					0
			END AS IstV_100,
			BzgGr,
			LagerEinheit,
			ISNULL(
					(
						SELECT
							COUNT(WORK_ORDER_NUMBER) AS RES
						FROM
						(
							SELECT DISTINCT
								dbo.DATA0038.RKEY, dbo.DATA0006.WORK_ORDER_NUMBER 

							FROM         dbo.DATA0006 INNER JOIN
												  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
												  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
												  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
												  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
												  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
							WHERE     (dbo.DATA0038.TTYPE = 2)
										AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
										AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
										AND LEFT(dbo.DATA0034.DEPT_CODE, 4) = 'SDA-'
										AND dbo.DATA0038.PARAMETER_2 COLLATE SQL_Latin1_General_CP1_CI_AS = 'Semi-Flexlack grün'
						) AS tblAbzLackAnzFA
					)
			, 0) AS AnzFAs

		FROM
		(
			SELECT 
				D17_PTR, 
				Abteilung, 
				Anlage, 
				Artikel, 
				Bezeichnung, 
				VerbrauchSOLL,
				CASE 
					WHEN D17_PTR=-1 THEN
						1
					ELSE
						(
							ISNULL((
								SELECT
									SUM(ISNULL(tblDATA0095.QUANTITY, 0)) AS RES
								FROM
								(
									SELECT     LIVE2.dbo.MatRueck_Anlage.ID AS Anlage_PTR, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY AS D17_RKEY, dbo.DATA0017.INV_PART_DESCRIPTION AS ArtBezeichnung,
												dbo.DATA0002.UNIT_CODE AS Lagereinheit, dbo.DATA0017.STOCK_PURCH 
									FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
											  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
											  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
											  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
											  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
											  dbo.DATA0034 ON LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR = dbo.DATA0034.RKEY
									WHERE dbo.DATA0034.DEPT_CODE = @para2
									GROUP BY LIVE2.dbo.MatRueck_Anlage.ID, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY, dbo.DATA0017.INV_PART_DESCRIPTION , dbo.DATA0017.STOCK_PURCH, dbo.DATA0002.UNIT_CODE 
									HAVING LIVE2.dbo.MatRueck_Anlage.ID = CAST(@para3 AS INT)--(LIVE2.dbo.MatRueck_Anlage.Anlage = @Anlage)
								) AS tblAnlageArtikel INNER JOIN --LEFT OUTER JOIN 
								(SELECT QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, MONTH(TRAN_DATE) AS Monat, TRAN_TP 
								--FROM dbo.DATA0095 INNER JOIN  dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY 
								FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
								WHERE dbo.DATA0095.TRAN_TP IN (15, 16) AND dbo.DATA0034.DEPT_CODE = @para2
								AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
								AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  AND dbo.DATA0095.INVT_PTR = tblFlexlackArtikel_.D17_PTR ) AS tblDATA0095 
								ON tblAnlageArtikel.D17_RKEY = tblDATA0095.INVT_PTR
								--) AS myTblSub	
							), 0)
							+
							ISNULL((
								SELECT 
									ISNULL((
										(-1)*SUM(QUANTITY) 
										*
										ISNULL((
											SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
											FROM LIVE2.dbo.NachKalk_MatVerteilung
											WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = CAST(@para3 AS INT)
													AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = tblFlexlackArtikel_.D17_PTR
										), 1) 
									), 0) AS RES 

								FROM 
									dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
								WHERE 
									dbo.DATA0095.TRAN_TP = 23
									AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
									AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
									AND dbo.DATA0095.INVT_PTR = tblFlexlackArtikel_.D17_PTR
							), 0)
						) 
				END AS Verbrauch,
				CASE
					WHEN @para6='1' THEN
						CASE 
							WHEN D17_PTR=-1 THEN
								ISNULL(
										(
											SELECT
												COUNT(WORK_ORDER_NUMBER) AS RES
											FROM
											(
												SELECT DISTINCT
													dbo.DATA0038.RKEY, dbo.DATA0006.WORK_ORDER_NUMBER 

												FROM         dbo.DATA0006 INNER JOIN
																	  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
																	  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
																	  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
																	  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
																	  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
												WHERE     (dbo.DATA0038.TTYPE = 2)
															AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
															AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
															AND LEFT(dbo.DATA0034.DEPT_CODE, 4) = 'SDA-'
															AND dbo.DATA0038.PARAMETER_2 COLLATE SQL_Latin1_General_CP1_CI_AS LIKE '%' + RTRIM(tblFlexlackArtikel_.Bezeichnung) + '%'
											) AS tblAbzLackAnzFA
										)
								, 0) 
							ELSE
								ISNULL(
										(
											SELECT
												SUM(
													(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
													/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000) 
													--* CASE WHEN dbo.ARTIKELDATEN.LE > 1 THEN 2 ELSE 1 END 
													* CASE WHEN ISNUMERIC(LEFT(LTRIM(dbo.DATA0038.PARAMETER_2), 1))=1 AND RTRIM(LTRIM(dbo.DATA0038.PARAMETER_2))<>'.' THEN CAST(LEFT(LTRIM(dbo.DATA0038.PARAMETER_2), 1) AS INT) ELSE 1 END
													)
												AS RES
											FROM         dbo.DATA0006 INNER JOIN
																  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
																  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
																  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
																  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
																  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
											WHERE     (dbo.DATA0038.TTYPE = 2)
														AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
														AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
														AND LEFT(dbo.DATA0034.DEPT_CODE, 4) = 'SDA-'
														AND dbo.DATA0038.PARAMETER_2 COLLATE SQL_Latin1_General_CP1_CI_AS LIKE '%' + RTRIM(tblFlexlackArtikel_.Bezeichnung) + '%'
										)
								, 0) 
						END
					ELSE
						ISNULL(
								(
									SELECT
										COUNT(WORK_ORDER_NUMBER) AS RES
									FROM
									(
										SELECT DISTINCT
											dbo.DATA0038.RKEY, dbo.DATA0006.WORK_ORDER_NUMBER 

										FROM         dbo.DATA0006 INNER JOIN
															  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
															  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
															  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
															  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
															  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
										WHERE     (dbo.DATA0038.TTYPE = 2)
													AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
													AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
													AND LEFT(dbo.DATA0034.DEPT_CODE, 4) = 'SDA-'
													AND dbo.DATA0038.PARAMETER_2 COLLATE SQL_Latin1_General_CP1_CI_AS LIKE '%' + RTRIM(tblFlexlackArtikel_.Bezeichnung) + '%'
									) AS tblAbzLackAnzFA
								)
						, 0) 
				END AS Durchsatz,
				CASE WHEN @para6='1' THEN 'Ofl-m2' ELSE 'FA' END AS BzgGr,
				VerrPreis,
				LagerEinheit,
				Reihenfolge

			FROM @tblFlexlackArtikel AS tblFlexlackArtikel_
		) AS tblFlexlackAnlage
		ORDER BY Reihenfolge, IstKosten DESC
	END

	IF @Case_ = 'Materialverbrauch_je_Anlage_KD'
	BEGIN

		DECLARE @tblKDArtikel table(
											D17_PTR NUMERIC(10, 0),
											Abteilung varchar(250),
											Anlage varchar(250),
											Artikel char(20), 
											Bezeichnung char(40), 
											VerbrauchSOLL DECIMAL(20, 7),
											VerrPreis DECIMAL(20, 7),
											LagerEinheit varchar(5),
											Reihenfolge int
											)

		INSERT @tblKDArtikel(D17_PTR, Abteilung, Anlage, Artikel, Bezeichnung, VerbrauchSOLL, VerrPreis, LagerEinheit, Reihenfolge)
		SELECT  DISTINCT dbo.DATA0017.RKEY AS D17_PTR, LIVE2.dbo.MatRueck_Abteilung.Abteilung, 
				LIVE2.dbo.MatRueck_Anlage.Anlage, 
				dbo.DATA0017.INV_PART_NUMBER AS Artikel, 
				dbo.DATA0017.INV_PART_DESCRIPTION AS Bezeichnung, 
				LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, 
				dbo.DATA0017.STD_COST AS VerrPreis,
				dbo.DATA0002.UNIT_CODE AS LagerEinheit,
				1 AS Reihenfolge
		FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
					  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
					  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
					  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
					  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
					  dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
					  LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
					  dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
		GROUP BY dbo.DATA0017.RKEY, LIVE2.dbo.MatRueck_Abteilung.Abteilung, LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID,
				dbo.DATA0017.INV_PART_NUMBER, dbo.DATA0017.INV_PART_DESCRIPTION, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STOCK_PURCH, 
				dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE, dbo.DATA0017.CONSIGN_ONHAND_QTY,
				dbo.DATA0017.ACTIVE_FLAG, dbo.DATA0017.STD_COST, LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial
		HAVING      dbo.DATA0017.ACTIVE_FLAG='Y' AND (LIVE2.dbo.MatRueck_Anlage.Anlage = 'KD') 
					AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(@para6 AS bit)

		IF @para6='1'
		BEGIN
			DECLARE 
				@p_VerbrauchEURKD NUMERIC(10, 4),
				@p_DurchsatzKDGesamt NUMERIC(10, 4),
				@p_DurchsatzKD NUMERIC(10, 4)

			SET @p_VerbrauchEURKD = ISNULL((
									SELECT
										SUM(ISNULL(tblDATA0095.QUANTITY, 0) * ISNULL(tblAnlageArtikel.STD_COST, 0)) AS RES
									FROM
									(
										SELECT     LIVE2.dbo.MatRueck_Anlage.ID AS Anlage_PTR, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY AS D17_RKEY, dbo.DATA0017.INV_PART_DESCRIPTION AS ArtBezeichnung,
													dbo.DATA0002.UNIT_CODE AS Lagereinheit, dbo.DATA0017.STOCK_PURCH, dbo.DATA0017.STD_COST
										FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
												  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
												  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
												  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
												  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
												  dbo.DATA0034 ON LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR = dbo.DATA0034.RKEY
										WHERE dbo.DATA0034.DEPT_CODE = 'SIEB-02-01' 
										GROUP BY LIVE2.dbo.MatRueck_Anlage.ID, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY, dbo.DATA0017.INV_PART_DESCRIPTION , dbo.DATA0017.STOCK_PURCH, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STD_COST
										HAVING LIVE2.dbo.MatRueck_Anlage.ID = 63
									) AS tblAnlageArtikel INNER JOIN --LEFT OUTER JOIN 
									(SELECT QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, MONTH(TRAN_DATE) AS Monat, TRAN_TP 
									FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
									WHERE dbo.DATA0095.TRAN_TP IN (15, 16, 23) AND dbo.DATA0034.DEPT_CODE = 'SIEB-02-01' 
									AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
									AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  ) AS tblDATA0095
									ON tblAnlageArtikel.D17_RKEY = tblDATA0095.INVT_PTR
							), 0)
			SET @p_DurchsatzKDGesamt = ISNULL(
										(
											SELECT
												COUNT(WORK_ORDER_NUMBER) AS RES
											FROM
											(
												SELECT DISTINCT
													dbo.DATA0038.RKEY, dbo.DATA0006.WORK_ORDER_NUMBER 

												FROM         dbo.DATA0006 INNER JOIN
																	  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
																	  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
																	  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
																	  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
																	  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
												WHERE     (dbo.DATA0038.TTYPE = 2)
															AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
															AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
															AND LEFT(dbo.DATA0034.DEPT_CODE, 4) = 'SDA-'
/*
															AND
																(
																	((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.StLack.' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.StLack.')
																			OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%stoplack%' AND dbo.DATA0038.PARAMETER_2 = ''))
																	OR
																	((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.AgLack.' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.AgLack.')
																			OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%silberleitlack%' AND dbo.DATA0038.PARAMETER_2 = ''))
																	OR
																	((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.KzDruck' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.KzDruck')
																			OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%kd%' AND dbo.DATA0038.PARAMETER_2 = ''))
																	OR
																	(RIGHT(RTRIM(dbo.DATA0038.PARAMETER_2), 3)='.DS'
																			OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%durchsteiger%' AND dbo.DATA0038.PARAMETER_2 = ''))
																	OR
																	((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.Carbon.' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.Carbon.')
																		OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%carbon%' AND dbo.DATA0038.PARAMETER_2 = ''))
																	OR
																	((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.WSLack.' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.WSLack.')
																		OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%wderstandsdruck%' AND dbo.DATA0038.PARAMETER_2 = ''))
																	OR
																	((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.AZLack.' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.AZLack.')
																			OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%abziehlack%' AND dbo.DATA0038.PARAMETER_2 = ''))
																)
*/
											) AS tblAbzLackAnzFA
										)
								, 0)
			SET @p_DurchsatzKD = ISNULL(
												(
													SELECT
														COUNT(WORK_ORDER_NUMBER) AS RES
													FROM
													(
														SELECT DISTINCT
															dbo.DATA0038.RKEY, dbo.DATA0006.WORK_ORDER_NUMBER 

														FROM         dbo.DATA0006 INNER JOIN
																			  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
																			  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
																			  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
																			  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
																			  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
														WHERE     (dbo.DATA0038.TTYPE = 2)
																	AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
																	AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
																	AND LEFT(dbo.DATA0034.DEPT_CODE, 4) = 'SDA-'
																	AND ((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.KzDruck' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.KzDruck')
																		OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%kd%' AND (dbo.DATA0038.PARAMETER_2 = '' OR dbo.DATA0038.PARAMETER_2 = '.')))
													) AS tblAbzLackAnzFA
												)
										, 0) 

			INSERT @tblKDArtikel(D17_PTR, Abteilung, Anlage, Artikel, Bezeichnung, VerbrauchSOLL, VerrPreis, LagerEinheit, Reihenfolge)
			SELECT 0 AS D17_PTR, '' AS Abteilung, '' AS Anlage, '' AS Artikel, 
					'' AS Bezeichnung, 
					0 AS VerbrauchSOLL, 
					0 AS VerrPreis,
					'' AS LagerEinheit,
					2 AS Reihenfolge

			INSERT @tblKDArtikel(D17_PTR, Abteilung, Anlage, Artikel, Bezeichnung, VerbrauchSOLL, VerrPreis, LagerEinheit, Reihenfolge)
			SELECT -1 AS D17_PTR, 'Siebdruck' AS Abteilung, 'KD' AS Anlage, 'Umla. Sieb.Allgemein' AS Artikel, 
					'Umlage aus Siebdruck allgemein' AS Bezeichnung, 
					0 AS VerbrauchSOLL, 
					(@p_VerbrauchEURKD/@p_DurchsatzKDGesamt)*@p_DurchsatzKD AS VerrPreis,
					'KG' AS LagerEinheit,
					3 AS Reihenfolge

			SET @p_VerbrauchEURKD = ISNULL((
									SELECT
										SUM(ISNULL(tblDATA0095.QUANTITY, 0) * ISNULL(tblAnlageArtikel.STD_COST, 0)) AS RES
									FROM
									(
										SELECT     LIVE2.dbo.MatRueck_Anlage.ID AS Anlage_PTR, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY AS D17_RKEY, dbo.DATA0017.INV_PART_DESCRIPTION AS ArtBezeichnung,
													dbo.DATA0002.UNIT_CODE AS Lagereinheit, dbo.DATA0017.STOCK_PURCH, dbo.DATA0017.STD_COST
										FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
												  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
												  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
												  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
												  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
												  dbo.DATA0034 ON LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR = dbo.DATA0034.RKEY
										WHERE dbo.DATA0034.DEPT_CODE = 'SIEB-03-01' 
										GROUP BY LIVE2.dbo.MatRueck_Anlage.ID, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY, dbo.DATA0017.INV_PART_DESCRIPTION , dbo.DATA0017.STOCK_PURCH, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STD_COST
										HAVING LIVE2.dbo.MatRueck_Anlage.ID = 27
									) AS tblAnlageArtikel INNER JOIN --LEFT OUTER JOIN 
									(SELECT QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, MONTH(TRAN_DATE) AS Monat, TRAN_TP 
									FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
									WHERE dbo.DATA0095.TRAN_TP IN (15, 16, 23) AND dbo.DATA0034.DEPT_CODE = 'SIEB-03-01' 
									AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
									AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  ) AS tblDATA0095
									ON tblAnlageArtikel.D17_RKEY = tblDATA0095.INVT_PTR
							), 0)
			INSERT @tblKDArtikel(D17_PTR, Abteilung, Anlage, Artikel, Bezeichnung, VerbrauchSOLL, VerrPreis, LagerEinheit, Reihenfolge)
			SELECT -1 AS D17_PTR, 'Siebdruck' AS Abteilung, 'KD' AS Anlage, 'Siebherstellung' AS Artikel, 
					'Umlage aus Siebherstellung' AS Bezeichnung, 
					0 AS VerbrauchSOLL, 
					(@p_VerbrauchEURKD/@p_DurchsatzKDGesamt)*@p_DurchsatzKD AS VerrPreis,
					'KG' AS LagerEinheit,
					4 AS Reihenfolge
		END


		SELECT
			Abteilung, 
			Anlage, 
			Artikel, 
			Bezeichnung, 
			Verbrauch,
			Durchsatz,
			Verbrauch*VerrPreis AS abs_Kosten,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch*VerrPreis)/Durchsatz 
				ELSE
					0
			END AS rel_Kosten,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch*VerrPreis)/Durchsatz*100 
				ELSE
					0
			END AS KS_IstKosten,
			VerrPreis*VerbrauchSOLL*100 AS SollKosten,
			CASE
				WHEN (VerrPreis*VerbrauchSOLL*100)>0 AND Durchsatz>0 THEN
					(((Verbrauch*VerrPreis)/Durchsatz*100)-(VerrPreis*VerbrauchSOLL*100.000000))/(VerrPreis*VerbrauchSOLL*100.000000) 
				ELSE
					0
			END AS Abweichung,
			(Verbrauch*VerrPreis)-(VerrPreis*Durchsatz*VerbrauchSOLL) AS MehrMinderKosten,
			(Verbrauch*VerrPreis) AS IstKosten,
			VerrPreis,
			CAST(VerbrauchSOLL*100.000000 AS DECIMAL(20, 7)) AS SollV_100,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch/Durchsatz)*100.000000 
				ELSE
					0
			END AS IstV_100,
			BzgGr,
			LagerEinheit,
			ISNULL(
					(
						SELECT
							COUNT(WORK_ORDER_NUMBER) AS RES
						FROM
						(
							SELECT DISTINCT
								dbo.DATA0038.RKEY, dbo.DATA0006.WORK_ORDER_NUMBER 

							FROM         dbo.DATA0006 INNER JOIN
												  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
												  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
												  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
												  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
												  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
							WHERE     (dbo.DATA0038.TTYPE = 2)
										AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
										AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
										AND LEFT(dbo.DATA0034.DEPT_CODE, 4) = 'SDA-'
										AND ((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.KzDruck' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.KzDruck')
											OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%kd%' AND (dbo.DATA0038.PARAMETER_2 = '' OR dbo.DATA0038.PARAMETER_2 = '.')))
						) AS tblAbzLackAnzFA
					)
			, 0) AS AnzFAs

		FROM
		(
			SELECT 
				D17_PTR, 
				Abteilung, 
				Anlage, 
				Artikel, 
				Bezeichnung, 
				VerbrauchSOLL,
				CASE 
					WHEN D17_PTR=-1 THEN
						1
					ELSE
						(
							ISNULL((
								SELECT
									SUM(ISNULL(tblDATA0095.QUANTITY, 0)) AS RES
								FROM
								(
									SELECT     LIVE2.dbo.MatRueck_Anlage.ID AS Anlage_PTR, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY AS D17_RKEY, dbo.DATA0017.INV_PART_DESCRIPTION AS ArtBezeichnung,
												dbo.DATA0002.UNIT_CODE AS Lagereinheit, dbo.DATA0017.STOCK_PURCH 
									FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
											  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
											  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
											  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
											  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
											  dbo.DATA0034 ON LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR = dbo.DATA0034.RKEY
									WHERE dbo.DATA0034.DEPT_CODE = @para2
									GROUP BY LIVE2.dbo.MatRueck_Anlage.ID, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY, dbo.DATA0017.INV_PART_DESCRIPTION , dbo.DATA0017.STOCK_PURCH, dbo.DATA0002.UNIT_CODE 
									HAVING LIVE2.dbo.MatRueck_Anlage.ID = CAST(@para3 AS INT)--(LIVE2.dbo.MatRueck_Anlage.Anlage = @Anlage)
								) AS tblAnlageArtikel INNER JOIN --LEFT OUTER JOIN 
								(SELECT QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, MONTH(TRAN_DATE) AS Monat, TRAN_TP 
								--FROM dbo.DATA0095 INNER JOIN  dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY 
								FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
								WHERE dbo.DATA0095.TRAN_TP IN (15, 16) AND dbo.DATA0034.DEPT_CODE = @para2
								AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
								AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  AND dbo.DATA0095.INVT_PTR = tblKDArtikel_.D17_PTR ) AS tblDATA0095 
								ON tblAnlageArtikel.D17_RKEY = tblDATA0095.INVT_PTR
								--) AS myTblSub	
							), 0)
							+
							ISNULL((
								SELECT 
									ISNULL((
										(-1)*SUM(QUANTITY) 
										*
										ISNULL((
											SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
											FROM LIVE2.dbo.NachKalk_MatVerteilung
											WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = CAST(@para3 AS INT)
													AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = tblKDArtikel_.D17_PTR
										), 1) 
									), 0) AS RES 

								FROM 
									dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
								WHERE 
									dbo.DATA0095.TRAN_TP = 23
									AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
									AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
									AND dbo.DATA0095.INVT_PTR = tblKDArtikel_.D17_PTR
							), 0)
						) 
				END AS Verbrauch,
				CASE
					WHEN @para6='1' THEN
						CASE 
							WHEN D17_PTR=-1 THEN
								ISNULL(
										(
											SELECT
												COUNT(WORK_ORDER_NUMBER) AS RES
											FROM
											(
												SELECT DISTINCT
													dbo.DATA0038.RKEY, dbo.DATA0006.WORK_ORDER_NUMBER 

												FROM         dbo.DATA0006 INNER JOIN
																	  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
																	  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
																	  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
																	  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
																	  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
												WHERE     (dbo.DATA0038.TTYPE = 2)
															AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
															AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
															AND LEFT(dbo.DATA0034.DEPT_CODE, 4) = 'SDA-'
															AND ((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.KzDruck' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.KzDruck')
																	OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%kd%' AND (dbo.DATA0038.PARAMETER_2 = '' OR dbo.DATA0038.PARAMETER_2 = '.')))	
											) AS tblAbzLackAnzFA
										)
								, 0) 
							ELSE
								ISNULL(
										(
											SELECT
												SUM(
													(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
													/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000) 
													--* CASE WHEN dbo.ARTIKELDATEN.LE > 1 THEN 2 ELSE 1 END 
													* CASE WHEN ISNUMERIC(LEFT(LTRIM(dbo.DATA0038.PARAMETER_2), 1))=1 AND RTRIM(LTRIM(dbo.DATA0038.PARAMETER_2))<>'.' THEN CAST(LEFT(LTRIM(dbo.DATA0038.PARAMETER_2), 1) AS INT) ELSE 1 END
													)
												AS RES
											FROM         dbo.DATA0006 INNER JOIN
																  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
																  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
																  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
																  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
																  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
											WHERE     (dbo.DATA0038.TTYPE = 2)
														AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
														AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
														AND LEFT(dbo.DATA0034.DEPT_CODE, 4) = 'SDA-'
														AND dbo.DATA0038.PARAMETER_2 COLLATE SQL_Latin1_General_CP1_CI_AS LIKE '%' + RTRIM(tblKDArtikel_.Bezeichnung) + '%'
														AND ((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.KzDruck' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.KzDruck')
																OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%kd%' AND (dbo.DATA0038.PARAMETER_2 = '' OR dbo.DATA0038.PARAMETER_2 = '.')))	
										)
								, 0) 
						END
					ELSE
						ISNULL(
								(
									SELECT
										COUNT(WORK_ORDER_NUMBER) AS RES
									FROM
									(
										SELECT DISTINCT
											dbo.DATA0038.RKEY, dbo.DATA0006.WORK_ORDER_NUMBER 

										FROM         dbo.DATA0006 INNER JOIN
															  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
															  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
															  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
															  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
															  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
										WHERE     (dbo.DATA0038.TTYPE = 2)
													AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
													AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
													AND LEFT(dbo.DATA0034.DEPT_CODE, 4) = 'SDA-'
													AND ((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.KzDruck' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.KzDruck')
															OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%kd%' AND (dbo.DATA0038.PARAMETER_2 = '' OR dbo.DATA0038.PARAMETER_2 = '.')))	
									) AS tblAbzLackAnzFA
								)
						, 0) 
				END AS Durchsatz,
				CASE WHEN @para6='1' THEN 'Ofl-m2' ELSE 'FA' END AS BzgGr,
				VerrPreis,
				LagerEinheit,
				Reihenfolge

			FROM @tblKDArtikel AS tblKDArtikel_
		) AS tblKDAnlage
		ORDER BY Reihenfolge, IstKosten DESC
	END

	IF @Case_ = 'Materialverbrauch_je_Anlage_Silberleitlack'
	BEGIN

		DECLARE @tblSilberleitlackArtikel table(
											D17_PTR NUMERIC(10, 0),
											Abteilung varchar(250),
											Anlage varchar(250),
											Artikel char(20), 
											Bezeichnung char(40), 
											VerbrauchSOLL DECIMAL(20, 7),
											VerrPreis DECIMAL(20, 7),
											LagerEinheit varchar(5),
											Reihenfolge int
											)

		INSERT @tblSilberleitlackArtikel(D17_PTR, Abteilung, Anlage, Artikel, Bezeichnung, VerbrauchSOLL, VerrPreis, LagerEinheit, Reihenfolge)
		SELECT  DISTINCT dbo.DATA0017.RKEY AS D17_PTR, LIVE2.dbo.MatRueck_Abteilung.Abteilung, 
				LIVE2.dbo.MatRueck_Anlage.Anlage, 
				dbo.DATA0017.INV_PART_NUMBER AS Artikel, 
				dbo.DATA0017.INV_PART_DESCRIPTION AS Bezeichnung, 
				LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, 
				dbo.DATA0017.STD_COST AS VerrPreis,
				dbo.DATA0002.UNIT_CODE AS LagerEinheit,
				1 AS Reihenfolge
		FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
					  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
					  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
					  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
					  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
					  dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
					  LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
					  dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
		GROUP BY dbo.DATA0017.RKEY, LIVE2.dbo.MatRueck_Abteilung.Abteilung, LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID,
				dbo.DATA0017.INV_PART_NUMBER, dbo.DATA0017.INV_PART_DESCRIPTION, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STOCK_PURCH, 
				dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE, dbo.DATA0017.CONSIGN_ONHAND_QTY,
				dbo.DATA0017.ACTIVE_FLAG, dbo.DATA0017.STD_COST, LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial
		HAVING      dbo.DATA0017.ACTIVE_FLAG='Y' AND (LIVE2.dbo.MatRueck_Anlage.Anlage = 'Silberleitlack') 
					AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(@para6 AS bit)

		IF @para6='1'
		BEGIN
			DECLARE 
				@p_VerbrauchEURSilberleitlack NUMERIC(10, 4),
				@p_DurchsatzSilberleitlackGesamt NUMERIC(10, 4),
				@p_DurchsatzSilberleitlack NUMERIC(10, 4)

			SET @p_VerbrauchEURSilberleitlack = ISNULL((
									SELECT
										SUM(ISNULL(tblDATA0095.QUANTITY, 0) * ISNULL(tblAnlageArtikel.STD_COST, 0)) AS RES
									FROM
									(
										SELECT     LIVE2.dbo.MatRueck_Anlage.ID AS Anlage_PTR, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY AS D17_RKEY, dbo.DATA0017.INV_PART_DESCRIPTION AS ArtBezeichnung,
													dbo.DATA0002.UNIT_CODE AS Lagereinheit, dbo.DATA0017.STOCK_PURCH, dbo.DATA0017.STD_COST
										FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
												  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
												  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
												  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
												  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
												  dbo.DATA0034 ON LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR = dbo.DATA0034.RKEY
										WHERE dbo.DATA0034.DEPT_CODE = 'SIEB-02-01' 
										GROUP BY LIVE2.dbo.MatRueck_Anlage.ID, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY, dbo.DATA0017.INV_PART_DESCRIPTION , dbo.DATA0017.STOCK_PURCH, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STD_COST
										HAVING LIVE2.dbo.MatRueck_Anlage.ID = 63
									) AS tblAnlageArtikel INNER JOIN --LEFT OUTER JOIN 
									(SELECT QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, MONTH(TRAN_DATE) AS Monat, TRAN_TP 
									FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
									WHERE dbo.DATA0095.TRAN_TP IN (15, 16, 23) AND dbo.DATA0034.DEPT_CODE = 'SIEB-02-01' 
									AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
									AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  ) AS tblDATA0095
									ON tblAnlageArtikel.D17_RKEY = tblDATA0095.INVT_PTR
							), 0)
			SET @p_DurchsatzSilberleitlackGesamt = ISNULL(
										(
											SELECT
												COUNT(WORK_ORDER_NUMBER) AS RES
											FROM
											(
												SELECT DISTINCT
													dbo.DATA0038.RKEY, dbo.DATA0006.WORK_ORDER_NUMBER 

												FROM         dbo.DATA0006 INNER JOIN
																	  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
																	  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
																	  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
																	  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
																	  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
												WHERE     (dbo.DATA0038.TTYPE = 2)
															AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
															AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
															AND LEFT(dbo.DATA0034.DEPT_CODE, 4) = 'SDA-'
/*
															AND
																(
																	((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.StLack.' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.StLack.')
																			OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%stoplack%' AND dbo.DATA0038.PARAMETER_2 = ''))
																	OR
																	((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.AgLack.' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.AgLack.')
																			OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%silberleitlack%' AND dbo.DATA0038.PARAMETER_2 = ''))
																	OR
																	((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.KzDruck' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.KzDruck')
																			OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%kd%' AND dbo.DATA0038.PARAMETER_2 = ''))
																	OR
																	(RIGHT(RTRIM(dbo.DATA0038.PARAMETER_2), 3)='.DS'
																			OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%durchsteiger%' AND dbo.DATA0038.PARAMETER_2 = ''))
																	OR
																	((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.Carbon.' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.Carbon.')
																		OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%carbon%' AND dbo.DATA0038.PARAMETER_2 = ''))
																	OR
																	((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.WSLack.' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.WSLack.')
																		OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%wderstandsdruck%' AND dbo.DATA0038.PARAMETER_2 = ''))
																	OR
																	((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.AZLack.' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.AZLack.')
																			OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%abziehlack%' AND dbo.DATA0038.PARAMETER_2 = ''))
																)
*/
											) AS tblAbzLackAnzFA
										)
								, 0)
			SET @p_DurchsatzSilberleitlack = ISNULL(
												(
													SELECT
														COUNT(WORK_ORDER_NUMBER) AS RES
													FROM
													(
														SELECT DISTINCT
															dbo.DATA0038.RKEY, dbo.DATA0006.WORK_ORDER_NUMBER 

														FROM         dbo.DATA0006 INNER JOIN
																			  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
																			  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
																			  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
																			  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
																			  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
														WHERE     (dbo.DATA0038.TTYPE = 2)
																	AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
																	AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
																	AND LEFT(dbo.DATA0034.DEPT_CODE, 4) = 'SDA-'
																	AND ((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.AgLack.' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.AgLack.')
																			OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%silberleitlack%' AND (dbo.DATA0038.PARAMETER_2 = '' OR dbo.DATA0038.PARAMETER_2 = '.')))	
													) AS tblAbzLackAnzFA
												)
										, 0) 

			INSERT @tblSilberleitlackArtikel(D17_PTR, Abteilung, Anlage, Artikel, Bezeichnung, VerbrauchSOLL, VerrPreis, LagerEinheit, Reihenfolge)
			SELECT 0 AS D17_PTR, '' AS Abteilung, '' AS Anlage, '' AS Artikel, 
					'' AS Bezeichnung, 
					0 AS VerbrauchSOLL, 
					0 AS VerrPreis,
					'' AS LagerEinheit,
					2 AS Reihenfolge

			INSERT @tblSilberleitlackArtikel(D17_PTR, Abteilung, Anlage, Artikel, Bezeichnung, VerbrauchSOLL, VerrPreis, LagerEinheit, Reihenfolge)
			SELECT -1 AS D17_PTR, 'Siebdruck' AS Abteilung, 'Silberleitlack' AS Anlage, 'Umla. Sieb.Allgemein' AS Artikel, 
					'Umlage aus Siebdruck allgemein' AS Bezeichnung, 
					0 AS VerbrauchSOLL, 
					(@p_VerbrauchEURSilberleitlack/@p_DurchsatzSilberleitlackGesamt)*@p_DurchsatzSilberleitlack AS VerrPreis,
					'KG' AS LagerEinheit,
					3 AS Reihenfolge

			SET @p_VerbrauchEURSilberleitlack = ISNULL((
									SELECT
										SUM(ISNULL(tblDATA0095.QUANTITY, 0) * ISNULL(tblAnlageArtikel.STD_COST, 0)) AS RES
									FROM
									(
										SELECT     LIVE2.dbo.MatRueck_Anlage.ID AS Anlage_PTR, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY AS D17_RKEY, dbo.DATA0017.INV_PART_DESCRIPTION AS ArtBezeichnung,
													dbo.DATA0002.UNIT_CODE AS Lagereinheit, dbo.DATA0017.STOCK_PURCH, dbo.DATA0017.STD_COST
										FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
												  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
												  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
												  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
												  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
												  dbo.DATA0034 ON LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR = dbo.DATA0034.RKEY
										WHERE dbo.DATA0034.DEPT_CODE = 'SIEB-03-01' 
										GROUP BY LIVE2.dbo.MatRueck_Anlage.ID, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY, dbo.DATA0017.INV_PART_DESCRIPTION , dbo.DATA0017.STOCK_PURCH, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STD_COST
										HAVING LIVE2.dbo.MatRueck_Anlage.ID = 27
									) AS tblAnlageArtikel INNER JOIN --LEFT OUTER JOIN 
									(SELECT QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, MONTH(TRAN_DATE) AS Monat, TRAN_TP 
									FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
									WHERE dbo.DATA0095.TRAN_TP IN (15, 16, 23) AND dbo.DATA0034.DEPT_CODE = 'SIEB-03-01' 
									AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
									AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  ) AS tblDATA0095
									ON tblAnlageArtikel.D17_RKEY = tblDATA0095.INVT_PTR
							), 0)
			INSERT @tblSilberleitlackArtikel(D17_PTR, Abteilung, Anlage, Artikel, Bezeichnung, VerbrauchSOLL, VerrPreis, LagerEinheit, Reihenfolge)
			SELECT -1 AS D17_PTR, 'Siebdruck' AS Abteilung, 'Silberleitlack' AS Anlage, 'Siebherstellung' AS Artikel, 
					'Umlage aus Siebherstellung' AS Bezeichnung, 
					0 AS VerbrauchSOLL, 
					(@p_VerbrauchEURSilberleitlack/@p_DurchsatzSilberleitlackGesamt)*@p_DurchsatzSilberleitlack AS VerrPreis,
					'KG' AS LagerEinheit,
					4 As Reihenfolge
		END


		SELECT
			Abteilung, 
			Anlage, 
			Artikel, 
			Bezeichnung, 
			Verbrauch,
			Durchsatz,
			Verbrauch*VerrPreis AS abs_Kosten,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch*VerrPreis)/Durchsatz 
				ELSE
					0
			END AS rel_Kosten,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch*VerrPreis)/Durchsatz*100 
				ELSE
					0
			END AS KS_IstKosten,
			VerrPreis*VerbrauchSOLL*100 AS SollKosten,
			CASE
				WHEN (VerrPreis*VerbrauchSOLL*100)>0 AND Durchsatz>0 THEN
					(((Verbrauch*VerrPreis)/Durchsatz*100)-(VerrPreis*VerbrauchSOLL*100.000000))/(VerrPreis*VerbrauchSOLL*100.000000) 
				ELSE
					0
			END AS Abweichung,
			(Verbrauch*VerrPreis)-(VerrPreis*Durchsatz*VerbrauchSOLL) AS MehrMinderKosten,
			(Verbrauch*VerrPreis) AS IstKosten,
			VerrPreis,
			CAST(VerbrauchSOLL*100.000000 AS DECIMAL(20, 7)) AS SollV_100,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch/Durchsatz)*100.000000 
				ELSE
					0
			END AS IstV_100,
			BzgGr,
			LagerEinheit,
			ISNULL(
					(
						SELECT
							COUNT(WORK_ORDER_NUMBER) AS RES
						FROM
						(
							SELECT DISTINCT
								dbo.DATA0038.RKEY, dbo.DATA0006.WORK_ORDER_NUMBER 

							FROM         dbo.DATA0006 INNER JOIN
												  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
												  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
												  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
												  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
												  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
							WHERE     (dbo.DATA0038.TTYPE = 2)
										AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
										AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
										AND LEFT(dbo.DATA0034.DEPT_CODE, 4) = 'SDA-'
										AND ((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.AgLack.' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.AgLack.')
											OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%silberleitlack%' AND (dbo.DATA0038.PARAMETER_2 = '' OR dbo.DATA0038.PARAMETER_2 = '.')))	
						) AS tblAbzLackAnzFA
					)
			, 0) AS AnzFAs

		FROM
		(
			SELECT 
				D17_PTR, 
				Abteilung, 
				Anlage, 
				Artikel, 
				Bezeichnung, 
				VerbrauchSOLL,
				CASE 
					WHEN D17_PTR=-1 THEN
						1
					ELSE
						(
							ISNULL((
								SELECT
									SUM(ISNULL(tblDATA0095.QUANTITY, 0)) AS RES
								FROM
								(
									SELECT     LIVE2.dbo.MatRueck_Anlage.ID AS Anlage_PTR, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY AS D17_RKEY, dbo.DATA0017.INV_PART_DESCRIPTION AS ArtBezeichnung,
												dbo.DATA0002.UNIT_CODE AS Lagereinheit, dbo.DATA0017.STOCK_PURCH 
									FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
											  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
											  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
											  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
											  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
											  dbo.DATA0034 ON LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR = dbo.DATA0034.RKEY
									WHERE dbo.DATA0034.DEPT_CODE = @para2
									GROUP BY LIVE2.dbo.MatRueck_Anlage.ID, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY, dbo.DATA0017.INV_PART_DESCRIPTION , dbo.DATA0017.STOCK_PURCH, dbo.DATA0002.UNIT_CODE 
									HAVING LIVE2.dbo.MatRueck_Anlage.ID = CAST(@para3 AS INT)--(LIVE2.dbo.MatRueck_Anlage.Anlage = @Anlage)
								) AS tblAnlageArtikel INNER JOIN --LEFT OUTER JOIN 
								(SELECT QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, MONTH(TRAN_DATE) AS Monat, TRAN_TP 
								--FROM dbo.DATA0095 INNER JOIN  dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY 
								FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
								WHERE dbo.DATA0095.TRAN_TP IN (15, 16) AND dbo.DATA0034.DEPT_CODE = @para2
								AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
								AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  AND dbo.DATA0095.INVT_PTR = tblSilberleitlackArtikel_.D17_PTR ) AS tblDATA0095 
								ON tblAnlageArtikel.D17_RKEY = tblDATA0095.INVT_PTR
								--) AS myTblSub	
							), 0)
							+
							ISNULL((
								SELECT 
									ISNULL((
										(-1)*SUM(QUANTITY) 
										*
										ISNULL((
											SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
											FROM LIVE2.dbo.NachKalk_MatVerteilung
											WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = CAST(@para3 AS INT)
													AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = tblSilberleitlackArtikel_.D17_PTR
										), 1) 
									), 0) AS RES 

								FROM 
									dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
								WHERE 
									dbo.DATA0095.TRAN_TP = 23
									AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
									AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
									AND dbo.DATA0095.INVT_PTR = tblSilberleitlackArtikel_.D17_PTR
							), 0)
						) 
				END AS Verbrauch,
				CASE
					WHEN @para6='1' THEN
						CASE 
							WHEN D17_PTR=-1 THEN
								ISNULL(
										(
											SELECT
												COUNT(WORK_ORDER_NUMBER) AS RES
											FROM
											(
												SELECT DISTINCT
													dbo.DATA0038.RKEY, dbo.DATA0006.WORK_ORDER_NUMBER 

												FROM         dbo.DATA0006 INNER JOIN
																	  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
																	  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
																	  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
																	  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
																	  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
												WHERE     (dbo.DATA0038.TTYPE = 2)
															AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
															AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
															AND LEFT(dbo.DATA0034.DEPT_CODE, 4) = 'SDA-'
															AND ((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.AgLack.' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.AgLack.')
																	OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%silberleitlack%' AND (dbo.DATA0038.PARAMETER_2 = '' OR dbo.DATA0038.PARAMETER_2 = '.')))	
											) AS tblAbzLackAnzFA
										)
								, 0) 
							ELSE
								ISNULL(
										(
											SELECT
												SUM(
													(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
													/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000) 
													--* CASE WHEN dbo.ARTIKELDATEN.LE > 1 THEN 2 ELSE 1 END 
													* CASE WHEN ISNUMERIC(LEFT(LTRIM(dbo.DATA0038.PARAMETER_2), 1))=1 AND RTRIM(LTRIM(dbo.DATA0038.PARAMETER_2))<>'.' THEN CAST(LEFT(LTRIM(dbo.DATA0038.PARAMETER_2), 1) AS INT) ELSE 1 END
													)
												AS RES
											FROM         dbo.DATA0006 INNER JOIN
																  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
																  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
																  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
																  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
																  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
											WHERE     (dbo.DATA0038.TTYPE = 2)
														AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
														AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
														AND LEFT(dbo.DATA0034.DEPT_CODE, 4) = 'SDA-'
														--AND dbo.DATA0038.PARAMETER_2 COLLATE SQL_Latin1_General_CP1_CI_AS LIKE '%' + RTRIM(tblSilberleitlackArtikel_.Bezeichnung) + '%'
														AND ((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.AgLack.' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.AgLack.')
																OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%silberleitlack%' AND (dbo.DATA0038.PARAMETER_2 = '' OR dbo.DATA0038.PARAMETER_2 = '.')))	
										)
								, 0) 
						END
					ELSE
						ISNULL(
								(
									SELECT
										COUNT(WORK_ORDER_NUMBER) AS RES
									FROM
									(
										SELECT DISTINCT
											dbo.DATA0038.RKEY, dbo.DATA0006.WORK_ORDER_NUMBER 

										FROM         dbo.DATA0006 INNER JOIN
															  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
															  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
															  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
															  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
															  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
										WHERE     (dbo.DATA0038.TTYPE = 2)
													AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
													AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
													AND LEFT(dbo.DATA0034.DEPT_CODE, 4) = 'SDA-'
													AND ((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.AgLack.' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.AgLack.')
															OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%silberleitlack%' AND (dbo.DATA0038.PARAMETER_2 = '' OR dbo.DATA0038.PARAMETER_2 = '.')))	
									) AS tblAbzLackAnzFA
								)
						, 0) 
				END AS Durchsatz,
				CASE WHEN @para6='1' THEN 'Ofl-m2' ELSE 'FA' END AS BzgGr,
				VerrPreis,
				LagerEinheit,
				Reihenfolge

			FROM @tblSilberleitlackArtikel AS tblSilberleitlackArtikel_
		) AS tblSilberleitlackAnlage
		ORDER BY Reihenfolge, IstKosten DESC
	END

	IF @Case_ = 'Materialverbrauch_je_Anlage_Stopplack'
	BEGIN

		DECLARE @tblStopplackArtikel table(
											D17_PTR NUMERIC(10, 0),
											Abteilung varchar(250),
											Anlage varchar(250),
											Artikel char(20), 
											Bezeichnung char(40), 
											VerbrauchSOLL DECIMAL(20, 7),
											VerrPreis DECIMAL(20, 7),
											LagerEinheit varchar(5),
											Reihenfolge int
											)

		INSERT @tblStopplackArtikel(D17_PTR, Abteilung, Anlage, Artikel, Bezeichnung, VerbrauchSOLL, VerrPreis, LagerEinheit, Reihenfolge)
		SELECT  DISTINCT dbo.DATA0017.RKEY AS D17_PTR, LIVE2.dbo.MatRueck_Abteilung.Abteilung, 
				LIVE2.dbo.MatRueck_Anlage.Anlage, 
				dbo.DATA0017.INV_PART_NUMBER AS Artikel, 
				dbo.DATA0017.INV_PART_DESCRIPTION AS Bezeichnung, 
				LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, 
				dbo.DATA0017.STD_COST AS VerrPreis,
				dbo.DATA0002.UNIT_CODE AS LagerEinheit,
				1 As Reihenfolge
		FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
					  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
					  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
					  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
					  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
					  dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
					  LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
					  dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
		GROUP BY dbo.DATA0017.RKEY, LIVE2.dbo.MatRueck_Abteilung.Abteilung, LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID,
				dbo.DATA0017.INV_PART_NUMBER, dbo.DATA0017.INV_PART_DESCRIPTION, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STOCK_PURCH, 
				dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE, dbo.DATA0017.CONSIGN_ONHAND_QTY,
				dbo.DATA0017.ACTIVE_FLAG, dbo.DATA0017.STD_COST, LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial
		HAVING      dbo.DATA0017.ACTIVE_FLAG='Y' AND (LIVE2.dbo.MatRueck_Anlage.Anlage LIKE 'Stopplack %') 
					AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(@para6 AS bit)

		IF @para6='1'
		BEGIN
			DECLARE 
				@p_VerbrauchEURStopplack NUMERIC(10, 4),
				@p_DurchsatzStopplackGesamt NUMERIC(10, 4),
				@p_DurchsatzStopplack NUMERIC(10, 4)

			SET @p_VerbrauchEURStopplack = ISNULL((
									SELECT
										SUM(ISNULL(tblDATA0095.QUANTITY, 0) * ISNULL(tblAnlageArtikel.STD_COST, 0)) AS RES
									FROM
									(
										SELECT     LIVE2.dbo.MatRueck_Anlage.ID AS Anlage_PTR, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY AS D17_RKEY, dbo.DATA0017.INV_PART_DESCRIPTION AS ArtBezeichnung,
													dbo.DATA0002.UNIT_CODE AS Lagereinheit, dbo.DATA0017.STOCK_PURCH, dbo.DATA0017.STD_COST
										FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
												  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
												  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
												  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
												  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
												  dbo.DATA0034 ON LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR = dbo.DATA0034.RKEY
										WHERE dbo.DATA0034.DEPT_CODE = 'SIEB-02-01' 
										GROUP BY LIVE2.dbo.MatRueck_Anlage.ID, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY, dbo.DATA0017.INV_PART_DESCRIPTION , dbo.DATA0017.STOCK_PURCH, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STD_COST
										HAVING LIVE2.dbo.MatRueck_Anlage.ID = 63
									) AS tblAnlageArtikel INNER JOIN --LEFT OUTER JOIN 
									(SELECT QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, MONTH(TRAN_DATE) AS Monat, TRAN_TP 
									FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
									WHERE dbo.DATA0095.TRAN_TP IN (15, 16, 23) AND dbo.DATA0034.DEPT_CODE = 'SIEB-02-01' 
									AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
									AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  ) AS tblDATA0095
									ON tblAnlageArtikel.D17_RKEY = tblDATA0095.INVT_PTR
							), 0)
			SET @p_DurchsatzStopplackGesamt = ISNULL(
										(
											SELECT
												COUNT(WORK_ORDER_NUMBER) AS RES
											FROM
											(
												SELECT DISTINCT
													dbo.DATA0038.RKEY, dbo.DATA0006.WORK_ORDER_NUMBER 

												FROM         dbo.DATA0006 INNER JOIN
																	  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
																	  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
																	  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
																	  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
																	  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
												WHERE     (dbo.DATA0038.TTYPE = 2)
															AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
															AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
															AND LEFT(dbo.DATA0034.DEPT_CODE, 4) = 'SDA-'
/*
															AND
																(
																	((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.StLack.' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.StLack.')
																			OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%stoplack%' AND dbo.DATA0038.PARAMETER_2 = ''))
																	OR
																	((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.AgLack.' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.AgLack.')
																			OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%silberleitlack%' AND dbo.DATA0038.PARAMETER_2 = ''))
																	OR
																	((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.KzDruck' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.KzDruck')
																			OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%kd%' AND dbo.DATA0038.PARAMETER_2 = ''))
																	OR
																	(RIGHT(RTRIM(dbo.DATA0038.PARAMETER_2), 3)='.DS'
																			OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%durchsteiger%' AND dbo.DATA0038.PARAMETER_2 = ''))
																	OR
																	((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.Carbon.' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.Carbon.')
																		OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%carbon%' AND dbo.DATA0038.PARAMETER_2 = ''))
																	OR
																	((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.WSLack.' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.WSLack.')
																		OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%wderstandsdruck%' AND dbo.DATA0038.PARAMETER_2 = ''))
																	OR
																	((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.AZLack.' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.AZLack.')
																			OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%abziehlack%' AND dbo.DATA0038.PARAMETER_2 = ''))
																)
*/
											) AS tblAnzFA
										)
								, 0)
			SET @p_DurchsatzStopplack = ISNULL(
												(
													SELECT
														COUNT(WORK_ORDER_NUMBER) AS RES
													FROM
													(
														SELECT DISTINCT
															dbo.DATA0038.RKEY, dbo.DATA0006.WORK_ORDER_NUMBER 

														FROM         dbo.DATA0006 INNER JOIN
																			  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
																			  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
																			  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
																			  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
																			  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
														WHERE     (dbo.DATA0038.TTYPE = 2)
																	AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
																	AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
																	AND LEFT(dbo.DATA0034.DEPT_CODE, 4) = 'SDA-'
																	AND ((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.StLack.' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.StLack.')
																			OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%stoplack%' AND (dbo.DATA0038.PARAMETER_2 = '' OR dbo.DATA0038.PARAMETER_2 = '.')))
													) AS tblAnzFA
												)
										, 0) 

			INSERT @tblStopplackArtikel(D17_PTR, Abteilung, Anlage, Artikel, Bezeichnung, VerbrauchSOLL, VerrPreis, LagerEinheit, Reihenfolge)
			SELECT 0 AS D17_PTR, '' AS Abteilung, '' AS Anlage, '' AS Artikel, 
					'' AS Bezeichnung, 
					0 AS VerbrauchSOLL, 
					0 AS VerrPreis,
					'' AS LagerEinheit,
					2 AS Reihenfolge

			INSERT @tblStopplackArtikel(D17_PTR, Abteilung, Anlage, Artikel, Bezeichnung, VerbrauchSOLL, VerrPreis, LagerEinheit, Reihenfolge)
			SELECT -1 AS D17_PTR, 'Siebdruck' AS Abteilung, 'Stopplack' AS Anlage, 'Umla. Sieb.Allgemein' AS Artikel, 
					'Umlage aus Siebdruck allgemein' AS Bezeichnung, 
					0 AS VerbrauchSOLL, 
					(@p_VerbrauchEURStopplack/@p_DurchsatzStopplackGesamt)*@p_DurchsatzStopplack AS VerrPreis,
					'KG' AS LagerEinheit,
					3 As Reihenfolge

			SET @p_VerbrauchEURStopplack = ISNULL((
									SELECT
										SUM(ISNULL(tblDATA0095.QUANTITY, 0) * ISNULL(tblAnlageArtikel.STD_COST, 0)) AS RES
									FROM
									(
										SELECT     LIVE2.dbo.MatRueck_Anlage.ID AS Anlage_PTR, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY AS D17_RKEY, dbo.DATA0017.INV_PART_DESCRIPTION AS ArtBezeichnung,
													dbo.DATA0002.UNIT_CODE AS Lagereinheit, dbo.DATA0017.STOCK_PURCH, dbo.DATA0017.STD_COST
										FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
												  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
												  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
												  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
												  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
												  dbo.DATA0034 ON LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR = dbo.DATA0034.RKEY
										WHERE dbo.DATA0034.DEPT_CODE = 'SIEB-03-01' 
										GROUP BY LIVE2.dbo.MatRueck_Anlage.ID, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY, dbo.DATA0017.INV_PART_DESCRIPTION , dbo.DATA0017.STOCK_PURCH, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STD_COST
										HAVING LIVE2.dbo.MatRueck_Anlage.ID = 27
									) AS tblAnlageArtikel INNER JOIN --LEFT OUTER JOIN 
									(SELECT QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, MONTH(TRAN_DATE) AS Monat, TRAN_TP 
									FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
									WHERE dbo.DATA0095.TRAN_TP IN (15, 16, 23) AND dbo.DATA0034.DEPT_CODE = 'SIEB-03-01' 
									AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
									AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  ) AS tblDATA0095
									ON tblAnlageArtikel.D17_RKEY = tblDATA0095.INVT_PTR
							), 0)
			INSERT @tblStopplackArtikel(D17_PTR, Abteilung, Anlage, Artikel, Bezeichnung, VerbrauchSOLL, VerrPreis, LagerEinheit, Reihenfolge)
			SELECT -1 AS D17_PTR, 'Siebdruck' AS Abteilung, 'Stopplack' AS Anlage, 'Siebherstellung' AS Artikel, 
					'Umlage aus Siebherstellung' AS Bezeichnung, 
					0 AS VerbrauchSOLL, 
					(@p_VerbrauchEURStopplack/@p_DurchsatzStopplackGesamt)*@p_DurchsatzStopplack AS VerrPreis,
					'KG' AS LagerEinheit,
					4 As Reihenfolge
		END


		SELECT
			Abteilung, 
			Anlage, 
			Artikel, 
			Bezeichnung, 
			Verbrauch,
			Durchsatz,
			Verbrauch*VerrPreis AS abs_Kosten,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch*VerrPreis)/Durchsatz 
				ELSE
					0
			END AS rel_Kosten,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch*VerrPreis)/Durchsatz*100 
				ELSE
					0
			END AS KS_IstKosten,
			VerrPreis*VerbrauchSOLL*100 AS SollKosten,
			CASE
				WHEN (VerrPreis*VerbrauchSOLL*100)>0 AND Durchsatz>0 THEN
					(((Verbrauch*VerrPreis)/Durchsatz*100)-(VerrPreis*VerbrauchSOLL*100.000000))/(VerrPreis*VerbrauchSOLL*100.000000) 
				ELSE
					0
			END AS Abweichung,
			(Verbrauch*VerrPreis)-(VerrPreis*Durchsatz*VerbrauchSOLL) AS MehrMinderKosten,
			(Verbrauch*VerrPreis) AS IstKosten,
			VerrPreis,
			CAST(VerbrauchSOLL*100.000000 AS DECIMAL(20, 7)) AS SollV_100,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch/Durchsatz)*100.000000 
				ELSE
					0
			END AS IstV_100,
			BzgGr,
			LagerEinheit,
			ISNULL(
					(
						SELECT
							COUNT(WORK_ORDER_NUMBER) AS RES
						FROM
						(
							SELECT DISTINCT
								dbo.DATA0038.RKEY, dbo.DATA0006.WORK_ORDER_NUMBER 

							FROM         dbo.DATA0006 INNER JOIN
												  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
												  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
												  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
												  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
												  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
							WHERE     (dbo.DATA0038.TTYPE = 2)
										AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
										AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
										AND LEFT(dbo.DATA0034.DEPT_CODE, 4) = 'SDA-'
										AND ((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.StLack.' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.StLack.')
												OR ((dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%stoplack%' OR dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%stopplack%') AND (dbo.DATA0038.PARAMETER_2 = '' OR dbo.DATA0038.PARAMETER_2 = '.')))
						) AS tblAbzLackAnzFA
					)
			, 0) AS AnzFAs

		FROM
		(
			SELECT 
				D17_PTR, 
				Abteilung, 
				Anlage, 
				Artikel, 
				Bezeichnung, 
				VerbrauchSOLL,
				CASE 
					WHEN D17_PTR=-1 THEN
						1
					ELSE
						(
							ISNULL((
								SELECT
									SUM(ISNULL(tblDATA0095.QUANTITY, 0)) AS RES
								FROM
								(
									SELECT     LIVE2.dbo.MatRueck_Anlage.ID AS Anlage_PTR, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY AS D17_RKEY, dbo.DATA0017.INV_PART_DESCRIPTION AS ArtBezeichnung,
												dbo.DATA0002.UNIT_CODE AS Lagereinheit, dbo.DATA0017.STOCK_PURCH 
									FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
											  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
											  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
											  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
											  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
											  dbo.DATA0034 ON LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR = dbo.DATA0034.RKEY
									WHERE dbo.DATA0034.DEPT_CODE = @para2
									GROUP BY LIVE2.dbo.MatRueck_Anlage.ID, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY, dbo.DATA0017.INV_PART_DESCRIPTION , dbo.DATA0017.STOCK_PURCH, dbo.DATA0002.UNIT_CODE 
									HAVING LIVE2.dbo.MatRueck_Anlage.ID = CAST(@para3 AS INT)--(LIVE2.dbo.MatRueck_Anlage.Anlage = @Anlage)
								) AS tblAnlageArtikel INNER JOIN --LEFT OUTER JOIN 
								(SELECT QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, MONTH(TRAN_DATE) AS Monat, TRAN_TP 
								--FROM dbo.DATA0095 INNER JOIN  dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY 
								FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
								WHERE dbo.DATA0095.TRAN_TP IN (15, 16) AND dbo.DATA0034.DEPT_CODE = @para2
								AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
								AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  AND dbo.DATA0095.INVT_PTR = tblStopplackArtikel_.D17_PTR ) AS tblDATA0095 
								ON tblAnlageArtikel.D17_RKEY = tblDATA0095.INVT_PTR
								--) AS myTblSub	
							), 0)
							+
							ISNULL((
								SELECT 
									ISNULL((
										(-1)*SUM(QUANTITY) 
										*
										ISNULL((
											SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
											FROM LIVE2.dbo.NachKalk_MatVerteilung
											WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = CAST(@para3 AS INT)
													AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = tblStopplackArtikel_.D17_PTR
										), 1) 
									), 0) AS RES 

								FROM 
									dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
								WHERE 
									dbo.DATA0095.TRAN_TP = 23
									AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
									AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
									AND dbo.DATA0095.INVT_PTR = tblStopplackArtikel_.D17_PTR
							), 0)
						) 
				END AS Verbrauch,
				CASE
					WHEN @para6='1' THEN
						CASE 
							WHEN D17_PTR=-1 THEN
								ISNULL(
										(
											SELECT
												COUNT(WORK_ORDER_NUMBER) AS RES
											FROM
											(
												SELECT DISTINCT
													dbo.DATA0038.RKEY, dbo.DATA0006.WORK_ORDER_NUMBER 

												FROM         dbo.DATA0006 INNER JOIN
																	  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
																	  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
																	  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
																	  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
																	  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
												WHERE     (dbo.DATA0038.TTYPE = 2)
															AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
															AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
															AND LEFT(dbo.DATA0034.DEPT_CODE, 4) = 'SDA-'
															AND ((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.StLack.' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.StLack.')
																	OR ((dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%stoplack%' OR dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%stopplack%') AND (dbo.DATA0038.PARAMETER_2 = '' OR dbo.DATA0038.PARAMETER_2 = '.')))
											) AS tblAbzLackAnzFA
										)
								, 0) 
							ELSE
								ISNULL(
										(
											SELECT
												SUM(
													(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
													/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000) 
													--* CASE WHEN dbo.ARTIKELDATEN.LE > 1 THEN 2 ELSE 1 END 
													* CASE WHEN ISNUMERIC(LEFT(LTRIM(dbo.DATA0038.PARAMETER_2), 1))=1 AND RTRIM(LTRIM(dbo.DATA0038.PARAMETER_2))<>'.' THEN CAST(LEFT(LTRIM(dbo.DATA0038.PARAMETER_2), 1) AS INT) ELSE 1 END
													)
												AS RES
											FROM         dbo.DATA0006 INNER JOIN
																  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
																  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
																  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
																  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
																  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
											WHERE     (dbo.DATA0038.TTYPE = 2)
														AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
														AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
														AND LEFT(dbo.DATA0034.DEPT_CODE, 4) = 'SDA-'
														AND dbo.DATA0038.PARAMETER_2 COLLATE SQL_Latin1_General_CP1_CI_AS LIKE '%' + RTRIM(tblStopplackArtikel_.Bezeichnung) + '%'
														AND ((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.StLack.' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.StLack.')
																OR ((dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%stoplack%' OR dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%stopplack%') AND (dbo.DATA0038.PARAMETER_2 = '' OR dbo.DATA0038.PARAMETER_2 = '.')))
										)
								, 0) 
						END
					ELSE
						ISNULL(
								(
									SELECT
										COUNT(WORK_ORDER_NUMBER) AS RES
									FROM
									(
										SELECT DISTINCT
											dbo.DATA0038.RKEY, dbo.DATA0006.WORK_ORDER_NUMBER 

										FROM         dbo.DATA0006 INNER JOIN
															  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
															  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
															  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
															  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
															  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
										WHERE     (dbo.DATA0038.TTYPE = 2)
													AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
													AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
													AND LEFT(dbo.DATA0034.DEPT_CODE, 4) = 'SDA-'
													AND ((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.StLack.' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.StLack.')
															OR ((dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%stoplack%' OR dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%stopplack%') AND (dbo.DATA0038.PARAMETER_2 = '' OR dbo.DATA0038.PARAMETER_2 = '.')))
									) AS tblAbzLackAnzFA
								)
						, 0) 
				END AS Durchsatz,
				CASE WHEN @para6='1' THEN 'Ofl-m2' ELSE 'FA' END AS BzgGr,
				VerrPreis,
				LagerEinheit,
				Reihenfolge

			FROM @tblStopplackArtikel AS tblStopplackArtikel_
		) AS tblStopplackAnlage
		ORDER BY Reihenfolge, IstKosten DESC
	END

	IF @Case_ = 'Materialverbrauch_je_Anlage_Siebherstellung'
	BEGIN

		DECLARE @tblSiebherstellungArtikel table(
											D17_PTR NUMERIC(10, 0),
											Abteilung varchar(250),
											Anlage varchar(250),
											Artikel char(20), 
											Bezeichnung char(40), 
											VerbrauchSOLL DECIMAL(20, 7),
											VerrPreis DECIMAL(20, 7),
											LagerEinheit varchar(5)
											)

		INSERT @tblSiebherstellungArtikel(D17_PTR, Abteilung, Anlage, Artikel, Bezeichnung, VerbrauchSOLL, VerrPreis, LagerEinheit)
		SELECT  DISTINCT dbo.DATA0017.RKEY AS D17_PTR, LIVE2.dbo.MatRueck_Abteilung.Abteilung, 
				LIVE2.dbo.MatRueck_Anlage.Anlage, 
				dbo.DATA0017.INV_PART_NUMBER AS Artikel, 
				dbo.DATA0017.INV_PART_DESCRIPTION AS Bezeichnung, 
				LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, 
				dbo.DATA0017.STD_COST AS VerrPreis,
				dbo.DATA0002.UNIT_CODE AS LagerEinheit
		FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
					  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
					  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
					  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
					  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
					  dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
					  LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
					  dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
		GROUP BY dbo.DATA0017.RKEY, LIVE2.dbo.MatRueck_Abteilung.Abteilung, LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID,
				dbo.DATA0017.INV_PART_NUMBER, dbo.DATA0017.INV_PART_DESCRIPTION, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STOCK_PURCH, 
				dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE, dbo.DATA0017.CONSIGN_ONHAND_QTY,
				dbo.DATA0017.ACTIVE_FLAG, dbo.DATA0017.STD_COST, LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial
		HAVING      dbo.DATA0017.ACTIVE_FLAG='Y' AND (LIVE2.dbo.MatRueck_Anlage.Anlage = 'Siebherstellung') 
					AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(@para6 AS bit)


		SELECT
			Abteilung, 
			Anlage, 
			Artikel, 
			Bezeichnung, 
			Verbrauch,
			Durchsatz,
			Verbrauch*VerrPreis AS abs_Kosten,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch*VerrPreis)/Durchsatz 
				ELSE
					0
			END AS rel_Kosten,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch*VerrPreis)/Durchsatz*100 
				ELSE
					0
			END AS KS_IstKosten,
			VerrPreis*VerbrauchSOLL*100 AS SollKosten,
			CASE
				WHEN (VerrPreis*VerbrauchSOLL*100)>0 AND Durchsatz>0 THEN
					(((Verbrauch*VerrPreis)/Durchsatz*100)-(VerrPreis*VerbrauchSOLL*100.000000))/(VerrPreis*VerbrauchSOLL*100.000000) 
				ELSE
					0
			END AS Abweichung,
			(Verbrauch*VerrPreis)-(VerrPreis*Durchsatz*VerbrauchSOLL) AS MehrMinderKosten,
			(Verbrauch*VerrPreis) AS IstKosten,
			VerrPreis,
			CAST(VerbrauchSOLL*100.000000 AS DECIMAL(20, 7)) AS SollV_100,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch/Durchsatz)*100.000000 
				ELSE
					0
			END AS IstV_100,
			BzgGr,
			LagerEinheit,
			0 As AnzFAs

		FROM
		(
			SELECT 
				D17_PTR, 
				Abteilung, 
				Anlage, 
				Artikel, 
				Bezeichnung, 
				VerbrauchSOLL,
				(
					ISNULL((
						SELECT
							SUM(ISNULL(tblDATA0095.QUANTITY, 0)) AS RES
						FROM
						(
							SELECT     LIVE2.dbo.MatRueck_Anlage.ID AS Anlage_PTR, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY AS D17_RKEY, dbo.DATA0017.INV_PART_DESCRIPTION AS ArtBezeichnung,
										dbo.DATA0002.UNIT_CODE AS Lagereinheit, dbo.DATA0017.STOCK_PURCH 
							FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
									  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
									  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
									  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
									  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
									  dbo.DATA0034 ON LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR = dbo.DATA0034.RKEY
							WHERE dbo.DATA0034.DEPT_CODE = @para2
							GROUP BY LIVE2.dbo.MatRueck_Anlage.ID, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY, dbo.DATA0017.INV_PART_DESCRIPTION , dbo.DATA0017.STOCK_PURCH, dbo.DATA0002.UNIT_CODE 
							HAVING LIVE2.dbo.MatRueck_Anlage.ID = CAST(@para3 AS INT)--(LIVE2.dbo.MatRueck_Anlage.Anlage = @Anlage)
						) AS tblAnlageArtikel INNER JOIN --LEFT OUTER JOIN 
						(SELECT QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, MONTH(TRAN_DATE) AS Monat, TRAN_TP 
						--FROM dbo.DATA0095 INNER JOIN  dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY 
						FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
						WHERE dbo.DATA0095.TRAN_TP IN (15, 16) AND dbo.DATA0034.DEPT_CODE = @para2
						AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
						AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  AND dbo.DATA0095.INVT_PTR = tblSiebherstellungArtikel_.D17_PTR ) AS tblDATA0095 
						ON tblAnlageArtikel.D17_RKEY = tblDATA0095.INVT_PTR
						--) AS myTblSub	
					), 0)
					+
					ISNULL((
						SELECT 
							ISNULL((
								(-1)*SUM(QUANTITY) 
								*
								ISNULL((
									SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
									FROM LIVE2.dbo.NachKalk_MatVerteilung
									WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = CAST(@para3 AS INT)
											AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = tblSiebherstellungArtikel_.D17_PTR
								), 1) 
							), 0) AS RES 

						FROM 
							dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
						WHERE 
							dbo.DATA0095.TRAN_TP = 23
							AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
							AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
							AND dbo.DATA0095.INVT_PTR = tblSiebherstellungArtikel_.D17_PTR
					), 0)
				) AS Verbrauch,
				CASE
					WHEN @para6='1' THEN
/*
						ISNULL(
								(
									SELECT
										SUM(
											(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
											/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000) * CASE WHEN dbo.ARTIKELDATEN.LE > 1 THEN 2 ELSE 1 END 
											)
										AS RES
									FROM         dbo.DATA0006 INNER JOIN
														  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
														  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
														  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
														  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
														  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
									WHERE     (dbo.DATA0038.TTYPE = 2)
												AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
												AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
												AND LEFT(dbo.DATA0034.DEPT_CODE, 4) = 'SDA-'
								)
						, 0) 
*/
						ISNULL(
								(
									SELECT
										COUNT(WORK_ORDER_NUMBER) AS RES
									FROM
									(
										SELECT DISTINCT
											dbo.DATA0038.RKEY, dbo.DATA0006.WORK_ORDER_NUMBER 

										FROM         dbo.DATA0006 INNER JOIN
															  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
															  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
															  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
															  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
															  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
										WHERE     (dbo.DATA0038.TTYPE = 2)
													AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
													AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
													AND LEFT(dbo.DATA0034.DEPT_CODE, 4) = 'SDA-'
/*
													AND
														(
															((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.StLack.' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.StLack.')
																	OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%stoplack%' AND dbo.DATA0038.PARAMETER_2 = ''))
															OR
															((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.AgLack.' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.AgLack.')
																	OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%silberleitlack%' AND dbo.DATA0038.PARAMETER_2 = ''))
															OR
															((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.KzDruck' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.KzDruck')
																	OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%kd%' AND dbo.DATA0038.PARAMETER_2 = ''))
															OR
															(RIGHT(RTRIM(dbo.DATA0038.PARAMETER_2), 3)='.DS'
																	OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%durchsteiger%' AND dbo.DATA0038.PARAMETER_2 = ''))
															OR
															((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.Carbon.' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.Carbon.')
																OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%carbon%' AND dbo.DATA0038.PARAMETER_2 = ''))
															OR
															((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.WSLack.' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.WSLack.')
																OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%wderstandsdruck%' AND dbo.DATA0038.PARAMETER_2 = ''))
															OR
															((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.AZLack.' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.AZLack.')
																	OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%abziehlack%' AND dbo.DATA0038.PARAMETER_2 = ''))
														)
*/
									) AS tblAbzLackAnzFA
								)
						, 0) 
					ELSE
						ISNULL(
								(
									SELECT
										COUNT(WORK_ORDER_NUMBER) AS RES
									FROM
									(
										SELECT DISTINCT
											dbo.DATA0038.RKEY, dbo.DATA0006.WORK_ORDER_NUMBER 

										FROM         dbo.DATA0006 INNER JOIN
															  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
															  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
															  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
															  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
															  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
										WHERE     (dbo.DATA0038.TTYPE = 2)
													AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
													AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
													AND LEFT(dbo.DATA0034.DEPT_CODE, 4) = 'SDA-'
/*
													AND
														(
															((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.StLack.' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.StLack.')
																	OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%stoplack%' AND dbo.DATA0038.PARAMETER_2 = ''))
															OR
															((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.AgLack.' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.AgLack.')
																	OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%silberleitlack%' AND dbo.DATA0038.PARAMETER_2 = ''))
															OR
															((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.KzDruck' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.KzDruck')
																	OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%kd%' AND dbo.DATA0038.PARAMETER_2 = ''))
															OR
															(RIGHT(RTRIM(dbo.DATA0038.PARAMETER_2), 3)='.DS'
																	OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%durchsteiger%' AND dbo.DATA0038.PARAMETER_2 = ''))
															OR
															((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.Carbon.' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.Carbon.')
																OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%carbon%' AND dbo.DATA0038.PARAMETER_2 = ''))
															OR
															((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.WSLack.' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.WSLack.')
																OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%wderstandsdruck%' AND dbo.DATA0038.PARAMETER_2 = ''))
															OR
															((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.AZLack.' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.AZLack.')
																	OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%abziehlack%' AND dbo.DATA0038.PARAMETER_2 = ''))
														)
*/
									) AS tblAbzLackAnzFA
								)
						, 0) 
				END AS Durchsatz,
				'FA' AS BzgGr,
				VerrPreis,
				LagerEinheit

			FROM @tblSiebherstellungArtikel AS tblSiebherstellungArtikel_
		) AS tblSiebherstellungAnlage
		ORDER BY IstKosten DESC
	END

	IF @Case_ = 'Materialverbrauch_je_Anlage_SiebdruckAllgemein'
	BEGIN

		DECLARE @tblSiebdruckAllgemeinArtikel table(
											D17_PTR NUMERIC(10, 0),
											Abteilung varchar(250),
											Anlage varchar(250),
											Artikel char(20), 
											Bezeichnung char(40), 
											VerbrauchSOLL DECIMAL(20, 7),
											VerrPreis DECIMAL(20, 7),
											LagerEinheit varchar(5)
											)

		INSERT @tblSiebdruckAllgemeinArtikel(D17_PTR, Abteilung, Anlage, Artikel, Bezeichnung, VerbrauchSOLL, VerrPreis, LagerEinheit)
		SELECT  DISTINCT dbo.DATA0017.RKEY AS D17_PTR, LIVE2.dbo.MatRueck_Abteilung.Abteilung, 
				LIVE2.dbo.MatRueck_Anlage.Anlage, 
				dbo.DATA0017.INV_PART_NUMBER AS Artikel, 
				dbo.DATA0017.INV_PART_DESCRIPTION AS Bezeichnung, 
				LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, 
				dbo.DATA0017.STD_COST AS VerrPreis,
				dbo.DATA0002.UNIT_CODE AS LagerEinheit
		FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
					  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
					  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
					  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
					  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
					  dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
					  LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
					  dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
		GROUP BY dbo.DATA0017.RKEY, LIVE2.dbo.MatRueck_Abteilung.Abteilung, LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID,
				dbo.DATA0017.INV_PART_NUMBER, dbo.DATA0017.INV_PART_DESCRIPTION, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STOCK_PURCH, 
				dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE, dbo.DATA0017.CONSIGN_ONHAND_QTY,
				dbo.DATA0017.ACTIVE_FLAG, dbo.DATA0017.STD_COST, LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial
		HAVING      dbo.DATA0017.ACTIVE_FLAG='Y' AND (LIVE2.dbo.MatRueck_Anlage.Anlage = 'Siebdruck allgemein') 
					AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(@para6 AS bit)


		SELECT
			Abteilung, 
			Anlage, 
			Artikel, 
			Bezeichnung, 
			Verbrauch,
			Durchsatz,
			Verbrauch*VerrPreis AS abs_Kosten,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch*VerrPreis)/Durchsatz 
				ELSE
					0
			END AS rel_Kosten,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch*VerrPreis)/Durchsatz*100 
				ELSE
					0
			END AS KS_IstKosten,
			VerrPreis*VerbrauchSOLL*100 AS SollKosten,
			CASE
				WHEN (VerrPreis*VerbrauchSOLL*100)>0 AND Durchsatz>0 THEN
					(((Verbrauch*VerrPreis)/Durchsatz*100)-(VerrPreis*VerbrauchSOLL*100.000000))/(VerrPreis*VerbrauchSOLL*100.000000) 
				ELSE
					0
			END AS Abweichung,
			(Verbrauch*VerrPreis)-(VerrPreis*Durchsatz*VerbrauchSOLL) AS MehrMinderKosten,
			(Verbrauch*VerrPreis) AS IstKosten,
			VerrPreis,
			CAST(VerbrauchSOLL*100.000000 AS DECIMAL(20, 7)) AS SollV_100,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch/Durchsatz)*100.000000 
				ELSE
					0
			END AS IstV_100,
			BzgGr,
			LagerEinheit,
			0 As AnzFAs

		FROM
		(
			SELECT 
				D17_PTR, 
				Abteilung, 
				Anlage, 
				Artikel, 
				Bezeichnung, 
				VerbrauchSOLL,
				(
					ISNULL((
						SELECT
							SUM(ISNULL(tblDATA0095.QUANTITY, 0)) AS RES
						FROM
						(
							SELECT     LIVE2.dbo.MatRueck_Anlage.ID AS Anlage_PTR, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY AS D17_RKEY, dbo.DATA0017.INV_PART_DESCRIPTION AS ArtBezeichnung,
										dbo.DATA0002.UNIT_CODE AS Lagereinheit, dbo.DATA0017.STOCK_PURCH 
							FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
									  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
									  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
									  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
									  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
									  dbo.DATA0034 ON LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR = dbo.DATA0034.RKEY
							WHERE dbo.DATA0034.DEPT_CODE = @para2
							GROUP BY LIVE2.dbo.MatRueck_Anlage.ID, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY, dbo.DATA0017.INV_PART_DESCRIPTION , dbo.DATA0017.STOCK_PURCH, dbo.DATA0002.UNIT_CODE 
							HAVING LIVE2.dbo.MatRueck_Anlage.ID = CAST(@para3 AS INT)--(LIVE2.dbo.MatRueck_Anlage.Anlage = @Anlage)
						) AS tblAnlageArtikel INNER JOIN --LEFT OUTER JOIN 
						(SELECT QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, MONTH(TRAN_DATE) AS Monat, TRAN_TP 
						--FROM dbo.DATA0095 INNER JOIN  dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY 
						FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
						WHERE dbo.DATA0095.TRAN_TP IN (15, 16) AND dbo.DATA0034.DEPT_CODE = @para2
						AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
						AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  AND dbo.DATA0095.INVT_PTR = tblSiebdruckAllgemeinArtikel_.D17_PTR ) AS tblDATA0095 
						ON tblAnlageArtikel.D17_RKEY = tblDATA0095.INVT_PTR
						--) AS myTblSub	
					), 0)
					+
					ISNULL((
						SELECT 
							ISNULL((
								(-1)*SUM(QUANTITY) 
								*
								ISNULL((
									SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
									FROM LIVE2.dbo.NachKalk_MatVerteilung
									WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = CAST(@para3 AS INT)
											AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = tblSiebdruckAllgemeinArtikel_.D17_PTR
								), 1) 
							), 0) AS RES 

						FROM 
							dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
						WHERE 
							dbo.DATA0095.TRAN_TP = 23
							AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
							AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
							AND dbo.DATA0095.INVT_PTR = tblSiebdruckAllgemeinArtikel_.D17_PTR
					), 0)
				) AS Verbrauch,
				CASE
					WHEN @para6='1' THEN
/*
						ISNULL(
								(
									SELECT
										SUM(
											(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
											/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000) * CASE WHEN dbo.ARTIKELDATEN.LE > 1 THEN 2 ELSE 1 END 
											)
										AS RES
									FROM         dbo.DATA0006 INNER JOIN
														  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
														  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
														  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
														  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
														  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
									WHERE     (dbo.DATA0038.TTYPE = 2)
												AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
												AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
												AND LEFT(dbo.DATA0034.DEPT_CODE, 4) = 'SDA-'
								)
						, 0) 
*/
						ISNULL(
								(
									SELECT
										COUNT(WORK_ORDER_NUMBER) AS RES
									FROM
									(
										SELECT DISTINCT
											dbo.DATA0038.RKEY, dbo.DATA0006.WORK_ORDER_NUMBER 

										FROM         dbo.DATA0006 INNER JOIN
															  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
															  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
															  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
															  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
															  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
										WHERE     (dbo.DATA0038.TTYPE = 2)
													AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
													AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
													AND LEFT(dbo.DATA0034.DEPT_CODE, 4) = 'SDA-'
/*
													AND
														(
															((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.StLack.' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.StLack.')
																	OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%stoplack%' AND dbo.DATA0038.PARAMETER_2 = ''))
															OR
															((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.AgLack.' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.AgLack.')
																	OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%silberleitlack%' AND dbo.DATA0038.PARAMETER_2 = ''))
															OR
															((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.KzDruck' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.KzDruck')
																	OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%kd%' AND dbo.DATA0038.PARAMETER_2 = ''))
															OR
															(RIGHT(RTRIM(dbo.DATA0038.PARAMETER_2), 3)='.DS'
																	OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%durchsteiger%' AND dbo.DATA0038.PARAMETER_2 = ''))
															OR
															((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.Carbon.' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.Carbon.')
																OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%carbon%' AND dbo.DATA0038.PARAMETER_2 = ''))
															OR
															((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.WSLack.' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.WSLack.')
																OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%wderstandsdruck%' AND dbo.DATA0038.PARAMETER_2 = ''))
															OR
															((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.AZLack.' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.AZLack.')
																	OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%abziehlack%' AND dbo.DATA0038.PARAMETER_2 = ''))
														)
*/
									) AS tblAbzLackAnzFA
								)
						, 0) 
					ELSE
						ISNULL(
								(
									SELECT
										COUNT(WORK_ORDER_NUMBER) AS RES
									FROM
									(
										SELECT DISTINCT
											dbo.DATA0038.RKEY, dbo.DATA0006.WORK_ORDER_NUMBER 

										FROM         dbo.DATA0006 INNER JOIN
															  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
															  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
															  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
															  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
															  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
										WHERE     (dbo.DATA0038.TTYPE = 2)
													AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
													AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
													AND LEFT(dbo.DATA0034.DEPT_CODE, 4) = 'SDA-'
/*
													AND
														(
															((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.StLack.' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.StLack.')
																	OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%stoplack%' AND dbo.DATA0038.PARAMETER_2 = ''))
															OR
															((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.AgLack.' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.AgLack.')
																	OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%silberleitlack%' AND dbo.DATA0038.PARAMETER_2 = ''))
															OR
															((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.KzDruck' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.KzDruck')
																	OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%kd%' AND dbo.DATA0038.PARAMETER_2 = ''))
															OR
															(RIGHT(RTRIM(dbo.DATA0038.PARAMETER_2), 3)='.DS'
																	OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%durchsteiger%' AND dbo.DATA0038.PARAMETER_2 = ''))
															OR
															((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.Carbon.' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.Carbon.')
																OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%carbon%' AND dbo.DATA0038.PARAMETER_2 = ''))
															OR
															((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.WSLack.' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.WSLack.')
																OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%wderstandsdruck%' AND dbo.DATA0038.PARAMETER_2 = ''))
															OR
															((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.AZLack.' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.AZLack.')
																	OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%abziehlack%' AND dbo.DATA0038.PARAMETER_2 = ''))
														)
*/
									) AS tblAbzLackAnzFA
								)
						, 0) 
				END AS Durchsatz,
				'FA' AS BzgGr,
				VerrPreis,
				LagerEinheit

			FROM @tblSiebdruckAllgemeinArtikel AS tblSiebdruckAllgemeinArtikel_
		) AS tblSiebdruckAllgemeinAnlage
		ORDER BY IstKosten DESC
	END
/*
	IF @Case_ = 'AbwasserVerbrauch'
	BEGIN
		--DECLARE 
		--@para4 varchar(255),
		--@para5 varchar(255),
		--@para6 varchar(255)
		--SET @para4 = '01.01.2015'	--Datum Von
		--SET @para5 = '31.07.2015'	--Datum Bis
		--SET @para6 = '1'

		DECLARE @tblAnlageArtikelAbwasserVerbrauch table(Monat INT, D17_PTR NUMERIC(10, 0), VerrPreis DECIMAL(20, 7))

		INSERT @tblAnlageArtikelAbwasserVerbrauch(Monat, D17_PTR, VerrPreis)
		SELECT  DISTINCT 1, dbo.DATA0017.RKEY, dbo.DATA0017.STD_COST AS VerrPreis
		FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
					  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
					  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
					  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
					  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
					  dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
					  LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
					  dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
		GROUP BY dbo.DATA0017.RKEY, LIVE2.dbo.MatRueck_Abteilung.Abteilung, LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID,
				dbo.DATA0017.INV_PART_NUMBER, dbo.DATA0017.INV_PART_DESCRIPTION, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STOCK_PURCH, 
				dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE, dbo.DATA0017.CONSIGN_ONHAND_QTY,
				dbo.DATA0017.ACTIVE_FLAG, dbo.DATA0017.STD_COST, LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial
		HAVING      dbo.DATA0017.ACTIVE_FLAG='Y' AND (LIVE2.dbo.MatRueck_Anlage.ID IN (50, 51 )) AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(1 AS bit)
		UNION ALL
		SELECT  DISTINCT 2, dbo.DATA0017.RKEY, dbo.DATA0017.STD_COST AS VerrPreis
		FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
					  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
					  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
					  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
					  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
					  dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
					  LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
					  dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
		GROUP BY dbo.DATA0017.RKEY, LIVE2.dbo.MatRueck_Abteilung.Abteilung, LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID,
				dbo.DATA0017.INV_PART_NUMBER, dbo.DATA0017.INV_PART_DESCRIPTION, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STOCK_PURCH, 
				dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE, dbo.DATA0017.CONSIGN_ONHAND_QTY,
				dbo.DATA0017.ACTIVE_FLAG, dbo.DATA0017.STD_COST, LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial
		HAVING      dbo.DATA0017.ACTIVE_FLAG='Y' AND (LIVE2.dbo.MatRueck_Anlage.ID IN (50, 51 )) AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(1 AS bit)
		UNION ALL
		SELECT  DISTINCT 3, dbo.DATA0017.RKEY, dbo.DATA0017.STD_COST AS VerrPreis
		FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
					  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
					  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
					  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
					  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
					  dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
					  LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
					  dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
		GROUP BY dbo.DATA0017.RKEY, LIVE2.dbo.MatRueck_Abteilung.Abteilung, LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID,
				dbo.DATA0017.INV_PART_NUMBER, dbo.DATA0017.INV_PART_DESCRIPTION, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STOCK_PURCH, 
				dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE, dbo.DATA0017.CONSIGN_ONHAND_QTY,
				dbo.DATA0017.ACTIVE_FLAG, dbo.DATA0017.STD_COST, LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial
		HAVING      dbo.DATA0017.ACTIVE_FLAG='Y' AND (LIVE2.dbo.MatRueck_Anlage.ID IN (50, 51 )) AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(1 AS bit)
		UNION ALL
		SELECT  DISTINCT 4, dbo.DATA0017.RKEY, dbo.DATA0017.STD_COST AS VerrPreis
		FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
					  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
					  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
					  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
					  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
					  dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
					  LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
					  dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
		GROUP BY dbo.DATA0017.RKEY, LIVE2.dbo.MatRueck_Abteilung.Abteilung, LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID,
				dbo.DATA0017.INV_PART_NUMBER, dbo.DATA0017.INV_PART_DESCRIPTION, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STOCK_PURCH, 
				dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE, dbo.DATA0017.CONSIGN_ONHAND_QTY,
				dbo.DATA0017.ACTIVE_FLAG, dbo.DATA0017.STD_COST, LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial
		HAVING      dbo.DATA0017.ACTIVE_FLAG='Y' AND (LIVE2.dbo.MatRueck_Anlage.ID IN (50, 51 )) AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(1 AS bit)
		UNION ALL
		SELECT  DISTINCT 5, dbo.DATA0017.RKEY, dbo.DATA0017.STD_COST AS VerrPreis
		FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
					  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
					  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
					  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
					  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
					  dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
					  LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
					  dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
		GROUP BY dbo.DATA0017.RKEY, LIVE2.dbo.MatRueck_Abteilung.Abteilung, LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID,
				dbo.DATA0017.INV_PART_NUMBER, dbo.DATA0017.INV_PART_DESCRIPTION, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STOCK_PURCH, 
				dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE, dbo.DATA0017.CONSIGN_ONHAND_QTY,
				dbo.DATA0017.ACTIVE_FLAG, dbo.DATA0017.STD_COST, LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial
		HAVING      dbo.DATA0017.ACTIVE_FLAG='Y' AND (LIVE2.dbo.MatRueck_Anlage.ID IN (50, 51 )) AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(1 AS bit)
		UNION ALL
		SELECT  DISTINCT 6, dbo.DATA0017.RKEY, dbo.DATA0017.STD_COST AS VerrPreis
		FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
					  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
					  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
					  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
					  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
					  dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
					  LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
					  dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
		GROUP BY dbo.DATA0017.RKEY, LIVE2.dbo.MatRueck_Abteilung.Abteilung, LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID,
				dbo.DATA0017.INV_PART_NUMBER, dbo.DATA0017.INV_PART_DESCRIPTION, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STOCK_PURCH, 
				dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE, dbo.DATA0017.CONSIGN_ONHAND_QTY,
				dbo.DATA0017.ACTIVE_FLAG, dbo.DATA0017.STD_COST, LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial
		HAVING      dbo.DATA0017.ACTIVE_FLAG='Y' AND (LIVE2.dbo.MatRueck_Anlage.ID IN (50, 51 )) AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(1 AS bit)
		UNION ALL
		SELECT  DISTINCT 7, dbo.DATA0017.RKEY, dbo.DATA0017.STD_COST AS VerrPreis
		FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
					  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
					  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
					  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
					  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
					  dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
					  LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
					  dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
		GROUP BY dbo.DATA0017.RKEY, LIVE2.dbo.MatRueck_Abteilung.Abteilung, LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID,
				dbo.DATA0017.INV_PART_NUMBER, dbo.DATA0017.INV_PART_DESCRIPTION, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STOCK_PURCH, 
				dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE, dbo.DATA0017.CONSIGN_ONHAND_QTY,
				dbo.DATA0017.ACTIVE_FLAG, dbo.DATA0017.STD_COST, LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial
		HAVING      dbo.DATA0017.ACTIVE_FLAG='Y' AND (LIVE2.dbo.MatRueck_Anlage.ID IN (50, 51 )) AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(1 AS bit)
		UNION ALL
		SELECT  DISTINCT 8, dbo.DATA0017.RKEY, dbo.DATA0017.STD_COST AS VerrPreis
		FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
					  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
					  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
					  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
					  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
					  dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
					  LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
					  dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
		GROUP BY dbo.DATA0017.RKEY, LIVE2.dbo.MatRueck_Abteilung.Abteilung, LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID,
				dbo.DATA0017.INV_PART_NUMBER, dbo.DATA0017.INV_PART_DESCRIPTION, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STOCK_PURCH, 
				dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE, dbo.DATA0017.CONSIGN_ONHAND_QTY,
				dbo.DATA0017.ACTIVE_FLAG, dbo.DATA0017.STD_COST, LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial
		HAVING      dbo.DATA0017.ACTIVE_FLAG='Y' AND (LIVE2.dbo.MatRueck_Anlage.ID IN (50, 51 )) AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(1 AS bit)
		UNION ALL
		SELECT  DISTINCT 9, dbo.DATA0017.RKEY, dbo.DATA0017.STD_COST AS VerrPreis
		FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
					  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
					  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
					  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
					  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
					  dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
					  LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
					  dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
		GROUP BY dbo.DATA0017.RKEY, LIVE2.dbo.MatRueck_Abteilung.Abteilung, LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID,
				dbo.DATA0017.INV_PART_NUMBER, dbo.DATA0017.INV_PART_DESCRIPTION, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STOCK_PURCH, 
				dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE, dbo.DATA0017.CONSIGN_ONHAND_QTY,
				dbo.DATA0017.ACTIVE_FLAG, dbo.DATA0017.STD_COST, LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial
		HAVING      dbo.DATA0017.ACTIVE_FLAG='Y' AND (LIVE2.dbo.MatRueck_Anlage.ID IN (50, 51 )) AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(1 AS bit)
		UNION ALL
		SELECT  DISTINCT 10, dbo.DATA0017.RKEY, dbo.DATA0017.STD_COST AS VerrPreis
		FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
					  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
					  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
					  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
					  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
					  dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
					  LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
					  dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
		GROUP BY dbo.DATA0017.RKEY, LIVE2.dbo.MatRueck_Abteilung.Abteilung, LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID,
				dbo.DATA0017.INV_PART_NUMBER, dbo.DATA0017.INV_PART_DESCRIPTION, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STOCK_PURCH, 
				dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE, dbo.DATA0017.CONSIGN_ONHAND_QTY,
				dbo.DATA0017.ACTIVE_FLAG, dbo.DATA0017.STD_COST, LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial
		HAVING      dbo.DATA0017.ACTIVE_FLAG='Y' AND (LIVE2.dbo.MatRueck_Anlage.ID IN (50, 51 )) AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(1 AS bit)
		UNION ALL
		SELECT  DISTINCT 11, dbo.DATA0017.RKEY, dbo.DATA0017.STD_COST AS VerrPreis
		FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
					  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
					  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
					  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
					  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
					  dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
					  LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
					  dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
		GROUP BY dbo.DATA0017.RKEY, LIVE2.dbo.MatRueck_Abteilung.Abteilung, LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID,
				dbo.DATA0017.INV_PART_NUMBER, dbo.DATA0017.INV_PART_DESCRIPTION, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STOCK_PURCH, 
				dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE, dbo.DATA0017.CONSIGN_ONHAND_QTY,
				dbo.DATA0017.ACTIVE_FLAG, dbo.DATA0017.STD_COST, LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial
		HAVING      dbo.DATA0017.ACTIVE_FLAG='Y' AND (LIVE2.dbo.MatRueck_Anlage.ID IN (50, 51 )) AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(1 AS bit)
		UNION ALL
		SELECT  DISTINCT 12, dbo.DATA0017.RKEY, dbo.DATA0017.STD_COST AS VerrPreis
		FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
					  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
					  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
					  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
					  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
					  dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
					  LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
					  dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
		GROUP BY dbo.DATA0017.RKEY, LIVE2.dbo.MatRueck_Abteilung.Abteilung, LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID,
				dbo.DATA0017.INV_PART_NUMBER, dbo.DATA0017.INV_PART_DESCRIPTION, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STOCK_PURCH, 
				dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE, dbo.DATA0017.CONSIGN_ONHAND_QTY,
				dbo.DATA0017.ACTIVE_FLAG, dbo.DATA0017.STD_COST, LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial
		HAVING      dbo.DATA0017.ACTIVE_FLAG='Y' AND (LIVE2.dbo.MatRueck_Anlage.ID IN (50, 51 )) AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(1 AS bit)
		

		SELECT
			Bezeichnung,
			SUM(CASE WHEN Monat=1 THEN Verbrauch ELSE 0 END) AS Jan,
			SUM(CASE WHEN Monat=2 THEN Verbrauch ELSE 0 END) AS Feb,
			SUM(CASE WHEN Monat=3 THEN Verbrauch ELSE 0 END) AS Mar,
			SUM(CASE WHEN Monat=4 THEN Verbrauch ELSE 0 END) AS Apr,
			SUM(CASE WHEN Monat=5 THEN Verbrauch ELSE 0 END) AS Mai,
			SUM(CASE WHEN Monat=6 THEN Verbrauch ELSE 0 END) AS Jun,
			SUM(CASE WHEN Monat=7 THEN Verbrauch ELSE 0 END) AS Jul,
			SUM(CASE WHEN Monat=8 THEN Verbrauch ELSE 0 END) AS Aug,
			SUM(CASE WHEN Monat=9 THEN Verbrauch ELSE 0 END) AS Sep,
			SUM(CASE WHEN Monat=10 THEN Verbrauch ELSE 0 END) AS Okt,
			SUM(CASE WHEN Monat=11 THEN Verbrauch ELSE 0 END) AS Nov,
			SUM(CASE WHEN Monat=12 THEN Verbrauch ELSE 0 END) AS Dec,
			SUM(Verbrauch) AS GesamtVerbrauch
		FROM
		(
			SELECT
				Monat,
				(SELECT TOP 1 INV_PART_DESCRIPTION FROM dbo.DATA0017 WHERE RKEY=D17_PTR) AS Bezeichnung,
				ISNULL((
					SELECT TOP 1 
						SUM(ISNULL(tblDATA0095.QUANTITY, 0)) AS RES
					FROM
					(
						SELECT     LIVE2.dbo.MatRueck_Anlage.ID AS Anlage_PTR, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY AS D17_RKEY, dbo.DATA0017.INV_PART_DESCRIPTION AS ArtBezeichnung,
									dbo.DATA0002.UNIT_CODE AS Lagereinheit, dbo.DATA0017.STOCK_PURCH, DEPT_CODE
						FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
								  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
								  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
								  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
								  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
								  dbo.DATA0034 ON LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR = dbo.DATA0034.RKEY
						WHERE dbo.DATA0034.DEPT_CODE IN ('ABW-01-01') --, 'ABW-01-02') --@para2
						GROUP BY LIVE2.dbo.MatRueck_Anlage.ID, LIVE2.dbo.MatRueck_Anlage.Anlage, 
						dbo.DATA0017.RKEY, dbo.DATA0017.INV_PART_DESCRIPTION , dbo.DATA0017.STOCK_PURCH, dbo.DATA0002.UNIT_CODE, DEPT_CODE 
						HAVING LIVE2.dbo.MatRueck_Anlage.ID = 50--(LIVE2.dbo.MatRueck_Anlage.Anlage = @Anlage)
					) AS tblAnlageArtikel INNER JOIN --LEFT OUTER JOIN 
					(SELECT QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, MONTH(TRAN_DATE) AS Monat, TRAN_TP 
					--FROM dbo.DATA0095 INNER JOIN  dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY 
					FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
					WHERE dbo.DATA0095.TRAN_TP IN (15, 16, 23) AND dbo.DATA0034.DEPT_CODE IN ('ABW-01-01') --, 'ABW-01-02')
					AND YEAR(dbo.DATA0095.TRAN_DATE) = YEAR(CONVERT(DATETIME, @para4, 103))
					AND MONTH(dbo.DATA0095.TRAN_DATE) = Monat
					AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR) AS tblDATA0095 
					ON tblAnlageArtikel.D17_RKEY = tblDATA0095.INVT_PTR
				), 0) 
				+
			ISNULL((
					SELECT TOP 1
						SUM(ISNULL(tblDATA0095.QUANTITY, 0)) AS RES
					FROM
					(
						SELECT     LIVE2.dbo.MatRueck_Anlage.ID AS Anlage_PTR, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY AS D17_RKEY, dbo.DATA0017.INV_PART_DESCRIPTION AS ArtBezeichnung,
									dbo.DATA0002.UNIT_CODE AS Lagereinheit, dbo.DATA0017.STOCK_PURCH , DEPT_CODE
						FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
								  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
								  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
								  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
								  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
								  dbo.DATA0034 ON LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR = dbo.DATA0034.RKEY
						WHERE dbo.DATA0034.DEPT_CODE IN ('ABW-01-02') --, 'ABW-01-02') --@para2
						GROUP BY LIVE2.dbo.MatRueck_Anlage.ID, LIVE2.dbo.MatRueck_Anlage.Anlage, 
						dbo.DATA0017.RKEY, dbo.DATA0017.INV_PART_DESCRIPTION , dbo.DATA0017.STOCK_PURCH, dbo.DATA0002.UNIT_CODE, DEPT_CODE 
						HAVING LIVE2.dbo.MatRueck_Anlage.ID = 51--(LIVE2.dbo.MatRueck_Anlage.Anlage = @Anlage)
					) AS tblAnlageArtikel INNER JOIN --LEFT OUTER JOIN 
					(SELECT QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, MONTH(TRAN_DATE) AS Monat, TRAN_TP 
					--FROM dbo.DATA0095 INNER JOIN  dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY 
					FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
					WHERE dbo.DATA0095.TRAN_TP IN (15, 16, 23) AND dbo.DATA0034.DEPT_CODE IN ('ABW-01-02') --, 'ABW-01-02')
					AND YEAR(dbo.DATA0095.TRAN_DATE) = YEAR(CONVERT(DATETIME, @para4, 103))
					AND MONTH(dbo.DATA0095.TRAN_DATE) = Monat 
					AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR ) AS tblDATA0095 
					ON tblAnlageArtikel.D17_RKEY = tblDATA0095.INVT_PTR
				), 0)
				+
			ISNULL((
					SELECT 
						ISNULL((
							(-1)*SUM(QUANTITY) 
							*
							ISNULL((
								SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
								FROM LIVE2.dbo.NachKalk_MatVerteilung
								WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = 50
										AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = tblAnlageArtikel_.D17_PTR
							), 0) 
						), 0) AS RES 

					FROM 
						dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
					WHERE 
						dbo.DATA0095.TRAN_TP = 23
						AND YEAR(dbo.DATA0095.TRAN_DATE) = YEAR(CONVERT(DATETIME, @para4, 103))
						AND MONTH(dbo.DATA0095.TRAN_DATE) = Monat 
						AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR
				), 0)
				+
			ISNULL((
				SELECT 
					ISNULL((
						(-1)*SUM(QUANTITY) 
						*
						ISNULL((
							SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
							FROM LIVE2.dbo.NachKalk_MatVerteilung
							WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = 51
									AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = tblAnlageArtikel_.D17_PTR
						), 0) 
					), 0) AS RES 

				FROM 
					dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
				WHERE 
					dbo.DATA0095.TRAN_TP = 23
					AND YEAR(dbo.DATA0095.TRAN_DATE) = YEAR(CONVERT(DATETIME, @para4, 103))
					AND MONTH(dbo.DATA0095.TRAN_DATE) = Monat 
					AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR
			), 0) AS Verbrauch

			FROM
				@tblAnlageArtikelAbwasserVerbrauch AS tblAnlageArtikel_
		) AS tblArtVerb
		WHERE Monat <= CAST(@para6 AS INT)
		GROUP BY 
			Bezeichnung
		ORDER BY
			GesamtVerbrauch DESC
	END
*/
/*
	IF @Case_ = 'AbwasserKosten'
	BEGIN
		--DECLARE 
		--@para4 varchar(255),
		--@para5 varchar(255),
		--@para6 varchar(255)
		--SET @para4 = '01.01.2015'	--Datum Von
		--SET @para5 = '31.07.2015'	--Datum Bis
		--SET @para6 = '1'

		DECLARE @tblAnlageArtikelAbwasserKosten table(Monat INT, D17_PTR NUMERIC(10, 0), VerrPreis DECIMAL(20, 7))

		INSERT @tblAnlageArtikelAbwasserKosten(Monat, D17_PTR, VerrPreis)
		SELECT  DISTINCT 1, dbo.DATA0017.RKEY, dbo.DATA0017.STD_COST AS VerrPreis
		FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
					  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
					  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
					  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
					  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
					  dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
					  LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
					  dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
		GROUP BY dbo.DATA0017.RKEY, LIVE2.dbo.MatRueck_Abteilung.Abteilung, LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID,
				dbo.DATA0017.INV_PART_NUMBER, dbo.DATA0017.INV_PART_DESCRIPTION, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STOCK_PURCH, 
				dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE, dbo.DATA0017.CONSIGN_ONHAND_QTY,
				dbo.DATA0017.ACTIVE_FLAG, dbo.DATA0017.STD_COST, LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial
		HAVING      dbo.DATA0017.ACTIVE_FLAG='Y' AND (LIVE2.dbo.MatRueck_Anlage.ID IN (50, 51 )) AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(1 AS bit)
		UNION ALL
		SELECT  DISTINCT 2, dbo.DATA0017.RKEY, dbo.DATA0017.STD_COST AS VerrPreis
		FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
					  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
					  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
					  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
					  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
					  dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
					  LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
					  dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
		GROUP BY dbo.DATA0017.RKEY, LIVE2.dbo.MatRueck_Abteilung.Abteilung, LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID,
				dbo.DATA0017.INV_PART_NUMBER, dbo.DATA0017.INV_PART_DESCRIPTION, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STOCK_PURCH, 
				dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE, dbo.DATA0017.CONSIGN_ONHAND_QTY,
				dbo.DATA0017.ACTIVE_FLAG, dbo.DATA0017.STD_COST, LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial
		HAVING      dbo.DATA0017.ACTIVE_FLAG='Y' AND (LIVE2.dbo.MatRueck_Anlage.ID IN (50, 51 )) AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(1 AS bit)
		UNION ALL
		SELECT  DISTINCT 3, dbo.DATA0017.RKEY, dbo.DATA0017.STD_COST AS VerrPreis
		FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
					  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
					  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
					  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
					  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
					  dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
					  LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
					  dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
		GROUP BY dbo.DATA0017.RKEY, LIVE2.dbo.MatRueck_Abteilung.Abteilung, LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID,
				dbo.DATA0017.INV_PART_NUMBER, dbo.DATA0017.INV_PART_DESCRIPTION, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STOCK_PURCH, 
				dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE, dbo.DATA0017.CONSIGN_ONHAND_QTY,
				dbo.DATA0017.ACTIVE_FLAG, dbo.DATA0017.STD_COST, LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial
		HAVING      dbo.DATA0017.ACTIVE_FLAG='Y' AND (LIVE2.dbo.MatRueck_Anlage.ID IN (50, 51 )) AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(1 AS bit)
		UNION ALL
		SELECT  DISTINCT 4, dbo.DATA0017.RKEY, dbo.DATA0017.STD_COST AS VerrPreis
		FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
					  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
					  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
					  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
					  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
					  dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
					  LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
					  dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
		GROUP BY dbo.DATA0017.RKEY, LIVE2.dbo.MatRueck_Abteilung.Abteilung, LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID,
				dbo.DATA0017.INV_PART_NUMBER, dbo.DATA0017.INV_PART_DESCRIPTION, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STOCK_PURCH, 
				dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE, dbo.DATA0017.CONSIGN_ONHAND_QTY,
				dbo.DATA0017.ACTIVE_FLAG, dbo.DATA0017.STD_COST, LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial
		HAVING      dbo.DATA0017.ACTIVE_FLAG='Y' AND (LIVE2.dbo.MatRueck_Anlage.ID IN (50, 51 )) AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(1 AS bit)
		UNION ALL
		SELECT  DISTINCT 5, dbo.DATA0017.RKEY, dbo.DATA0017.STD_COST AS VerrPreis
		FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
					  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
					  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
					  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
					  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
					  dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
					  LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
					  dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
		GROUP BY dbo.DATA0017.RKEY, LIVE2.dbo.MatRueck_Abteilung.Abteilung, LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID,
				dbo.DATA0017.INV_PART_NUMBER, dbo.DATA0017.INV_PART_DESCRIPTION, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STOCK_PURCH, 
				dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE, dbo.DATA0017.CONSIGN_ONHAND_QTY,
				dbo.DATA0017.ACTIVE_FLAG, dbo.DATA0017.STD_COST, LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial
		HAVING      dbo.DATA0017.ACTIVE_FLAG='Y' AND (LIVE2.dbo.MatRueck_Anlage.ID IN (50, 51 )) AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(1 AS bit)
		UNION ALL
		SELECT  DISTINCT 6, dbo.DATA0017.RKEY, dbo.DATA0017.STD_COST AS VerrPreis
		FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
					  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
					  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
					  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
					  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
					  dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
					  LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
					  dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
		GROUP BY dbo.DATA0017.RKEY, LIVE2.dbo.MatRueck_Abteilung.Abteilung, LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID,
				dbo.DATA0017.INV_PART_NUMBER, dbo.DATA0017.INV_PART_DESCRIPTION, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STOCK_PURCH, 
				dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE, dbo.DATA0017.CONSIGN_ONHAND_QTY,
				dbo.DATA0017.ACTIVE_FLAG, dbo.DATA0017.STD_COST, LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial
		HAVING      dbo.DATA0017.ACTIVE_FLAG='Y' AND (LIVE2.dbo.MatRueck_Anlage.ID IN (50, 51 )) AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(1 AS bit)
		UNION ALL
		SELECT  DISTINCT 7, dbo.DATA0017.RKEY, dbo.DATA0017.STD_COST AS VerrPreis
		FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
					  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
					  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
					  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
					  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
					  dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
					  LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
					  dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
		GROUP BY dbo.DATA0017.RKEY, LIVE2.dbo.MatRueck_Abteilung.Abteilung, LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID,
				dbo.DATA0017.INV_PART_NUMBER, dbo.DATA0017.INV_PART_DESCRIPTION, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STOCK_PURCH, 
				dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE, dbo.DATA0017.CONSIGN_ONHAND_QTY,
				dbo.DATA0017.ACTIVE_FLAG, dbo.DATA0017.STD_COST, LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial
		HAVING      dbo.DATA0017.ACTIVE_FLAG='Y' AND (LIVE2.dbo.MatRueck_Anlage.ID IN (50, 51 )) AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(1 AS bit)
		UNION ALL
		SELECT  DISTINCT 8, dbo.DATA0017.RKEY, dbo.DATA0017.STD_COST AS VerrPreis
		FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
					  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
					  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
					  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
					  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
					  dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
					  LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
					  dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
		GROUP BY dbo.DATA0017.RKEY, LIVE2.dbo.MatRueck_Abteilung.Abteilung, LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID,
				dbo.DATA0017.INV_PART_NUMBER, dbo.DATA0017.INV_PART_DESCRIPTION, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STOCK_PURCH, 
				dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE, dbo.DATA0017.CONSIGN_ONHAND_QTY,
				dbo.DATA0017.ACTIVE_FLAG, dbo.DATA0017.STD_COST, LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial
		HAVING      dbo.DATA0017.ACTIVE_FLAG='Y' AND (LIVE2.dbo.MatRueck_Anlage.ID IN (50, 51 )) AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(1 AS bit)
		UNION ALL
		SELECT  DISTINCT 9, dbo.DATA0017.RKEY, dbo.DATA0017.STD_COST AS VerrPreis
		FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
					  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
					  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
					  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
					  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
					  dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
					  LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
					  dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
		GROUP BY dbo.DATA0017.RKEY, LIVE2.dbo.MatRueck_Abteilung.Abteilung, LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID,
				dbo.DATA0017.INV_PART_NUMBER, dbo.DATA0017.INV_PART_DESCRIPTION, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STOCK_PURCH, 
				dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE, dbo.DATA0017.CONSIGN_ONHAND_QTY,
				dbo.DATA0017.ACTIVE_FLAG, dbo.DATA0017.STD_COST, LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial
		HAVING      dbo.DATA0017.ACTIVE_FLAG='Y' AND (LIVE2.dbo.MatRueck_Anlage.ID IN (50, 51 )) AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(1 AS bit)
		UNION ALL
		SELECT  DISTINCT 10, dbo.DATA0017.RKEY, dbo.DATA0017.STD_COST AS VerrPreis
		FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
					  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
					  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
					  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
					  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
					  dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
					  LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
					  dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
		GROUP BY dbo.DATA0017.RKEY, LIVE2.dbo.MatRueck_Abteilung.Abteilung, LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID,
				dbo.DATA0017.INV_PART_NUMBER, dbo.DATA0017.INV_PART_DESCRIPTION, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STOCK_PURCH, 
				dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE, dbo.DATA0017.CONSIGN_ONHAND_QTY,
				dbo.DATA0017.ACTIVE_FLAG, dbo.DATA0017.STD_COST, LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial
		HAVING      dbo.DATA0017.ACTIVE_FLAG='Y' AND (LIVE2.dbo.MatRueck_Anlage.ID IN (50, 51 )) AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(1 AS bit)
		UNION ALL
		SELECT  DISTINCT 11, dbo.DATA0017.RKEY, dbo.DATA0017.STD_COST AS VerrPreis
		FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
					  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
					  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
					  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
					  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
					  dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
					  LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
					  dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
		GROUP BY dbo.DATA0017.RKEY, LIVE2.dbo.MatRueck_Abteilung.Abteilung, LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID,
				dbo.DATA0017.INV_PART_NUMBER, dbo.DATA0017.INV_PART_DESCRIPTION, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STOCK_PURCH, 
				dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE, dbo.DATA0017.CONSIGN_ONHAND_QTY,
				dbo.DATA0017.ACTIVE_FLAG, dbo.DATA0017.STD_COST, LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial
		HAVING      dbo.DATA0017.ACTIVE_FLAG='Y' AND (LIVE2.dbo.MatRueck_Anlage.ID IN (50, 51 )) AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(1 AS bit)
		UNION ALL
		SELECT  DISTINCT 12, dbo.DATA0017.RKEY, dbo.DATA0017.STD_COST AS VerrPreis
		FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
					  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
					  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
					  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
					  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
					  dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
					  LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
					  dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
		GROUP BY dbo.DATA0017.RKEY, LIVE2.dbo.MatRueck_Abteilung.Abteilung, LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID,
				dbo.DATA0017.INV_PART_NUMBER, dbo.DATA0017.INV_PART_DESCRIPTION, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STOCK_PURCH, 
				dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE, dbo.DATA0017.CONSIGN_ONHAND_QTY,
				dbo.DATA0017.ACTIVE_FLAG, dbo.DATA0017.STD_COST, LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial
		HAVING      dbo.DATA0017.ACTIVE_FLAG='Y' AND (LIVE2.dbo.MatRueck_Anlage.ID IN (50, 51 )) AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(1 AS bit)
		

		SELECT
			Bezeichnung,
			SUM(CASE WHEN Monat=1 THEN Verbrauch*VerrPreis ELSE 0 END) AS Jan,
			SUM(CASE WHEN Monat=2 THEN Verbrauch*VerrPreis ELSE 0 END) AS Feb,
			SUM(CASE WHEN Monat=3 THEN Verbrauch*VerrPreis ELSE 0 END) AS Mar,
			SUM(CASE WHEN Monat=4 THEN Verbrauch*VerrPreis ELSE 0 END) AS Apr,
			SUM(CASE WHEN Monat=5 THEN Verbrauch*VerrPreis ELSE 0 END) AS Mai,
			SUM(CASE WHEN Monat=6 THEN Verbrauch*VerrPreis ELSE 0 END) AS Jun,
			SUM(CASE WHEN Monat=7 THEN Verbrauch*VerrPreis ELSE 0 END) AS Jul,
			SUM(CASE WHEN Monat=8 THEN Verbrauch*VerrPreis ELSE 0 END) AS Aug,
			SUM(CASE WHEN Monat=9 THEN Verbrauch*VerrPreis ELSE 0 END) AS Sep,
			SUM(CASE WHEN Monat=10 THEN Verbrauch*VerrPreis ELSE 0 END) AS Okt,
			SUM(CASE WHEN Monat=11 THEN Verbrauch*VerrPreis ELSE 0 END) AS Nov,
			SUM(CASE WHEN Monat=12 THEN Verbrauch*VerrPreis ELSE 0 END) AS Dec,
			SUM(Verbrauch*VerrPreis) AS GesamtKosten
		FROM
		(
			SELECT
				Monat,
				(SELECT TOP 1 INV_PART_DESCRIPTION FROM dbo.DATA0017 WHERE RKEY=D17_PTR) AS Bezeichnung,
				ISNULL((
					SELECT TOP 1 
						SUM(ISNULL(tblDATA0095.QUANTITY, 0)) AS RES
					FROM
					(
						SELECT     LIVE2.dbo.MatRueck_Anlage.ID AS Anlage_PTR, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY AS D17_RKEY, dbo.DATA0017.INV_PART_DESCRIPTION AS ArtBezeichnung,
									dbo.DATA0002.UNIT_CODE AS Lagereinheit, dbo.DATA0017.STOCK_PURCH, DEPT_CODE
						FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
								  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
								  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
								  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
								  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
								  dbo.DATA0034 ON LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR = dbo.DATA0034.RKEY
						WHERE dbo.DATA0034.DEPT_CODE IN ('ABW-01-01') --, 'ABW-01-02') --@para2
						GROUP BY LIVE2.dbo.MatRueck_Anlage.ID, LIVE2.dbo.MatRueck_Anlage.Anlage, 
						dbo.DATA0017.RKEY, dbo.DATA0017.INV_PART_DESCRIPTION , dbo.DATA0017.STOCK_PURCH, dbo.DATA0002.UNIT_CODE, DEPT_CODE 
						HAVING LIVE2.dbo.MatRueck_Anlage.ID = 50--(LIVE2.dbo.MatRueck_Anlage.Anlage = @Anlage)
					) AS tblAnlageArtikel INNER JOIN --LEFT OUTER JOIN 
					(SELECT QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, MONTH(TRAN_DATE) AS Monat, TRAN_TP 
					--FROM dbo.DATA0095 INNER JOIN  dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY 
					FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
					WHERE dbo.DATA0095.TRAN_TP IN (15, 16) AND dbo.DATA0034.DEPT_CODE IN ('ABW-01-01') --, 'ABW-01-02')
					AND YEAR(dbo.DATA0095.TRAN_DATE) = YEAR(CONVERT(DATETIME, @para4, 103))
					AND MONTH(dbo.DATA0095.TRAN_DATE) = Monat
					AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR) AS tblDATA0095 
					ON tblAnlageArtikel.D17_RKEY = tblDATA0095.INVT_PTR
				), 0) 
				+
			ISNULL((
					SELECT TOP 1
						SUM(ISNULL(tblDATA0095.QUANTITY, 0)) AS RES
					FROM
					(
						SELECT     LIVE2.dbo.MatRueck_Anlage.ID AS Anlage_PTR, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY AS D17_RKEY, dbo.DATA0017.INV_PART_DESCRIPTION AS ArtBezeichnung,
									dbo.DATA0002.UNIT_CODE AS Lagereinheit, dbo.DATA0017.STOCK_PURCH , DEPT_CODE
						FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
								  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
								  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
								  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
								  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
								  dbo.DATA0034 ON LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR = dbo.DATA0034.RKEY
						WHERE dbo.DATA0034.DEPT_CODE IN ('ABW-01-02') --, 'ABW-01-02') --@para2
						GROUP BY LIVE2.dbo.MatRueck_Anlage.ID, LIVE2.dbo.MatRueck_Anlage.Anlage, 
						dbo.DATA0017.RKEY, dbo.DATA0017.INV_PART_DESCRIPTION , dbo.DATA0017.STOCK_PURCH, dbo.DATA0002.UNIT_CODE, DEPT_CODE 
						HAVING LIVE2.dbo.MatRueck_Anlage.ID = 51--(LIVE2.dbo.MatRueck_Anlage.Anlage = @Anlage)
					) AS tblAnlageArtikel INNER JOIN --LEFT OUTER JOIN 
					(SELECT QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, MONTH(TRAN_DATE) AS Monat, TRAN_TP 
					--FROM dbo.DATA0095 INNER JOIN  dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY 
					FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
					WHERE dbo.DATA0095.TRAN_TP IN (15, 16) AND dbo.DATA0034.DEPT_CODE IN ('ABW-01-02') --, 'ABW-01-02')
					AND YEAR(dbo.DATA0095.TRAN_DATE) = YEAR(CONVERT(DATETIME, @para4, 103))
					AND MONTH(dbo.DATA0095.TRAN_DATE) = Monat 
					AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR ) AS tblDATA0095 
					ON tblAnlageArtikel.D17_RKEY = tblDATA0095.INVT_PTR
				), 0)
				+
			ISNULL((
					SELECT 
						ISNULL((
							(-1)*SUM(QUANTITY) 
							*
							ISNULL((
								SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
								FROM LIVE2.dbo.NachKalk_MatVerteilung
								WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = 50
										AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = tblAnlageArtikel_.D17_PTR
							), 0) 
						), 0) AS RES 

					FROM 
						dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
					WHERE 
						dbo.DATA0095.TRAN_TP = 23
						AND YEAR(dbo.DATA0095.TRAN_DATE) = YEAR(CONVERT(DATETIME, @para4, 103))
						AND MONTH(dbo.DATA0095.TRAN_DATE) = Monat 
						AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR
				), 0)
				+
			ISNULL((
				SELECT 
					ISNULL((
						(-1)*SUM(QUANTITY) 
						*
						ISNULL((
							SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
							FROM LIVE2.dbo.NachKalk_MatVerteilung
							WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = 51
									AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = tblAnlageArtikel_.D17_PTR
						), 0) 
					), 0) AS RES 

				FROM 
					dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
				WHERE 
					dbo.DATA0095.TRAN_TP = 23
					AND YEAR(dbo.DATA0095.TRAN_DATE) = YEAR(CONVERT(DATETIME, @para4, 103))
					AND MONTH(dbo.DATA0095.TRAN_DATE) = Monat 
					AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR
			), 0) AS Verbrauch,
			VerrPreis

			FROM
				@tblAnlageArtikelAbwasserKosten AS tblAnlageArtikel_
		) AS tblArtVerb
		WHERE Monat <= CAST(@para6 AS INT)
		GROUP BY 
			Bezeichnung
		ORDER BY
			GesamtKosten DESC
	END
*/
/*
	IF @Case_ = 'AbwasserDurchsaetzeEinzeln'
	BEGIN
		--DECLARE 
		--@para4 varchar(255),
		--@para5 varchar(255),
		--@para6 varchar(255)
		--SET @para4 = '01.01.2015'	--Datum Von
		--SET @para5 = '31.07.2015'	--Datum Bis
		--SET @para6 = '1'

		DECLARE @tblAnlageArtikelAbwasserEinzeln table(D17_PTR NUMERIC(10, 0), VerrPreis DECIMAL(20, 7))
				INSERT @tblAnlageArtikelAbwasserEinzeln(D17_PTR, VerrPreis)
				SELECT  DISTINCT dbo.DATA0017.RKEY, dbo.DATA0017.STD_COST AS VerrPreis
				FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
							  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
							  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
							  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
							  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
							  dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
							  LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
							  dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
				GROUP BY dbo.DATA0017.RKEY, LIVE2.dbo.MatRueck_Abteilung.Abteilung, LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID,
						dbo.DATA0017.INV_PART_NUMBER, dbo.DATA0017.INV_PART_DESCRIPTION, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STOCK_PURCH, 
						dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE, dbo.DATA0017.CONSIGN_ONHAND_QTY,
						dbo.DATA0017.ACTIVE_FLAG, dbo.DATA0017.STD_COST, LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial
				HAVING      dbo.DATA0017.ACTIVE_FLAG='Y' AND (LIVE2.dbo.MatRueck_Anlage.ID IN (50, 51 ))
							AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(1 AS bit)


		SELECT
			ISNULL((
					SELECT TOP 1
						SUM(MatKosten) AS MaterialKosten
					FROM
					(
						SELECT 
							ISNULL((
								ISNULL((
									SELECT
										SUM(ISNULL(tblDATA0095.QUANTITY, 0)) AS RES
									FROM
									(
										SELECT     LIVE2.dbo.MatRueck_Anlage.ID AS Anlage_PTR, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY AS D17_RKEY, dbo.DATA0017.INV_PART_DESCRIPTION AS ArtBezeichnung,
													dbo.DATA0002.UNIT_CODE AS Lagereinheit, dbo.DATA0017.STOCK_PURCH 
										FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
												  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
												  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
												  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
												  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
												  dbo.DATA0034 ON LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR = dbo.DATA0034.RKEY
										WHERE dbo.DATA0034.DEPT_CODE IN ('ABW-01-01') --, 'ABW-01-02') --@para2
										GROUP BY LIVE2.dbo.MatRueck_Anlage.ID, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY, dbo.DATA0017.INV_PART_DESCRIPTION , dbo.DATA0017.STOCK_PURCH, dbo.DATA0002.UNIT_CODE 
										HAVING LIVE2.dbo.MatRueck_Anlage.ID = 50--(LIVE2.dbo.MatRueck_Anlage.Anlage = @Anlage)
									) AS tblAnlageArtikel INNER JOIN --LEFT OUTER JOIN 
									(SELECT QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, MONTH(TRAN_DATE) AS Monat, TRAN_TP 
									--FROM dbo.DATA0095 INNER JOIN  dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY 
									FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
									WHERE dbo.DATA0095.TRAN_TP IN (15, 16) AND dbo.DATA0034.DEPT_CODE IN ('ABW-01-01') --, 'ABW-01-02')
									AND YEAR(dbo.DATA0095.TRAN_DATE) = YEAR(CONVERT(DATETIME, @para4, 103)) 
									AND MONTH(dbo.DATA0095.TRAN_DATE) = CAST(@para6 AS INT)   
									AND dbo.DATA0095.INVT_PTR = tblAnlageArtikelAbwasser_.D17_PTR ) AS tblDATA0095 
									ON tblAnlageArtikel.D17_RKEY = tblDATA0095.INVT_PTR
									--) AS myTblSub	
								), 0)
								+
								ISNULL((
									SELECT
										SUM(ISNULL(tblDATA0095.QUANTITY, 0)) AS RES
									FROM
									(
										SELECT     LIVE2.dbo.MatRueck_Anlage.ID AS Anlage_PTR, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY AS D17_RKEY, dbo.DATA0017.INV_PART_DESCRIPTION AS ArtBezeichnung,
													dbo.DATA0002.UNIT_CODE AS Lagereinheit, dbo.DATA0017.STOCK_PURCH 
										FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
												  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
												  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
												  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
												  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
												  dbo.DATA0034 ON LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR = dbo.DATA0034.RKEY
										WHERE dbo.DATA0034.DEPT_CODE IN ('ABW-01-02') --, 'ABW-01-02') --@para2
										GROUP BY LIVE2.dbo.MatRueck_Anlage.ID, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY, dbo.DATA0017.INV_PART_DESCRIPTION , dbo.DATA0017.STOCK_PURCH, dbo.DATA0002.UNIT_CODE 
										HAVING LIVE2.dbo.MatRueck_Anlage.ID = 51--(LIVE2.dbo.MatRueck_Anlage.Anlage = @Anlage)
									) AS tblAnlageArtikel INNER JOIN --LEFT OUTER JOIN 
									(SELECT QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, MONTH(TRAN_DATE) AS Monat, TRAN_TP 
									--FROM dbo.DATA0095 INNER JOIN  dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY 
									FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
									WHERE dbo.DATA0095.TRAN_TP IN (15, 16) AND dbo.DATA0034.DEPT_CODE IN ('ABW-01-02') --, 'ABW-01-02')
									AND YEAR(dbo.DATA0095.TRAN_DATE) = YEAR(CONVERT(DATETIME, @para4, 103)) 
									AND MONTH(dbo.DATA0095.TRAN_DATE) = CAST(@para6 AS INT)   
									AND dbo.DATA0095.INVT_PTR = tblAnlageArtikelAbwasser_.D17_PTR ) AS tblDATA0095 
									ON tblAnlageArtikel.D17_RKEY = tblDATA0095.INVT_PTR
									--) AS myTblSub	
								), 0)
								+
								ISNULL((
									SELECT 
										ISNULL((
											(-1)*SUM(QUANTITY) 
											*
											ISNULL((
												SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
												FROM LIVE2.dbo.NachKalk_MatVerteilung
												WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = 50 --Abwasser 1
														AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = tblAnlageArtikelAbwasser_.D17_PTR
											), 0) 
										), 0) AS RES 

									FROM 
										dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
									WHERE 
										dbo.DATA0095.TRAN_TP = 23
										AND YEAR(dbo.DATA0095.TRAN_DATE) = YEAR(CONVERT(DATETIME, @para4, 103))
										AND MONTH(dbo.DATA0095.TRAN_DATE) = CAST(@para6 AS INT) 
										AND dbo.DATA0095.INVT_PTR = tblAnlageArtikelAbwasser_.D17_PTR
								), 0)
								+
								ISNULL((
									SELECT 
										ISNULL((
											(-1)*SUM(QUANTITY) 
											*
											ISNULL((
												SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
												FROM LIVE2.dbo.NachKalk_MatVerteilung
												WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = 51 --Abwasser 2
														AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = tblAnlageArtikelAbwasser_.D17_PTR
											), 0) 
										), 0) AS RES 

									FROM 
										dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
									WHERE 
										dbo.DATA0095.TRAN_TP = 23
										AND YEAR(dbo.DATA0095.TRAN_DATE) = YEAR(CONVERT(DATETIME, @para4, 103))
										AND MONTH(dbo.DATA0095.TRAN_DATE) = CAST(@para6 AS INT) 
										AND dbo.DATA0095.INVT_PTR = tblAnlageArtikelAbwasser_.D17_PTR
								), 0)
							), 0) * VerrPreis AS MatKosten

						FROM @tblAnlageArtikelAbwasserEinzeln AS tblAnlageArtikelAbwasser_
					) AS tblAbwasser
			), 0) AS Materialkosten,
			DATENAME(month, DATEADD(month, CAST(@para6 AS INT)-1, CAST(@para4 AS datetime))) AS Monat,
			ISNULL((
				SELECT TOP 1    
					SUM(
						(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
						/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000)) 
					AS RES
				FROM         dbo.DATA0006 INNER JOIN
							  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
							  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
							  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
				WHERE    
							YEAR(dbo.DATA0048.TDATE) = YEAR(CONVERT(DATETIME, @para4, 103))
							AND MONTH(dbo.DATA0048.TDATE) = CAST(@para6 AS INT) 
							AND LEFT(dbo.DATA0034.DEPT_CODE, 4) IN ('ÄTZA', 'STSN')
			), 0) AS AetzenAlkalisch,
			ISNULL((
				SELECT TOP 1    
					SUM(
						(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
						/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000)) 
					AS RES
				FROM         dbo.DATA0006 INNER JOIN
							  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
							  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
							  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
				WHERE    
							YEAR(dbo.DATA0048.TDATE) = YEAR(CONVERT(DATETIME, @para4, 103))
							AND MONTH(dbo.DATA0048.TDATE) = CAST(@para6 AS INT) 
							AND LEFT(dbo.DATA0034.DEPT_CODE, 5) IN ('ÄTZS-', ' ÄS-MA')
			), 0) AS AetzenSauer,
			ISNULL((
				SELECT TOP 1    
					SUM(
						(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
						/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000)) 
					AS RES
				FROM         dbo.DATA0006 INNER JOIN
							  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
							  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
							  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
				WHERE    
							YEAR(dbo.DATA0048.TDATE) = YEAR(CONVERT(DATETIME, @para4, 103))
							AND MONTH(dbo.DATA0048.TDATE) = CAST(@para6 AS INT) 
							AND dbo.DATA0034.DEPT_CODE = 'BLHO-01-01'
			), 0) AS BlackHole,
			ISNULL((
				SELECT TOP 1    
					SUM(
						(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
						/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000)) 
					AS RES
				FROM         dbo.DATA0006 INNER JOIN
							  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
							  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
							  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
				WHERE    
							YEAR(dbo.DATA0048.TDATE) = YEAR(CONVERT(DATETIME, @para4, 103))
							AND MONTH(dbo.DATA0048.TDATE) = CAST(@para6 AS INT)  
							AND LEFT(dbo.DATA0034.DEPT_CODE, 4) = 'LBA-'
			), 0) AS LBA,
			ISNULL((
				SELECT TOP 1    
					SUM(
						(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
						/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000)) 
					AS RES
				FROM         dbo.DATA0006 INNER JOIN
							  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
							  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
							  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
				WHERE    
							YEAR(dbo.DATA0048.TDATE) = YEAR(CONVERT(DATETIME, @para4, 103))
							AND MONTH(dbo.DATA0048.TDATE) = CAST(@para6 AS INT) 
							AND dbo.DATA0034.DEPT_CODE = 'GIES-01-01'
			), 0) AS Giessen,
			ISNULL((
				SELECT TOP 1    
					SUM(
						(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
						/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000)) 
					AS RES
				FROM         dbo.DATA0006 INNER JOIN
							  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
							  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
							  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
				WHERE    
							YEAR(dbo.DATA0048.TDATE) = YEAR(CONVERT(DATETIME, @para4, 103))
							AND MONTH(dbo.DATA0048.TDATE) = CAST(@para6 AS INT)  
							AND dbo.DATA0034.DEPT_CODE = 'MLDS-01-01'
			), 0) AS Desmear,
			ISNULL((
				SELECT TOP 1    
					SUM(
						(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
						/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000)) 
					AS RES
				FROM         dbo.DATA0006 INNER JOIN
							  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
							  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
							  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
				WHERE    
							YEAR(dbo.DATA0048.TDATE) = YEAR(CONVERT(DATETIME, @para4, 103))
							AND MONTH(dbo.DATA0048.TDATE) = CAST(@para6 AS INT) 
							AND dbo.DATA0034.DEPT_CODE = 'MLBL-01-01'
			), 0) AS BlackOxide,
			ISNULL((
				SELECT TOP 1    
					SUM(
						(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
						/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000)) 
					AS RES
				FROM         dbo.DATA0006 INNER JOIN
							  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
							  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
							  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
				WHERE    
							YEAR(dbo.DATA0048.TDATE) = YEAR(CONVERT(DATETIME, @para4, 103))
							AND MONTH(dbo.DATA0048.TDATE) = CAST(@para6 AS INT) 
							AND dbo.DATA0034.DEPT_CODE = 'MERE-01-03'
			), 0) AS Mikroaetze,
			ISNULL((
				SELECT TOP 1    
					SUM(
						(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
						/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000)) 
					AS RES
				FROM         dbo.DATA0006 INNER JOIN
							  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
							  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
							  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
				WHERE    
							YEAR(dbo.DATA0048.TDATE) = YEAR(CONVERT(DATETIME, @para4, 103))
							AND MONTH(dbo.DATA0048.TDATE) = CAST(@para6 AS INT) 
							AND dbo.DATA0034.DEPT_CODE = 'HBF-01-01'
			), 0) AS HBF,
			ISNULL((
				SELECT TOP 1    
					SUM(
						(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
						/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000)) 
					AS RES
				FROM         dbo.DATA0006 INNER JOIN
							  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
							  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
							  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
				WHERE    
							YEAR(dbo.DATA0048.TDATE) = YEAR(CONVERT(DATETIME, @para4, 103))
							AND MONTH(dbo.DATA0048.TDATE) = CAST(@para6 AS INT) 
							AND dbo.DATA0034.DEPT_CODE = 'HBL-01-01'
			), 0) AS HBL,
			ISNULL((
				SELECT TOP 1    
					SUM(
						(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
						/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000)) 
					AS RES
				FROM         dbo.DATA0006 INNER JOIN
							  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
							  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
							  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
				WHERE    
							YEAR(dbo.DATA0048.TDATE) = YEAR(CONVERT(DATETIME, @para4, 103))
							AND MONTH(dbo.DATA0048.TDATE) = CAST(@para6 AS INT) 
							AND dbo.DATA0034.DEPT_CODE = 'CGIN-01-01'
			), 0) AS ChemNiAu,
			ISNULL((
				SELECT TOP 1    
					SUM(
						(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
						/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000)) 
					AS RES
				FROM         dbo.DATA0006 INNER JOIN
							  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
							  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
							  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
				WHERE    
							YEAR(dbo.DATA0048.TDATE) = YEAR(CONVERT(DATETIME, @para4, 103))
							AND MONTH(dbo.DATA0048.TDATE) = CAST(@para6 AS INT) 
							AND dbo.DATA0034.DEPT_CODE = 'CZIN-01-01'
			), 0) AS ChemZinn
	END
*/
/*
	IF @Case_ = 'Materialverbrauch_Fotolabor'
	BEGIN
		DECLARE @tblDurchsatzFotolabor table(
												DEPT_CODE char(10), 
												Durchsatz NUMERIC(10, 4),
												BzgGr varchar(20),
												Durchsatz2 NUMERIC(10, 4) NULL,
												Durchsatz3 NUMERIC(10, 4) NULL
											)

		IF @para1='Entwickler Fotolabor'
		BEGIN
			INSERT @tblDurchsatzFotolabor(DEPT_CODE, Durchsatz, BzgGr)
			SELECT
				'FOTL-01-03' AS DEPT_CODE,
				SUM(RES) AS Durchsatz,
				'Zu-m2' AS BzgGr
			FROM
			(
				SELECT	
						ISNULL((
							CAST(ISNULL((
								SELECT
									SUM(ISNULL(tblDATA0095.QUANTITY, 0)) AS RES
								FROM
								(
									SELECT     LIVE2.dbo.MatRueck_Anlage.ID AS Anlage_PTR, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY AS D17_RKEY, dbo.DATA0017.INV_PART_DESCRIPTION AS ArtBezeichnung,
												dbo.DATA0002.UNIT_CODE AS Lagereinheit, dbo.DATA0017.STOCK_PURCH 
									FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
											  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
											  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
											  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
											  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
											  dbo.DATA0034 ON LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR = dbo.DATA0034.RKEY
									WHERE dbo.DATA0034.DEPT_CODE = 'FOTL-01-01'
									GROUP BY LIVE2.dbo.MatRueck_Anlage.ID, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY, dbo.DATA0017.INV_PART_DESCRIPTION , dbo.DATA0017.STOCK_PURCH, dbo.DATA0002.UNIT_CODE 
									HAVING LIVE2.dbo.MatRueck_Anlage.ID = 64 --FL Silberfilme
								) AS tblAnlageArtikel INNER JOIN --LEFT OUTER JOIN 
								(SELECT QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, MONTH(TRAN_DATE) AS Monat, TRAN_TP 
								--FROM dbo.DATA0095 INNER JOIN  dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY 
								FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
								WHERE dbo.DATA0095.TRAN_TP IN (15, 16) AND dbo.DATA0034.DEPT_CODE = 'FOTL-01-01'
								AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
								AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  AND dbo.DATA0095.INVT_PTR = D17.RKEY ) AS tblDATA0095 
								ON tblAnlageArtikel.D17_RKEY = tblDATA0095.INVT_PTR
								--) AS myTblSub	
							), 0)
							+
							ISNULL((
								SELECT 
									ISNULL((
										(-1)*SUM(QUANTITY) 
										*
										ISNULL((
											SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
											FROM LIVE2.dbo.NachKalk_MatVerteilung
											WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = 64 --FL Silberfilme
													AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = D17.RKEY 
										), 1) 
									), 0) AS RES 

								FROM 
									dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
								WHERE 
									dbo.DATA0095.TRAN_TP = 23
									AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
									AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
									AND dbo.DATA0095.INVT_PTR = D17.RKEY 
							), 0) AS NUMERIC(10, 4))
							*
							CAST(REPLACE(D17.ANALYSIS_CODE5, ',', '.') AS NUMERIC(10, 4))
					), 0) AS RES
				FROM dbo.DATA0017 AS D17
				WHERE D17.RKEY IN (955, 1221)
			) AS tblDurchsatzEntwFix
		END
		IF @para1='FL Fixierer'
		BEGIN
			INSERT @tblDurchsatzFotolabor(DEPT_CODE, Durchsatz, BzgGr)
			SELECT
				'FOTL-01-04' AS DEPT_CODE,
				SUM(RES) AS Durchsatz,
				'Zu-m2' AS BzgGr
			FROM
			(
				SELECT	
						ISNULL((
							CAST(ISNULL((
								SELECT
									SUM(ISNULL(tblDATA0095.QUANTITY, 0)) AS RES
								FROM
								(
									SELECT     LIVE2.dbo.MatRueck_Anlage.ID AS Anlage_PTR, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY AS D17_RKEY, dbo.DATA0017.INV_PART_DESCRIPTION AS ArtBezeichnung,
												dbo.DATA0002.UNIT_CODE AS Lagereinheit, dbo.DATA0017.STOCK_PURCH 
									FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
											  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
											  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
											  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
											  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
											  dbo.DATA0034 ON LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR = dbo.DATA0034.RKEY
									WHERE dbo.DATA0034.DEPT_CODE = 'FOTL-01-01'
									GROUP BY LIVE2.dbo.MatRueck_Anlage.ID, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY, dbo.DATA0017.INV_PART_DESCRIPTION , dbo.DATA0017.STOCK_PURCH, dbo.DATA0002.UNIT_CODE 
									HAVING LIVE2.dbo.MatRueck_Anlage.ID = 64 --FL Silberfilme
								) AS tblAnlageArtikel INNER JOIN --LEFT OUTER JOIN 
								(SELECT QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, MONTH(TRAN_DATE) AS Monat, TRAN_TP 
								--FROM dbo.DATA0095 INNER JOIN  dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY 
								FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
								WHERE dbo.DATA0095.TRAN_TP IN (15, 16) AND dbo.DATA0034.DEPT_CODE = 'FOTL-01-01'
								AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
								AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  AND dbo.DATA0095.INVT_PTR = D17.RKEY ) AS tblDATA0095 
								ON tblAnlageArtikel.D17_RKEY = tblDATA0095.INVT_PTR
								--) AS myTblSub	
							), 0)
							+
							ISNULL((
								SELECT 
									ISNULL((
										(-1)*SUM(QUANTITY) 
										*
										ISNULL((
											SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
											FROM LIVE2.dbo.NachKalk_MatVerteilung
											WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = 64 --FL Silberfilme
													AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = D17.RKEY 
										), 1) 
									), 0) AS RES 

								FROM 
									dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
								WHERE 
									dbo.DATA0095.TRAN_TP = 23
									AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
									AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
									AND dbo.DATA0095.INVT_PTR = D17.RKEY 
							), 0) AS NUMERIC(10, 4))
							*
							CAST(REPLACE(D17.ANALYSIS_CODE5, ',', '.') AS NUMERIC(10, 4))
					), 0) AS RES
				FROM dbo.DATA0017 AS D17
				WHERE D17.RKEY IN (955, 1221)
			) AS tblDurchsatzEntwFix
		END
		IF @para1='FL Diazo-Filme'
		BEGIN
			INSERT @tblDurchsatzFotolabor(DEPT_CODE, Durchsatz, BzgGr)
			SELECT
				'FOTL-01-02' AS DEPT_CODE,
				COUNT(WORK_ORDER_NUMBER) AS Durchsatz,
				'FA' AS BzgGr
			FROM
			(
				SELECT DISTINCT dbo.DATA0006.WORK_ORDER_NUMBER
									FROM         dbo.DATA0006 INNER JOIN
												  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
												  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
												  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
				--WHERE LEFT(dbo.DATA0034.DEPT_CODE, 3) = 'CAM'
			) AS tblCAM
			WHERE
				 WORK_ORDER_NUMBER IN (
										SELECT 
											'  -' + BASE_WO + '-01-000'
										FROM         dbo.DATA0006 INNER JOIN
													  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
													  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
													  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
											WHERE   
													dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
													AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
													AND dbo.DATA0034.DEPT_CODE LIKE 'FILM%'
										)
		END
		IF @para1='FL Silber-Filme'
		BEGIN
			INSERT @tblDurchsatzFotolabor(DEPT_CODE, Durchsatz, BzgGr)
			SELECT
				'FOTL-01-01' AS DEPT_CODE,
				COUNT(WORK_ORDER_NUMBER) AS Durchsatz,
				'FA' AS BzgGr
			FROM
			(
				SELECT DISTINCT dbo.DATA0006.WORK_ORDER_NUMBER
									FROM         dbo.DATA0006 INNER JOIN
												  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
												  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
												  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
				--WHERE LEFT(dbo.DATA0034.DEPT_CODE, 3) = 'CAM'
			) AS tblCAM
			WHERE
				 WORK_ORDER_NUMBER IN (
										SELECT 
											'  -' + BASE_WO + '-01-000'
										FROM         dbo.DATA0006 INNER JOIN
													  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
													  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
													  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
											WHERE   
													dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
													AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
													AND dbo.DATA0034.DEPT_CODE LIKE 'FILM%'
										)
		END
		IF @para1='FL Sonstiges'
		BEGIN
			INSERT @tblDurchsatzFotolabor(DEPT_CODE, Durchsatz, BzgGr)
			SELECT
				'FOTL-01-05' AS DEPT_CODE,
				COUNT(WORK_ORDER_NUMBER) AS Durchsatz,
				'FA' AS BzgGr
			FROM
			(
				SELECT DISTINCT dbo.DATA0006.WORK_ORDER_NUMBER
									FROM         dbo.DATA0006 INNER JOIN
												  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
												  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
												  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
				WHERE LEFT(dbo.DATA0034.DEPT_CODE, 3) = 'CAM'
			) AS tblCAM
			WHERE
				 WORK_ORDER_NUMBER IN (
										SELECT 
											'  -' + BASE_WO + '-01-000'
										FROM         dbo.DATA0006 INNER JOIN
													  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
													  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
													  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
											WHERE   
													dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
													AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
													AND dbo.DATA0034.DEPT_CODE LIKE 'FILM%'
										)
		END

		DECLARE @tblAnlageArtikelFotolabor table(
											D17_PTR NUMERIC(10, 0),
											Abteilung varchar(250),
											Anlage varchar(250),
											Artikel char(20), 
											Bezeichnung char(40), 
											VerbrauchSOLL DECIMAL(20, 7),
											VerrPreis DECIMAL(20, 7),
											LagerEinheit varchar(5)
											)
		
		INSERT @tblAnlageArtikelFotolabor(D17_PTR, Abteilung, Anlage, Artikel, Bezeichnung, VerbrauchSOLL, VerrPreis, LagerEinheit)
		SELECT  DISTINCT dbo.DATA0017.RKEY AS D17_PTR, LIVE2.dbo.MatRueck_Abteilung.Abteilung, 
				LIVE2.dbo.MatRueck_Anlage.Anlage, 
				dbo.DATA0017.INV_PART_NUMBER AS Artikel, 
				dbo.DATA0017.INV_PART_DESCRIPTION AS Bezeichnung, 
				LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, 
				dbo.DATA0017.STD_COST AS VerrPreis,
				dbo.DATA0002.UNIT_CODE AS LagerEinheit
		FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
					  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
					  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
					  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
					  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
					  dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
					  LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
					  dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
		GROUP BY dbo.DATA0017.RKEY, LIVE2.dbo.MatRueck_Abteilung.Abteilung, LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID,
				dbo.DATA0017.INV_PART_NUMBER, dbo.DATA0017.INV_PART_DESCRIPTION, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STOCK_PURCH, 
				dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE, dbo.DATA0017.CONSIGN_ONHAND_QTY,
				dbo.DATA0017.ACTIVE_FLAG, dbo.DATA0017.STD_COST, LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial
		HAVING      dbo.DATA0017.ACTIVE_FLAG='Y' AND (LIVE2.dbo.MatRueck_Anlage.ID = CAST(@para3 AS INT)) 
					AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(1 AS bit)


		SELECT
			Abteilung, 
			Anlage, 
			Artikel, 
			Bezeichnung, 
			Verbrauch,
			Durchsatz,
			Verbrauch*VerrPreis AS abs_Kosten,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch*VerrPreis)/Durchsatz 
				ELSE
					0
			END AS rel_Kosten,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch*VerrPreis)/Durchsatz*100 
				ELSE
					0
			END AS KS_IstKosten,
			VerrPreis*VerbrauchSOLL*100 AS SollKosten,
			CASE
				WHEN (VerrPreis*VerbrauchSOLL*100)>0 AND Durchsatz>0 THEN
					(((Verbrauch*VerrPreis)/Durchsatz*100)-(VerrPreis*VerbrauchSOLL*100.000000))/(VerrPreis*VerbrauchSOLL*100.000000) 
				ELSE
					0
			END AS Abweichung,
			(Verbrauch*VerrPreis)-(VerrPreis*Durchsatz*VerbrauchSOLL) AS MehrMinderKosten,
			(Verbrauch*VerrPreis) AS IstKosten,
			VerrPreis,
			CAST(VerbrauchSOLL*100.000000 AS DECIMAL(20, 7)) AS SollV_100,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch/Durchsatz)*100.000000 
				ELSE
					0
			END AS IstV_100,
			BzgGr,
			LagerEinheit,
			Durchsatz2,
			Durchsatz3,
			ISNULL((
					SELECT TOP 1 CASE WHEN LTRIM(RTRIM(ISNULL(ANALYSIS_CODE5, '')))='' THEN '0' ELSE ANALYSIS_CODE5 END
					 FROM dbo.DATA0017 WHERE RKEY = D17_PTR)
			, 0) AS MatFl

		FROM
		(
			SELECT 
				D17_PTR, 
				Abteilung, 
				Anlage, 
				Artikel, 
				Bezeichnung, 
				CASE
					WHEN @para6='J' THEN 0.35 ELSE VerbrauchSOLL
				END AS VerbrauchSOLL,
				ISNULL((
					ISNULL((
						SELECT
							SUM(ISNULL(tblDATA0095.QUANTITY, 0)) AS RES
						FROM
						(
							SELECT     LIVE2.dbo.MatRueck_Anlage.ID AS Anlage_PTR, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY AS D17_RKEY, dbo.DATA0017.INV_PART_DESCRIPTION AS ArtBezeichnung,
										dbo.DATA0002.UNIT_CODE AS Lagereinheit, dbo.DATA0017.STOCK_PURCH 
							FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
									  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
									  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
									  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
									  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
									  dbo.DATA0034 ON LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR = dbo.DATA0034.RKEY
							WHERE dbo.DATA0034.DEPT_CODE = @para2
							GROUP BY LIVE2.dbo.MatRueck_Anlage.ID, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY, dbo.DATA0017.INV_PART_DESCRIPTION , dbo.DATA0017.STOCK_PURCH, dbo.DATA0002.UNIT_CODE 
							HAVING LIVE2.dbo.MatRueck_Anlage.ID = CAST(@para3 AS INT)--(LIVE2.dbo.MatRueck_Anlage.Anlage = @Anlage)
						) AS tblAnlageArtikel INNER JOIN --LEFT OUTER JOIN 
						(SELECT QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, MONTH(TRAN_DATE) AS Monat, TRAN_TP 
						--FROM dbo.DATA0095 INNER JOIN  dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY 
						FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
						WHERE dbo.DATA0095.TRAN_TP IN (15, 16) AND dbo.DATA0034.DEPT_CODE = @para2
						AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
						AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  
						AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR ) AS tblDATA0095 
						ON tblAnlageArtikel.D17_RKEY = tblDATA0095.INVT_PTR
					), 0)
					+
					ISNULL((
						SELECT 
							ISNULL((
								(-1)*SUM(QUANTITY) 
								*
								ISNULL((
									SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
									FROM LIVE2.dbo.NachKalk_MatVerteilung
									WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = CAST(@para3 AS INT)
											AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = tblAnlageArtikel_.D17_PTR
								), 0) 
							), 0) AS RES 

						FROM 
							dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
						WHERE 
							dbo.DATA0095.TRAN_TP = 23
							AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
							AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
							AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR
					), 0)
				), 0) AS Verbrauch,
				ISNULL((SELECT TOP 1 Durchsatz FROM @tblDurchsatzFotolabor WHERE DEPT_CODE = @para2), 0) AS Durchsatz,
				ISNULL((SELECT TOP 1 BzgGr FROM @tblDurchsatzFotolabor WHERE DEPT_CODE = @para2), 0) AS BzgGr,
				VerrPreis,
				LagerEinheit,
				ISNULL((SELECT TOP 1 Durchsatz2 FROM @tblDurchsatzFotolabor WHERE DEPT_CODE = @para2), 0) AS Durchsatz2,
				ISNULL((SELECT TOP 1 Durchsatz3 FROM @tblDurchsatzFotolabor WHERE DEPT_CODE = @para2), 0) AS Durchsatz3

			FROM @tblAnlageArtikelFotolabor AS tblAnlageArtikel_
		) AS tblJeAnlage
		ORDER BY IstKosten DESC
	END
*/
/*
	IF @Case_ = 'Materialverbrauch_Abwasser'
	BEGIN
			DECLARE @tblDurchsatzAbwasser table(
												DEPT_CODE char(10), 
												Durchsatz NUMERIC(10, 4),
												BzgGr varchar(20)
											)
			IF @para1='Abwasser'
			BEGIN
				INSERT @tblDurchsatzAbwasser(DEPT_CODE, Durchsatz, BzgGr)
				SELECT
					'ABW-01-01' AS DEPT_CODE,
					SUM(RES_) AS Durchsatz,
					'Zu-m2' AS BzgGr
				FROM
				(
					SELECT
						ISNULL((
							SELECT TOP 1    
								SUM(
									(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
									/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000)) 
								AS RES
							FROM         dbo.DATA0006 INNER JOIN
										  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
										  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
										  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
							WHERE    
										dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
										AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
										AND dbo.DATA0034.DEPT_CODE IN ('BLHO-01-01', 'MLDS-01-01', 'MERE-01-03', 'CZIN-01-01'
																		, 'GIES-01-01', 'HBF-01-01', 'HBL-01-01', 'MLBL-01-01', 'CGIN-01-01')
						), 0) AS RES_
					UNION ALL
					SELECT
						ISNULL((
							SELECT TOP 1    
								SUM(
									(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
									/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000)) 
								AS RES
							FROM         dbo.DATA0006 INNER JOIN
										  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
										  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
										  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
							WHERE    
										dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
										AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
										AND LEFT(dbo.DATA0034.DEPT_CODE, 4) IN ('ÄTZA', 'STSN')
						), 0) AS RES_
					UNION ALL
					SELECT
						ISNULL((
							SELECT TOP 1    
								SUM(
									(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
									/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000)) 
								AS RES
							FROM         dbo.DATA0006 INNER JOIN
										  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
										  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
										  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
							WHERE    
										dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
										AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
										AND LEFT(dbo.DATA0034.DEPT_CODE, 5) IN ('ÄTZS-', ' ÄS-MA')
						), 0) AS RES_
					UNION ALL
					SELECT
						ISNULL((
							SELECT TOP 1    
								SUM(
									(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
									/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000)) 
								AS RES
							FROM         dbo.DATA0006 INNER JOIN
										  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
										  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
										  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
							WHERE    
										dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
										AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
										AND LEFT(dbo.DATA0034.DEPT_CODE, 4) = 'LBA-'
						), 0) AS RES_
				) AS tblAbwDurchsatz
			END

		DECLARE @tblAnlageArtikelAbwasser table(
											D17_PTR NUMERIC(10, 0),
											Abteilung varchar(250),
											Anlage varchar(250),
											Artikel char(20), 
											Bezeichnung char(40), 
											VerbrauchSOLL DECIMAL(20, 7),
											VerrPreis DECIMAL(20, 7),
											LagerEinheit varchar(5)
											)

		INSERT @tblAnlageArtikelAbwasser(D17_PTR, Abteilung, Anlage, Artikel, Bezeichnung, VerbrauchSOLL, VerrPreis, LagerEinheit)
		SELECT  DISTINCT dbo.DATA0017.RKEY AS D17_PTR, LIVE2.dbo.MatRueck_Abteilung.Abteilung, 
				'Abwasser' AS Anlage, --LIVE2.dbo.MatRueck_Anlage.Anlage, 
				dbo.DATA0017.INV_PART_NUMBER AS Artikel, 
				dbo.DATA0017.INV_PART_DESCRIPTION AS Bezeichnung, 
				LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, 
				dbo.DATA0017.STD_COST AS VerrPreis,
				dbo.DATA0002.UNIT_CODE AS LagerEinheit
		FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
					  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
					  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
					  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
					  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
					  dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
					  LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
					  dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
		GROUP BY dbo.DATA0017.RKEY, LIVE2.dbo.MatRueck_Abteilung.Abteilung, LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID,
				dbo.DATA0017.INV_PART_NUMBER, dbo.DATA0017.INV_PART_DESCRIPTION, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STOCK_PURCH, 
				dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE, dbo.DATA0017.CONSIGN_ONHAND_QTY,
				dbo.DATA0017.ACTIVE_FLAG, dbo.DATA0017.STD_COST, LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial
		HAVING      dbo.DATA0017.ACTIVE_FLAG='Y' AND (LIVE2.dbo.MatRueck_Anlage.ID IN (50, 51 ))
					AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(1 AS bit)


		SELECT
			Abteilung, 
			Anlage, 
			Artikel, 
			Bezeichnung, 
			Verbrauch,
			Durchsatz,
			Verbrauch*VerrPreis AS abs_Kosten,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch*VerrPreis)/Durchsatz 
				ELSE
					0
			END AS rel_Kosten,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch*VerrPreis)/Durchsatz*100 
				ELSE
					0
			END AS KS_IstKosten,
			VerrPreis*VerbrauchSOLL*100 AS SollKosten,
			CASE
				WHEN (VerrPreis*VerbrauchSOLL*100)>0 AND Durchsatz>0 THEN
					(((Verbrauch*VerrPreis)/Durchsatz*100)-(VerrPreis*VerbrauchSOLL*100.000000))/(VerrPreis*VerbrauchSOLL*100.000000) 
				ELSE
					0
			END AS Abweichung,
			(Verbrauch*VerrPreis)-(VerrPreis*Durchsatz*VerbrauchSOLL) AS MehrMinderKosten,
			(Verbrauch*VerrPreis) AS IstKosten,
			VerrPreis,
			CAST(VerbrauchSOLL*100.000000 AS DECIMAL(20, 7)) AS SollV_100,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch/Durchsatz)*100.000000 
				ELSE
					0
			END AS IstV_100,
			BzgGr,
			LagerEinheit,
			ISNULL((SELECT TOP 1 QUAN_ON_HAND FROM dbo.DATA0017 WHERE RKEY=D17_PTR), 0) AS LB

		FROM
		(
			SELECT 
				D17_PTR, 
				Abteilung, 
				Anlage, 
				Artikel, 
				Bezeichnung, 
				CASE
					WHEN @para6='J' THEN 0.35 ELSE VerbrauchSOLL
				END AS VerbrauchSOLL,
				ISNULL((
					SELECT
						SUM(ISNULL(RES, 0)) AS RES_
					FROM
					(
						SELECT
							'Abw1' AS Abwasser,
							TRAN_DATE,
							DEPT_CODE,
							ArtBezeichnung,
							(ISNULL(tblDATA0095.QUANTITY, 0)) AS RES
						FROM
						(
							SELECT     LIVE2.dbo.MatRueck_Anlage.ID AS Anlage_PTR, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY AS D17_RKEY, dbo.DATA0017.INV_PART_DESCRIPTION AS ArtBezeichnung,
										dbo.DATA0002.UNIT_CODE AS Lagereinheit, dbo.DATA0017.STOCK_PURCH, DEPT_CODE
							FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
									  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
									  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
									  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
									  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
									  dbo.DATA0034 ON LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR = dbo.DATA0034.RKEY
							WHERE dbo.DATA0034.DEPT_CODE IN ('ABW-01-01') --, 'ABW-01-02') --@para2
							GROUP BY LIVE2.dbo.MatRueck_Anlage.ID, LIVE2.dbo.MatRueck_Anlage.Anlage, 
							dbo.DATA0017.RKEY, dbo.DATA0017.INV_PART_DESCRIPTION , dbo.DATA0017.STOCK_PURCH, dbo.DATA0002.UNIT_CODE, DEPT_CODE 
							HAVING LIVE2.dbo.MatRueck_Anlage.ID = 50--(LIVE2.dbo.MatRueck_Anlage.Anlage = @Anlage)
						) AS tblAnlageArtikel INNER JOIN --LEFT OUTER JOIN 
						(SELECT QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, MONTH(TRAN_DATE) AS Monat, TRAN_TP 
						--FROM dbo.DATA0095 INNER JOIN  dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY 
						FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
						WHERE dbo.DATA0095.TRAN_TP IN (15, 16) AND dbo.DATA0034.DEPT_CODE IN ('ABW-01-01') --, 'ABW-01-02')
						AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
						AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR ) AS tblDATA0095 
						ON tblAnlageArtikel.D17_RKEY = tblDATA0095.INVT_PTR
						UNION ALL
						SELECT
							'Abw2' AS Abwasser,
							TRAN_DATE,
							DEPT_CODE,
							ArtBezeichnung,
							(ISNULL(tblDATA0095.QUANTITY, 0)) AS RES
						FROM
						(
							SELECT     LIVE2.dbo.MatRueck_Anlage.ID AS Anlage_PTR, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY AS D17_RKEY, dbo.DATA0017.INV_PART_DESCRIPTION AS ArtBezeichnung,
										dbo.DATA0002.UNIT_CODE AS Lagereinheit, dbo.DATA0017.STOCK_PURCH , DEPT_CODE
							FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
									  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
									  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
									  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
									  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
									  dbo.DATA0034 ON LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR = dbo.DATA0034.RKEY
							WHERE dbo.DATA0034.DEPT_CODE IN ('ABW-01-02') --, 'ABW-01-02') --@para2
							GROUP BY LIVE2.dbo.MatRueck_Anlage.ID, LIVE2.dbo.MatRueck_Anlage.Anlage, 
							dbo.DATA0017.RKEY, dbo.DATA0017.INV_PART_DESCRIPTION , dbo.DATA0017.STOCK_PURCH, dbo.DATA0002.UNIT_CODE, DEPT_CODE 
							HAVING LIVE2.dbo.MatRueck_Anlage.ID = 51--(LIVE2.dbo.MatRueck_Anlage.Anlage = @Anlage)
						) AS tblAnlageArtikel INNER JOIN --LEFT OUTER JOIN 
						(SELECT QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, MONTH(TRAN_DATE) AS Monat, TRAN_TP 
						--FROM dbo.DATA0095 INNER JOIN  dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY 
						FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
						WHERE dbo.DATA0095.TRAN_TP IN (15, 16) AND dbo.DATA0034.DEPT_CODE IN ('ABW-01-02') --, 'ABW-01-02')
						AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
						AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR ) AS tblDATA0095 
						ON tblAnlageArtikel.D17_RKEY = tblDATA0095.INVT_PTR
					) AS tblAbw
				), 0)
				+
				ISNULL((
					SELECT 
						ISNULL((
							(-1)*SUM(QUANTITY) 
							*
							ISNULL((
								SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
								FROM LIVE2.dbo.NachKalk_MatVerteilung
								WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = 50
										AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = tblAnlageArtikel_.D17_PTR
							), 0) 
						), 0) AS RES 

					FROM 
						dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
					WHERE 
						dbo.DATA0095.TRAN_TP = 23
						AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
						AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
						AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR
				), 0) 
				+
				ISNULL((
					SELECT 
						ISNULL((
							(-1)*SUM(QUANTITY) 
							*
							ISNULL((
								SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
								FROM LIVE2.dbo.NachKalk_MatVerteilung
								WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = 51
										AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = tblAnlageArtikel_.D17_PTR
							), 0) 
						), 0) AS RES 

					FROM 
						dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
					WHERE 
						dbo.DATA0095.TRAN_TP = 23
						AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
						AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
						AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR
				), 0)  AS Verbrauch,
				ISNULL((SELECT TOP 1 Durchsatz FROM @tblDurchsatzAbwasser WHERE DEPT_CODE = @para2), 0) AS Durchsatz,
				ISNULL((SELECT TOP 1 BzgGr FROM @tblDurchsatzAbwasser WHERE DEPT_CODE = @para2), 0) AS BzgGr,
				VerrPreis,
				LagerEinheit

			FROM @tblAnlageArtikelAbwasser AS tblAnlageArtikel_
		) AS tblJeAnlage
		ORDER BY IstKosten DESC

	END
*/

	IF @Case_ = 'Materialverbrauch_Giess'
	BEGIN
		--DECLARE 
		--@para2 varchar(255),
		--@para3 varchar(255),
		--@para4 varchar(255),
		--@para5 varchar(255)
		--SET @para2 = 'GIES-01-03'	--Ressource
		--SET @para3 = '49'			--Anlage_PTR
		--SET @para4 = '01.01.2015'	--Datum Von
		--SET @para5 = '31.01.2015'	--Datum Bis

		DECLARE @tblDurchsatzGies table(
												DEPT_CODE char(15), 
												Durchsatz NUMERIC(10, 4),
												BzgGr varchar(20)
											)

		INSERT @tblDurchsatzGies(DEPT_CODE, Durchsatz, BzgGr)
		SELECT
			'GIES-01-01' AS DEPT_CODE,
			ISNULL((
				SELECT
					SUM(
						(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
						/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000) * CASE WHEN dbo.ARTIKELDATEN.LE > 1 THEN 2 ELSE 1 END 
						)
					AS RES
				FROM         dbo.DATA0006 INNER JOIN
									  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
									  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
									  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
									  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
									  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
				WHERE     (dbo.DATA0038.TTYPE = 2)
							AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
							AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
							AND dbo.DATA0034.DEPT_CODE = 'GIES-01-01'
			), 0) AS Durchsatz,
			'Ofl-m2' AS BzgGr

		INSERT @tblDurchsatzGies(DEPT_CODE, Durchsatz, BzgGr)
		SELECT
			'GIES-01-01 ZUm2' AS DEPT_CODE,
			ISNULL((
				SELECT
					SUM(
						(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
						/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000) 
						)
					AS RES
				FROM         dbo.DATA0006 INNER JOIN
									  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
									  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
									  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
									  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
									  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
				WHERE     (dbo.DATA0038.TTYPE = 2)
							AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
							AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
							AND dbo.DATA0034.DEPT_CODE = 'GIES-01-01'
			), 0) AS Durchsatz,
			'ZU-m2' AS BzgGr

		INSERT @tblDurchsatzGies(DEPT_CODE, Durchsatz, BzgGr)
		SELECT
			'GIES-01-01 LWI' AS DEPT_CODE,
			ISNULL((
				--SELECT
				--	SUM(
				--		(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
				--		/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000) 
				--		)
				--	AS RES
				--FROM         dbo.DATA0006 INNER JOIN
				--					  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
				--					  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
				--					  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
				--					  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
				--					  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
				--WHERE     (dbo.DATA0038.TTYPE = 2)
				--			AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
				--			AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
				--			AND dbo.DATA0034.DEPT_CODE = 'GIES-01-01'
				SELECT     
					SUM(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * LIVE2.dbo.Sondermeldungen.RMMenge / 1000000) AS RES
				FROM         LIVE2.dbo.Sondermeldungen INNER JOIN
									  dbo.DATA0006 ON LIVE2.dbo.Sondermeldungen.DATA0006PTR = dbo.DATA0006.RKEY INNER JOIN
									  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
				WHERE
					LIVE2.dbo.Sondermeldungen.RMDatum >= CONVERT(DATETIME, @para4, 103) 
					AND LIVE2.dbo.Sondermeldungen.RMDatum <= CONVERT(DATETIME, @para5, 103)
			), 0) AS Durchsatz,
			'ZU-m2' AS BzgGr


		--SELECT * FROM @tblDurchsatzGies



		DECLARE @tblAnlageArtikelGiess table(
											D17_PTR NUMERIC(10, 0),
											Abteilung varchar(250),
											Anlage varchar(250),
											Artikel char(20), 
											Bezeichnung char(40), 
											VerbrauchSOLL DECIMAL(20, 7),
											VerrPreis DECIMAL(20, 7),
											LagerEinheit varchar(5)
											)

		INSERT @tblAnlageArtikelGiess(D17_PTR, Abteilung, Anlage, Artikel, Bezeichnung, VerbrauchSOLL, VerrPreis, LagerEinheit)
		SELECT  DISTINCT dbo.DATA0017.RKEY AS D17_PTR, LIVE2.dbo.MatRueck_Abteilung.Abteilung, 
				LIVE2.dbo.MatRueck_Anlage.Anlage, 
				dbo.DATA0017.INV_PART_NUMBER AS Artikel, 
				dbo.DATA0017.INV_PART_DESCRIPTION AS Bezeichnung, 
				LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, 
				dbo.DATA0017.STD_COST AS VerrPreis,
				dbo.DATA0002.UNIT_CODE AS LagerEinheit
		FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
					  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
					  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
					  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
					  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
					  dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
					  LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
					  dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
		GROUP BY dbo.DATA0017.RKEY, LIVE2.dbo.MatRueck_Abteilung.Abteilung, LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID,
				dbo.DATA0017.INV_PART_NUMBER, dbo.DATA0017.INV_PART_DESCRIPTION, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STOCK_PURCH, 
				dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE, dbo.DATA0017.CONSIGN_ONHAND_QTY,
				dbo.DATA0017.ACTIVE_FLAG, dbo.DATA0017.STD_COST, LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial
		HAVING      dbo.DATA0017.ACTIVE_FLAG='Y' AND (LIVE2.dbo.MatRueck_Anlage.ID = CAST(@para3 AS INT)) 
					AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(1 AS bit)

		--SELECT * FROM @tblAnlageArtikelGiess

		SELECT
			Abteilung, 
			Anlage, 
			Artikel, 
			Bezeichnung, 
			Verbrauch,
			Durchsatz,
			Durchsatz2,
			Durchsatz3,
			Verbrauch*VerrPreis AS abs_Kosten,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch*VerrPreis)/Durchsatz 
				ELSE
					0
			END AS rel_Kosten,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch*VerrPreis)/Durchsatz*100 
				ELSE
					0
			END AS KS_IstKosten,
			VerrPreis*VerbrauchSOLL*100 AS SollKosten,
			CASE
				WHEN (VerrPreis*VerbrauchSOLL*100)>0 AND Durchsatz>0 THEN
					(((Verbrauch*VerrPreis)/Durchsatz*100)-(VerrPreis*VerbrauchSOLL*100.000000))/(VerrPreis*VerbrauchSOLL*100.000000) 
				ELSE
					0
			END AS Abweichung,
			(Verbrauch*VerrPreis)-(VerrPreis*Durchsatz*VerbrauchSOLL) AS MehrMinderKosten,
			(Verbrauch*VerrPreis) AS IstKosten,
			VerrPreis,
			CAST(VerbrauchSOLL*100.000000 AS DECIMAL(20, 7)) AS SollV_100,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch/Durchsatz)*100.000000 
				ELSE
					0
			END AS IstV_100,
			BzgGr,
			BzgGr2,
			BzgGr3,
			LagerEinheit,
			ISNULL((
				SELECT
					(
						SUM(ISNULL(bis60_HAL_HALBF, 0))*75 + SUM(ISNULL(bis60_nicht_HAL_HALBF, 0))*86.8 + SUM(ISNULL(bis99_HAL_HALBF, 0))*86.8 
						+ SUM(ISNULL(bis99_nicht_HAL_HALBF, 0))*94.7 + SUM(ISNULL(bis150, 0))*134.2 + SUM(ISNULL(ueber150, 0))*155
					)/1000 AS RES
				FROM
				(
					SELECT
						CASE
							WHEN dbo.ARTIKELDATEN.CuD_End<=60 AND (dbo.ARTIKELDATEN.HAL = 1 OR dbo.ARTIKELDATEN.HAL_BF=1) THEN
								ISNULL((
									(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
									/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000) * CASE WHEN dbo.ARTIKELDATEN.LE > 1 THEN 2 ELSE 1 END 
									), 0)
						END AS bis60_HAL_HALBF,
						CASE
							WHEN dbo.ARTIKELDATEN.CuD_End<=60 AND dbo.ARTIKELDATEN.HAL = 0 AND dbo.ARTIKELDATEN.HAL_BF=0 THEN
								ISNULL((
									(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
									/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000) * CASE WHEN dbo.ARTIKELDATEN.LE > 1 THEN 2 ELSE 1 END 
									), 0)
						END AS bis60_nicht_HAL_HALBF,
						CASE
							WHEN dbo.ARTIKELDATEN.CuD_End>60 AND dbo.ARTIKELDATEN.CuD_End<=99  AND (dbo.ARTIKELDATEN.HAL = 1 OR dbo.ARTIKELDATEN.HAL_BF=1) THEN
								ISNULL((
									(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
									/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000) * CASE WHEN dbo.ARTIKELDATEN.LE > 1 THEN 2 ELSE 1 END 
									), 0)
						END AS bis99_HAL_HALBF,
						CASE
							WHEN dbo.ARTIKELDATEN.CuD_End>60 AND dbo.ARTIKELDATEN.CuD_End<=99 AND dbo.ARTIKELDATEN.HAL = 0 AND dbo.ARTIKELDATEN.HAL_BF=0 THEN
								ISNULL((
									(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
									/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000) * CASE WHEN dbo.ARTIKELDATEN.LE > 1 THEN 2 ELSE 1 END 
									), 0)
						END AS bis99_nicht_HAL_HALBF,
						CASE
							WHEN dbo.ARTIKELDATEN.CuD_End>99 AND dbo.ARTIKELDATEN.CuD_End<=150 THEN
								ISNULL((
									(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
									/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000) * CASE WHEN dbo.ARTIKELDATEN.LE > 1 THEN 2 ELSE 1 END 
									), 0)
						END AS bis150,
						CASE
							WHEN dbo.ARTIKELDATEN.CuD_End>150 THEN
								ISNULL((
									(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
									/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000) * CASE WHEN dbo.ARTIKELDATEN.LE > 1 THEN 2 ELSE 1 END 
									), 0)
						END AS ueber150


					FROM         dbo.DATA0006 INNER JOIN
										  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
										  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
										  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
										  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
										  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
					WHERE     (dbo.DATA0038.TTYPE = 2)
								AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
								AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
								AND dbo.DATA0034.DEPT_CODE = 'GIES-01-01'
				) AS tblGies
			), 0) AS SOLLVerbrauch_Abs_Lack,
			ISNULL((
				SELECT
					(
						SUM(ISNULL(bis60_HAL_HALBF, 0))*20 + SUM(ISNULL(bis60_nicht_HAL_HALBF, 0))*23.2 + SUM(ISNULL(bis99_HAL_HALBF, 0))*23.2 
						+ SUM(ISNULL(bis99_nicht_HAL_HALBF, 0))*25.3 + SUM(ISNULL(bis150, 0))*35.8 + SUM(ISNULL(ueber150, 0))*41.3
					)/1000 AS RES
				FROM
				(
					SELECT
						CASE
							WHEN dbo.ARTIKELDATEN.CuD_End<=60 AND (dbo.ARTIKELDATEN.HAL = 1 OR dbo.ARTIKELDATEN.HAL_BF=1) THEN
								ISNULL((
									(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
									/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000) * CASE WHEN dbo.ARTIKELDATEN.LE > 1 THEN 2 ELSE 1 END 
									), 0)
						END AS bis60_HAL_HALBF,
						CASE
							WHEN dbo.ARTIKELDATEN.CuD_End<=60 AND dbo.ARTIKELDATEN.HAL = 0 AND dbo.ARTIKELDATEN.HAL_BF=0 THEN
								ISNULL((
									(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
									/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000) * CASE WHEN dbo.ARTIKELDATEN.LE > 1 THEN 2 ELSE 1 END 
									), 0)
						END AS bis60_nicht_HAL_HALBF,
						CASE
							WHEN dbo.ARTIKELDATEN.CuD_End>60 AND dbo.ARTIKELDATEN.CuD_End<=99  AND (dbo.ARTIKELDATEN.HAL = 1 OR dbo.ARTIKELDATEN.HAL_BF=1) THEN
								ISNULL((
									(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
									/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000) * CASE WHEN dbo.ARTIKELDATEN.LE > 1 THEN 2 ELSE 1 END 
									), 0)
						END AS bis99_HAL_HALBF,
						CASE
							WHEN dbo.ARTIKELDATEN.CuD_End>60 AND dbo.ARTIKELDATEN.CuD_End<=99 AND dbo.ARTIKELDATEN.HAL = 0 AND dbo.ARTIKELDATEN.HAL_BF=0 THEN
								ISNULL((
									(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
									/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000) * CASE WHEN dbo.ARTIKELDATEN.LE > 1 THEN 2 ELSE 1 END 
									), 0)
						END AS bis99_nicht_HAL_HALBF,
						CASE
							WHEN dbo.ARTIKELDATEN.CuD_End>99 AND dbo.ARTIKELDATEN.CuD_End<=150 THEN
								ISNULL((
									(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
									/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000) * CASE WHEN dbo.ARTIKELDATEN.LE > 1 THEN 2 ELSE 1 END 
									), 0)
						END AS bis150,
						CASE
							WHEN dbo.ARTIKELDATEN.CuD_End>150 THEN
								ISNULL((
									(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
									/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000) * CASE WHEN dbo.ARTIKELDATEN.LE > 1 THEN 2 ELSE 1 END 
									), 0)
						END AS ueber150


					FROM         dbo.DATA0006 INNER JOIN
										  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
										  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
										  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
										  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
										  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
					WHERE     (dbo.DATA0038.TTYPE = 2)
								AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
								AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
								AND dbo.DATA0034.DEPT_CODE = 'GIES-01-01'
				) AS tblGies
			), 0) AS SOLLVerbrauch_Abs_Verd

		FROM
		(
			SELECT 
				D17_PTR, 
				Abteilung, 
				Anlage, 
				Artikel, 
				Bezeichnung, 
				VerbrauchSOLL,
				(
					CASE
						WHEN D17_PTR=7038 THEN --Stopplack Stripper
							ISNULL((
								SELECT
									SUM(ISNULL(tblDATA0095.QUANTITY, 0)) AS RES
								FROM
								(
									SELECT     LIVE2.dbo.MatRueck_Anlage.ID AS Anlage_PTR, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY AS D17_RKEY, dbo.DATA0017.INV_PART_DESCRIPTION AS ArtBezeichnung,
												dbo.DATA0002.UNIT_CODE AS Lagereinheit, dbo.DATA0017.STOCK_PURCH 
									FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
											  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
											  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
											  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
											  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
											  dbo.DATA0034 ON LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR = dbo.DATA0034.RKEY
									--WHERE dbo.DATA0034.DEPT_CODE = @para2
									GROUP BY LIVE2.dbo.MatRueck_Anlage.ID, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY, dbo.DATA0017.INV_PART_DESCRIPTION , dbo.DATA0017.STOCK_PURCH, dbo.DATA0002.UNIT_CODE 
									HAVING LIVE2.dbo.MatRueck_Anlage.ID = CAST(@para3 AS INT)--(LIVE2.dbo.MatRueck_Anlage.Anlage = @Anlage)
								) AS tblAnlageArtikel INNER JOIN --LEFT OUTER JOIN 
								(SELECT QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, MONTH(TRAN_DATE) AS Monat, TRAN_TP 
								--FROM dbo.DATA0095 INNER JOIN  dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY 
								FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
								WHERE dbo.DATA0095.TRAN_TP IN (15, 16) --AND dbo.DATA0034.DEPT_CODE = @para2
								AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
								AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR ) AS tblDATA0095 
								ON tblAnlageArtikel.D17_RKEY = tblDATA0095.INVT_PTR
								--) AS myTblSub	
							), 0)
							+
							ISNULL((
								SELECT 
									ISNULL((
										(-1)*SUM(QUANTITY) 
										*
										ISNULL((
											SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
											FROM LIVE2.dbo.NachKalk_MatVerteilung
											WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = CAST(@para3 AS INT)
													AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = tblAnlageArtikel_.D17_PTR
										), 0) 
									), 0) AS RES 

								FROM 
									dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
								WHERE 
									dbo.DATA0095.TRAN_TP = 23
									AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
									AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
									AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR
							), 0)
						ELSE
							ISNULL((
								SELECT
									SUM(ISNULL(tblDATA0095.QUANTITY, 0)) AS RES
								FROM
								(
									SELECT     LIVE2.dbo.MatRueck_Anlage.ID AS Anlage_PTR, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY AS D17_RKEY, dbo.DATA0017.INV_PART_DESCRIPTION AS ArtBezeichnung,
												dbo.DATA0002.UNIT_CODE AS Lagereinheit, dbo.DATA0017.STOCK_PURCH 
									FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
											  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
											  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
											  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
											  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
											  dbo.DATA0034 ON LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR = dbo.DATA0034.RKEY
									WHERE dbo.DATA0034.DEPT_CODE = @para2
									GROUP BY LIVE2.dbo.MatRueck_Anlage.ID, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY, dbo.DATA0017.INV_PART_DESCRIPTION , dbo.DATA0017.STOCK_PURCH, dbo.DATA0002.UNIT_CODE 
									HAVING LIVE2.dbo.MatRueck_Anlage.ID = CAST(@para3 AS INT)--(LIVE2.dbo.MatRueck_Anlage.Anlage = @Anlage)
								) AS tblAnlageArtikel INNER JOIN --LEFT OUTER JOIN 
								(SELECT QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, MONTH(TRAN_DATE) AS Monat, TRAN_TP 
								--FROM dbo.DATA0095 INNER JOIN  dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY 
								FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
								WHERE dbo.DATA0095.TRAN_TP IN (15, 16) AND dbo.DATA0034.DEPT_CODE = @para2
								AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
								AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR ) AS tblDATA0095 
								ON tblAnlageArtikel.D17_RKEY = tblDATA0095.INVT_PTR
								--) AS myTblSub	
							), 0)
							+
							ISNULL((
								SELECT 
									ISNULL((
										(-1)*SUM(QUANTITY) 
										*
										ISNULL((
											SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
											FROM LIVE2.dbo.NachKalk_MatVerteilung
											WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = CAST(@para3 AS INT)
													AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = tblAnlageArtikel_.D17_PTR
										), 0) 
									), 0) AS RES 

								FROM 
									dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
								WHERE 
									dbo.DATA0095.TRAN_TP = 23
									AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
									AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
									AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR
							), 0)
					END
				) AS Verbrauch,
				ISNULL((SELECT TOP 1 Durchsatz FROM @tblDurchsatzGies WHERE DEPT_CODE = 'GIES-01-01'), 0) AS Durchsatz,
				ISNULL((SELECT TOP 1 BzgGr FROM @tblDurchsatzGies WHERE DEPT_CODE = 'GIES-01-01'), 0) AS BzgGr,
				ISNULL((SELECT TOP 1 Durchsatz FROM @tblDurchsatzGies WHERE DEPT_CODE = 'GIES-01-01 ZUm2'), 0) AS Durchsatz2,
				ISNULL((SELECT TOP 1 BzgGr FROM @tblDurchsatzGies WHERE DEPT_CODE = 'GIES-01-01 ZUm2'), 0) AS BzgGr2,
				ISNULL((SELECT TOP 1 Durchsatz FROM @tblDurchsatzGies WHERE DEPT_CODE = 'GIES-01-01 LWI'), 0) AS Durchsatz3,
				ISNULL((SELECT TOP 1 BzgGr FROM @tblDurchsatzGies WHERE DEPT_CODE = 'GIES-01-01 LWI'), 0) AS BzgGr3,
				VerrPreis,
				LagerEinheit

			FROM @tblAnlageArtikelGiess AS tblAnlageArtikel_
		) AS tblJeAnlage
		ORDER BY IstKosten DESC
	END

	IF @Case_ = 'Materialverbrauch_je_AnlageKonsolidierungHAL'
	BEGIN
		--DECLARE 
		--@para1 varchar(255),
		--@para2 varchar(255),
		--@para4 varchar(255),
		--@para5 varchar(255)
		--SET @para1 = 'HAL'	--Anlage
		--SET @para2 = 'HBF-01-01'	--DEPT CODE
		--SET @para4 = '01.01.2015'	--Datum Von
		--SET @para5 = '31.03.2015'	--Datum Bis

		DECLARE @HalBleifrei varchar(12)

		SET @HalBleifrei = 'x'
		IF @para2 = 'HBF-01-01'
		BEGIN
			SET @HalBleifrei = 'HAL bleifrei'
		END
		IF @para2 = 'HBL-01-01'
		BEGIN
			SET @HalBleifrei = 'HAL PBSN'
		END

		DECLARE @tblAnlageArtikelKonsoHAL table(
											D17_PTR NUMERIC(10, 0),
											Abteilung varchar(250),
											Anlage varchar(250),
											Artikel char(20), 
											Bezeichnung char(40), 
											VerbrauchSOLL DECIMAL(20, 7),
											VerrPreis DECIMAL(20, 7),
											LagerEinheit varchar(5),
											D34_PTR NUMERIC(10, 0)
											)

		INSERT @tblAnlageArtikelKonsoHAL(D17_PTR, Abteilung, Anlage, Artikel, Bezeichnung, VerbrauchSOLL, VerrPreis, LagerEinheit, D34_PTR)
		SELECT  DISTINCT dbo.DATA0017.RKEY AS D17_PTR, 'HAL Konsolidierung' AS Abteilung, 
				LIVE2.dbo.MatRueck_Anlage.Anlage, 
				dbo.DATA0017.INV_PART_NUMBER AS Artikel, 
				dbo.DATA0017.INV_PART_DESCRIPTION AS Bezeichnung, 
				LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, 
				dbo.DATA0017.STD_COST AS VerrPreis,
				dbo.DATA0002.UNIT_CODE AS LagerEinheit,
				--LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR
				(SELECT  TOP 1 D34_PTR FROM LIVE2.dbo.MatRueck_AnlageAbteilung WHERE Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID) AS D34_Dept_PTR
		FROM         LIVE2.dbo.MatRueck_Transaktion INNER JOIN
					  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
					  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
					  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
					  dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
					  LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
					  dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
		GROUP BY dbo.DATA0017.RKEY, LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID,
				dbo.DATA0017.INV_PART_NUMBER, dbo.DATA0017.INV_PART_DESCRIPTION, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STOCK_PURCH, 
				dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE, dbo.DATA0017.CONSIGN_ONHAND_QTY,
				dbo.DATA0017.ACTIVE_FLAG, dbo.DATA0017.STD_COST, LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, 
				LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial, LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR
		HAVING     dbo.DATA0017.ACTIVE_FLAG='Y' AND LIVE2.dbo.MatRueck_Anlage.Anlage IN ('HAL VBH und NBH', @HalBleifrei) 
					AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(1 AS bit) 

		DECLARE @tblDurchsatzKonsHAL table(
												DEPT_CODE char(10), 
												Durchsatz NUMERIC(10, 4)
											)
		INSERT @tblDurchsatzKonsHAL(DEPT_CODE, Durchsatz)
		SELECT
			'BF' AS DEPT_CODE,
			ISNULL((
				SELECT
					SUM(
						(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
						/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000))
					AS RES
				FROM         dbo.DATA0006 INNER JOIN
									  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
									  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
									  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
									  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
									  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
				WHERE     (dbo.DATA0038.TTYPE = 2)
							AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
							AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
							AND dbo.DATA0034.DEPT_CODE = 'HBF-01-01' 
			), 0) AS Durchsatz

		INSERT @tblDurchsatzKonsHAL(DEPT_CODE, Durchsatz)
		SELECT
			'BL' AS DEPT_CODE,
			(
				ISNULL((
					SELECT
						SUM(
							(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
							/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000))
						AS RES
					FROM         dbo.DATA0006 INNER JOIN
										  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
										  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
										  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
										  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
										  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
					WHERE     (dbo.DATA0038.TTYPE = 2)
								AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
								AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
								AND dbo.DATA0034.DEPT_CODE = 'HBL-01-01' 
				), 0) 
				+
				 --s. Email von JHA vom Di 11.08.2015 08:27
				ISNULL((
					SELECT
						SUM(
							(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
							/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000))
						AS RES
					--FROM         dbo.DATA0006 INNER JOIN
					--					  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
					--					  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
					--					  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN
					--					  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
					--					  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR INNER JOIN
					--					  dbo.DATA0005 ON dbo.DATA0056.EMPLOYEE_PTR = dbo.DATA0005.RKEY
					FROM         dbo.DATA0005 INNER JOIN
						  dbo.abfr_0059_GroupBy_TranPtr ON DATA0005.RKEY = dbo.abfr_0059_GroupBy_TranPtr.MaxMitarb RIGHT OUTER JOIN
						  dbo.DATA0006 INNER JOIN
						  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
						  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
						  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN
						  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
						  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR ON 
						  dbo.abfr_0059_GroupBy_TranPtr.TRAN_PTR = dbo.DATA0048.RKEY
					WHERE     (dbo.DATA0038.TTYPE = 2)
								AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
								AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
								AND dbo.DATA0034.DEPT_CODE = 'HBLX-01-01' 
								AND EMPL_CODE='1752' 
								AND dbo.DATA0006.WORK_ORDER_NUMBER NOT IN ('  -097301-01-000', '  -097715-01-000')
				), 0) 

			) AS Durchsatz

		DECLARE
			@Proz_Aufteil AS REAL

		IF @para2 = 'HBF-01-01'
		BEGIN
			SET @Proz_Aufteil = (SELECT Durchsatz FROM @tblDurchsatzKonsHAL WHERE DEPT_CODE='BF')/(SELECT SUM(Durchsatz) AS SumDurchsatz FROM @tblDurchsatzKonsHAL)
		END
		ELSE
		BEGIN
			SET @Proz_Aufteil = (SELECT Durchsatz FROM @tblDurchsatzKonsHAL WHERE DEPT_CODE='BL')/(SELECT SUM(Durchsatz) AS SumDurchsatz FROM @tblDurchsatzKonsHAL)
		END

			
		SELECT
			Abteilung, 
			Anlage, 
			Artikel, 
			Bezeichnung, 
			Verbrauch,
			Durchsatz,
			Verbrauch*VerrPreis AS abs_Kosten,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch*VerrPreis)/Durchsatz 
				ELSE
					0
			END AS rel_Kosten,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch*VerrPreis)/Durchsatz*100 
				ELSE
					0
			END AS KS_IstKosten,
			VerrPreis*VerbrauchSOLL*100 AS SollKosten,
			CASE
				WHEN (VerrPreis*VerbrauchSOLL*100)>0 AND Durchsatz>0 THEN
					(((Verbrauch*VerrPreis)/Durchsatz*100)-(VerrPreis*VerbrauchSOLL*100.000000))/(VerrPreis*VerbrauchSOLL*100.000000) 
				ELSE
					0
			END AS Abweichung,
			(Verbrauch*VerrPreis)-(VerrPreis*Durchsatz*VerbrauchSOLL) AS MehrMinderKosten,
			(Verbrauch*VerrPreis) AS IstKosten,
			VerrPreis,
			CAST(VerbrauchSOLL*100.000000 AS DECIMAL(20, 7)) AS SollV_100,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch/Durchsatz)*100.000000 
				ELSE
					0
			END AS IstV_100,
			BzgGr,
			LagerEinheit,
			Durchsatz2,
			Durchsatz3,
			ISNULL((
					SELECT TOP 1 CASE WHEN LTRIM(RTRIM(ISNULL(ANALYSIS_CODE5, '')))='' THEN '0' ELSE ANALYSIS_CODE5 END
					 FROM dbo.DATA0017 WHERE RKEY = D17_PTR)
			, 0) AS MatFl,
			(
				SELECT TOP 1 CASE WHEN LTRIM(RTRIM(ISNULL(ANALYSIS_CODE1, '')))='' THEN '0' ELSE ANALYSIS_CODE1 END
				FROM dbo.DATA0017 WHERE RKEY = D17_PTR
			) AS AC_01,
			Proz_Aufteil,
			D17_PTR

		FROM
		(
			SELECT 
				D17_PTR, 
				Abteilung, 
				Anlage, 
				Artikel, 
				Bezeichnung, 
				VerbrauchSOLL,
				CASE
					WHEN D17_PTR = 1032 THEN -- Fluxer
						(
							(
								ISNULL((
									SELECT
										SUM(ISNULL(tblDATA0095.QUANTITY, 0)) AS RES
									FROM
									(
										SELECT     LIVE2.dbo.MatRueck_Anlage.ID AS Anlage_PTR, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY AS D17_RKEY, dbo.DATA0017.INV_PART_DESCRIPTION AS ArtBezeichnung,
													dbo.DATA0002.UNIT_CODE AS Lagereinheit, dbo.DATA0017.STOCK_PURCH 
										FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
												  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
												  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
												  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
												  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
												  dbo.DATA0034 ON LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR = dbo.DATA0034.RKEY
										GROUP BY LIVE2.dbo.MatRueck_Anlage.ID, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY, dbo.DATA0017.INV_PART_DESCRIPTION , dbo.DATA0017.STOCK_PURCH, dbo.DATA0002.UNIT_CODE 
										HAVING LIVE2.dbo.MatRueck_Anlage.ID = 46--(LIVE2.dbo.MatRueck_Anlage.Anlage = @Anlage)
									) AS tblAnlageArtikel INNER JOIN --LEFT OUTER JOIN 
									(SELECT QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, MONTH(TRAN_DATE) AS Monat, TRAN_TP 
									--FROM dbo.DATA0095 INNER JOIN  dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY 
									FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
									WHERE dbo.DATA0095.TRAN_TP IN (15, 16) 
									AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
									AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  
									AND dbo.DATA0095.INVT_PTR = 1032 ) AS tblDATA0095 
									ON tblAnlageArtikel.D17_RKEY = tblDATA0095.INVT_PTR
									--) AS myTblSub	
								), 0)
								+
								ISNULL((
									SELECT 
										ISNULL((
											(-1)*SUM(QUANTITY) 
											*
											ISNULL((
												SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
												FROM LIVE2.dbo.NachKalk_MatVerteilung
												WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = 46
														AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = 1032
											), 0) 
										), 0) AS RES 

									FROM 
										dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
									WHERE 
										dbo.DATA0095.TRAN_TP = 23
										AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
										AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
										AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR
								), 0)
							)
							*
							@Proz_Aufteil 
						)
					ELSE
						(
							(
								CASE
									WHEN D17_PTR = 236 THEN -- Blei/Zinn-Stangen Sn63Pb37, DIN EN 29453
										ISNULL((
											SELECT
												SUM(ISNULL(tblDATA0095.QUANTITY, 0)) AS RES
											FROM
											(
												SELECT     LIVE2.dbo.MatRueck_Anlage.ID AS Anlage_PTR, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY AS D17_RKEY, dbo.DATA0017.INV_PART_DESCRIPTION AS ArtBezeichnung,
															dbo.DATA0002.UNIT_CODE AS Lagereinheit, dbo.DATA0017.STOCK_PURCH 
												FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
														  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
														  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
														  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
														  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
														  dbo.DATA0034 ON LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR = dbo.DATA0034.RKEY
												--WHERE dbo.DATA0034.RKEY = tblAnlageArtikel_.D34_PTR--@para2
												GROUP BY LIVE2.dbo.MatRueck_Anlage.ID, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY, dbo.DATA0017.INV_PART_DESCRIPTION , dbo.DATA0017.STOCK_PURCH, dbo.DATA0002.UNIT_CODE 
												HAVING LIVE2.dbo.MatRueck_Anlage.ID = CAST((SELECT TOP 1 ID FROM LIVE2.dbo.MatRueck_Anlage WHERE LIVE2.dbo.MatRueck_Anlage.Anlage COLLATE SQL_Latin1_General_CP1_CI_AS = tblAnlageArtikel_.Anlage) AS INT)--(LIVE2.dbo.MatRueck_Anlage.Anlage = @Anlage)
											) AS tblAnlageArtikel INNER JOIN --LEFT OUTER JOIN 
											(SELECT QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, MONTH(TRAN_DATE) AS Monat, TRAN_TP 
											--FROM dbo.DATA0095 INNER JOIN  dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY 
											FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
											WHERE dbo.DATA0095.TRAN_TP IN (15, 16) AND dbo.DATA0034.RKEY = tblAnlageArtikel_.D34_PTR -- @para2
												AND dbo.DATA0095.TRAN_DATE <> CONVERT(DATETIME, '01.08.2015', 103)
												AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
												AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  
												AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR ) AS tblDATA0095 
											ON tblAnlageArtikel.D17_RKEY = tblDATA0095.INVT_PTR
											--) AS myTblSub	
										), 0)
									ELSE
										ISNULL((
											SELECT
												SUM(ISNULL(tblDATA0095.QUANTITY, 0)) AS RES
											FROM
											(
												SELECT     LIVE2.dbo.MatRueck_Anlage.ID AS Anlage_PTR, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY AS D17_RKEY, dbo.DATA0017.INV_PART_DESCRIPTION AS ArtBezeichnung,
															dbo.DATA0002.UNIT_CODE AS Lagereinheit, dbo.DATA0017.STOCK_PURCH 
												FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
														  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
														  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
														  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
														  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
														  dbo.DATA0034 ON LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR = dbo.DATA0034.RKEY
												--WHERE dbo.DATA0034.RKEY = tblAnlageArtikel_.D34_PTR--@para2
												GROUP BY LIVE2.dbo.MatRueck_Anlage.ID, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY, dbo.DATA0017.INV_PART_DESCRIPTION , dbo.DATA0017.STOCK_PURCH, dbo.DATA0002.UNIT_CODE 
												HAVING LIVE2.dbo.MatRueck_Anlage.ID = CAST((SELECT TOP 1 ID FROM LIVE2.dbo.MatRueck_Anlage WHERE LIVE2.dbo.MatRueck_Anlage.Anlage COLLATE SQL_Latin1_General_CP1_CI_AS =tblAnlageArtikel_.Anlage) AS INT)--(LIVE2.dbo.MatRueck_Anlage.Anlage = @Anlage)
											) AS tblAnlageArtikel INNER JOIN --LEFT OUTER JOIN 
											(SELECT QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, MONTH(TRAN_DATE) AS Monat, TRAN_TP 
											--FROM dbo.DATA0095 INNER JOIN  dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY 
											FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
											WHERE dbo.DATA0095.TRAN_TP IN (15, 16) AND dbo.DATA0034.RKEY = tblAnlageArtikel_.D34_PTR -- @para2
												AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
												AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  
												AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR ) AS tblDATA0095 
											ON tblAnlageArtikel.D17_RKEY = tblDATA0095.INVT_PTR
											--) AS myTblSub	
										), 0)
								END
								+
								ISNULL((
									SELECT 
										ISNULL((
											(-1)*SUM(QUANTITY) 
											*
											ISNULL((
												SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
												FROM LIVE2.dbo.NachKalk_MatVerteilung
												WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = CAST((SELECT TOP 1 ID FROM LIVE2.dbo.MatRueck_Anlage WHERE LIVE2.dbo.MatRueck_Anlage.Anlage COLLATE SQL_Latin1_General_CP1_CI_AS =tblAnlageArtikel_.Anlage) AS INT)
														AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = tblAnlageArtikel_.D17_PTR
											), 0) 
										), 0) AS RES 

									FROM 
										dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
									WHERE 
										dbo.DATA0095.TRAN_TP = 23
										AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
										AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
										AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR
								), 0)
							)
							*
							CASE 
								WHEN RTRIM(Anlage)='HAL VBH und NBH' THEN 
									@Proz_Aufteil 
								ELSE 
									CASE
										WHEN @para2 = 'HBF-01-01' AND RTRIM(Anlage)='HAL bleifrei' THEN
											1
										ELSE
											CASE
												WHEN @para2 = 'HBL-01-01' AND RTRIM(Anlage)='HAL PBSN' THEN
													1
												ELSE
													0
											END
									END
							END 
						)
				END AS Verbrauch,
				CASE
					WHEN @para2 = 'HBF-01-01' THEN
						ISNULL((SELECT Durchsatz FROM @tblDurchsatzKonsHAL WHERE DEPT_CODE='BF'), 0)
					ELSE
						ISNULL((SELECT Durchsatz FROM @tblDurchsatzKonsHAL WHERE DEPT_CODE='BL'), 0)
				END AS Durchsatz,
				'' AS BzgGr,
				VerrPreis,
				LagerEinheit,
				0 AS Durchsatz2,
				0 AS Durchsatz3,
				@Proz_Aufteil AS Proz_Aufteil

			FROM @tblAnlageArtikelKonsoHAL AS tblAnlageArtikel_
		) AS tblJeAnlage
		ORDER BY IstKosten DESC
	END

	IF @Case_ = 'Materialverbrauch_je_AnlageKonsolidierung'
	BEGIN
		--DECLARE 
		--@para1 varchar(255),
		--@para4 varchar(255),
		--@para5 varchar(255)
		--SET @para1 = 'HAL'	--Anlage
		--SET @para4 = '01.01.2015'	--Datum Von
		--SET @para5 = '31.03.2015'	--Datum Bis

		DECLARE @tblAnlageArtikelKonso table(
											D17_PTR NUMERIC(10, 0),
											Abteilung varchar(250),
											Anlage varchar(250),
											Artikel char(20), 
											Bezeichnung char(40), 
											VerbrauchSOLL DECIMAL(20, 7),
											VerrPreis DECIMAL(20, 7),
											LagerEinheit varchar(5),
											D34_PTR NUMERIC(10, 0)
											)


		IF @para1='HAL'
		BEGIN
			INSERT @tblAnlageArtikelKonso(D17_PTR, Abteilung, Anlage, Artikel, Bezeichnung, VerbrauchSOLL, VerrPreis, LagerEinheit, D34_PTR)
			SELECT  DISTINCT dbo.DATA0017.RKEY AS D17_PTR, 'HAL' AS Abteilung, 
					LIVE2.dbo.MatRueck_Anlage.Anlage, 
					dbo.DATA0017.INV_PART_NUMBER AS Artikel, 
					dbo.DATA0017.INV_PART_DESCRIPTION AS Bezeichnung, 
					LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, 
					dbo.DATA0017.STD_COST AS VerrPreis,
					dbo.DATA0002.UNIT_CODE AS LagerEinheit,
					--LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR
					(SELECT  TOP 1 D34_PTR FROM LIVE2.dbo.MatRueck_AnlageAbteilung WHERE Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID) AS D34_Dept_PTR
			FROM         LIVE2.dbo.MatRueck_Transaktion INNER JOIN
						  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
						  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
						  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
						  dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
						  LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
						  dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
			GROUP BY dbo.DATA0017.RKEY, LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID,
					dbo.DATA0017.INV_PART_NUMBER, dbo.DATA0017.INV_PART_DESCRIPTION, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STOCK_PURCH, 
					dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE, dbo.DATA0017.CONSIGN_ONHAND_QTY,
					dbo.DATA0017.ACTIVE_FLAG, dbo.DATA0017.STD_COST, LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, 
					LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial, LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR
			HAVING     dbo.DATA0017.ACTIVE_FLAG='Y' AND LIVE2.dbo.MatRueck_Anlage.Anlage IN ('HAL PBSN', 'HAL bleifrei', 'HAL VBH und NBH')  
						AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(1 AS bit) 
		END
		ELSE
		BEGIN
			INSERT @tblAnlageArtikelKonso(D17_PTR, Abteilung, Anlage, Artikel, Bezeichnung, VerbrauchSOLL, VerrPreis, LagerEinheit, D34_PTR)
			SELECT  DISTINCT dbo.DATA0017.RKEY AS D17_PTR, LIVE2.dbo.MatRueck_Abteilung.Abteilung, 
					LIVE2.dbo.MatRueck_Anlage.Anlage, 
					dbo.DATA0017.INV_PART_NUMBER AS Artikel, 
					dbo.DATA0017.INV_PART_DESCRIPTION AS Bezeichnung, 
					LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, 
					dbo.DATA0017.STD_COST AS VerrPreis,
					dbo.DATA0002.UNIT_CODE AS LagerEinheit,
					--LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR
					(SELECT  TOP 1 D34_PTR FROM LIVE2.dbo.MatRueck_AnlageAbteilung WHERE Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID) AS D34_Dept_PTR
			FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
						  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
						  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
						  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
						  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
						  dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
						  LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
						  dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
			GROUP BY dbo.DATA0017.RKEY, LIVE2.dbo.MatRueck_Abteilung.Abteilung, LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID,
					dbo.DATA0017.INV_PART_NUMBER, dbo.DATA0017.INV_PART_DESCRIPTION, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STOCK_PURCH, 
					dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE, dbo.DATA0017.CONSIGN_ONHAND_QTY,
					dbo.DATA0017.ACTIVE_FLAG, dbo.DATA0017.STD_COST, LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, 
					LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial, LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR
			HAVING      dbo.DATA0017.ACTIVE_FLAG='Y' AND LIVE2.dbo.MatRueck_Abteilung.Abteilung = @para1  
						AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(1 AS bit)
		END

		SELECT
			Abteilung, 
			Anlage, 
			Artikel, 
			Bezeichnung, 
			Verbrauch,
			Durchsatz,
			Verbrauch*VerrPreis AS abs_Kosten,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch*VerrPreis)/Durchsatz 
				ELSE
					0
			END AS rel_Kosten,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch*VerrPreis)/Durchsatz*100 
				ELSE
					0
			END AS KS_IstKosten,
			VerrPreis*VerbrauchSOLL*100 AS SollKosten,
			CASE
				WHEN (VerrPreis*VerbrauchSOLL*100)>0 AND Durchsatz>0 THEN
					(((Verbrauch*VerrPreis)/Durchsatz*100)-(VerrPreis*VerbrauchSOLL*100.000000))/(VerrPreis*VerbrauchSOLL*100.000000) 
				ELSE
					0
			END AS Abweichung,
			(Verbrauch*VerrPreis)-(VerrPreis*Durchsatz*VerbrauchSOLL) AS MehrMinderKosten,
			(Verbrauch*VerrPreis) AS IstKosten,
			VerrPreis,
			CAST(VerbrauchSOLL*100.000000 AS DECIMAL(20, 7)) AS SollV_100,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch/Durchsatz)*100.000000 
				ELSE
					0
			END AS IstV_100,
			BzgGr,
			LagerEinheit,
			ISNULL((
				CASE
					WHEN Anlage='Gießlinie' THEN
						(SELECT
							(
								SUM(ISNULL(bis60_HAL_HALBF, 0))*75 + SUM(ISNULL(bis60_nicht_HAL_HALBF, 0))*86.8 + SUM(ISNULL(bis99_HAL_HALBF, 0))*86.8 
								+ SUM(ISNULL(bis99_nicht_HAL_HALBF, 0))*94.7 + SUM(ISNULL(bis150, 0))*134.2 + SUM(ISNULL(ueber150, 0))*155
							)/1000 AS RES
						FROM
						(
							SELECT
								CASE
									WHEN dbo.ARTIKELDATEN.CuD_End<=60 AND (dbo.ARTIKELDATEN.HAL = 1 OR dbo.ARTIKELDATEN.HAL_BF=1) THEN
										ISNULL((
											(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
											/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000) * CASE WHEN dbo.ARTIKELDATEN.LE > 1 THEN 2 ELSE 1 END 
											), 0)
								END AS bis60_HAL_HALBF,
								CASE
									WHEN dbo.ARTIKELDATEN.CuD_End<=60 AND dbo.ARTIKELDATEN.HAL = 0 AND dbo.ARTIKELDATEN.HAL_BF=0 THEN
										ISNULL((
											(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
											/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000) * CASE WHEN dbo.ARTIKELDATEN.LE > 1 THEN 2 ELSE 1 END 
											), 0)
								END AS bis60_nicht_HAL_HALBF,
								CASE
									WHEN dbo.ARTIKELDATEN.CuD_End>60 AND dbo.ARTIKELDATEN.CuD_End<=99  AND (dbo.ARTIKELDATEN.HAL = 1 OR dbo.ARTIKELDATEN.HAL_BF=1) THEN
										ISNULL((
											(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
											/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000) * CASE WHEN dbo.ARTIKELDATEN.LE > 1 THEN 2 ELSE 1 END 
											), 0)
								END AS bis99_HAL_HALBF,
								CASE
									WHEN dbo.ARTIKELDATEN.CuD_End>60 AND dbo.ARTIKELDATEN.CuD_End<=99 AND dbo.ARTIKELDATEN.HAL = 0 AND dbo.ARTIKELDATEN.HAL_BF=0 THEN
										ISNULL((
											(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
											/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000) * CASE WHEN dbo.ARTIKELDATEN.LE > 1 THEN 2 ELSE 1 END 
											), 0)
								END AS bis99_nicht_HAL_HALBF,
								CASE
									WHEN dbo.ARTIKELDATEN.CuD_End>99 AND dbo.ARTIKELDATEN.CuD_End<=150 THEN
										ISNULL((
											(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
											/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000) * CASE WHEN dbo.ARTIKELDATEN.LE > 1 THEN 2 ELSE 1 END 
											), 0)
								END AS bis150,
								CASE
									WHEN dbo.ARTIKELDATEN.CuD_End>150 THEN
										ISNULL((
											(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
											/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000) * CASE WHEN dbo.ARTIKELDATEN.LE > 1 THEN 2 ELSE 1 END 
											), 0)
								END AS ueber150


							FROM         dbo.DATA0006 INNER JOIN
												  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
												  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
												  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
												  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
												  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
							WHERE     (dbo.DATA0038.TTYPE = 2)
										AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
										AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
										AND dbo.DATA0034.DEPT_CODE = 'GIES-01-01'
						) AS tblGies)
					ELSE
						0
				END
			), 0) AS SOLLVerbrauch_Abs_Lack,
			ISNULL((
				CASE
					WHEN Anlage='Gießlinie' THEN
						(SELECT
							(
								SUM(ISNULL(bis60_HAL_HALBF, 0))*20 + SUM(ISNULL(bis60_nicht_HAL_HALBF, 0))*23.2 + SUM(ISNULL(bis99_HAL_HALBF, 0))*23.2 
								+ SUM(ISNULL(bis99_nicht_HAL_HALBF, 0))*25.3 + SUM(ISNULL(bis150, 0))*35.8 + SUM(ISNULL(ueber150, 0))*41.3
							)/1000 AS RES
						FROM
						(
							SELECT
								CASE
									WHEN dbo.ARTIKELDATEN.CuD_End<=60 AND (dbo.ARTIKELDATEN.HAL = 1 OR dbo.ARTIKELDATEN.HAL_BF=1) THEN
										ISNULL((
											(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
											/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000) * CASE WHEN dbo.ARTIKELDATEN.LE > 1 THEN 2 ELSE 1 END 
											), 0)
								END AS bis60_HAL_HALBF,
								CASE
									WHEN dbo.ARTIKELDATEN.CuD_End<=60 AND dbo.ARTIKELDATEN.HAL = 0 AND dbo.ARTIKELDATEN.HAL_BF=0 THEN
										ISNULL((
											(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
											/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000) * CASE WHEN dbo.ARTIKELDATEN.LE > 1 THEN 2 ELSE 1 END 
											), 0)
								END AS bis60_nicht_HAL_HALBF,
								CASE
									WHEN dbo.ARTIKELDATEN.CuD_End>60 AND dbo.ARTIKELDATEN.CuD_End<=99  AND (dbo.ARTIKELDATEN.HAL = 1 OR dbo.ARTIKELDATEN.HAL_BF=1) THEN
										ISNULL((
											(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
											/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000) * CASE WHEN dbo.ARTIKELDATEN.LE > 1 THEN 2 ELSE 1 END 
											), 0)
								END AS bis99_HAL_HALBF,
								CASE
									WHEN dbo.ARTIKELDATEN.CuD_End>60 AND dbo.ARTIKELDATEN.CuD_End<=99 AND dbo.ARTIKELDATEN.HAL = 0 AND dbo.ARTIKELDATEN.HAL_BF=0 THEN
										ISNULL((
											(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
											/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000) * CASE WHEN dbo.ARTIKELDATEN.LE > 1 THEN 2 ELSE 1 END 
											), 0)
								END AS bis99_nicht_HAL_HALBF,
								CASE
									WHEN dbo.ARTIKELDATEN.CuD_End>99 AND dbo.ARTIKELDATEN.CuD_End<=150 THEN
										ISNULL((
											(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
											/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000) * CASE WHEN dbo.ARTIKELDATEN.LE > 1 THEN 2 ELSE 1 END 
											), 0)
								END AS bis150,
								CASE
									WHEN dbo.ARTIKELDATEN.CuD_End>150 THEN
										ISNULL((
											(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
											/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000) * CASE WHEN dbo.ARTIKELDATEN.LE > 1 THEN 2 ELSE 1 END 
											), 0)
								END AS ueber150


							FROM         dbo.DATA0006 INNER JOIN
												  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
												  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
												  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
												  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
												  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
							WHERE     (dbo.DATA0038.TTYPE = 2)
										AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
										AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
										AND dbo.DATA0034.DEPT_CODE = 'GIES-01-01'
						) AS tblGies)
					ELSE
						0
				END
			), 0) AS SOLLVerbrauch_Abs_Verd,
			Durchsatz2,
			Durchsatz3,
			ISNULL((
					SELECT TOP 1 CASE WHEN LTRIM(RTRIM(ISNULL(ANALYSIS_CODE5, '')))='' THEN '0' ELSE ANALYSIS_CODE5 END
					 FROM dbo.DATA0017 WHERE RKEY = D17_PTR)
			, 0) AS MatFl,
			(
				SELECT TOP 1 CASE WHEN LTRIM(RTRIM(ISNULL(ANALYSIS_CODE1, '')))='' THEN '0' ELSE ANALYSIS_CODE1 END
				FROM dbo.DATA0017 WHERE RKEY = D17_PTR
			) AS AC_01,
			ISNULL((
				--SELECT
				--	SUM(dbo.ARTIKELDATEN.KapAnzPkt) AS RES
				--FROM
				--dbo.ARTIKELDATEN
				--WHERE CUST_PART_PTR IN 
				--					(
				--						SELECT DISTINCT
				--							dbo.ARTIKELDATEN.CUST_PART_PTR
				--						FROM         dbo.DATA0006 INNER JOIN
				--											  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
				--											  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
				--						WHERE     dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
				--									AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103)
				--					)
				SELECT TOP 1
					SUM(ELP * KapAnzPkt) AS RES
				FROM
				(
							SELECT DISTINCT
								dbo.DATA0006.WORK_ORDER_NUMBER,
								CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) AS ELP,
								(SELECT TOP 1 CUSTOMER_PART_NUMBER FROM dbo.DATA0050 WHERE RKEY=dbo.ARTIKELDATEN.CUST_PART_PTR) AS Artikel,
								dbo.ARTIKELDATEN.KapAnzPkt
								--dbo.ARTIKELDATEN.CUST_PART_PTR
							FROM         dbo.DATA0006 INNER JOIN
							  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
							  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
							  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
							WHERE		dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
										AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) AND KapAnzPkt>0
										AND LEFT(dbo.DATA0034.DEPT_CODE, 4) = 'KLEB'
										AND dbo.DATA0048.RKEY NOT IN (
																		SELECT
																			MaxID
																		FROM
																		(
																			SELECT 
																				COUNT(dbo.DATA0048.RKEY) AS RES,
																				MAX(dbo.DATA0048.RKEY) AS MaxID,
																				dbo.DATA0006.WORK_ORDER_NUMBER
																			FROM         dbo.DATA0006 INNER JOIN
																						  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
																						  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
																						  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
																			WHERE    
																						dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
																						AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
																						AND LEFT(dbo.DATA0034.DEPT_CODE, 4) = 'KLEB' AND dbo.DATA0048.QTY_PROD>0
																						
																			GROUP BY
																			dbo.DATA0006.WORK_ORDER_NUMBER
																		) AS tblWOGrp
																		WHERE RES>1
																	)
				) AS tblELPKapAnzPkt
			), 0) AS KapAnzPkt,
			ISNULL((
					SELECT
						SUM(ELP * KapFlELPqdm) AS RES
					FROM
					(
						SELECT DISTINCT
							dbo.ARTIKELDATEN.CUST_PART_PTR,
							CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) AS ELP,
							dbo.ARTIKELDATEN.KapFlELPqdm
						FROM         dbo.DATA0006 INNER JOIN
											  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
											  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
						WHERE     dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
									AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103)
					) AS tblCustPart
			), 0) AS MatVerbAbsSoll_KlebeFolie

		FROM
		(
			SELECT 
				D17_PTR, 
				Abteilung, 
				Anlage, 
				Artikel, 
				Bezeichnung, 
				VerbrauchSOLL,
				CASE
					WHEN CAST((SELECT TOP 1 ID FROM LIVE2.dbo.MatRueck_Anlage WHERE LIVE2.dbo.MatRueck_Anlage.Anlage COLLATE SQL_Latin1_General_CP1_CI_AS =tblAnlageArtikel_.Anlage) AS INT)=145 THEN
						ISNULL((
							SELECT
								SUM(ISNULL(tblDATA0095.QUANTITY, 0)) AS RES
							FROM
							(
								SELECT     LIVE2.dbo.MatRueck_Anlage.ID AS Anlage_PTR, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY AS D17_RKEY, dbo.DATA0017.INV_PART_DESCRIPTION AS ArtBezeichnung,
											dbo.DATA0002.UNIT_CODE AS Lagereinheit, dbo.DATA0017.STOCK_PURCH 
								FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
										  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
										  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
										  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
										  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
										  dbo.DATA0034 ON LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR = dbo.DATA0034.RKEY
								WHERE dbo.DATA0034.DEPT_CODE IN ('QS-01-08', 'VERS-03-01') --@para2
								GROUP BY LIVE2.dbo.MatRueck_Anlage.ID, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY, dbo.DATA0017.INV_PART_DESCRIPTION , dbo.DATA0017.STOCK_PURCH, dbo.DATA0002.UNIT_CODE 
								HAVING LIVE2.dbo.MatRueck_Anlage.ID = CAST((SELECT TOP 1 ID FROM LIVE2.dbo.MatRueck_Anlage WHERE LIVE2.dbo.MatRueck_Anlage.Anlage COLLATE SQL_Latin1_General_CP1_CI_AS =tblAnlageArtikel_.Anlage) AS INT)--(LIVE2.dbo.MatRueck_Anlage.Anlage = @Anlage)
							) AS tblAnlageArtikel INNER JOIN --LEFT OUTER JOIN 
							(SELECT QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, MONTH(TRAN_DATE) AS Monat, TRAN_TP 
							--FROM dbo.DATA0095 INNER JOIN  dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY 
							FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
							WHERE dbo.DATA0095.TRAN_TP IN (15, 16) AND dbo.DATA0034.DEPT_CODE IN ('QS-01-08', 'VERS-03-01')
							AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
							AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR ) AS tblDATA0095 
							ON tblAnlageArtikel.D17_RKEY = tblDATA0095.INVT_PTR
							--) AS myTblSub	
						), 0)
						+
						ISNULL((
							SELECT 
								ISNULL((
									(-1)*SUM(QUANTITY) 
									*
									ISNULL((
										SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
										FROM LIVE2.dbo.NachKalk_MatVerteilung
										WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = CAST((SELECT TOP 1 ID FROM LIVE2.dbo.MatRueck_Anlage WHERE LIVE2.dbo.MatRueck_Anlage.Anlage COLLATE SQL_Latin1_General_CP1_CI_AS =tblAnlageArtikel_.Anlage) AS INT)
												AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = tblAnlageArtikel_.D17_PTR
									), 0) 
								), 0) AS RES 

							FROM 
								dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
							WHERE 
								dbo.DATA0095.TRAN_TP = 23
								AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
								AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
								AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR
						), 0)
					ELSE
						CASE 
							WHEN CAST((SELECT TOP 1 ID FROM LIVE2.dbo.MatRueck_Anlage WHERE LIVE2.dbo.MatRueck_Anlage.Anlage COLLATE SQL_Latin1_General_CP1_CI_AS =tblAnlageArtikel_.Anlage) AS INT)=50 THEN
								ISNULL((
									SELECT
										SUM(ISNULL(RES, 0)) AS RES_
									FROM
									(
										SELECT
											'Abw1' AS Abwasser,
											TRAN_DATE,
											DEPT_CODE,
											ArtBezeichnung,
											(ISNULL(tblDATA0095.QUANTITY, 0)) AS RES
										FROM
										(
											SELECT     LIVE2.dbo.MatRueck_Anlage.ID AS Anlage_PTR, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY AS D17_RKEY, dbo.DATA0017.INV_PART_DESCRIPTION AS ArtBezeichnung,
														dbo.DATA0002.UNIT_CODE AS Lagereinheit, dbo.DATA0017.STOCK_PURCH, DEPT_CODE
											FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
													  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
													  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
													  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
													  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
													  dbo.DATA0034 ON LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR = dbo.DATA0034.RKEY
											WHERE dbo.DATA0034.DEPT_CODE IN ('ABW-01-01') --, 'ABW-01-02') --@para2
											GROUP BY LIVE2.dbo.MatRueck_Anlage.ID, LIVE2.dbo.MatRueck_Anlage.Anlage, 
											dbo.DATA0017.RKEY, dbo.DATA0017.INV_PART_DESCRIPTION , dbo.DATA0017.STOCK_PURCH, dbo.DATA0002.UNIT_CODE, DEPT_CODE 
											HAVING LIVE2.dbo.MatRueck_Anlage.ID = 50--(LIVE2.dbo.MatRueck_Anlage.Anlage = @Anlage)
										) AS tblAnlageArtikel INNER JOIN --LEFT OUTER JOIN 
										(SELECT QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, MONTH(TRAN_DATE) AS Monat, TRAN_TP 
										--FROM dbo.DATA0095 INNER JOIN  dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY 
										FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
										WHERE dbo.DATA0095.TRAN_TP IN (15, 16) AND dbo.DATA0034.DEPT_CODE IN ('ABW-01-01') --, 'ABW-01-02')
										AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
										AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR ) AS tblDATA0095 
										ON tblAnlageArtikel.D17_RKEY = tblDATA0095.INVT_PTR
										UNION ALL
										SELECT
											'Abw2' AS Abwasser,
											TRAN_DATE,
											DEPT_CODE,
											ArtBezeichnung,
											(ISNULL(tblDATA0095.QUANTITY, 0)) AS RES
										FROM
										(
											SELECT     LIVE2.dbo.MatRueck_Anlage.ID AS Anlage_PTR, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY AS D17_RKEY, dbo.DATA0017.INV_PART_DESCRIPTION AS ArtBezeichnung,
														dbo.DATA0002.UNIT_CODE AS Lagereinheit, dbo.DATA0017.STOCK_PURCH , DEPT_CODE
											FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
													  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
													  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
													  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
													  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
													  dbo.DATA0034 ON LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR = dbo.DATA0034.RKEY
											WHERE dbo.DATA0034.DEPT_CODE IN ('ABW-01-02') --, 'ABW-01-02') --@para2
											GROUP BY LIVE2.dbo.MatRueck_Anlage.ID, LIVE2.dbo.MatRueck_Anlage.Anlage, 
											dbo.DATA0017.RKEY, dbo.DATA0017.INV_PART_DESCRIPTION , dbo.DATA0017.STOCK_PURCH, dbo.DATA0002.UNIT_CODE, DEPT_CODE 
											HAVING LIVE2.dbo.MatRueck_Anlage.ID = 51--(LIVE2.dbo.MatRueck_Anlage.Anlage = @Anlage)
										) AS tblAnlageArtikel INNER JOIN --LEFT OUTER JOIN 
										(SELECT QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, MONTH(TRAN_DATE) AS Monat, TRAN_TP 
										--FROM dbo.DATA0095 INNER JOIN  dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY 
										FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
										WHERE dbo.DATA0095.TRAN_TP IN (15, 16) AND dbo.DATA0034.DEPT_CODE IN ('ABW-01-02') --, 'ABW-01-02')
										AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
										AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR ) AS tblDATA0095 
										ON tblAnlageArtikel.D17_RKEY = tblDATA0095.INVT_PTR
									) AS tblAbw
								), 0)
								+
								ISNULL((
									SELECT 
										ISNULL((
											(-1)*SUM(QUANTITY) 
											*
											ISNULL((
												SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
												FROM LIVE2.dbo.NachKalk_MatVerteilung
												WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = 50
														AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = tblAnlageArtikel_.D17_PTR
											), 0) 
										), 0) AS RES 

									FROM 
										dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
									WHERE 
										dbo.DATA0095.TRAN_TP = 23
										AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
										AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
										AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR
								), 0) 
								+
								ISNULL((
									SELECT 
										ISNULL((
											(-1)*SUM(QUANTITY) 
											*
											ISNULL((
												SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
												FROM LIVE2.dbo.NachKalk_MatVerteilung
												WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = 51
														AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = tblAnlageArtikel_.D17_PTR
											), 0) 
										), 0) AS RES 

									FROM 
										dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
									WHERE 
										dbo.DATA0095.TRAN_TP = 23
										AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
										AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
										AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR
								), 0) 
							ELSE
								CASE WHEN @para1='HAL' THEN
									ISNULL((
										SELECT
											SUM(ISNULL(tblDATA0095.QUANTITY, 0)) AS RES
										FROM
										(
											SELECT     LIVE2.dbo.MatRueck_Anlage.ID AS Anlage_PTR, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY AS D17_RKEY, dbo.DATA0017.INV_PART_DESCRIPTION AS ArtBezeichnung,
														dbo.DATA0002.UNIT_CODE AS Lagereinheit, dbo.DATA0017.STOCK_PURCH 
											FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
													  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
													  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
													  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
													  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
													  dbo.DATA0034 ON LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR = dbo.DATA0034.RKEY
											--WHERE dbo.DATA0034.RKEY = tblAnlageArtikel_.D34_PTR--@para2
											GROUP BY LIVE2.dbo.MatRueck_Anlage.ID, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY, dbo.DATA0017.INV_PART_DESCRIPTION , dbo.DATA0017.STOCK_PURCH, dbo.DATA0002.UNIT_CODE 
											HAVING LIVE2.dbo.MatRueck_Anlage.ID = CAST((SELECT TOP 1 ID FROM LIVE2.dbo.MatRueck_Anlage WHERE LIVE2.dbo.MatRueck_Anlage.Anlage COLLATE SQL_Latin1_General_CP1_CI_AS =tblAnlageArtikel_.Anlage) AS INT)--(LIVE2.dbo.MatRueck_Anlage.Anlage = @Anlage)
										) AS tblAnlageArtikel INNER JOIN --LEFT OUTER JOIN 
										(SELECT QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, MONTH(TRAN_DATE) AS Monat, TRAN_TP 
										--FROM dbo.DATA0095 INNER JOIN  dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY 
										FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
										WHERE dbo.DATA0095.TRAN_TP IN (15, 16) AND dbo.DATA0034.RKEY = tblAnlageArtikel_.D34_PTR -- @para2
										AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
										AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR ) AS tblDATA0095 
										ON tblAnlageArtikel.D17_RKEY = tblDATA0095.INVT_PTR
										--) AS myTblSub	
									), 0)
									+
									ISNULL((
										SELECT 
											ISNULL((
												(-1)*SUM(QUANTITY) 
												*
												ISNULL((
													SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
													FROM LIVE2.dbo.NachKalk_MatVerteilung
													WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = CAST((SELECT TOP 1 ID FROM LIVE2.dbo.MatRueck_Anlage WHERE LIVE2.dbo.MatRueck_Anlage.Anlage COLLATE SQL_Latin1_General_CP1_CI_AS =tblAnlageArtikel_.Anlage) AS INT)
															AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = tblAnlageArtikel_.D17_PTR
												), 0) 
											), 0) AS RES 

										FROM 
											dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
										WHERE 
											dbo.DATA0095.TRAN_TP = 23
											AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
											AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
											AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR
									), 0)
								ELSE
									ISNULL((
										SELECT
											SUM(ISNULL(tblDATA0095.QUANTITY, 0)) AS RES
										FROM
										(
											SELECT     LIVE2.dbo.MatRueck_Anlage.ID AS Anlage_PTR, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY AS D17_RKEY, dbo.DATA0017.INV_PART_DESCRIPTION AS ArtBezeichnung,
														dbo.DATA0002.UNIT_CODE AS Lagereinheit, dbo.DATA0017.STOCK_PURCH 
											FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
													  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
													  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
													  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
													  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
													  dbo.DATA0034 ON LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR = dbo.DATA0034.RKEY
											--WHERE dbo.DATA0034.RKEY = tblAnlageArtikel_.D34_PTR--@para2
											GROUP BY LIVE2.dbo.MatRueck_Anlage.ID, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY, dbo.DATA0017.INV_PART_DESCRIPTION , dbo.DATA0017.STOCK_PURCH, dbo.DATA0002.UNIT_CODE 
											HAVING LIVE2.dbo.MatRueck_Anlage.ID = CAST((SELECT TOP 1 ID FROM LIVE2.dbo.MatRueck_Anlage WHERE LIVE2.dbo.MatRueck_Anlage.Anlage COLLATE SQL_Latin1_General_CP1_CI_AS =tblAnlageArtikel_.Anlage) AS INT)--(LIVE2.dbo.MatRueck_Anlage.Anlage = @Anlage)
										) AS tblAnlageArtikel INNER JOIN --LEFT OUTER JOIN 
										(SELECT QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, MONTH(TRAN_DATE) AS Monat, TRAN_TP 
										--FROM dbo.DATA0095 INNER JOIN  dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY 
										FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
										WHERE dbo.DATA0095.TRAN_TP IN (15, 16) AND dbo.DATA0034.RKEY = tblAnlageArtikel_.D34_PTR -- @para2
										AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
										AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR ) AS tblDATA0095 
										ON tblAnlageArtikel.D17_RKEY = tblDATA0095.INVT_PTR
										--) AS myTblSub	
									), 0)
									+
									ISNULL((
										SELECT 
											ISNULL((
												(-1)*SUM(QUANTITY) 
												*
												ISNULL((
													SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
													FROM LIVE2.dbo.NachKalk_MatVerteilung
													WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = CAST((SELECT TOP 1 ID FROM LIVE2.dbo.MatRueck_Anlage WHERE LIVE2.dbo.MatRueck_Anlage.Anlage COLLATE SQL_Latin1_General_CP1_CI_AS =tblAnlageArtikel_.Anlage) AS INT)
															AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = tblAnlageArtikel_.D17_PTR
												), 0) 
											), 0) AS RES 

										FROM 
											dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
										WHERE 
											dbo.DATA0095.TRAN_TP = 23
											AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
											AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
											AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR
									), 0)
								END
						END
				END AS Verbrauch,
				0 AS Durchsatz,
				'' AS BzgGr,
				VerrPreis,
				LagerEinheit,
				0 AS Durchsatz2,
				0 AS Durchsatz3

			FROM @tblAnlageArtikelKonso AS tblAnlageArtikel_
		) AS tblJeAnlage
		ORDER BY IstKosten DESC
	END

	IF @Case_ = 'Matverbrauch_FLGrp2'
	BEGIN
		--DECLARE 
		--@para4 varchar(255),
		--@para5 varchar(255)
		--SET @para4 = '01.01.2015'	--Datum Von
		--SET @para5 = '31.07.2015'	--Datum Bis


		SELECT
			FL,
			Kunde,
			LPNummer,
			SUM(ISNULL(IstKosten, 0)) AS IstKosten,
			SUM(ISNULL(ZU_m2, 0)) AS ZU_m2,
			SUM(ISNULL(REMenge, 0)) AS REMenge,
			Lieferant,
			COUNT(FANummer) AS FANummer

		FROM
		(
			SELECT
				FL,
				(
					SELECT TOP 1 dbo.DATA0010.ABBR_NAME 
					FROM dbo.DATA0010 INNER JOIN  dbo.DATA0050 ON dbo.DATA0010.RKEY = dbo.DATA0050.CUSTOMER_PTR 
					WHERE dbo.DATA0050.RKEY = tblRE.D0050_PTR
				) AS Kunde,
				LPNummer,
				(REBetrag+MISC_TOT) AS IstKosten,
				(ZuX * ZuY * REMenge / 1000000) AS ZU_m2,
				REMenge,
				Lieferant,
				FANummer
			FROM
			(
				SELECT     
					dbo.DATA0070.PO_NUMBER, 
					LTRIM(REPLACE(dbo.DATA0072.DESCRIPTION, 'DL: ', '')) AS FL, 
					LEFT(dbo.DATA0072.DESCRIPTION2, 16) AS FANummer,
					ISNULL((SELECT TOP 1 RKEY FROM dbo.DATA0006 WHERE WORK_ORDER_NUMBER = LEFT(dbo.DATA0072.DESCRIPTION2, 16)), 0) AS D0006_PTR,
					LTRIM(RIGHT(RTRIM(dbo.DATA0072.DESCRIPTION2), 9)) AS LPNummer, 
					ISNULL((SELECT TOP 1 RKEY FROM dbo.DATA0050 WHERE RTRIM(dbo.DATA0050.CUSTOMER_PART_NUMBER) + '.' + RTRIM(dbo.DATA0050.CP_REV) = LTRIM(RIGHT(RTRIM(dbo.DATA0072.DESCRIPTION2), 9))), 0) AS D0050_PTR,
					dbo.DATA0072.DESCRIPTION, 
					dbo.DATA0072.QUAN_ORD, 
					dbo.DATA0072.UNIT_PRICE, 
					dbo.DATA0072.DESCRIPTION2, 
					dbo.DATA0109.QUANTITY * dbo.DATA0109.PRICE AS REBetrag, 
					dbo.DATA0107.INV_TOTAL, 
					dbo.DATA0107.MISC_TOT, 
					dbo.DATA0107.INVOICE_NO, 
					dbo.DATA0107.INV_DATE, 
					dbo.DATA0023.ABBR_NAME AS Lieferant,
					dbo.DATA0109.QUANTITY AS REMenge
				FROM         dbo.DATA0023 INNER JOIN
									  dbo.DATA0070 INNER JOIN
									  dbo.DATA0072 ON dbo.DATA0070.RKEY = dbo.DATA0072.POPTR ON dbo.DATA0023.RKEY = dbo.DATA0070.SUPPLIER_POINTER INNER JOIN --LEFT OUTER JOIN
									  dbo.DATA0107 INNER JOIN
									  dbo.DATA0109 ON dbo.DATA0107.RKEY = dbo.DATA0109.DATA0107_PTR ON dbo.DATA0072.RKEY = dbo.DATA0109.DATA0072_PTR
				WHERE     (dbo.DATA0072.DESCRIPTION2 <> '') AND (LEFT(dbo.DATA0072.DESCRIPTION, 3) = 'DL:')
			) AS tblRE LEFT OUTER JOIN
			(
				SELECT  DISTINCT dbo.ARTIKELDATEN.ZuX, dbo.ARTIKELDATEN.ZuY, dbo.ARTIKELDATEN.ELP_Zu, RTRIM(dbo.DATA0050.CUSTOMER_PART_NUMBER) + '.' + RTRIM(dbo.DATA0050.CP_REV) AS LP
				FROM         dbo.ARTIKELDATEN INNER JOIN
									  dbo.DATA0050 ON dbo.ARTIKELDATEN.CUST_PART_PTR = dbo.DATA0050.RKEY 
			) AS D50 ON tblRE.LPNummer = D50.LP
			WHERE
				INV_DATE >= CONVERT(DATETIME, @para4, 103) 
				AND INV_DATE <= CONVERT(DATETIME, @para5, 103) 
		) AS tblFLGrp
		GROUP BY
			FL,
			Kunde,
			LPNummer,
			Lieferant
		ORDER BY
			SUM(IstKosten) DESC
	END

	IF @Case_ = 'Matverbrauch_FLGrp'
	BEGIN
		--DECLARE 
		--@para4 varchar(255),
		--@para5 varchar(255)
		--SET @para4 = '01.01.2015'	--Datum Von
		--SET @para5 = '31.08.2015'	--Datum Bis

		SELECT
			FL,
			SUM(REGesamt) AS IST_Kosten,
			Lieferant,
			SUM(ZU_m2) AS ZU_m2,
			SUM(CAST(REMenge AS INT)) AS AnzZU_RE,
			SUM(ISNULL(AnzZU_BDE, 0)) AS AnzZU_BDE
		FROM
		(
			SELECT
				FL,
				(REBetrag + MISC_TOT) AS REGesamt,
				ABBR_NAME AS Lieferant,
				(ZuX * ZuY * REMenge / 1000000) AS ZU_m2,
				REMenge,
				--FANummer,
				--D0006_PTR,
				CAST(
						(
							SELECT TOP 1 CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
							FROM  dbo.DATA0048 INNER JOIN dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY
							WHERE 
								dbo.DATA0048.WO_PTR = D0006_PTR 
								AND dbo.DATA0048.TDATE>= CONVERT(DATETIME, @para4, 103) 
								AND dbo.DATA0048.TDATE<= CONVERT(DATETIME, @para5, 103) 
								AND dbo.DATA0034.DEPT_CODE LIKE CASE 
																	WHEN FL='HAL verbleit' THEN 'HBLX%' ELSE
																		CASE 
																			WHEN FL='HAL bleifrei' THEN 'HBFX%' ELSE
																				CASE 
																					WHEN FL='chem. Zinn' THEN 'CZ-E%' ELSE
																						CASE 
																							WHEN FL='chem. Nickel/Gold red. Palladium' THEN 'CG%' ELSE
																								CASE 
																									WHEN FL='galv. Weichgold' THEN 'GW-E%' ELSE 
																										CASE 
																											WHEN FL='chem. Silber' THEN 'CS-E%' ELSE 
																												CASE 
																													WHEN FL='galv. Gold' THEN 'GG-E%' ELSE ''
																															
																												END																														
																										END																												
																								END																										
																						END																									
																				END																						
																		END																			
																END
						)/ELP_Zu + 0.9999 AS INT
				) AS AnzZU_BDE

			FROM
			(
				SELECT     
					dbo.DATA0070.PO_NUMBER, 
					LTRIM(REPLACE(dbo.DATA0072.DESCRIPTION, 'DL: ', '')) AS FL, 
					LEFT(dbo.DATA0072.DESCRIPTION2, 16) AS FANummer,
					ISNULL((SELECT TOP 1 RKEY FROM dbo.DATA0006 WHERE WORK_ORDER_NUMBER = LEFT(dbo.DATA0072.DESCRIPTION2, 16)), 0) AS D0006_PTR,
					LTRIM(RIGHT(RTRIM(dbo.DATA0072.DESCRIPTION2), 9)) AS LPNummer, 
					dbo.DATA0072.DESCRIPTION, 
					dbo.DATA0072.QUAN_ORD, 
					dbo.DATA0072.UNIT_PRICE, 
					dbo.DATA0072.DESCRIPTION2, 
					dbo.DATA0109.QUANTITY * dbo.DATA0109.PRICE AS REBetrag, 
					dbo.DATA0107.INV_TOTAL, 
					dbo.DATA0107.MISC_TOT, 
					dbo.DATA0107.INVOICE_NO, 
					dbo.DATA0107.INV_DATE, 
					dbo.DATA0023.ABBR_NAME,
					dbo.DATA0109.QUANTITY AS REMenge
				FROM         dbo.DATA0023 INNER JOIN
									  dbo.DATA0070 INNER JOIN
									  dbo.DATA0072 ON dbo.DATA0070.RKEY = dbo.DATA0072.POPTR ON dbo.DATA0023.RKEY = dbo.DATA0070.SUPPLIER_POINTER INNER JOIN --LEFT OUTER JOIN
									  dbo.DATA0107 INNER JOIN
									  dbo.DATA0109 ON dbo.DATA0107.RKEY = dbo.DATA0109.DATA0107_PTR ON dbo.DATA0072.RKEY = dbo.DATA0109.DATA0072_PTR
				WHERE     (dbo.DATA0072.DESCRIPTION2 <> '') AND (LEFT(dbo.DATA0072.DESCRIPTION, 3) = 'DL:')
			) AS tblRE LEFT OUTER JOIN
			(
				SELECT DISTINCT dbo.ARTIKELDATEN.ZuX, dbo.ARTIKELDATEN.ZuY, dbo.ARTIKELDATEN.ELP_Zu, RTRIM(dbo.DATA0050.CUSTOMER_PART_NUMBER) + '.' + RTRIM(dbo.DATA0050.CP_REV) AS LP
				FROM         dbo.ARTIKELDATEN INNER JOIN
									  dbo.DATA0050 ON dbo.ARTIKELDATEN.CUST_PART_PTR = dbo.DATA0050.RKEY 
			) AS D50 ON tblRE.LPNummer = D50.LP
			WHERE
				INV_DATE >= CONVERT(DATETIME, @para4, 103) 
				AND INV_DATE <= CONVERT(DATETIME, @para5, 103) 
		) AS tblFLGrp
		GROUP BY
			FL,
			Lieferant
		ORDER BY
			SUM(REGesamt) DESC
		--ORDER BY PO_NUMBER
	END

	IF @Case_ = 'Matverbrauch_REC_Alu'
	BEGIN
		SELECT
		*
		FROM
		(
			SELECT     
				LIVE2.dbo.PEX_D0095Extend.recycling_REDatum AS Datum, 
				LIVE2.dbo.PEX_D0095Extend.recycling_IstMenge AS Menge, 
				LIVE2.dbo.PEX_D0095Extend.recycling_EinzelpreisEUR AS BoersenPreis, 
				LIVE2.dbo.PEX_D0095Extend.recycling_EinzelpreisEUR AS Einzelpreis, 
				LIVE2.dbo.PEX_D0095Extend.recycling_ABBR_NAME AS Entsorger, 
				LIVE2.dbo.PEX_D0095Extend.recycling_RENummer AS RENummer
			FROM         dbo.DATA0095 INNER JOIN
								  LIVE2.dbo.PEX_D0095Extend ON dbo.DATA0095.RKEY = LIVE2.dbo.PEX_D0095Extend.D95_PTR
			WHERE     (dbo.DATA0095.INVT_PTR = 56269) AND (dbo.DATA0095.TRAN_TP IN (15, 21))

			UNION ALL

			SELECT
			Datum,
			ISNULL(Menge, 0) AS Menge,
			ISNULL(Einzelpreis/1000, 0) AS BoersenPreis,
			ISNULL(Einzelpreis/1000, 0) AS Einzelpreis,
			Entsorger,
			RENummer
			FROM LIVE2.dbo.RecyclingAlteExcelDaten
			WHERE Art='Alu'
		) AS tblAluUNION
		ORDER BY Datum DESC
	END

	IF @Case_ = 'Materialverbrauch_MikroaetzeGlib'
	BEGIN
		--DECLARE 
		--@para4 varchar(255),
		--@para5 varchar(255)

		SET @para4 = '15.11.2013'
		SET @para5 = STR(DAY(GETDATE())) + '.' + STR(MONTH(GETDATE())) + '.' + STR(YEAR(GETDATE()))

		DECLARE @tblMikroGlib table(
											D95_PTR NUMERIC(10, 0),
											D17_PTR NUMERIC(10, 0),
											DatumVon datetime,
											DatumBis datetime,
											QUANTITY NUMERIC(20, 7),
											--Goldgehalt NUMERIC(20, 7),
											D95Next_PTR NUMERIC(10, 0),
											N_E CHAR(20)
											--VerbrauchSOLL DECIMAL(20, 7),
											--LagerEinheit varchar(5)
											)


		INSERT @tblMikroGlib(D95_PTR, D17_PTR, DatumVon, DatumBis, QUANTITY, D95Next_PTR, N_E) --VerbrauchSOLL, LagerEinheit) 
		SELECT 
			dbo.DATA0095.RKEY AS D95_PTR,
			53843 AS D17_PTR,
			dbo.UF_ToDateTime(dbo.DATA0095.TTIME, dbo.DATA0095.TRAN_DATE) AS DatumVon,
			ISNULL((
				SELECT TOP 1
					dbo.UF_ToDateTime(D95.TTIME, D95.TRAN_DATE) AS DatumVon
				FROM dbo.DATA0095 AS D95 LEFT OUTER JOIN dbo.DATA0034 ON D95.SRCE_PTR = dbo.DATA0034.RKEY
				WHERE D95.TRAN_TP IN (15, 16) AND dbo.DATA0034.DEPT_CODE = 'MERE-01-03' --'CGIN-CV-01'
				AND D95.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
				AND D95.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
				AND D95.INVT_PTR = 53843 --Glibrite GB-4300R40
				AND D95.REFERENCE_NUMBER = 'N'
				AND dbo.UF_ToDateTime(D95.TTIME, D95.TRAN_DATE)>dbo.UF_ToDateTime(dbo.DATA0095.TTIME, dbo.DATA0095.TRAN_DATE)
				ORDER BY D95.RKEY
			), @para5) AS DatumBis,
			dbo.DATA0095.QUANTITY,
			--ISNULL((
			--	SELECT TOP 1 Goldgehalt 
			--	FROM LIVE2.dbo.MatRueck_Transaktion 
			--	WHERE D17_Art_PTR = 53843 AND D95_PTR = dbo.DATA0095.RKEY 
			--), 0) AS Goldgehalt,
			ISNULL((
				SELECT TOP 1
					D95.RKEY AS RES
				FROM dbo.DATA0095 AS D95 LEFT OUTER JOIN dbo.DATA0034 ON D95.SRCE_PTR = dbo.DATA0034.RKEY
				WHERE D95.TRAN_TP IN (15, 16) AND dbo.DATA0034.DEPT_CODE = 'MERE-01-03' --'CGIN-CV-01'
				AND D95.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
				AND D95.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
				AND D95.INVT_PTR = 53843 --Glibrite GB-4300R40
				AND D95.REFERENCE_NUMBER = 'N'
				AND dbo.UF_ToDateTime(D95.TTIME, D95.TRAN_DATE)>dbo.UF_ToDateTime(dbo.DATA0095.TTIME, dbo.DATA0095.TRAN_DATE)
				ORDER BY D95.RKEY
			), 0) AS D95Next_PTR,
			dbo.DATA0095.REFERENCE_NUMBER AS N_E

		FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
		WHERE dbo.DATA0095.TRAN_TP IN (15, 16) AND dbo.DATA0034.DEPT_CODE = 'MERE-01-03' --'CGIN-CV-01'
		AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
		AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
		AND dbo.DATA0095.INVT_PTR = 53843 --Glibrite GB-4300R40
		AND dbo.DATA0095.REFERENCE_NUMBER = 'N'
		ORDER BY dbo.DATA0095.RKEY

--SELECT * FROM @tblMikroGlib


		SELECT
			tblMikroGlib.D95_PTR,
			tblMikroGlib.D95Next_PTR,
			tblMikroGlib.D17_PTR,
			(SELECT TOP 1 INV_PART_DESCRIPTION FROM dbo.DATA0017 WHERE RKEY=tblMikroGlib.D17_PTR) AS Bezeichnung,
			(SELECT TOP 1 STD_COST FROM dbo.DATA0017 WHERE RKEY=tblMikroGlib.D17_PTR) AS VerrPreis,
			DatumVon,
			DatumBis,
			ISNULL((
					SELECT     
						SUM(
							(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
							/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000)
							)
						AS RES
					FROM         dbo.DATA0006 INNER JOIN
								  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
								  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
								  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
					WHERE    
						dbo.UF_ToDateTime(dbo.DATA0048.TTIME, dbo.DATA0048.TDATE) >= DatumVon
						AND dbo.UF_ToDateTime(dbo.DATA0048.TTIME, dbo.DATA0048.TDATE) <=DatumBis
						AND dbo.DATA0034.DEPT_CODE = 'MERE-01-03'
			), 0) AS Durchsatz,
			(
				ISNULL((
					SELECT TOP 1 SUM(ISNULL(QUANTITY, 0)) AS RES
					FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
					WHERE dbo.DATA0095.TRAN_TP IN (15, 16) AND dbo.DATA0034.DEPT_CODE = 'MERE-01-03' --'CGIN-CV-01'
					AND dbo.UF_ToDateTime(dbo.DATA0095.TTIME, dbo.DATA0095.TRAN_DATE) >=  DatumVon --DATEADD(dd, 0, DATEDIFF(dd, 0, DatumVon)) --DatumVon --CONVERT(DATETIME, @para4, 103) 
					AND dbo.UF_ToDateTime(dbo.DATA0095.TTIME, dbo.DATA0095.TRAN_DATE) < DatumBis --DATEADD(dd, 0, DATEDIFF(dd, 0, DatumBis)) --DatumBis
					AND dbo.DATA0095.INVT_PTR = tblMikroGlib.D17_PTR
					--AND dbo.DATA0095.REFERENCE_NUMBER = 'N'
					--ORDER BY dbo.DATA0095.RKEY
				), 0) 
				+
				ISNULL((
					SELECT TOP 1
						ISNULL((
							(-1)*SUM(QUANTITY) 
							*
							ISNULL((
								SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
								FROM LIVE2.dbo.NachKalk_MatVerteilung
								WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = 16
										AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = tblMikroGlib.D17_PTR
							), 1) 
						), 0) AS RES 

					FROM 
						dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
					WHERE 
						dbo.DATA0095.TRAN_TP = 23
						AND dbo.DATA0095.TRAN_DATE >= DATEADD(dd, 0, DATEDIFF(dd, 0, DatumVon)) --CONVERT(DATETIME, DatumVon, 103) 
						AND dbo.DATA0095.TRAN_DATE < DATEADD(dd, 0, DATEDIFF(dd, 0, DatumBis)) --CONVERT(DATETIME, DatumBis, 103) 
						AND dbo.DATA0095.INVT_PTR = tblMikroGlib.D17_PTR
				), 0)
			) AS Verbrauch,
			ISNULL((
				SELECT TOP 1 SUM(ISNULL(QUANTITY, 0)) AS RES
				FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
				WHERE dbo.DATA0095.TRAN_TP IN (15, 16) AND dbo.DATA0034.DEPT_CODE = 'MERE-01-03' --'CGIN-CV-01'
				AND dbo.UF_ToDateTime(dbo.DATA0095.TTIME, dbo.DATA0095.TRAN_DATE) >= DatumVon --DATEADD(dd, 0, DATEDIFF(dd, 0, DatumVon)) --DatumVon --CONVERT(DATETIME, @para4, 103) 
				AND dbo.UF_ToDateTime(dbo.DATA0095.TTIME, dbo.DATA0095.TRAN_DATE) < DatumBis --DATEADD(dd, 0, DATEDIFF(dd, 0, DatumBis)) -- DatumBis
				AND dbo.DATA0095.INVT_PTR = tblMikroGlib.D17_PTR
			), 0) AS Verbrauch2,
			(SELECT TOP 1 STD_COST FROM dbo.DATA0017 WHERE RKEY=tblMikroGlib.D17_PTR) AS VerrPreis,
			ISNULL((
				SELECT
					--CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_QUAN ELSE D71_QUAN END AS QUAN,
					--CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_PRICE ELSE D71_PRICE END AS PRICE,
					--CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_EX_RATE ELSE D71_EX_RATE END AS EX_RATE
					SUM(
						CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_QUAN ELSE D71_QUAN END
						*
						CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_PRICE ELSE D71_PRICE END/CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_EX_RATE ELSE D71_EX_RATE END
						)
						/
					SUM(CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_QUAN ELSE D71_QUAN END) 
					/
					(SELECT TOP 1 STOCK_PURCH FROM dbo.DATA0017 WHERE RKEY=tblMikroGlib.D17_PTR)
					AS EK_Preis

				FROM
					(	
					SELECT     
						dbo.DATA0108.QUANTITY AS D108_QUAN, 
						--dbo.DATA0108.PRICE AS D108_PRICE, 
						CASE
							WHEN dbo.DATA0108.RKEY=47690 THEN 23.81544 ELSE
								CASE 
									WHEN dbo.DATA0108.RKEY=50081 THEN 26.5639 ELSE 
										CASE
											WHEN dbo.DATA0108.RKEY=50528 THEN 27.43686 ELSE 
												CASE
													WHEN dbo.DATA0108.RKEY=50759 THEN 25.94328 ELSE
														CASE
															WHEN dbo.DATA0108.RKEY=51171 THEN 26.30474 ELSE dbo.DATA0108.PRICE 
														END 
												END
										END
								END
						END AS D108_PRICE, 
						dbo.DATA0107.EX_RATE AS D108_EX_RATE, 
						dbo.DATA0071.QUAN_ORD AS D71_QUAN, 
						dbo.DATA0071.PRICE AS D71_PRICE, 
						dbo.DATA0070.EXCHANGE_RATE AS D71_EX_RATE, 
						CASE WHEN ISNULL(dbo.DATA0107.INV_DATE, '')<>'' THEN dbo.DATA0107.INV_DATE ELSE dbo.DATA0070.PO_DATE END AS EKDATE
						
					FROM         dbo.DATA0070 INNER JOIN
										  dbo.DATA0071 ON dbo.DATA0070.RKEY = dbo.DATA0071.PO_PTR LEFT OUTER JOIN
										  dbo.DATA0108 INNER JOIN
										  dbo.DATA0107 ON dbo.DATA0108.DATA0107_PTR = dbo.DATA0107.RKEY ON dbo.DATA0071.RKEY = dbo.DATA0108.DATA0071_PTR
					WHERE     (dbo.DATA0071.INVT_PTR = tblMikroGlib.D17_PTR)
				) AS tblEK
				WHERE EKDATE>= DatumVon AND EKDATE<= DatumBis
			), 0) AS DEK_Preis,
			ISNULL((
				SELECT
					--CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_QUAN ELSE D71_QUAN END AS QUAN,
					--CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_PRICE ELSE D71_PRICE END AS PRICE,
					--CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_EX_RATE ELSE D71_EX_RATE END AS EX_RATE
					SUM(
						CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_QUAN ELSE D71_QUAN END
						*
						CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_PRICE ELSE D71_PRICE END/CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_EX_RATE ELSE D71_EX_RATE END
						)
						/
					SUM(CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_QUAN ELSE D71_QUAN END) 
					/
					(SELECT TOP 1 STOCK_PURCH FROM dbo.DATA0017 WHERE RKEY=tblMikroGlib.D17_PTR)
					AS EK_Preis

				FROM
					(	
					SELECT     
						dbo.DATA0108.QUANTITY AS D108_QUAN, 
						--dbo.DATA0108.PRICE AS D108_PRICE, 
						CASE
							WHEN dbo.DATA0108.RKEY=47690 THEN 23.81544 ELSE
								CASE 
									WHEN dbo.DATA0108.RKEY=50081 THEN 26.5639 ELSE 
										CASE
											WHEN dbo.DATA0108.RKEY=50528 THEN 27.43686 ELSE 
												CASE
													WHEN dbo.DATA0108.RKEY=50759 THEN 25.94328 ELSE
														CASE
															WHEN dbo.DATA0108.RKEY=51171 THEN 26.30474 ELSE dbo.DATA0108.PRICE 
														END 
												END
										END
								END
						END AS D108_PRICE, 
						dbo.DATA0107.EX_RATE AS D108_EX_RATE, 
						dbo.DATA0071.QUAN_ORD AS D71_QUAN, 
						dbo.DATA0071.PRICE AS D71_PRICE, 
						dbo.DATA0070.EXCHANGE_RATE AS D71_EX_RATE, 
						CASE WHEN ISNULL(dbo.DATA0107.INV_DATE, '')<>'' THEN dbo.DATA0107.INV_DATE ELSE dbo.DATA0070.PO_DATE END AS EKDATE
						
					FROM         dbo.DATA0070 INNER JOIN
										  dbo.DATA0071 ON dbo.DATA0070.RKEY = dbo.DATA0071.PO_PTR LEFT OUTER JOIN
										  dbo.DATA0108 INNER JOIN
										  dbo.DATA0107 ON dbo.DATA0108.DATA0107_PTR = dbo.DATA0107.RKEY ON dbo.DATA0071.RKEY = dbo.DATA0108.DATA0071_PTR
					WHERE     (dbo.DATA0071.INVT_PTR = tblMikroGlib.D17_PTR)
				) AS tblEK
				WHERE EKDATE>= CONVERT(DATETIME, '23.04.2013', 103)  AND EKDATE<= CONVERT(DATETIME, @para5, 103) 
			), 0) AS DEK_Preis_Ges,
			(
				SELECT  TOP 1   VerbrauchSOLL * 100 AS Expr1
				FROM         LIVE2.dbo.NachKalk_MatVerteilung
				WHERE     (D17_PTR = 53843) AND (Anlage_PTR = 16)
			) AS SollVerbrauch

		FROM
			@tblMikroGlib AS tblMikroGlib
		ORDER BY DatumVon
	END

	IF @Case_ = 'Materialverbrauch_Mikroaetze'
	BEGIN
		--DECLARE 
		--@para4 varchar(255),
		--@para5 varchar(255)
		--SET @para4 = '01.01.2015'	--Datum Von
		--SET @para5 = '31.03.2015'	--Datum Bis

		DECLARE @tblDurchsatzMikro table(
												DEPT_CODE char(10), 
												Durchsatz NUMERIC(10, 4),
												BzgGr varchar(20),
												Durchsatz2 NUMERIC(10, 4) NULL,
												Durchsatz3 NUMERIC(10, 4) NULL
											)

		INSERT @tblDurchsatzMikro(DEPT_CODE, Durchsatz, BzgGr)
		SELECT
			'MERE-01-03' AS DEPT_CODE,
			ISNULL((
				SELECT TOP 1    
					SUM(
						(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
						/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000)) 
					AS RES
				FROM         dbo.DATA0006 INNER JOIN
							  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
							  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
							  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
				WHERE    
							dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
							AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
							AND dbo.DATA0034.DEPT_CODE = 'MERE-01-03'
			), 0) AS Durchsatz,
			'Zu-m2' AS BzgGr

		--SELECT * FROM @tblDurchsatzMikro

		DECLARE @tblAnlageArtikelMikro table(
											D17_PTR NUMERIC(10, 0),
											Abteilung varchar(250),
											Anlage varchar(250),
											Artikel char(20), 
											Bezeichnung char(40), 
											VerbrauchSOLL DECIMAL(20, 7),
											VerrPreis DECIMAL(20, 7),
											LagerEinheit varchar(5)
											)

		INSERT @tblAnlageArtikelMikro(D17_PTR, Abteilung, Anlage, Artikel, Bezeichnung, VerbrauchSOLL, VerrPreis, LagerEinheit)
		SELECT  DISTINCT dbo.DATA0017.RKEY AS D17_PTR, LIVE2.dbo.MatRueck_Abteilung.Abteilung, 
				LIVE2.dbo.MatRueck_Anlage.Anlage, 
				dbo.DATA0017.INV_PART_NUMBER AS Artikel, 
				dbo.DATA0017.INV_PART_DESCRIPTION AS Bezeichnung, 
				LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, 
				dbo.DATA0017.STD_COST AS VerrPreis,
				dbo.DATA0002.UNIT_CODE AS LagerEinheit
		FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
					  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
					  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
					  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
					  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
					  dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
					  LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
					  dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
		GROUP BY dbo.DATA0017.RKEY, LIVE2.dbo.MatRueck_Abteilung.Abteilung, LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID,
				dbo.DATA0017.INV_PART_NUMBER, dbo.DATA0017.INV_PART_DESCRIPTION, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STOCK_PURCH, 
				dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE, dbo.DATA0017.CONSIGN_ONHAND_QTY,
				dbo.DATA0017.ACTIVE_FLAG, dbo.DATA0017.STD_COST, LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial
		HAVING      dbo.DATA0017.ACTIVE_FLAG='Y' AND (LIVE2.dbo.MatRueck_Anlage.ID = 16 ) --Mikroätze 
					AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(1 AS bit)

		--SELECT * FROM @tblAnlageArtikelMikro

		SELECT
			Abteilung, 
			Anlage, 
			Artikel, 
			Bezeichnung, 
			Verbrauch,
			Durchsatz,
			Verbrauch*VerrPreis AS abs_Kosten,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch*VerrPreis)/Durchsatz 
				ELSE
					0
			END AS rel_Kosten,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch*VerrPreis)/Durchsatz*100 
				ELSE
					0
			END AS KS_IstKosten,
			VerrPreis*VerbrauchSOLL*100 AS SollKosten,
			CASE
				WHEN (VerrPreis*VerbrauchSOLL*100)>0 AND Durchsatz>0 THEN
					(((Verbrauch*VerrPreis)/Durchsatz*100)-(VerrPreis*VerbrauchSOLL*100.000000))/(VerrPreis*VerbrauchSOLL*100.000000) 
				ELSE
					0
			END AS Abweichung,
			(Verbrauch*VerrPreis)-(VerrPreis*Durchsatz*VerbrauchSOLL) AS MehrMinderKosten,
			(Verbrauch*VerrPreis) AS IstKosten,
			VerrPreis,
			CAST(VerbrauchSOLL*100.000000 AS DECIMAL(20, 7)) AS SollV_100,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch/Durchsatz)*100.000000 
				ELSE
					0
			END AS IstV_100,
			BzgGr,
			LagerEinheit

		FROM
		(
			SELECT 
				D17_PTR, 
				Abteilung, 
				Anlage, 
				Artikel, 
				Bezeichnung, 
				VerbrauchSOLL,
				ISNULL((
					SELECT
						SUM(ISNULL(tblDATA0095.QUANTITY, 0)) AS RES
					FROM
					(
						SELECT     LIVE2.dbo.MatRueck_Anlage.ID AS Anlage_PTR, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY AS D17_RKEY, dbo.DATA0017.INV_PART_DESCRIPTION AS ArtBezeichnung,
									dbo.DATA0002.UNIT_CODE AS Lagereinheit, dbo.DATA0017.STOCK_PURCH 
						FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
								  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
								  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
								  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
								  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
								  dbo.DATA0034 ON LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR = dbo.DATA0034.RKEY
						WHERE dbo.DATA0034.DEPT_CODE = 'MERE-01-03'
						GROUP BY LIVE2.dbo.MatRueck_Anlage.ID, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY, dbo.DATA0017.INV_PART_DESCRIPTION , dbo.DATA0017.STOCK_PURCH, dbo.DATA0002.UNIT_CODE 
						HAVING LIVE2.dbo.MatRueck_Anlage.ID = 16--(LIVE2.dbo.MatRueck_Anlage.Anlage = @Anlage)
					) AS tblAnlageArtikel INNER JOIN --LEFT OUTER JOIN 
					(SELECT QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, MONTH(TRAN_DATE) AS Monat, TRAN_TP 
					--FROM dbo.DATA0095 INNER JOIN  dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY 
					FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
					WHERE dbo.DATA0095.TRAN_TP IN (15, 16) AND dbo.DATA0034.DEPT_CODE = 'MERE-01-03'
					AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
					AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR ) AS tblDATA0095 
					ON tblAnlageArtikel.D17_RKEY = tblDATA0095.INVT_PTR
					--) AS myTblSub	
				), 0)
				+
				ISNULL((
					SELECT 
						ISNULL((
							(-1)*SUM(QUANTITY) 
							*
							ISNULL((
								SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
								FROM LIVE2.dbo.NachKalk_MatVerteilung
								WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = 16
										AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = tblAnlageArtikel_.D17_PTR
							), 0) 
						), 0) AS RES 

					FROM 
						dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
					WHERE 
						dbo.DATA0095.TRAN_TP = 23
						AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
						AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
						AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR
				), 0) AS Verbrauch,
				ISNULL((SELECT TOP 1 Durchsatz FROM @tblDurchsatzMikro WHERE DEPT_CODE = 'MERE-01-03'), 0) AS Durchsatz,
				ISNULL((SELECT TOP 1 BzgGr FROM @tblDurchsatzMikro WHERE DEPT_CODE = 'MERE-01-03'), 0) AS BzgGr,
				VerrPreis,
				LagerEinheit

			FROM @tblAnlageArtikelMikro AS tblAnlageArtikel_
		) AS tblJeAnlage
		ORDER BY IstKosten DESC
	END

	IF @Case_ = 'Materialverbrauch_ChemSnLfdAnsatz'
	BEGIN
		DECLARE 
		@DatumVon_ChemSn datetime,
		@DatumBis_ChemSn datetime

		--Datum Von
		SET @DatumVon_ChemSn = (
								SELECT TOP 1
									dbo.UF_ToDateTime(D95.TTIME, D95.TRAN_DATE) AS DatumVon
								FROM dbo.DATA0095 AS D95 
								WHERE 
									D95.TRAN_TP IN (15, 16) 
									AND YEAR(D95.TRAN_DATE) >= 2015 
									AND D95.INVT_PTR = 6603 --Mac Stan HSR 3 Immersion Tinn, PC 86799
									AND D95.REFERENCE_NUMBER = 'N'
								ORDER BY D95.RKEY DESC
								)	

		--Datum Bis
		SET @DatumBis_ChemSn = GETDATE()

		DECLARE @tblDurchsatzChemSnLfdAnsatz table(
												DEPT_CODE char(10), 
												Durchsatz NUMERIC(10, 4),
												BzgGr varchar(20),
												Durchsatz2 NUMERIC(10, 4) NULL,
												Durchsatz3 NUMERIC(10, 4) NULL
											)

		INSERT @tblDurchsatzChemSnLfdAnsatz(DEPT_CODE, Durchsatz, BzgGr)
		SELECT
			'CZIN-01-01' AS DEPT_CODE,
			ISNULL((
				SELECT TOP 1    
					SUM(
						(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
						/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000)) 
					AS RES
				FROM         dbo.DATA0006 INNER JOIN
							  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
							  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
							  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
				WHERE    
							--dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
							--AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
							dbo.UF_ToDateTime(dbo.DATA0048.TTIME, dbo.DATA0048.TDATE) >= @DatumVon_ChemSn
							AND dbo.UF_ToDateTime(dbo.DATA0048.TTIME, dbo.DATA0048.TDATE) <= @DatumBis_ChemSn
							AND dbo.DATA0034.DEPT_CODE = 'CZIN-01-01'
			), 0) AS Durchsatz,
			'Zu-m2' AS BzgGr

		--SELECT * FROM @tblDurchsatzMikro

		DECLARE @tblAnlageArtikelChemSnLfdAnsatz table(
											D17_PTR NUMERIC(10, 0),
											Abteilung varchar(250),
											Anlage varchar(250),
											Artikel char(20), 
											Bezeichnung char(40), 
											VerbrauchSOLL DECIMAL(20, 7),
											VerrPreis DECIMAL(20, 7),
											LagerEinheit varchar(5)
											)

		IF @para1='Tab1'
		BEGIN
			INSERT @tblAnlageArtikelChemSnLfdAnsatz(D17_PTR, Abteilung, Anlage, Artikel, Bezeichnung, VerbrauchSOLL, VerrPreis, LagerEinheit)
			SELECT  DISTINCT dbo.DATA0017.RKEY AS D17_PTR, LIVE2.dbo.MatRueck_Abteilung.Abteilung, 
					LIVE2.dbo.MatRueck_Anlage.Anlage, 
					dbo.DATA0017.INV_PART_NUMBER AS Artikel, 
					dbo.DATA0017.INV_PART_DESCRIPTION AS Bezeichnung, 
					LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, 
					dbo.DATA0017.STD_COST AS VerrPreis,
					dbo.DATA0002.UNIT_CODE AS LagerEinheit
			FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
						  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
						  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
						  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
						  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
						  dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
						  LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
						  dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
			GROUP BY dbo.DATA0017.RKEY, LIVE2.dbo.MatRueck_Abteilung.Abteilung, LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID,
					dbo.DATA0017.INV_PART_NUMBER, dbo.DATA0017.INV_PART_DESCRIPTION, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STOCK_PURCH, 
					dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE, dbo.DATA0017.CONSIGN_ONHAND_QTY,
					dbo.DATA0017.ACTIVE_FLAG, dbo.DATA0017.STD_COST, LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial
			HAVING      dbo.DATA0017.ACTIVE_FLAG='Y' AND (LIVE2.dbo.MatRueck_Anlage.ID = 4 ) --Chem Zinn 
						AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(1 AS bit)
						AND dbo.DATA0017.INV_PART_DESCRIPTION IN (
																	'Mac Stan HSR 3 Immersion Tinn, PC 86799',
																	'Mac Stan HSR 3 Tin Replenisher, PC 11332',
																	'Mac Stan HSR 3 PreDip, PC 86804',
																	'Mac Stan HSR 3 Additive, PC 11333',
																	'Mac Stan HSR 3 Stabiliser, PC 86807',
																	'Macuprep Etch G-5-S (Stabilisator)',
																	'Wasserstoffperoxid 35%, wässerige Lösung',
																	'Natronlauge 32/33 % techn.',
																	'Schwefelsäure 50%, chem. rein (IBC)',
																	'Zinnbad NF2019 Methane Sulfonic Acid'
																)
		END

		IF @para1='Tab2'
		BEGIN
			INSERT @tblAnlageArtikelChemSnLfdAnsatz(D17_PTR, Abteilung, Anlage, Artikel, Bezeichnung, VerbrauchSOLL, VerrPreis, LagerEinheit)
			SELECT  DISTINCT dbo.DATA0017.RKEY AS D17_PTR, LIVE2.dbo.MatRueck_Abteilung.Abteilung, 
					LIVE2.dbo.MatRueck_Anlage.Anlage, 
					dbo.DATA0017.INV_PART_NUMBER AS Artikel, 
					dbo.DATA0017.INV_PART_DESCRIPTION AS Bezeichnung, 
					LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, 
					dbo.DATA0017.STD_COST AS VerrPreis,
					dbo.DATA0002.UNIT_CODE AS LagerEinheit
			FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
						  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
						  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
						  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
						  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
						  dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
						  LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
						  dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
			GROUP BY dbo.DATA0017.RKEY, LIVE2.dbo.MatRueck_Abteilung.Abteilung, LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID,
					dbo.DATA0017.INV_PART_NUMBER, dbo.DATA0017.INV_PART_DESCRIPTION, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STOCK_PURCH, 
					dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE, dbo.DATA0017.CONSIGN_ONHAND_QTY,
					dbo.DATA0017.ACTIVE_FLAG, dbo.DATA0017.STD_COST, LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial
			HAVING      dbo.DATA0017.ACTIVE_FLAG='Y' AND (LIVE2.dbo.MatRueck_Anlage.ID = 4 ) --Chem Zinn 
						AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(1 AS bit)
						AND dbo.DATA0017.INV_PART_DESCRIPTION IN (
																	'Mac Stan HSR 3 Immersion Tinn, PC 86799',
																	'Mac Stan HSR 3 Additive, PC 11333'
																)
		END

		--SELECT * FROM @tblAnlageArtikelMikro

		SELECT
			Abteilung, 
			Anlage, 
			Artikel, 
			Bezeichnung, 
			Verbrauch,
			Durchsatz,
			Verbrauch*VerrPreis AS abs_Kosten,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch*VerrPreis)/Durchsatz 
				ELSE
					0
			END AS rel_Kosten,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch*VerrPreis)/Durchsatz*100 
				ELSE
					0
			END AS KS_IstKosten,
			VerrPreis*VerbrauchSOLL*100 AS SollKosten,
			CASE
				WHEN (VerrPreis*VerbrauchSOLL*100)>0 AND Durchsatz>0 THEN
					(((Verbrauch*VerrPreis)/Durchsatz*100)-(VerrPreis*VerbrauchSOLL*100.000000))/(VerrPreis*VerbrauchSOLL*100.000000) 
				ELSE
					0
			END AS Abweichung,
			(Verbrauch*VerrPreis)-(VerrPreis*Durchsatz*VerbrauchSOLL) AS MehrMinderKosten,
			(Verbrauch*VerrPreis) AS IstKosten,
			VerrPreis,
			CAST(VerbrauchSOLL*100.000000 AS DECIMAL(20, 7)) AS SollV_100,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch/Durchsatz)*100.000000 
				ELSE
					0
			END AS IstV_100,
			BzgGr,
			LagerEinheit

		FROM
		(
			SELECT 
				D17_PTR, 
				Abteilung, 
				Anlage, 
				Artikel, 
				Bezeichnung, 
				VerbrauchSOLL,
				ISNULL((
					SELECT
						SUM(ISNULL(tblDATA0095.QUANTITY, 0)) AS RES
					FROM
					(
						SELECT     LIVE2.dbo.MatRueck_Anlage.ID AS Anlage_PTR, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY AS D17_RKEY, dbo.DATA0017.INV_PART_DESCRIPTION AS ArtBezeichnung,
									dbo.DATA0002.UNIT_CODE AS Lagereinheit, dbo.DATA0017.STOCK_PURCH 
						FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
								  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
								  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
								  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
								  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
								  dbo.DATA0034 ON LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR = dbo.DATA0034.RKEY
						WHERE dbo.DATA0034.DEPT_CODE = 'CZIN-01-01'
						GROUP BY LIVE2.dbo.MatRueck_Anlage.ID, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY, dbo.DATA0017.INV_PART_DESCRIPTION , dbo.DATA0017.STOCK_PURCH, dbo.DATA0002.UNIT_CODE 
						HAVING LIVE2.dbo.MatRueck_Anlage.ID = 4--(LIVE2.dbo.MatRueck_Anlage.Anlage = @Anlage)
					) AS tblAnlageArtikel INNER JOIN --LEFT OUTER JOIN 
					(SELECT QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, MONTH(TRAN_DATE) AS Monat, TRAN_TP 
					--FROM dbo.DATA0095 INNER JOIN  dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY 
					FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
					WHERE dbo.DATA0095.TRAN_TP IN (15, 16) AND dbo.DATA0034.DEPT_CODE = 'CZIN-01-01'
					--AND dbo.DATA0095.TRAN_DATE >= @DatumVon_ChemSn --CONVERT(DATETIME, @para4, 103) 
					AND dbo.UF_ToDateTime(dbo.DATA0095.TTIME, dbo.DATA0095.TRAN_DATE) >=  @DatumVon_ChemSn 
					--AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  
					AND dbo.UF_ToDateTime(dbo.DATA0095.TTIME, dbo.DATA0095.TRAN_DATE) <=  @DatumBis_ChemSn 
					AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR ) AS tblDATA0095 
					ON tblAnlageArtikel.D17_RKEY = tblDATA0095.INVT_PTR
					--) AS myTblSub	
				), 0)
				+
				ISNULL((
					SELECT 
						ISNULL((
							(-1)*SUM(QUANTITY) 
							*
							ISNULL((
								SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
								FROM LIVE2.dbo.NachKalk_MatVerteilung
								WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = 4
										AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = tblAnlageArtikel_.D17_PTR
							), 0) 
						), 0) AS RES 

					FROM 
						dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
					WHERE 
						dbo.DATA0095.TRAN_TP = 23
						--AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
						--AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
						AND dbo.DATA0095.TRAN_DATE >= DATEADD(dd, 0, DATEDIFF(dd, 0, @DatumVon_ChemSn)) 
						AND dbo.DATA0095.TRAN_DATE < DATEADD(dd, 0, DATEDIFF(dd, 0, @DatumBis_ChemSn)) 
						AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR
				), 0) AS Verbrauch,
				ISNULL((SELECT TOP 1 Durchsatz FROM @tblDurchsatzChemSnLfdAnsatz WHERE DEPT_CODE = 'CZIN-01-01'), 0) AS Durchsatz,
				ISNULL((SELECT TOP 1 BzgGr FROM @tblDurchsatzChemSnLfdAnsatz WHERE DEPT_CODE = 'CZIN-01-01'), 0) AS BzgGr,
				VerrPreis,
				LagerEinheit

			FROM @tblAnlageArtikelChemSnLfdAnsatz AS tblAnlageArtikel_
		) AS tblJeAnlage
		ORDER BY IstKosten DESC
	END

	IF @Case_ = 'Materialverbrauch_ArbBekleidung'
	BEGIN

		--DECLARE 
		--@para4 varchar(255),
		--@para5 varchar(255)
		--SET @para4 = '01.01.2015'	--Datum Von
		--SET @para5 = '31.07.2015'	--Datum Bis

		SELECT
			*
		FROM
		(
			SELECT
				Bezeichnung,
				SUM(CASE WHEN Anlage = 'Arbeitsbekleidung' THEN Verbrauch ELSE 0 END) AS Arbeitsbekleidung,
				SUM(CASE WHEN Anlage = 'Arb.Be. Abwasser' THEN Verbrauch ELSE 0 END) AS Abwasser,
				SUM(CASE WHEN Anlage = 'Arb.Be. AOI' THEN Verbrauch ELSE 0 END) AS AOI,
				SUM(CASE WHEN Anlage = 'Arb.Be. Ätzen alkalisch' OR Anlage = 'Arb.Be. Desmear' THEN Verbrauch ELSE 0 END) AS AetzenAlkalisch,
				SUM(CASE WHEN Anlage = 'Arb.Be. Ätzen sauer' THEN Verbrauch ELSE 0 END) AS AetzenSauer,
				SUM(CASE WHEN Anlage = 'Arb.Be. Black Hole' THEN Verbrauch ELSE 0 END) AS BlackHole,
				SUM(CASE WHEN Anlage = 'Arb.Be. Bohrerei' THEN Verbrauch ELSE 0 END) AS Bohrerei,
				SUM(CASE WHEN Anlage = 'Arb.Be. Chem. Ni / Au' THEN Verbrauch ELSE 0 END) AS ChemNiAu,
				SUM(CASE WHEN Anlage = 'Arb.Be. Chem. Zinn' THEN Verbrauch ELSE 0 END) AS ChemSn,
				--SUM(CASE WHEN Anlage = 'Arb.Be. Desmear' THEN Verbrauch ELSE 0 END) AS Desmear,
				SUM(CASE WHEN Anlage = 'Arb.Be. E-Test' THEN Verbrauch ELSE 0 END) AS ETest,
				SUM(CASE WHEN Anlage = 'Arb.Be. Fotodruck' THEN Verbrauch ELSE 0 END) AS Fotodruck,
				SUM(CASE WHEN Anlage = 'Arb.Be. Fotolabor' THEN Verbrauch ELSE 0 END) AS Fotolabor,
				SUM(CASE WHEN Anlage = 'Arb.Be. Fräserei' THEN Verbrauch ELSE 0 END) AS Fraesen,
				SUM(CASE WHEN Anlage = 'Arb.Be. Gießlinie' THEN Verbrauch ELSE 0 END) AS Giessen,
				SUM(CASE WHEN Anlage = 'Arb.Be. Haftvermittler' THEN Verbrauch ELSE 0 END) AS Haftvermittler,
				SUM(CASE WHEN Anlage = 'Arb.Be. HAL' THEN Verbrauch ELSE 0 END) AS HAL,
				SUM(CASE WHEN Anlage = 'Arb.Be. Instandhaltung' THEN Verbrauch ELSE 0 END) AS Instandhaltung,
				SUM(CASE WHEN Anlage = 'Arb.Be. LBA' THEN Verbrauch ELSE 0 END) AS LBA,
				SUM(CASE WHEN Anlage = 'Arb.Be. Mikroätze' THEN Verbrauch ELSE 0 END) AS Mikroaetze,
				SUM(CASE WHEN Anlage = 'Arb.Be. ML-Presse' THEN Verbrauch ELSE 0 END) AS MLPresse,
				SUM(CASE WHEN Anlage = 'Arb.Be. QS' THEN Verbrauch ELSE 0 END) AS QS,
				SUM(CASE WHEN Anlage = 'Arb.Be. Ritzen' THEN Verbrauch ELSE 0 END) AS Ritzen,
				SUM(CASE WHEN Anlage = 'Arb.Be. Siebdruck' THEN Verbrauch ELSE 0 END) AS Siebdruck,
				SUM(CASE WHEN Anlage = 'Arb.Be. Versand' THEN Verbrauch ELSE 0 END) AS Versand,
				SUM(CASE WHEN Anlage = 'Arb.Be. Zuschnitt' THEN Verbrauch ELSE 0 END) AS Zuschnitt,
				LagerEinheit,
				VerrPreis
			FROM
			(
				SELECT
					Anlage,
					Bezeichnung,
					ISNULL((
						SELECT 
							SUM(QUANTITY) AS RES 
						FROM 
							dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
						WHERE 
							dbo.DATA0095.TRAN_TP IN (15, 16) 
							AND dbo.DATA0034.RKEY = tblArbBeklGrp.D34_PTR
							AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
							AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  
							AND dbo.DATA0095.INVT_PTR = tblArbBeklGrp.D17_PTR
					), 0) AS Verbrauch,
					LagerEinheit,
					VerrPreis

				FROM
				(
					SELECT  DISTINCT dbo.DATA0017.RKEY AS D17_PTR, LIVE2.dbo.MatRueck_Abteilung.Abteilung, 
							LIVE2.dbo.MatRueck_Anlage.Anlage, 
							dbo.DATA0017.INV_PART_NUMBER AS Artikel, 
							dbo.DATA0017.INV_PART_DESCRIPTION AS Bezeichnung, 
							0 AS VerbrauchSOLL,
							dbo.DATA0017.STD_COST AS VerrPreis,
							dbo.DATA0002.UNIT_CODE AS LagerEinheit,
							LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR AS D34_PTR
					FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
								  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
								  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
								  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
								  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
								  dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY
					GROUP BY dbo.DATA0017.RKEY, LIVE2.dbo.MatRueck_Abteilung.Abteilung, LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID,
							dbo.DATA0017.INV_PART_NUMBER, dbo.DATA0017.INV_PART_DESCRIPTION, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STOCK_PURCH, 
							dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE, dbo.DATA0017.CONSIGN_ONHAND_QTY,
							dbo.DATA0017.ACTIVE_FLAG, dbo.DATA0017.STD_COST, LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR
					HAVING      dbo.DATA0017.ACTIVE_FLAG='Y' 
							AND (LIVE2.dbo.MatRueck_Abteilung.Abteilung='Arbeitsbekleidung' )
							AND dbo.DATA0017.RKEY NOT IN (710, 61170) --Putztücher KIMTECH fusselfrei weiss, Wypall X 60 Wischtücher 8372, hellblau
								
				) AS tblArbBeklGrp
			) AS tblKreuz
			GROUP BY 
				Bezeichnung,
				LagerEinheit,
				VerrPreis
		) AS tblKreuzWhere
		--WHERE
		--	Abwasser >0 OR AOI > 0 OR AetzenAlkalisch > 0 OR AetzenSauer > 0 AND BlackHole > 0
		--		OR Bohrerei > 0 OR ChemNiAu > 0 OR ChemSn > 0 OR Desmear > 0 OR ETest > 0
		--		OR Fotodruck > 0 OR Fotolabor > 0 OR Fraesen > 0 OR Giessen > 0 OR Haftvermittler > 0
		--		OR HAL > 0 OR Instandhaltung > 0 OR LBA > 0 OR Mikroaetze > 0 OR MLPresse > 0
		--		OR QS > 0 OR Ritzen > 0 OR Siebdruck > 0 OR Versand > 0 OR Zuschnitt > 0
		ORDER BY Bezeichnung
	END

	IF @Case_ = 'Materialverbrauch_ArbBekleidungEUR'
	BEGIN

		--DECLARE 
		--@para4 varchar(255),
		--@para5 varchar(255)
		--SET @para4 = '01.01.2015'	--Datum Von
		--SET @para5 = '31.07.2015'	--Datum Bis

		SELECT
			*
		FROM
		(
			SELECT
				Bezeichnung,
				SUM(CASE WHEN Anlage = 'Arbeitsbekleidung' THEN Verbrauch*VerrPreis ELSE 0 END) AS Arbeitsbekleidung,
				SUM(CASE WHEN Anlage = 'Arb.Be. Abwasser' THEN Verbrauch*VerrPreis ELSE 0 END) AS Abwasser,
				SUM(CASE WHEN Anlage = 'Arb.Be. AOI' THEN Verbrauch*VerrPreis ELSE 0 END) AS AOI,
				SUM(CASE WHEN Anlage = 'Arb.Be. Ätzen alkalisch' OR Anlage ='Arb.Be. Desmear' THEN Verbrauch*VerrPreis ELSE 0 END) AS AetzenAlkalisch,
				SUM(CASE WHEN Anlage = 'Arb.Be. Ätzen sauer' THEN Verbrauch*VerrPreis ELSE 0 END) AS AetzenSauer,
				SUM(CASE WHEN Anlage = 'Arb.Be. Black Hole' THEN Verbrauch*VerrPreis ELSE 0 END) AS BlackHole,
				SUM(CASE WHEN Anlage = 'Arb.Be. Bohrerei' THEN Verbrauch*VerrPreis ELSE 0 END) AS Bohrerei,
				SUM(CASE WHEN Anlage = 'Arb.Be. Chem. Ni / Au' THEN Verbrauch*VerrPreis ELSE 0 END) AS ChemNiAu,
				SUM(CASE WHEN Anlage = 'Arb.Be. Chem. Zinn' THEN Verbrauch*VerrPreis ELSE 0 END) AS ChemSn,
				--SUM(CASE WHEN Anlage = 'Arb.Be. Desmear' THEN Verbrauch*VerrPreis ELSE 0 END) AS Desmear,
				SUM(CASE WHEN Anlage = 'Arb.Be. E-Test' THEN Verbrauch*VerrPreis ELSE 0 END) AS ETest,
				SUM(CASE WHEN Anlage = 'Arb.Be. Fotodruck' THEN Verbrauch*VerrPreis ELSE 0 END) AS Fotodruck,
				SUM(CASE WHEN Anlage = 'Arb.Be. Fotolabor' THEN Verbrauch*VerrPreis ELSE 0 END) AS Fotolabor,
				SUM(CASE WHEN Anlage = 'Arb.Be. Fräserei' THEN Verbrauch*VerrPreis ELSE 0 END) AS Fraesen,
				SUM(CASE WHEN Anlage = 'Arb.Be. Gießlinie' THEN Verbrauch*VerrPreis ELSE 0 END) AS Giessen,
				SUM(CASE WHEN Anlage = 'Arb.Be. Haftvermittler' THEN Verbrauch*VerrPreis ELSE 0 END) AS Haftvermittler,
				SUM(CASE WHEN Anlage = 'Arb.Be. HAL' THEN Verbrauch*VerrPreis ELSE 0 END) AS HAL,
				SUM(CASE WHEN Anlage = 'Arb.Be. Instandhaltung' THEN Verbrauch*VerrPreis ELSE 0 END) AS Instandhaltung,
				SUM(CASE WHEN Anlage = 'Arb.Be. LBA' THEN Verbrauch*VerrPreis ELSE 0 END) AS LBA,
				SUM(CASE WHEN Anlage = 'Arb.Be. Mikroätze' THEN Verbrauch*VerrPreis ELSE 0 END) AS Mikroaetze,
				SUM(CASE WHEN Anlage = 'Arb.Be. ML-Presse' THEN Verbrauch*VerrPreis ELSE 0 END) AS MLPresse,
				SUM(CASE WHEN Anlage = 'Arb.Be. QS' THEN Verbrauch*VerrPreis ELSE 0 END) AS QS,
				SUM(CASE WHEN Anlage = 'Arb.Be. Ritzen' THEN Verbrauch*VerrPreis ELSE 0 END) AS Ritzen,
				SUM(CASE WHEN Anlage = 'Arb.Be. Siebdruck' THEN Verbrauch*VerrPreis ELSE 0 END) AS Siebdruck,
				SUM(CASE WHEN Anlage = 'Arb.Be. Versand' THEN Verbrauch*VerrPreis ELSE 0 END) AS Versand,
				SUM(CASE WHEN Anlage = 'Arb.Be. Zuschnitt' THEN Verbrauch*VerrPreis ELSE 0 END) AS Zuschnitt,
				SUM(Verbrauch*VerrPreis) AS Sum_EUR,
				LagerEinheit,
				VerrPreis
			FROM
			(
				SELECT
					Anlage,
					Bezeichnung,
					ISNULL((
						SELECT 
							SUM(QUANTITY) AS RES 
						FROM 
							dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
						WHERE 
							dbo.DATA0095.TRAN_TP IN (15, 16) 
							AND dbo.DATA0034.RKEY = tblArbBeklGrp.D34_PTR
							AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
							AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  
							AND dbo.DATA0095.INVT_PTR = tblArbBeklGrp.D17_PTR
					), 0) AS Verbrauch,
					LagerEinheit,
					VerrPreis

				FROM
				(
					SELECT  DISTINCT dbo.DATA0017.RKEY AS D17_PTR, LIVE2.dbo.MatRueck_Abteilung.Abteilung, 
							LIVE2.dbo.MatRueck_Anlage.Anlage, 
							dbo.DATA0017.INV_PART_NUMBER AS Artikel, 
							dbo.DATA0017.INV_PART_DESCRIPTION AS Bezeichnung, 
							0 AS VerbrauchSOLL,
							dbo.DATA0017.STD_COST AS VerrPreis,
							dbo.DATA0002.UNIT_CODE AS LagerEinheit,
							LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR AS D34_PTR
					FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
								  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
								  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
								  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
								  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
								  dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY
					GROUP BY dbo.DATA0017.RKEY, LIVE2.dbo.MatRueck_Abteilung.Abteilung, LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID,
							dbo.DATA0017.INV_PART_NUMBER, dbo.DATA0017.INV_PART_DESCRIPTION, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STOCK_PURCH, 
							dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE, dbo.DATA0017.CONSIGN_ONHAND_QTY,
							dbo.DATA0017.ACTIVE_FLAG, dbo.DATA0017.STD_COST, LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR
					HAVING      dbo.DATA0017.ACTIVE_FLAG='Y' 
							AND (LIVE2.dbo.MatRueck_Abteilung.Abteilung='Arbeitsbekleidung' )
							AND dbo.DATA0017.RKEY NOT IN (710, 61170) --Putztücher KIMTECH fusselfrei weiss, Wypall X 60 Wischtücher 8372, hellblau
								
				) AS tblArbBeklGrp
			) AS tblKreuz
			GROUP BY 
				Bezeichnung,
				LagerEinheit,
				VerrPreis
		) AS tblKreuzWhere
		--WHERE
		--	Abwasser >0 OR AOI > 0 OR AetzenAlkalisch > 0 OR AetzenSauer > 0 AND BlackHole > 0
		--		OR Bohrerei > 0 OR ChemNiAu > 0 OR ChemSn > 0 OR Desmear > 0 OR ETest > 0
		--		OR Fotodruck > 0 OR Fotolabor > 0 OR Fraesen > 0 OR Giessen > 0 OR Haftvermittler > 0
		--		OR HAL > 0 OR Instandhaltung > 0 OR LBA > 0 OR Mikroaetze > 0 OR MLPresse > 0
		--		OR QS > 0 OR Ritzen > 0 OR Siebdruck > 0 OR Versand > 0 OR Zuschnitt > 0
		ORDER BY Sum_EUR DESC, Bezeichnung
	END

	IF @Case_ = 'Materialverbrauch_ArbBekleidungMonat'
	BEGIN
		--DECLARE 
		--@para4 varchar(255),
		--@para5 varchar(255)
		--SET @para4 = '01.01.2015'	--Datum Von
		--SET @para5 = '31.07.2015'	--Datum Bis

		DECLARE @tblArbeitsbeklAnzMA table(MAAnlage varchar(40), KstSt int)

		INSERT @tblArbeitsbeklAnzMA(MAAnlage, KstSt) SELECT 'Abwasser' As MAAnlage, 110 AS KstSt
		INSERT @tblArbeitsbeklAnzMA(MAAnlage, KstSt) SELECT 'AOI' As MAAnlage, 123 AS KstSt	
		INSERT @tblArbeitsbeklAnzMA(MAAnlage, KstSt) SELECT 'Ätzen alkalisch' As MAAnlage, 305 AS KstSt
		INSERT @tblArbeitsbeklAnzMA(MAAnlage, KstSt) SELECT 'Ätzen sauer' As MAAnlage, 308 AS KstSt
		INSERT @tblArbeitsbeklAnzMA(MAAnlage, KstSt) SELECT 'Black Hole' As MAAnlage, 290 AS KstSt
		INSERT @tblArbeitsbeklAnzMA(MAAnlage, KstSt) SELECT 'Bohrerei' As MAAnlage, 205 AS KstSt
		INSERT @tblArbeitsbeklAnzMA(MAAnlage, KstSt) SELECT 'Chem. Ni / Au' As MAAnlage, 180 AS KstSt
		INSERT @tblArbeitsbeklAnzMA(MAAnlage, KstSt) SELECT 'Chem. Zinn' As MAAnlage, 320 AS KstSt
		INSERT @tblArbeitsbeklAnzMA(MAAnlage, KstSt) SELECT 'Desmear' As MAAnlage, 162 AS KstSt
		INSERT @tblArbeitsbeklAnzMA(MAAnlage, KstSt) SELECT 'E-Test' As MAAnlage, 170 AS KstSt
		INSERT @tblArbeitsbeklAnzMA(MAAnlage, KstSt) SELECT 'Fotodruck' As MAAnlage, 240 AS KstSt
		INSERT @tblArbeitsbeklAnzMA(MAAnlage, KstSt) SELECT 'Fotolabor' As MAAnlage, 130 AS KstSt	
		INSERT @tblArbeitsbeklAnzMA(MAAnlage, KstSt) SELECT 'Fräserei' As MAAnlage, 210 AS KstSt
		INSERT @tblArbeitsbeklAnzMA(MAAnlage, KstSt) SELECT 'Gießlinie' As MAAnlage, 250 AS KstSt
		INSERT @tblArbeitsbeklAnzMA(MAAnlage, KstSt) SELECT 'Haftvermittler' As MAAnlage, 161 AS KstSt
		INSERT @tblArbeitsbeklAnzMA(MAAnlage, KstSt) SELECT 'HAL' As MAAnlage, 310 AS KstSt
		INSERT @tblArbeitsbeklAnzMA(MAAnlage, KstSt) SELECT 'Instandhaltung' As MAAnlage, 135 AS KstSt
		INSERT @tblArbeitsbeklAnzMA(MAAnlage, KstSt) SELECT 'LBA' As MAAnlage, 300 AS KstSt
		INSERT @tblArbeitsbeklAnzMA(MAAnlage, KstSt) SELECT 'Mikroätze' As MAAnlage, 210 AS KstSt
		INSERT @tblArbeitsbeklAnzMA(MAAnlage, KstSt) SELECT 'ML-Presse' As MAAnlage, 163 AS KstSt
		INSERT @tblArbeitsbeklAnzMA(MAAnlage, KstSt) SELECT 'QS' As MAAnlage, 125 AS KstSt
		INSERT @tblArbeitsbeklAnzMA(MAAnlage, KstSt) SELECT 'Ritzen' As MAAnlage, 215 AS KstSt
		INSERT @tblArbeitsbeklAnzMA(MAAnlage, KstSt) SELECT 'Siebdruck' As MAAnlage, 220 AS KstSt
		INSERT @tblArbeitsbeklAnzMA(MAAnlage, KstSt) SELECT 'Versand' As MAAnlage, 360 AS KstSt
		INSERT @tblArbeitsbeklAnzMA(MAAnlage, KstSt) SELECT 'Zuschnitt' As MAAnlage, 190 AS KstSt
		INSERT @tblArbeitsbeklAnzMA(MAAnlage, KstSt) SELECT 'Arbeitsbekleidung' As MAAnlage, 999 AS KstSt


		SELECT
			Anlage,
			SUM(Verb_Jahr) AS Jahr,
			SUM(Verb_Jan) AS Jan,
			SUM(Verb_Feb) AS Feb,
			SUM(Verb_Mar) AS Mrz,
			SUM(Verb_Apr) AS Apr,
			SUM(Verb_Mai) AS Mai,
			SUM(Verb_Jun) AS Jun,
			SUM(Verb_Jul) AS Jul,
			SUM(Verb_Aug) AS Aug,
			SUM(Verb_Sep) AS Sep,
			SUM(Verb_Okt) AS Okt,
			SUM(Verb_Nov) AS Nov,
			SUM(Verb_Dez) AS Dez,
			ISNULL((
				--SELECT TOP 1 COUNT(DISTINCT PersNr) AS AnzMA
				--FROM LIVE2.dbo.AnwStd
				--WHERE     
				--	KSt = tblArbBeklGrpMon.Kostenstelle 
				--	AND Datum >= CONVERT(DATETIME, @para4, 103)
				--	AND Datum <= CONVERT(DATETIME, @para5, 103)
				SELECT
					--AVG(AnzMA) AS AnzMA
					AVG(AnzStd) AS AnzMA
				FROM
				(
					SELECT     
						LTRIM(STR(YEAR(Datum))) + '.' + LTRIM(STR(MONTH(Datum))) AS JahrMonat, 
						--COUNT(DISTINCT PersNr) AS AnzMA, 
						CASE WHEN KSt=360 THEN 3 ELSE SUM(Ist-AusserRahmen)/170 END AS AnzStd, --Bei VERSAND generell nur 3 MAs
						KSt
					FROM         LIVE2.dbo.AnwStd
					WHERE     
						--KSt = ISNULL((SELECT TOP 1 ISNULL(KstSt, 0)  FROM @tblArbeitsbeklAnzMA WHERE RTRIM(MAAnlage) = RTRIM(LTRIM(REPLACE(Anlage, 'Arb.Be. ', '')))), 0)
						Datum >= CONVERT(DATETIME, @para4, 103) 
						AND Datum <= CONVERT(DATETIME, @para5, 103)
					GROUP BY LTRIM(STR(YEAR(Datum))) + '.' + LTRIM(STR(MONTH(Datum))), KSt
				) AS tblAnzMA
				WHERE KSt = tblArbBeklGrpMon.Kostenstelle
			), 0) AS AnzMA
		FROM
		(
			SELECT
				LTRIM(REPLACE(Anlage, 'Arb.Be. ', '')) AS Anlage,
				ISNULL((SELECT TOP 1 ISNULL(KstSt, 0)  FROM @tblArbeitsbeklAnzMA WHERE RTRIM(MAAnlage) COLLATE SQL_Latin1_General_CP1_CI_AS = RTRIM(LTRIM(REPLACE(Anlage, 'Arb.Be. ', '')))), 0) AS Kostenstelle,
				--Bezeichnung,
				(
					ISNULL((
						SELECT 
							SUM(QUANTITY) AS RES 
						FROM 
							dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
						WHERE 
							dbo.DATA0095.TRAN_TP IN (15, 16) 
							AND dbo.DATA0034.RKEY = tblArbBeklGrp.D34_PTR
							AND YEAR(dbo.DATA0095.TRAN_DATE) = YEAR(CONVERT(DATETIME, @para4, 103))
							AND dbo.DATA0095.INVT_PTR = tblArbBeklGrp.D17_PTR
					), 0)
					* 
					ISNULL(tblArbBeklGrp.VerrPreis, 0)
				) AS Verb_Jahr,
				(
					ISNULL((
						SELECT 
							SUM(QUANTITY) AS RES 
						FROM 
							dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
						WHERE 
							dbo.DATA0095.TRAN_TP IN (15, 16) 
							AND dbo.DATA0034.RKEY = tblArbBeklGrp.D34_PTR
							AND YEAR(dbo.DATA0095.TRAN_DATE) = YEAR(CONVERT(DATETIME, @para4, 103))
							AND MONTH(dbo.DATA0095.TRAN_DATE) = 1
							AND dbo.DATA0095.INVT_PTR = tblArbBeklGrp.D17_PTR
					), 0)
					* 
					ISNULL(tblArbBeklGrp.VerrPreis, 0)
				) AS Verb_Jan,
				(
					ISNULL((
						SELECT 
							SUM(QUANTITY) AS RES 
						FROM 
							dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
						WHERE 
							dbo.DATA0095.TRAN_TP IN (15, 16) 
							AND dbo.DATA0034.RKEY = tblArbBeklGrp.D34_PTR
							AND YEAR(dbo.DATA0095.TRAN_DATE) = YEAR(CONVERT(DATETIME, @para4, 103))
							AND MONTH(dbo.DATA0095.TRAN_DATE) = 2
							AND dbo.DATA0095.INVT_PTR = tblArbBeklGrp.D17_PTR
					), 0)
					* 
					ISNULL(tblArbBeklGrp.VerrPreis, 0)
				) AS Verb_Feb,
				(
					ISNULL((
						SELECT 
							SUM(QUANTITY) AS RES 
						FROM 
							dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
						WHERE 
							dbo.DATA0095.TRAN_TP IN (15, 16) 
							AND dbo.DATA0034.RKEY = tblArbBeklGrp.D34_PTR
							AND YEAR(dbo.DATA0095.TRAN_DATE) = YEAR(CONVERT(DATETIME, @para4, 103))
							AND MONTH(dbo.DATA0095.TRAN_DATE) = 3
							AND dbo.DATA0095.INVT_PTR = tblArbBeklGrp.D17_PTR
					), 0)
					* 
					ISNULL(tblArbBeklGrp.VerrPreis, 0)
				) AS Verb_Mar,
				(
					ISNULL((
						SELECT 
							SUM(QUANTITY) AS RES 
						FROM 
							dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
						WHERE 
							dbo.DATA0095.TRAN_TP IN (15, 16) 
							AND dbo.DATA0034.RKEY = tblArbBeklGrp.D34_PTR
							AND YEAR(dbo.DATA0095.TRAN_DATE) = YEAR(CONVERT(DATETIME, @para4, 103))
							AND MONTH(dbo.DATA0095.TRAN_DATE) = 4
							AND dbo.DATA0095.INVT_PTR = tblArbBeklGrp.D17_PTR
					), 0)
					* 
					ISNULL(tblArbBeklGrp.VerrPreis, 0)
				) AS Verb_Apr,
				(
					ISNULL((
						SELECT 
							SUM(QUANTITY) AS RES 
						FROM 
							dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
						WHERE 
							dbo.DATA0095.TRAN_TP IN (15, 16) 
							AND dbo.DATA0034.RKEY = tblArbBeklGrp.D34_PTR
							AND YEAR(dbo.DATA0095.TRAN_DATE) = YEAR(CONVERT(DATETIME, @para4, 103))
							AND MONTH(dbo.DATA0095.TRAN_DATE) = 5
							AND dbo.DATA0095.INVT_PTR = tblArbBeklGrp.D17_PTR
					), 0)
					* 
					ISNULL(tblArbBeklGrp.VerrPreis, 0)
				) AS Verb_Mai,
				(
					ISNULL((
						SELECT 
							SUM(QUANTITY) AS RES 
						FROM 
							dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
						WHERE 
							dbo.DATA0095.TRAN_TP IN (15, 16) 
							AND dbo.DATA0034.RKEY = tblArbBeklGrp.D34_PTR
							AND YEAR(dbo.DATA0095.TRAN_DATE) = YEAR(CONVERT(DATETIME, @para4, 103))
							AND MONTH(dbo.DATA0095.TRAN_DATE) = 6
							AND dbo.DATA0095.INVT_PTR = tblArbBeklGrp.D17_PTR
					), 0)
					* 
					ISNULL(tblArbBeklGrp.VerrPreis, 0)
				) AS Verb_Jun,
				(
					ISNULL((
						SELECT 
							SUM(QUANTITY) AS RES 
						FROM 
							dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
						WHERE 
							dbo.DATA0095.TRAN_TP IN (15, 16) 
							AND dbo.DATA0034.RKEY = tblArbBeklGrp.D34_PTR
							AND YEAR(dbo.DATA0095.TRAN_DATE) = YEAR(CONVERT(DATETIME, @para4, 103))
							AND MONTH(dbo.DATA0095.TRAN_DATE) = 7
							AND dbo.DATA0095.INVT_PTR = tblArbBeklGrp.D17_PTR
					), 0)
					* 
					ISNULL(tblArbBeklGrp.VerrPreis, 0)
				) AS Verb_Jul,
				(
					ISNULL((
						SELECT 
							SUM(QUANTITY) AS RES 
						FROM 
							dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
						WHERE 
							dbo.DATA0095.TRAN_TP IN (15, 16) 
							AND dbo.DATA0034.RKEY = tblArbBeklGrp.D34_PTR
							AND YEAR(dbo.DATA0095.TRAN_DATE) = YEAR(CONVERT(DATETIME, @para4, 103))
							AND MONTH(dbo.DATA0095.TRAN_DATE) = 8
							AND dbo.DATA0095.INVT_PTR = tblArbBeklGrp.D17_PTR
					), 0)
					* 
					ISNULL(tblArbBeklGrp.VerrPreis, 0)
				) AS Verb_Aug,
				(
					ISNULL((
						SELECT 
							SUM(QUANTITY) AS RES 
						FROM 
							dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
						WHERE 
							dbo.DATA0095.TRAN_TP IN (15, 16) 
							AND dbo.DATA0034.RKEY = tblArbBeklGrp.D34_PTR
							AND YEAR(dbo.DATA0095.TRAN_DATE) = YEAR(CONVERT(DATETIME, @para4, 103))
							AND MONTH(dbo.DATA0095.TRAN_DATE) = 9
							AND dbo.DATA0095.INVT_PTR = tblArbBeklGrp.D17_PTR
					), 0)
					* 
					ISNULL(tblArbBeklGrp.VerrPreis, 0)
				) AS Verb_Sep,
				(
					ISNULL((
						SELECT 
							SUM(QUANTITY) AS RES 
						FROM 
							dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
						WHERE 
							dbo.DATA0095.TRAN_TP IN (15, 16) 
							AND dbo.DATA0034.RKEY = tblArbBeklGrp.D34_PTR
							AND YEAR(dbo.DATA0095.TRAN_DATE) = YEAR(CONVERT(DATETIME, @para4, 103))
							AND MONTH(dbo.DATA0095.TRAN_DATE) = 10
							AND dbo.DATA0095.INVT_PTR = tblArbBeklGrp.D17_PTR
					), 0)
					* 
					ISNULL(tblArbBeklGrp.VerrPreis, 0)
				) AS Verb_Okt,
				(
					ISNULL((
						SELECT 
							SUM(QUANTITY) AS RES 
						FROM 
							dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
						WHERE 
							dbo.DATA0095.TRAN_TP IN (15, 16) 
							AND dbo.DATA0034.RKEY = tblArbBeklGrp.D34_PTR
							AND YEAR(dbo.DATA0095.TRAN_DATE) = YEAR(CONVERT(DATETIME, @para4, 103))
							AND MONTH(dbo.DATA0095.TRAN_DATE) = 11
							AND dbo.DATA0095.INVT_PTR = tblArbBeklGrp.D17_PTR
					), 0)
					* 
					ISNULL(tblArbBeklGrp.VerrPreis, 0)
				) AS Verb_Nov,
				(
					ISNULL((
						SELECT 
							SUM(QUANTITY) AS RES 
						FROM 
							dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
						WHERE 
							dbo.DATA0095.TRAN_TP IN (15, 16) 
							AND dbo.DATA0034.RKEY = tblArbBeklGrp.D34_PTR
							AND YEAR(dbo.DATA0095.TRAN_DATE) = YEAR(CONVERT(DATETIME, @para4, 103))
							AND MONTH(dbo.DATA0095.TRAN_DATE) = 12
							AND dbo.DATA0095.INVT_PTR = tblArbBeklGrp.D17_PTR
					), 0)
					* 
					ISNULL(tblArbBeklGrp.VerrPreis, 0)
				) AS Verb_Dez
				--LagerEinheit,
				--VerrPreis

			FROM
			(
				SELECT  DISTINCT dbo.DATA0017.RKEY AS D17_PTR, LIVE2.dbo.MatRueck_Abteilung.Abteilung, 
						CASE WHEN LIVE2.dbo.MatRueck_Anlage.Anlage = 'ARB.BE. Desmear' THEN 'Arb.Be. Ätzen alkalisch' ELSE LIVE2.dbo.MatRueck_Anlage.Anlage END AS Anlage, 
						dbo.DATA0017.INV_PART_NUMBER AS Artikel, 
						dbo.DATA0017.INV_PART_DESCRIPTION AS Bezeichnung, 
						0 AS VerbrauchSOLL,
						dbo.DATA0017.STD_COST AS VerrPreis,
						dbo.DATA0002.UNIT_CODE AS LagerEinheit,
						LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR AS D34_PTR
				FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
							  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
							  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
							  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
							  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
							  dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY
				GROUP BY dbo.DATA0017.RKEY, LIVE2.dbo.MatRueck_Abteilung.Abteilung, LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID,
						dbo.DATA0017.INV_PART_NUMBER, dbo.DATA0017.INV_PART_DESCRIPTION, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STOCK_PURCH, 
						dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE, dbo.DATA0017.CONSIGN_ONHAND_QTY,
						dbo.DATA0017.ACTIVE_FLAG, dbo.DATA0017.STD_COST, LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR
				HAVING      dbo.DATA0017.ACTIVE_FLAG='Y' 
						AND (LIVE2.dbo.MatRueck_Abteilung.Abteilung='Arbeitsbekleidung' )
						AND dbo.DATA0017.RKEY NOT IN (710, 61170) --Putztücher KIMTECH fusselfrei weiss, Wypall X 60 Wischtücher 8372, hellblau
							
			) AS tblArbBeklGrp
		) AS tblArbBeklGrpMon
		GROUP BY
			Anlage, Kostenstelle
		ORDER BY
			SUM(Verb_Jahr) DESC, Anlage
	END

	IF @Case_ = 'Materialverbrauch_ChemSn'
	BEGIN
		--DECLARE 
		--@para4 varchar(255),
		--@para5 varchar(255)
		--SET @para4 = '01.01.2015'	--Datum Von
		--SET @para5 = '31.03.2015'	--Datum Bis

		DECLARE @tblDurchsatzChemSn table(
												DEPT_CODE char(10), 
												Durchsatz NUMERIC(10, 4),
												BzgGr varchar(20),
												Durchsatz2 NUMERIC(10, 4) NULL,
												Durchsatz3 NUMERIC(10, 4) NULL
											)

		INSERT @tblDurchsatzChemSn(DEPT_CODE, Durchsatz, BzgGr)
		SELECT
			'CZIN-01-01' AS DEPT_CODE,
			ISNULL((
				SELECT TOP 1    
					SUM(
						(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
						/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000)) 
					AS RES
				FROM         dbo.DATA0006 INNER JOIN
							  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
							  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
							  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
				WHERE    
							dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
							AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
							AND dbo.DATA0034.DEPT_CODE = 'CZIN-01-01'
			), 0) AS Durchsatz,
			'Zu-m2' AS BzgGr

		--SELECT * FROM @tblDurchsatzMikro

		DECLARE @tblAnlageArtikelChemSn table(
											D17_PTR NUMERIC(10, 0),
											Abteilung varchar(250),
											Anlage varchar(250),
											Artikel char(20), 
											Bezeichnung char(40), 
											VerbrauchSOLL DECIMAL(20, 7),
											VerrPreis DECIMAL(20, 7),
											LagerEinheit varchar(5)
											)

		INSERT @tblAnlageArtikelChemSn(D17_PTR, Abteilung, Anlage, Artikel, Bezeichnung, VerbrauchSOLL, VerrPreis, LagerEinheit)
		SELECT  DISTINCT dbo.DATA0017.RKEY AS D17_PTR, LIVE2.dbo.MatRueck_Abteilung.Abteilung, 
				LIVE2.dbo.MatRueck_Anlage.Anlage, 
				dbo.DATA0017.INV_PART_NUMBER AS Artikel, 
				dbo.DATA0017.INV_PART_DESCRIPTION AS Bezeichnung, 
				LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, 
				dbo.DATA0017.STD_COST AS VerrPreis,
				dbo.DATA0002.UNIT_CODE AS LagerEinheit
		FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
					  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
					  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
					  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
					  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
					  dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
					  LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
					  dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
		GROUP BY dbo.DATA0017.RKEY, LIVE2.dbo.MatRueck_Abteilung.Abteilung, LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID,
				dbo.DATA0017.INV_PART_NUMBER, dbo.DATA0017.INV_PART_DESCRIPTION, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STOCK_PURCH, 
				dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE, dbo.DATA0017.CONSIGN_ONHAND_QTY,
				dbo.DATA0017.ACTIVE_FLAG, dbo.DATA0017.STD_COST, LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial
		HAVING      dbo.DATA0017.ACTIVE_FLAG='Y' AND (LIVE2.dbo.MatRueck_Anlage.ID = 4 ) --Mikroätze 
					AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(1 AS bit)

		--SELECT * FROM @tblAnlageArtikelMikro

		SELECT
			Abteilung, 
			Anlage, 
			Artikel, 
			Bezeichnung, 
			Verbrauch,
			Durchsatz,
			Verbrauch*VerrPreis AS abs_Kosten,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch*VerrPreis)/Durchsatz 
				ELSE
					0
			END AS rel_Kosten,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch*VerrPreis)/Durchsatz*100 
				ELSE
					0
			END AS KS_IstKosten,
			VerrPreis*VerbrauchSOLL*100 AS SollKosten,
			CASE
				WHEN (VerrPreis*VerbrauchSOLL*100)>0 AND Durchsatz>0 THEN
					(((Verbrauch*VerrPreis)/Durchsatz*100)-(VerrPreis*VerbrauchSOLL*100.000000))/(VerrPreis*VerbrauchSOLL*100.000000) 
				ELSE
					0
			END AS Abweichung,
			(Verbrauch*VerrPreis)-(VerrPreis*Durchsatz*VerbrauchSOLL) AS MehrMinderKosten,
			(Verbrauch*VerrPreis) AS IstKosten,
			VerrPreis,
			CAST(VerbrauchSOLL*100.000000 AS DECIMAL(20, 7)) AS SollV_100,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch/Durchsatz)*100.000000 
				ELSE
					0
			END AS IstV_100,
			BzgGr,
			LagerEinheit

		FROM
		(
			SELECT 
				D17_PTR, 
				Abteilung, 
				Anlage, 
				Artikel, 
				Bezeichnung, 
				VerbrauchSOLL,
				ISNULL((
					SELECT
						SUM(ISNULL(tblDATA0095.QUANTITY, 0)) AS RES
					FROM
					(
						SELECT     LIVE2.dbo.MatRueck_Anlage.ID AS Anlage_PTR, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY AS D17_RKEY, dbo.DATA0017.INV_PART_DESCRIPTION AS ArtBezeichnung,
									dbo.DATA0002.UNIT_CODE AS Lagereinheit, dbo.DATA0017.STOCK_PURCH 
						FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
								  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
								  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
								  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
								  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
								  dbo.DATA0034 ON LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR = dbo.DATA0034.RKEY
						WHERE dbo.DATA0034.DEPT_CODE = 'CZIN-01-01'
						GROUP BY LIVE2.dbo.MatRueck_Anlage.ID, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY, dbo.DATA0017.INV_PART_DESCRIPTION , dbo.DATA0017.STOCK_PURCH, dbo.DATA0002.UNIT_CODE 
						HAVING LIVE2.dbo.MatRueck_Anlage.ID = 4--(LIVE2.dbo.MatRueck_Anlage.Anlage = @Anlage)
					) AS tblAnlageArtikel INNER JOIN --LEFT OUTER JOIN 
					(SELECT QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, MONTH(TRAN_DATE) AS Monat, TRAN_TP 
					--FROM dbo.DATA0095 INNER JOIN  dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY 
					FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
					WHERE dbo.DATA0095.TRAN_TP IN (15, 16) AND dbo.DATA0034.DEPT_CODE = 'CZIN-01-01'
					AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
					AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR ) AS tblDATA0095 
					ON tblAnlageArtikel.D17_RKEY = tblDATA0095.INVT_PTR
					--) AS myTblSub	
				), 0)
				+
				ISNULL((
					SELECT 
						ISNULL((
							(-1)*SUM(QUANTITY) 
							*
							ISNULL((
								SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
								FROM LIVE2.dbo.NachKalk_MatVerteilung
								WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = 4
										AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = tblAnlageArtikel_.D17_PTR
							), 0) 
						), 0) AS RES 

					FROM 
						dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
					WHERE 
						dbo.DATA0095.TRAN_TP = 23
						AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
						AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
						AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR
				), 0) AS Verbrauch,
				ISNULL((SELECT TOP 1 Durchsatz FROM @tblDurchsatzChemSn WHERE DEPT_CODE = 'CZIN-01-01'), 0) AS Durchsatz,
				ISNULL((SELECT TOP 1 BzgGr FROM @tblDurchsatzChemSn WHERE DEPT_CODE = 'CZIN-01-01'), 0) AS BzgGr,
				VerrPreis,
				LagerEinheit

			FROM @tblAnlageArtikelChemSn AS tblAnlageArtikel_
		) AS tblJeAnlage
		ORDER BY IstKosten DESC
	END

	IF @Case_ = 'Materialverbrauch_QS'
	BEGIN
		--DECLARE 
		--@para1 varchar(255),
		--@para2 varchar(255),
		--@para3 varchar(255),
		--@para4 varchar(255),
		--@para5 varchar(255)
		--SET @para1 = 'Schlifferstellung'	--Anlage
		--SET @para2 = 'QS-01-08'	--Ressource
		--SET @para3 = '145'			--Anlage_PTR
		--SET @para4 = '01.01.2015'	--Datum Von
		--SET @para5 = '31.07.2015'	--Datum Bis

		DECLARE @tblDurchsatzQS table(
												DEPT_CODE char(10), 
												Durchsatz NUMERIC(10, 4),
												BzgGr varchar(20),
												Durchsatz2 NUMERIC(10, 4) NULL,
												Durchsatz3 NUMERIC(10, 4) NULL
											)


		IF @para1='Schlifferstellung'
		BEGIN
			INSERT @tblDurchsatzQS(DEPT_CODE, Durchsatz, BzgGr)
			SELECT
				'QS-01-06' AS DEPT_CODE,
				COUNT(LIVE2.dbo.QSSchliffe.Schliffnummer) AS Durchsatz,
				'Sch.' AS BzgGr
			FROM         dbo.DATA0006 INNER JOIN
								  LIVE2.dbo.QSSchliffe ON dbo.DATA0006.RKEY = LIVE2.dbo.QSSchliffe.D0006Ptr
			WHERE     ( LIVE2.dbo.QSSchliffe.Schliffdatum >= CONVERT(DATETIME, @para4, 103)) 
			AND ( LIVE2.dbo.QSSchliffe.Schliffdatum <= CONVERT(DATETIME, @para5, 103))
		END
		IF @para1='Klebefolie'
		BEGIN
			INSERT @tblDurchsatzQS(DEPT_CODE, Durchsatz, BzgGr, Durchsatz2, Durchsatz3)
			SELECT
				'QS-01-08' AS DEPT_CODE,
				ISNULL((
					SELECT TOP 1    
						SUM(
							(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
							/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000)) 
						AS RES
					FROM         dbo.DATA0006 INNER JOIN
								  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
								  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
								  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
					WHERE    
								dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
								AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
								AND LEFT(dbo.DATA0034.DEPT_CODE, 4) = 'KLEB'
								AND dbo.DATA0048.RKEY NOT IN (
																SELECT
																	MaxID
																FROM
																(
																	SELECT 
																		COUNT(dbo.DATA0048.RKEY) AS RES,
																		MAX(dbo.DATA0048.RKEY) AS MaxID,
																		dbo.DATA0006.WORK_ORDER_NUMBER
																	FROM         dbo.DATA0006 INNER JOIN
																				  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
																				  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
																				  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
																	WHERE    
																				dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
																				AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
																				AND LEFT(dbo.DATA0034.DEPT_CODE, 4) = 'KLEB' AND dbo.DATA0048.QTY_PROD>0
																				
																	GROUP BY
																	dbo.DATA0006.WORK_ORDER_NUMBER
																) AS tblWOGrp
																WHERE RES>1
															)
				), 0) AS Durchsatz,
				'Zu-m2' AS BzgGr,
				ISNULL((
					SELECT TOP 1    
						SUM(
							CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
						) AS RES
					FROM         dbo.DATA0006 INNER JOIN
								  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
								  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
								  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
					WHERE    
								dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
								AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
								AND LEFT(dbo.DATA0034.DEPT_CODE, 4) = 'KLEB'
								AND dbo.DATA0048.RKEY NOT IN (
																SELECT
																	MaxID
																FROM
																(
																	SELECT 
																		COUNT(dbo.DATA0048.RKEY) AS RES,
																		MAX(dbo.DATA0048.RKEY) AS MaxID,
																		dbo.DATA0006.WORK_ORDER_NUMBER
																	FROM         dbo.DATA0006 INNER JOIN
																				  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
																				  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
																				  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
																	WHERE    
																				dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
																				AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
																				AND LEFT(dbo.DATA0034.DEPT_CODE, 4) = 'KLEB' AND dbo.DATA0048.QTY_PROD>0
																				
																	GROUP BY
																	dbo.DATA0006.WORK_ORDER_NUMBER
																) AS tblWOGrp
																WHERE RES>1
															)
				), 0) AS Durchsatz2,
				ISNULL((
					SELECT TOP 1
						SUM(
								CAST((DATEDIFF(mi , dbo.UF_ToDateTime(dbo.DATA0059.START_TIME, dbo.DATA0059.START_DATE) 
								, dbo.UF_ToDateTime(dbo.DATA0059.STOP_TIME, dbo.DATA0059.STOP_DATE) ) 
							) AS NUMERIC(10, 4)))AS Anz_Sekunden
					FROM         dbo.DATA0006 INNER JOIN
										  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
										  dbo.DATA0050 ON dbo.DATA0006.CUST_PART_PTR = dbo.DATA0050.RKEY INNER JOIN
										  dbo.DATA0059 ON dbo.DATA0048.RKEY = dbo.DATA0059.TRAN_PTR INNER JOIN
										  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
										  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY INNER JOIN
										  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
										  dbo.DATA0005 ON dbo.DATA0059.EMPL_PTR = dbo.DATA0005.RKEY INNER JOIN
										  dbo.ARTIKELDATEN ON dbo.DATA0050.RKEY = dbo.ARTIKELDATEN.CUST_PART_PTR
					WHERE   
							(dbo.DATA0038.TTYPE = 2) 
							AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
							AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
							AND LEFT(dbo.DATA0034.DEPT_CODE, 4) = 'KLEB'
				), 0) AS Durchsatz3
		END



		DECLARE @tblAnlageArtikelQS table(
											D17_PTR NUMERIC(10, 0),
											Abteilung varchar(250),
											Anlage varchar(250),
											Artikel char(20), 
											Bezeichnung char(40), 
											VerbrauchSOLL DECIMAL(20, 7),
											VerrPreis DECIMAL(20, 7),
											LagerEinheit varchar(5)
											)


		IF CAST(@para3 AS INT)=145 --Klebefolie
		BEGIN
			INSERT @tblAnlageArtikelQS(D17_PTR, Abteilung, Anlage, Artikel, Bezeichnung, VerbrauchSOLL, VerrPreis, LagerEinheit)
			SELECT  DISTINCT dbo.DATA0017.RKEY AS D17_PTR, LIVE2.dbo.MatRueck_Abteilung.Abteilung, 
					'Klebefolie' AS Anlage, --LIVE2.dbo.MatRueck_Anlage.Anlage, 
					dbo.DATA0017.INV_PART_NUMBER AS Artikel, 
					dbo.DATA0017.INV_PART_DESCRIPTION AS Bezeichnung, 
					LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, 
					dbo.DATA0017.STD_COST AS VerrPreis,
					dbo.DATA0002.UNIT_CODE AS LagerEinheit
			FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
						  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
						  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
						  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
						  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
						  dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
						  LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
						  dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
			GROUP BY dbo.DATA0017.RKEY, LIVE2.dbo.MatRueck_Abteilung.Abteilung, LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID,
					dbo.DATA0017.INV_PART_NUMBER, dbo.DATA0017.INV_PART_DESCRIPTION, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STOCK_PURCH, 
					dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE, dbo.DATA0017.CONSIGN_ONHAND_QTY,
					dbo.DATA0017.ACTIVE_FLAG, dbo.DATA0017.STD_COST, LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial
			HAVING      dbo.DATA0017.ACTIVE_FLAG='Y' AND (LIVE2.dbo.MatRueck_Anlage.ID = 145)
						AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(1 AS bit)
		END
		ELSE
		BEGIN
			INSERT @tblAnlageArtikelQS(D17_PTR, Abteilung, Anlage, Artikel, Bezeichnung, VerbrauchSOLL, VerrPreis, LagerEinheit)
			SELECT  DISTINCT dbo.DATA0017.RKEY AS D17_PTR, LIVE2.dbo.MatRueck_Abteilung.Abteilung, 
					LIVE2.dbo.MatRueck_Anlage.Anlage, 
					dbo.DATA0017.INV_PART_NUMBER AS Artikel, 
					dbo.DATA0017.INV_PART_DESCRIPTION AS Bezeichnung, 
					LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, 
					dbo.DATA0017.STD_COST AS VerrPreis,
					dbo.DATA0002.UNIT_CODE AS LagerEinheit
			FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
						  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
						  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
						  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
						  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
						  dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
						  LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
						  dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
			GROUP BY dbo.DATA0017.RKEY, LIVE2.dbo.MatRueck_Abteilung.Abteilung, LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID,
					dbo.DATA0017.INV_PART_NUMBER, dbo.DATA0017.INV_PART_DESCRIPTION, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STOCK_PURCH, 
					dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE, dbo.DATA0017.CONSIGN_ONHAND_QTY,
					dbo.DATA0017.ACTIVE_FLAG, dbo.DATA0017.STD_COST, LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial
			HAVING      dbo.DATA0017.ACTIVE_FLAG='Y' AND (LIVE2.dbo.MatRueck_Anlage.ID = CAST(@para3 AS INT)) 
						AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(1 AS bit)
		END


		SELECT
			Abteilung, 
			Anlage, 
			Artikel, 
			Bezeichnung, 
			Verbrauch,
			Durchsatz,
			Verbrauch*VerrPreis AS abs_Kosten,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch*VerrPreis)/Durchsatz 
				ELSE
					0
			END AS rel_Kosten,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch*VerrPreis)/Durchsatz*100 
				ELSE
					0
			END AS KS_IstKosten,
			VerrPreis*VerbrauchSOLL*100 AS SollKosten,
			CASE
				WHEN (VerrPreis*VerbrauchSOLL*100)>0 AND Durchsatz>0 THEN
					(((Verbrauch*VerrPreis)/Durchsatz*100)-(VerrPreis*VerbrauchSOLL*100.000000))/(VerrPreis*VerbrauchSOLL*100.000000) 
				ELSE
					0
			END AS Abweichung,
			(Verbrauch*VerrPreis)-(VerrPreis*Durchsatz*VerbrauchSOLL) AS MehrMinderKosten,
			(Verbrauch*VerrPreis) AS IstKosten,
			VerrPreis,
			CAST(VerbrauchSOLL*100.000000 AS DECIMAL(20, 7)) AS SollV_100,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch/Durchsatz)*100.000000 
				ELSE
					0
			END AS IstV_100,
			BzgGr,
			LagerEinheit,
			Durchsatz2,
			Durchsatz3,
			ISNULL((
					SELECT TOP 1 CASE WHEN LTRIM(RTRIM(ISNULL(ANALYSIS_CODE5, '')))='' THEN '0' ELSE ANALYSIS_CODE5 END
					 FROM dbo.DATA0017 WHERE RKEY = D17_PTR)
			, 0) AS MatFl,
			(
				SELECT TOP 1 CASE WHEN LTRIM(RTRIM(ISNULL(ANALYSIS_CODE1, '')))='' THEN '0' ELSE ANALYSIS_CODE1 END
				FROM dbo.DATA0017 WHERE RKEY = D17_PTR
			) AS AC_01,
			ISNULL((
				SELECT TOP 1
					SUM(ELP * KapAnzPkt) AS RES
				FROM
				(
							SELECT DISTINCT
								dbo.DATA0006.WORK_ORDER_NUMBER,
								CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) AS ELP,
								(SELECT TOP 1 CUSTOMER_PART_NUMBER FROM dbo.DATA0050 WHERE RKEY=dbo.ARTIKELDATEN.CUST_PART_PTR) AS Artikel,
								dbo.ARTIKELDATEN.KapAnzPkt
								--dbo.ARTIKELDATEN.CUST_PART_PTR
							FROM         dbo.DATA0006 INNER JOIN
							  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
							  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
							  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
							WHERE		dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
										AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) AND KapAnzPkt>0
										AND LEFT(dbo.DATA0034.DEPT_CODE, 4) = 'KLEB'
										AND dbo.DATA0048.RKEY NOT IN (
																		SELECT
																			MaxID
																		FROM
																		(
																			SELECT 
																				COUNT(dbo.DATA0048.RKEY) AS RES,
																				MAX(dbo.DATA0048.RKEY) AS MaxID,
																				dbo.DATA0006.WORK_ORDER_NUMBER
																			FROM         dbo.DATA0006 INNER JOIN
																						  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
																						  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
																						  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
																			WHERE    
																						dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
																						AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
																						AND LEFT(dbo.DATA0034.DEPT_CODE, 4) = 'KLEB' AND dbo.DATA0048.QTY_PROD>0
																						
																			GROUP BY
																			dbo.DATA0006.WORK_ORDER_NUMBER
																		) AS tblWOGrp
																		WHERE RES>1
																	)
				) AS tblELPKapAnzPkt
			), 0) AS KapAnzPkt,
			ISNULL((
					SELECT
						SUM(ELP * KapFlELPqdm) AS RES
					FROM
					(
						SELECT DISTINCT
							dbo.ARTIKELDATEN.CUST_PART_PTR,
							CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) AS ELP,
							dbo.ARTIKELDATEN.KapFlELPqdm
						FROM         dbo.DATA0006 INNER JOIN
											  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
											  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
						WHERE     dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
									AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103)
					) AS tblCustPart
			), 0) AS MatVerbAbsSoll_KlebeFolie

		FROM
		(
			SELECT 
				D17_PTR, 
				Abteilung, 
				Anlage, 
				Artikel, 
				Bezeichnung, 
				VerbrauchSOLL,
				(
					ISNULL((
						SELECT
							SUM(
								ISNULL(tblDATA0095.QUANTITY, 0) 
								*
								CASE 
									WHEN tblAnlageArtikel.D17_RKEY = 1118 AND tblDATA0095.TRAN_DATE < CONVERT(DATETIME, '28.05.2015', 103) THEN 66
									ELSE
										CASE
											WHEN tblAnlageArtikel.D17_RKEY = 1121 AND tblDATA0095.TRAN_DATE < CONVERT(DATETIME, '28.05.2015', 103) THEN 66 
											ELSE
												CASE
													WHEN tblAnlageArtikel.D17_RKEY = 42599 AND tblDATA0095.TRAN_DATE < CONVERT(DATETIME, '28.05.2015', 103) THEN 66 
													ELSE
														CASE
															WHEN tblAnlageArtikel.D17_RKEY = 1120 AND tblDATA0095.TRAN_DATE < CONVERT(DATETIME, '28.05.2015', 103) THEN 66 
															ELSE
																CASE
																	WHEN tblAnlageArtikel.D17_RKEY = 67745 AND tblDATA0095.TRAN_DATE < CONVERT(DATETIME, '28.05.2015', 103) THEN 66
																	ELSE
																		CASE
																			WHEN tblAnlageArtikel.D17_RKEY = 1119 AND tblDATA0095.TRAN_DATE < CONVERT(DATETIME, '18.06.2015', 103) THEN 66 ELSE 1
																		END
																END
														END
												END
										END
								END
							) AS RES
						FROM
						(
							SELECT     LIVE2.dbo.MatRueck_Anlage.ID AS Anlage_PTR, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY AS D17_RKEY, dbo.DATA0017.INV_PART_DESCRIPTION AS ArtBezeichnung,
										dbo.DATA0002.UNIT_CODE AS Lagereinheit, dbo.DATA0017.STOCK_PURCH 
							FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
									  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
									  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
									  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
									  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
									  dbo.DATA0034 ON LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR = dbo.DATA0034.RKEY
							--WHERE dbo.DATA0034.DEPT_CODE = @para2
							GROUP BY LIVE2.dbo.MatRueck_Anlage.ID, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY, dbo.DATA0017.INV_PART_DESCRIPTION , dbo.DATA0017.STOCK_PURCH, dbo.DATA0002.UNIT_CODE 
							--HAVING LIVE2.dbo.MatRueck_Anlage.ID = CAST(@para3 AS INT)--(LIVE2.dbo.MatRueck_Anlage.Anlage = @Anlage)
						) AS tblAnlageArtikel INNER JOIN --LEFT OUTER JOIN 
						(SELECT QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, MONTH(TRAN_DATE) AS Monat, TRAN_TP 
						--FROM dbo.DATA0095 INNER JOIN  dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY 
						FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
						WHERE dbo.DATA0095.TRAN_TP IN (15, 16) --AND dbo.DATA0034.DEPT_CODE = @para2
						AND dbo.DATA0095.TRAN_DATE >=	CASE
															WHEN dbo.DATA0095.INVT_PTR = 68075 THEN CONVERT(DATETIME, '01.06.2015', 103) 
															ELSE
																CASE
																	WHEN dbo.DATA0095.INVT_PTR = 67954 THEN CONVERT(DATETIME, '01.06.2015', 103) 
																	ELSE
																		CASE
																			WHEN dbo.DATA0095.INVT_PTR = 68074 THEN CONVERT(DATETIME, '01.06.2015', 103) 
																			ELSE
																				CONVERT(DATETIME, @para4, 103) 
																		END
																END
														END
						AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  
						AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR ) AS tblDATA0095 
						ON tblAnlageArtikel.D17_RKEY = tblDATA0095.INVT_PTR
						--) AS myTblSub	
					), 0)
					+
					ISNULL((
						SELECT 
							ISNULL((
								(-1)*SUM(QUANTITY) 
								*
								ISNULL((
									SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
									FROM LIVE2.dbo.NachKalk_MatVerteilung
									WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = CAST(@para3 AS INT)
											AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = tblAnlageArtikel_.D17_PTR
								), 0) 
							), 0) AS RES 

						FROM 
							dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
						WHERE 
							dbo.DATA0095.TRAN_TP = 23
							AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
							AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
							AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR
					), 0)
				) AS Verbrauch,
				ISNULL((SELECT TOP 1 Durchsatz FROM @tblDurchsatzQS WHERE DEPT_CODE = @para2), 0) AS Durchsatz,
				ISNULL((SELECT TOP 1 BzgGr FROM @tblDurchsatzQS WHERE DEPT_CODE = @para2), 0) AS BzgGr,
				VerrPreis,
				LagerEinheit,
				ISNULL((SELECT TOP 1 Durchsatz2 FROM @tblDurchsatzQS WHERE DEPT_CODE = @para2), 0) AS Durchsatz2,
				ISNULL((SELECT TOP 1 Durchsatz3 FROM @tblDurchsatzQS WHERE DEPT_CODE = @para2), 0) AS Durchsatz3

			FROM @tblAnlageArtikelQS AS tblAnlageArtikel_
		) AS tblJeAnlage
		ORDER BY IstKosten DESC
	END

	IF @Case_ = 'Materialverbrauch_AetzAlk'
	BEGIN
		--DECLARE 
		--@para1 varchar(255),
		--@para2 varchar(255),
		--@para3 varchar(255),
		--@para4 varchar(255),
		--@para5 varchar(255),
		--@para6 varchar(255)
		--SET @para1 = 'SES Ätzen alkalisch'	--Anlage
		--SET @para2 = 'ÄTZA-01-01'	--Ressource
		--SET @para3 = '39'			--Anlage_PTR
		--SET @para4 = '01.01.2015'	--Datum Von
		--SET @para5 = '31.03.2015'	--Datum Bis
		--SET @para6 = 'X'

		--DECLARE 
		--@para1 varchar(255),
		--@para2 varchar(255),
		--@para3 varchar(255),
		--@para4 varchar(255),
		--@para5 varchar(255),
		--@para6 varchar(255)
		--SET @para1 = 'SES Ätzen alkalisch'	--Anlage
		--SET @para2 = 'ÄTZA-01-01'	--Ressource
		--SET @para3 = '39'			--Anlage_PTR
		--SET @para4 = '01.01.2015'	--Datum Von
		--SET @para5 = '31.03.2015'	--Datum Bis
		--SET @para6 = 'Z'

		DECLARE @tblDurchsatzAetzAlk table(
												DEPT_CODE char(10), 
												Durchsatz NUMERIC(10, 4),
												BzgGr varchar(20),
												Durchsatz2 NUMERIC(10, 4),
												BzgGr2 varchar(20)
											)


		IF @para1='SES Ätzen alkalisch'
		BEGIN
			IF @para6='X'
			BEGIN
				INSERT @tblDurchsatzAetzAlk(DEPT_CODE, Durchsatz, BzgGr)
				SELECT
					@para2 AS DEPT_CODE,
					ISNULL((
						SELECT
							SUM(ROUND(
								CASE
									WHEN dbo.ARTIKELDATEN.LE>1 THEN
										((2*dbo.ARTIKELDATEN.ZuX*dbo.ARTIKELDATEN.ZuY/1000000)-(dbo.ARTIKELDATEN.CuFl_L+dbo.ARTIKELDATEN.CuFl_B)/100)*dbo.ARTIKELDATEN.CuD_B*8.92/1000*(CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT))
									ELSE ((dbo.ARTIKELDATEN.ZuX*dbo.ARTIKELDATEN.ZuY/1000000)-(dbo.ARTIKELDATEN.CuFl_L+dbo.ARTIKELDATEN.CuFl_B)/100)*dbo.ARTIKELDATEN.CuD_B*8.92/1000*(CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT))
								END 
							, 4)) AS Cu_in_Kg
						FROM         dbo.DATA0056 WITH (nolock) LEFT OUTER JOIN
											  dbo.DATA0038 ON dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR AND dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER RIGHT OUTER JOIN
											  dbo.ARTIKELDATEN RIGHT OUTER JOIN
											  dbo.DATA0048 WITH (nolock) INNER JOIN
											  dbo.DATA0034 WITH (nolock) ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
											  dbo.DATA0006 WITH (nolock) ON dbo.DATA0048.WO_PTR = dbo.DATA0006.RKEY ON dbo.ARTIKELDATEN.CUST_PART_PTR = dbo.DATA0006.CUST_PART_PTR ON 
											  dbo.DATA0056.RKEY = dbo.DATA0048.TPUT_PTR
						WHERE     
							dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT > 0 
							AND dbo.DATA0038.TTYPE = 2 
							AND (dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103))
							AND (dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103))
							AND dbo.DATA0034.RKEY IN (86, 328, 329, 53, 452)
					), 0) AS Durchsatz,
					'kg Cu-Rec' AS BzgGr
			END
			ELSE
			BEGIN
				IF @para6='Y'
				BEGIN
					INSERT @tblDurchsatzAetzAlk(DEPT_CODE, Durchsatz, BzgGr)
					SELECT
						@para2 AS DEPT_CODE,
/*
						ISNULL((
							SELECT
								SUM(
									(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
									/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000))
								AS RES
							FROM         dbo.DATA0006 INNER JOIN
												  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
												  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
												  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
												  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
												  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
							WHERE     (dbo.DATA0038.TTYPE = 2)
										AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
										AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
										AND dbo.DATA0034.RKEY IN (328, 329, 53, 452) --ohne ÄTZA-01-01
						), 0) AS Durchsatz,
*/
						ISNULL((
							SELECT
								SUM(
									(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
									/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000))
								AS RES
							FROM         dbo.DATA0006 INNER JOIN
												  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
												  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
												  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
												  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
												  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
							WHERE     (dbo.DATA0038.TTYPE = 2)
										AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
										AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
										AND LEFT(dbo.DATA0034.DEPT_CODE, 4) IN ('ÄTZA', 'STSN')
										AND (LEFT(dbo.DATA0038.PARAMETER_2, 3)='1.C' OR dbo.DATA0038.PARAMETER_2='' OR dbo.DATA0038.PARAMETER_2='.')
						), 0) AS Durchsatz,
						'Zu-m2' AS BzgGr
				END
				ELSE
				BEGIN
					IF @para6='Z'
					BEGIN
						INSERT @tblDurchsatzAetzAlk(DEPT_CODE, Durchsatz, BzgGr, Durchsatz2, BzgGr2)
						SELECT
							@para2 AS DEPT_CODE,
							ISNULL((
								SELECT
									SUM(
										(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
										/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000))
									AS RES
								FROM         dbo.DATA0006 INNER JOIN
													  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
													  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
													  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
													  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
													  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
								WHERE     (dbo.DATA0038.TTYPE = 2)
											AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
											AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
											AND LEFT(dbo.DATA0034.DEPT_CODE, 4) IN ('ÄTZA', 'STSN')
											AND (LEFT(dbo.DATA0038.PARAMETER_2, 3)='1.C' OR dbo.DATA0038.PARAMETER_2='' OR dbo.DATA0038.PARAMETER_2='.')
							), 0) AS Durchsatz,
							'Zu-m2' AS BzgGr,
							ISNULL((
								SELECT
									SUM(ROUND(
										CASE
											WHEN dbo.ARTIKELDATEN.LE>1 THEN
												((2*dbo.ARTIKELDATEN.ZuX*dbo.ARTIKELDATEN.ZuY/1000000)-(dbo.ARTIKELDATEN.CuFl_L+dbo.ARTIKELDATEN.CuFl_B)/100)*dbo.ARTIKELDATEN.CuD_B*8.92/1000*(CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT))
											ELSE ((dbo.ARTIKELDATEN.ZuX*dbo.ARTIKELDATEN.ZuY/1000000)-(dbo.ARTIKELDATEN.CuFl_L+dbo.ARTIKELDATEN.CuFl_B)/100)*dbo.ARTIKELDATEN.CuD_B*8.92/1000*(CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT))
										END 
									, 4)) AS Cu_in_Kg
								FROM         dbo.DATA0056 WITH (nolock) LEFT OUTER JOIN
													  dbo.DATA0038 ON dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR AND dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER RIGHT OUTER JOIN
													  dbo.ARTIKELDATEN RIGHT OUTER JOIN
													  dbo.DATA0048 WITH (nolock) INNER JOIN
													  dbo.DATA0034 WITH (nolock) ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
													  dbo.DATA0006 WITH (nolock) ON dbo.DATA0048.WO_PTR = dbo.DATA0006.RKEY ON dbo.ARTIKELDATEN.CUST_PART_PTR = dbo.DATA0006.CUST_PART_PTR ON 
													  dbo.DATA0056.RKEY = dbo.DATA0048.TPUT_PTR
								WHERE     
									dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT > 0 
									AND dbo.DATA0038.TTYPE = 2 
									AND (dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103))
									AND (dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103))
									AND dbo.DATA0034.RKEY IN (86, 328, 329, 53, 452)
							), 0) AS Durchsatz2,
							'kg Cu-Rec' AS BzgGr2
					END
					ELSE
					BEGIN
						INSERT @tblDurchsatzAetzAlk(DEPT_CODE, Durchsatz, BzgGr, Durchsatz2, BzgGr2)
						SELECT
							@para2 AS DEPT_CODE,
							ISNULL((
								SELECT
									SUM(
										(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
										/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000))
									AS RES
								FROM         dbo.DATA0006 INNER JOIN
													  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
													  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
													  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
													  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
													  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
								WHERE     (dbo.DATA0038.TTYPE = 2)
											AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
											AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
											AND LEFT(dbo.DATA0034.DEPT_CODE, 4) IN ('ÄTZA', 'STSN')
											AND (LEFT(dbo.DATA0038.PARAMETER_2, 3)='1.C' OR dbo.DATA0038.PARAMETER_2='' OR dbo.DATA0038.PARAMETER_2='.')
							), 0) AS Durchsatz,
							'Zu-m2' AS BzgGr,
							ISNULL((
								SELECT
									SUM(ROUND(
										CASE
											WHEN dbo.ARTIKELDATEN.LE>1 THEN
												((2*dbo.ARTIKELDATEN.ZuX*dbo.ARTIKELDATEN.ZuY/1000000)-(dbo.ARTIKELDATEN.CuFl_L+dbo.ARTIKELDATEN.CuFl_B)/100)*dbo.ARTIKELDATEN.CuD_B*8.92/1000*(CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT))
											ELSE ((dbo.ARTIKELDATEN.ZuX*dbo.ARTIKELDATEN.ZuY/1000000)-(dbo.ARTIKELDATEN.CuFl_L+dbo.ARTIKELDATEN.CuFl_B)/100)*dbo.ARTIKELDATEN.CuD_B*8.92/1000*(CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT))
										END 
									, 4)) AS Cu_in_Kg
								FROM         dbo.DATA0056 WITH (nolock) LEFT OUTER JOIN
													  dbo.DATA0038 ON dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR AND dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER RIGHT OUTER JOIN
													  dbo.ARTIKELDATEN RIGHT OUTER JOIN
													  dbo.DATA0048 WITH (nolock) INNER JOIN
													  dbo.DATA0034 WITH (nolock) ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
													  dbo.DATA0006 WITH (nolock) ON dbo.DATA0048.WO_PTR = dbo.DATA0006.RKEY ON dbo.ARTIKELDATEN.CUST_PART_PTR = dbo.DATA0006.CUST_PART_PTR ON 
													  dbo.DATA0056.RKEY = dbo.DATA0048.TPUT_PTR
								WHERE     
									dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT > 0 
									AND dbo.DATA0038.TTYPE = 2 
									AND (dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103))
									AND (dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103))
									AND dbo.DATA0034.RKEY IN (86, 328, 329, 53, 452)
							), 0) AS Durchsatz2,
							'kg Cu-Rec' AS BzgGr2
					END
				END
			END
		END
		IF @para1='SES Festresist-Stripper'
		BEGIN
			INSERT @tblDurchsatzAetzAlk(DEPT_CODE, Durchsatz, BzgGr)
			SELECT
				@para2 AS DEPT_CODE,
				ISNULL((
					SELECT
						SUM(
							(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
							/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000))
						AS RES
					FROM         dbo.DATA0006 INNER JOIN
										  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
										  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
										  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
										  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
										  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
					WHERE     (dbo.DATA0038.TTYPE = 2)
								AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
								AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
								AND LEFT(dbo.DATA0034.DEPT_CODE, 4) IN ('ÄTZA', 'STSN')
								AND (CHARINDEX('F', dbo.DATA0038.PARAMETER_2)>1 OR dbo.DATA0038.PARAMETER_2='' OR dbo.DATA0038.PARAMETER_2='.')
				), 0) AS Durchsatz,
				'Zu-m2' AS BzgGr
		END
		IF @para1='SES Zinn-Stripper'
		BEGIN
			IF @para6='J'
			BEGIN
				INSERT @tblDurchsatzAetzAlk(DEPT_CODE, Durchsatz, BzgGr)
				SELECT
					@para2 AS DEPT_CODE,
					ISNULL((
						SELECT     
							SUM(
								(CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT))
								*
								(dbo.ARTIKELDATEN.CuFl_L + dbo.ARTIKELDATEN.CuFl_B)
								/ 100
							) AS RES
						FROM         dbo.DATA0006 INNER JOIN
											  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
											  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
											  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
											  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
											  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
						WHERE     (dbo.DATA0038.TTYPE = 2)
									AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
									AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
									AND LEFT(dbo.DATA0034.DEPT_CODE, 4) IN ('ÄTZA', 'STSN')
									AND (CHARINDEX('S', dbo.DATA0038.PARAMETER_2)>1 OR dbo.DATA0038.PARAMETER_2='' OR dbo.DATA0038.PARAMETER_2='.')
					), 0) AS Durchsatz,
					'm2-aF' AS BzgGr
			END
			ELSE
			BEGIN
				INSERT @tblDurchsatzAetzAlk(DEPT_CODE, Durchsatz, BzgGr)
				SELECT
					@para2 AS DEPT_CODE,
					ISNULL((
						SELECT
							SUM(
								(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
								/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000))
							AS RES
						FROM         dbo.DATA0006 INNER JOIN
											  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
											  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
											  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
											  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
											  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
						WHERE     (dbo.DATA0038.TTYPE = 2)
									AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
									AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
									AND LEFT(dbo.DATA0034.DEPT_CODE, 4) IN ('ÄTZA', 'STSN')
									AND (CHARINDEX('S', dbo.DATA0038.PARAMETER_2)>1 OR dbo.DATA0038.PARAMETER_2='' OR dbo.DATA0038.PARAMETER_2='.')
					), 0) AS Durchsatz,
					'Zu-m2' AS BzgGr
			END
		END

		--SELECT * FROM @tblDurchsatzAetzAlk


		DECLARE @tblAnlageArtikelAetzAlk table(
											D17_PTR NUMERIC(10, 0),
											Abteilung varchar(250),
											Anlage varchar(250),
											Artikel char(20), 
											Bezeichnung char(40), 
											VerbrauchSOLL DECIMAL(20, 7),
											VerrPreis DECIMAL(20, 7),
											LagerEinheit varchar(5)
											)



		IF CAST(@para3 AS INT)=39 AND @para6<>'Z' --Ätzen alkalisch
		BEGIN
			INSERT @tblAnlageArtikelAetzAlk(D17_PTR, Abteilung, Anlage, Artikel, Bezeichnung, VerbrauchSOLL, VerrPreis, LagerEinheit)
			SELECT  DISTINCT dbo.DATA0017.RKEY AS D17_PTR, LIVE2.dbo.MatRueck_Abteilung.Abteilung, 
					LIVE2.dbo.MatRueck_Anlage.Anlage, 
					dbo.DATA0017.INV_PART_NUMBER AS Artikel, 
					dbo.DATA0017.INV_PART_DESCRIPTION AS Bezeichnung, 
					LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, 
					dbo.DATA0017.STD_COST AS VerrPreis,
					dbo.DATA0002.UNIT_CODE AS LagerEinheit
			FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
						  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
						  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
						  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
						  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
						  dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
						  LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
						  dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
			GROUP BY dbo.DATA0017.RKEY, LIVE2.dbo.MatRueck_Abteilung.Abteilung, LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID,
					dbo.DATA0017.INV_PART_NUMBER, dbo.DATA0017.INV_PART_DESCRIPTION, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STOCK_PURCH, 
					dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE, dbo.DATA0017.CONSIGN_ONHAND_QTY,
					dbo.DATA0017.ACTIVE_FLAG, dbo.DATA0017.STD_COST, LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial
			HAVING      --dbo.DATA0017.ACTIVE_FLAG='Y' AND 
						(LIVE2.dbo.MatRueck_Anlage.ID = CAST(@para3 AS INT)) 
						AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(1 AS bit) 
						AND dbo.DATA0017.RKEY NOT IN (67439, 67440) --Ansatzlösung CTS, Ansatzlösung ohne Kupfersulfat
		END
		ELSE
		BEGIN
			IF @para6='Z' --Ansatzlösung
			BEGIN
				INSERT @tblAnlageArtikelAetzAlk(D17_PTR, Abteilung, Anlage, Artikel, Bezeichnung, VerbrauchSOLL, VerrPreis, LagerEinheit)
				SELECT  DISTINCT dbo.DATA0017.RKEY AS D17_PTR, LIVE2.dbo.MatRueck_Abteilung.Abteilung, 
						LIVE2.dbo.MatRueck_Anlage.Anlage, 
						dbo.DATA0017.INV_PART_NUMBER AS Artikel, 
						dbo.DATA0017.INV_PART_DESCRIPTION AS Bezeichnung, 
						LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, 
						dbo.DATA0017.STD_COST AS VerrPreis,
						dbo.DATA0002.UNIT_CODE AS LagerEinheit
				FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
							  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
							  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
							  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
							  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
							  dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
							  LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
							  dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
				GROUP BY dbo.DATA0017.RKEY, LIVE2.dbo.MatRueck_Abteilung.Abteilung, LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID,
						dbo.DATA0017.INV_PART_NUMBER, dbo.DATA0017.INV_PART_DESCRIPTION, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STOCK_PURCH, 
						dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE, dbo.DATA0017.CONSIGN_ONHAND_QTY,
						dbo.DATA0017.ACTIVE_FLAG, dbo.DATA0017.STD_COST, LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial
				HAVING      dbo.DATA0017.RKEY IN (67439, 67440)
							--dbo.DATA0017.ACTIVE_FLAG='Y' 
							--AND (LIVE2.dbo.MatRueck_Anlage.ID = CAST(@para3 AS INT)) 
							AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(1 AS bit)
			END
			ELSE
			BEGIN
				INSERT @tblAnlageArtikelAetzAlk(D17_PTR, Abteilung, Anlage, Artikel, Bezeichnung, VerbrauchSOLL, VerrPreis, LagerEinheit)
				SELECT  DISTINCT dbo.DATA0017.RKEY AS D17_PTR, LIVE2.dbo.MatRueck_Abteilung.Abteilung, 
						LIVE2.dbo.MatRueck_Anlage.Anlage, 
						dbo.DATA0017.INV_PART_NUMBER AS Artikel, 
						dbo.DATA0017.INV_PART_DESCRIPTION AS Bezeichnung, 
						LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, 
						dbo.DATA0017.STD_COST AS VerrPreis,
						dbo.DATA0002.UNIT_CODE AS LagerEinheit
				FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
							  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
							  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
							  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
							  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
							  dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
							  LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
							  dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
				GROUP BY dbo.DATA0017.RKEY, LIVE2.dbo.MatRueck_Abteilung.Abteilung, LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID,
						dbo.DATA0017.INV_PART_NUMBER, dbo.DATA0017.INV_PART_DESCRIPTION, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STOCK_PURCH, 
						dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE, dbo.DATA0017.CONSIGN_ONHAND_QTY,
						dbo.DATA0017.ACTIVE_FLAG, dbo.DATA0017.STD_COST, LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial
				HAVING      --dbo.DATA0017.ACTIVE_FLAG='Y' AND 
							(LIVE2.dbo.MatRueck_Anlage.ID = CAST(@para3 AS INT)) 
							AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(1 AS bit)
			END
		END

		--SELECT * FROM @tblAnlageArtikelAetzAlk

		SELECT
			Abteilung, 
			Anlage, 
			Artikel, 
			Bezeichnung, 
			Verbrauch,
			Durchsatz,
			Durchsatz2,
			Verbrauch*VerrPreis AS abs_Kosten,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch*VerrPreis)/Durchsatz 
				ELSE
					0
			END AS rel_Kosten,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch*VerrPreis)/Durchsatz*100 
				ELSE
					0
			END AS KS_IstKosten,
			VerrPreis*VerbrauchSOLL*100 AS SollKosten,
			CASE
				WHEN (VerrPreis*VerbrauchSOLL*100)>0 AND Durchsatz>0 THEN
					(((Verbrauch*VerrPreis)/Durchsatz*100)-(VerrPreis*VerbrauchSOLL*100.000000))/(VerrPreis*VerbrauchSOLL*100.000000) 
				ELSE
					0
			END AS Abweichung,
			(Verbrauch*VerrPreis)-(VerrPreis*Durchsatz*VerbrauchSOLL) AS MehrMinderKosten,
			(Verbrauch*VerrPreis) AS IstKosten,
			VerrPreis,
			CAST(VerbrauchSOLL*100.000000 AS DECIMAL(20, 7)) AS SollV_100,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch/Durchsatz)*100.000000 
				ELSE
					0
			END AS IstV_100,
			BzgGr,
			BzgGr2,
			LagerEinheit,
			ISNULL((
					SELECT TOP 1 CASE WHEN LTRIM(RTRIM(ISNULL(ANALYSIS_CODE5, '')))='' THEN '0' ELSE ANALYSIS_CODE5 END
					 FROM dbo.DATA0017 WHERE RKEY = D17_PTR)
			, 0) AS MatFl,
			(
				SELECT TOP 1 CASE WHEN LTRIM(RTRIM(ISNULL(ANALYSIS_CODE1, '')))='' THEN '0' ELSE ANALYSIS_CODE1 END
				FROM dbo.DATA0017 WHERE RKEY = D17_PTR
			) AS AC_01

		FROM
		(
			SELECT 
				D17_PTR, 
				Abteilung, 
				Anlage, 
				Artikel, 
				Bezeichnung, 
				CASE
					WHEN @para6='J' THEN 0.35 
						ELSE 
							CASE
								WHEN @para1='SES Festresist-Stripper' AND D17_PTR=707 THEN 0
									ELSE
										VerbrauchSOLL
							END 
				END AS VerbrauchSOLL,
				isnull((
					ISNULL((
						SELECT
							SUM(ISNULL(tblDATA0095.QUANTITY, 0)) AS RES
						FROM
						(
							SELECT     LIVE2.dbo.MatRueck_Anlage.ID AS Anlage_PTR, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY AS D17_RKEY, dbo.DATA0017.INV_PART_DESCRIPTION AS ArtBezeichnung,
										dbo.DATA0002.UNIT_CODE AS Lagereinheit, dbo.DATA0017.STOCK_PURCH 
							FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
									  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
									  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
									  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
									  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
									  dbo.DATA0034 ON LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR = dbo.DATA0034.RKEY
							WHERE dbo.DATA0034.DEPT_CODE = @para2
							GROUP BY LIVE2.dbo.MatRueck_Anlage.ID, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY, dbo.DATA0017.INV_PART_DESCRIPTION , dbo.DATA0017.STOCK_PURCH, dbo.DATA0002.UNIT_CODE 
							HAVING LIVE2.dbo.MatRueck_Anlage.ID = CAST(@para3 AS INT)--(LIVE2.dbo.MatRueck_Anlage.Anlage = @Anlage)
						) AS tblAnlageArtikel INNER JOIN --LEFT OUTER JOIN 
						(SELECT QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, MONTH(TRAN_DATE) AS Monat, TRAN_TP 
						--FROM dbo.DATA0095 INNER JOIN  dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY 
						FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
						WHERE dbo.DATA0095.TRAN_TP IN (15, 16) AND dbo.DATA0034.DEPT_CODE = @para2
						AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
						AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR ) AS tblDATA0095 
						ON tblAnlageArtikel.D17_RKEY = tblDATA0095.INVT_PTR
						--) AS myTblSub	
					), 0)
					+
					ISNULL((
						SELECT 
							ISNULL((
								(-1)*SUM(QUANTITY) 
								*
								ISNULL((
									SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
									FROM LIVE2.dbo.NachKalk_MatVerteilung
									WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = CAST(@para3 AS INT)
											AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = tblAnlageArtikel_.D17_PTR
								), 0) 
							), 0) AS RES 

						FROM 
							dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
						WHERE 
							dbo.DATA0095.TRAN_TP = 23
							AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
							AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
							AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR
					), 0)
				), 0) AS Verbrauch,
				ISNULL((SELECT TOP 1 Durchsatz FROM @tblDurchsatzAetzAlk WHERE DEPT_CODE = @para2), 0) AS Durchsatz,
				ISNULL((SELECT TOP 1 BzgGr FROM @tblDurchsatzAetzAlk WHERE DEPT_CODE = @para2), 0) AS BzgGr,
				ISNULL((SELECT TOP 1 Durchsatz2 FROM @tblDurchsatzAetzAlk WHERE DEPT_CODE = @para2), 0) AS Durchsatz2,
				ISNULL((SELECT TOP 1 BzgGr2 FROM @tblDurchsatzAetzAlk WHERE DEPT_CODE = @para2), 0) AS BzgGr2,
				VerrPreis,
				LagerEinheit

			FROM @tblAnlageArtikelAetzAlk AS tblAnlageArtikel_
		) AS tblJeAnlage
		ORDER BY IstKosten DESC
	END

	IF @Case_ = 'DatenCuREC_CuRec'
	BEGIN
		SELECT
			Datum1 AS Datum,
			ISNULL(Cu_in_Kg, 0) AS Cu_in_Kg,
			ISNULL(RES1, 0) AS RES1
		FROM
		(
			SELECT
				CAST('01.' + LTRIM(STR(MONTH(dbo.DATA0048.TDATE))) + '.' + LTRIM(STR(YEAR(dbo.DATA0048.TDATE))) AS datetime) AS Datum1,
				YEAR(dbo.DATA0048.TDATE) AS Jahr, 
				MONTH(dbo.DATA0048.TDATE) AS Monat,
				SUM(ROUND(
					CASE
						WHEN dbo.ARTIKELDATEN.LE>1 THEN
							((2*dbo.ARTIKELDATEN.ZuX*dbo.ARTIKELDATEN.ZuY/1000000)-(dbo.ARTIKELDATEN.CuFl_L+dbo.ARTIKELDATEN.CuFl_B)/100)*dbo.ARTIKELDATEN.CuD_B*8.92/1000*(CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT))
						ELSE ((dbo.ARTIKELDATEN.ZuX*dbo.ARTIKELDATEN.ZuY/1000000)-(dbo.ARTIKELDATEN.CuFl_L+dbo.ARTIKELDATEN.CuFl_B)/100)*dbo.ARTIKELDATEN.CuD_B*8.92/1000*(CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT))
					END 
				, 4)) AS Cu_in_Kg
			FROM         dbo.DATA0056 WITH (nolock) LEFT OUTER JOIN
								  dbo.DATA0038 ON dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR AND dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER RIGHT OUTER JOIN
								  dbo.ARTIKELDATEN RIGHT OUTER JOIN
								  dbo.DATA0048 WITH (nolock) INNER JOIN
								  dbo.DATA0034 WITH (nolock) ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
								  dbo.DATA0006 WITH (nolock) ON dbo.DATA0048.WO_PTR = dbo.DATA0006.RKEY ON dbo.ARTIKELDATEN.CUST_PART_PTR = dbo.DATA0006.CUST_PART_PTR ON 
								  dbo.DATA0056.RKEY = dbo.DATA0048.TPUT_PTR
			WHERE     
				dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT > 0 
				AND dbo.DATA0038.TTYPE = 2 
				--AND (dbo.DATA0048.TDATE >= CONVERT(DATETIME, '01.01.2013', 103))
				----AND (dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103))
				AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
				AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
				AND dbo.DATA0034.RKEY IN (86, 328, 329, 53, 452)
			GROUP BY
				CAST('01.' + LTRIM(STR(MONTH(dbo.DATA0048.TDATE))) + '.' + LTRIM(STR(YEAR(dbo.DATA0048.TDATE))) AS datetime),
				YEAR(dbo.DATA0048.TDATE), 
				MONTH(dbo.DATA0048.TDATE)
		) AS tbl1  LEFT OUTER JOIN
		(

			SELECT 
				CAST('01.' + LTRIM(STR(MONTH(TRAN_DATE))) + '.' + LTRIM(STR(YEAR(TRAN_DATE))) AS datetime) AS Datum2,
				YEAR(TRAN_DATE) AS Jahr, 
				MONTH(TRAN_DATE) AS Monat,
				SUM(ISNULL(QUANTITY, 0)) AS RES1
				--QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, MONTH(TRAN_DATE) AS Monat, TRAN_TP 
			FROM dbo.DATA0095 
			WHERE 
				--dbo.DATA0095.TRAN_TP = 11  
				dbo.DATA0095.TRAN_TP IN (11, 17) -- 17 = gemisch. Transaktion => damit man auch die Ersteinlagerung sieht.
				--dbo.DATA0034.DEPT_CODE = 'RÄTZ-01-01' AND
				--AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, '01.01.2013', 103) 
				----AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  
				AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
				AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
				AND dbo.DATA0095.INVT_PTR = 56268 --Wertstoff Elektrolyt-Kupfer
			GROUP BY
				CAST('01.' + LTRIM(STR(MONTH(TRAN_DATE))) + '.' + LTRIM(STR(YEAR(TRAN_DATE))) AS datetime),
				YEAR(TRAN_DATE), 
				MONTH(TRAN_DATE)
		) AS tbl2 ON tbl1.Datum1 = tbl2.Datum2
		ORDER BY Datum1 DESC
	END

	IF @Case_ = 'DatenCuREC_WertstoffElektrolytKupfer'
	BEGIN
		--DECLARE 
		--@para4 varchar(255),
		--@para5 varchar(255)
		--SET @para4 = '01.01.2015'	--Datum Von
		--SET @para5 = '31.07.2015'	--Datum Bis

		SELECT TOP 1
			ISNULL((
					SELECT TOP 1
						SUM(ISNULL(tblDATA0095.QUANTITY, 0)) AS RES
					FROM
					(
						SELECT     LIVE2.dbo.MatRueck_Anlage.ID AS Anlage_PTR, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY AS D17_RKEY, dbo.DATA0017.INV_PART_DESCRIPTION AS ArtBezeichnung,
									dbo.DATA0002.UNIT_CODE AS Lagereinheit, dbo.DATA0017.STOCK_PURCH 
						FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
								  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
								  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
								  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
								  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
								  dbo.DATA0034 ON LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR = dbo.DATA0034.RKEY
						WHERE dbo.DATA0034.DEPT_CODE = 'RÄTZ-01-01'
						GROUP BY LIVE2.dbo.MatRueck_Anlage.ID, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY, dbo.DATA0017.INV_PART_DESCRIPTION , dbo.DATA0017.STOCK_PURCH, dbo.DATA0002.UNIT_CODE 
						HAVING LIVE2.dbo.MatRueck_Anlage.ID = 95
					) AS tblAnlageArtikel INNER JOIN --LEFT OUTER JOIN 
					(
						SELECT QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, MONTH(TRAN_DATE) AS Monat, TRAN_TP 
						--FROM dbo.DATA0095 INNER JOIN  dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY 
						FROM dbo.DATA0095 --LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
						WHERE 
							dbo.DATA0095.TRAN_TP = 11 AND 
							--dbo.DATA0034.DEPT_CODE = 'RÄTZ-01-01' AND
							dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
							AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  
							AND dbo.DATA0095.INVT_PTR = 56268 --Wertstoff Elektrolyt-Kupfer
					) AS tblDATA0095 
					ON tblAnlageArtikel.D17_RKEY = tblDATA0095.INVT_PTR
				), 0) AS Kum,
			ISNULL((
					SELECT TOP 1
						SUM(ISNULL(tblDATA0095.QUANTITY, 0)) AS RES
					FROM
					(
						SELECT     LIVE2.dbo.MatRueck_Anlage.ID AS Anlage_PTR, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY AS D17_RKEY, dbo.DATA0017.INV_PART_DESCRIPTION AS ArtBezeichnung,
									dbo.DATA0002.UNIT_CODE AS Lagereinheit, dbo.DATA0017.STOCK_PURCH 
						FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
								  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
								  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
								  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
								  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
								  dbo.DATA0034 ON LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR = dbo.DATA0034.RKEY
						WHERE dbo.DATA0034.DEPT_CODE = 'RÄTZ-01-01'
						GROUP BY LIVE2.dbo.MatRueck_Anlage.ID, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY, dbo.DATA0017.INV_PART_DESCRIPTION , dbo.DATA0017.STOCK_PURCH, dbo.DATA0002.UNIT_CODE 
						HAVING LIVE2.dbo.MatRueck_Anlage.ID = 95
					) AS tblAnlageArtikel INNER JOIN --LEFT OUTER JOIN 
					(
						SELECT QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, MONTH(TRAN_DATE) AS Monat, TRAN_TP 
						--FROM dbo.DATA0095 INNER JOIN  dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY 
						FROM dbo.DATA0095 --LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
						WHERE 
							dbo.DATA0095.TRAN_TP = 11 AND 
							--dbo.DATA0034.DEPT_CODE = 'RÄTZ-01-01' AND
							YEAR(dbo.DATA0095.TRAN_DATE) = YEAR(CONVERT(DATETIME, @para5, 103))
							AND MONTH(dbo.DATA0095.TRAN_DATE) = MONTH(CONVERT(DATETIME, @para5, 103)) 
							AND dbo.DATA0095.INVT_PTR = 56268 --Wertstoff Elektrolyt-Kupfer
					) AS tblDATA0095 
					ON tblAnlageArtikel.D17_RKEY = tblDATA0095.INVT_PTR
				), 0) AS Monat
	END

	IF @Case_ = 'Materialverbrauch_HAL'
	BEGIN
		--DECLARE 
		--@para1 varchar(255),
		--@para2 varchar(255),
		--@para3 varchar(255),
		--@para4 varchar(255),
		--@para5 varchar(255)
		--SET @para1 = 'Black Hole'	--Anlage
		--SET @para2 = 'BLHO-01-01'	--Ressource
		--SET @para3 = '1'			--Anlage_PTR
		--SET @para4 = '01.01.2015'	--Datum Von
		--SET @para5 = '31.03.2015'	--Datum Bis

		DECLARE
			@AnsatzHBF NUMERIC(10, 4),
			@AnsatzHBL NUMERIC(10, 4)
			SET @AnsatzHBF = 0
			SET @AnsatzHBL = 0

		DECLARE @tblDurchsatzHAL table(
												DEPT_CODE char(10), 
												Durchsatz NUMERIC(10, 4),
												BzgGr varchar(20),
												Durchsatz2 NUMERIC(10, 4) NULL,
												Durchsatz3 NUMERIC(10, 4) NULL
											)

			-----------------------------------------------------------------------------------------------------
			-----------------------------------------------------------------------------------------------------
			IF @para1='HAL bleifrei'
			BEGIN
				INSERT @tblDurchsatzHAL(DEPT_CODE, Durchsatz, BzgGr)
				SELECT
					@para2 AS DEPT_CODE,
					ISNULL((
						SELECT
							SUM(
								(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
								/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000))
							AS RES
						FROM         dbo.DATA0006 INNER JOIN
											  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
											  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
											  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
											  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
											  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
						WHERE     (dbo.DATA0038.TTYPE = 2)
									AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
									AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
									AND dbo.DATA0034.DEPT_CODE = 'HBF-01-01' 
					), 0) AS Durchsatz,
					'Zu-m2' AS BzgGr

				SET @AnsatzHBF =
								(
									ISNULL((
										SELECT
											SUM(
												(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
												/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000))
											AS RES
										FROM         dbo.DATA0006 INNER JOIN
															  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
															  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
															  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
															  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
															  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
										WHERE     (dbo.DATA0038.TTYPE = 2)
													AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, '19.12.2013', 103) 
													--AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
													AND dbo.DATA0034.DEPT_CODE = 'HBF-01-01' 
									), 0)
								)
			END
			IF @para1='HAL PBSN'
			BEGIN
				INSERT @tblDurchsatzHAL(DEPT_CODE, Durchsatz, BzgGr)
				SELECT
					@para2 AS DEPT_CODE,
					(
						ISNULL((
							SELECT
								SUM(
									(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
									/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000))
								AS RES
							FROM         dbo.DATA0006 INNER JOIN
												  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
												  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
												  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
												  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
												  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
							WHERE     (dbo.DATA0038.TTYPE = 2)
										AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
										AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
										AND dbo.DATA0034.DEPT_CODE = 'HBL-01-01' 
						), 0) 
						+
						 --s. Email von JHA vom Di 11.08.2015 08:27
						ISNULL((
							SELECT
								SUM(
									(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
									/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000))
								AS RES
							--FROM         dbo.DATA0006 INNER JOIN
							--					  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
							--					  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
							--					  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN
							--					  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
							--					  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR INNER JOIN
							--					  dbo.DATA0005 ON dbo.DATA0056.EMPLOYEE_PTR = dbo.DATA0005.RKEY
							FROM         dbo.DATA0005 INNER JOIN
								  dbo.abfr_0059_GroupBy_TranPtr ON DATA0005.RKEY = dbo.abfr_0059_GroupBy_TranPtr.MaxMitarb RIGHT OUTER JOIN
								  dbo.DATA0006 INNER JOIN
								  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
								  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
								  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN
								  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
								  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR ON 
								  dbo.abfr_0059_GroupBy_TranPtr.TRAN_PTR = dbo.DATA0048.RKEY
							WHERE     (dbo.DATA0038.TTYPE = 2)
										AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
										AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
										AND dbo.DATA0034.DEPT_CODE = 'HBLX-01-01' 
										AND EMPL_CODE='1752' 
										AND dbo.DATA0006.WORK_ORDER_NUMBER NOT IN ('  -097301-01-000', '  -097715-01-000')
						), 0) 

					) AS Durchsatz,
					'Zu-m2' AS BzgGr

				SET @AnsatzHBL =
								(
									ISNULL((
										SELECT
											SUM(
												(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
												/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000))
											AS RES
										FROM         dbo.DATA0006 INNER JOIN
															  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
															  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
															  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
															  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
															  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
										WHERE     (dbo.DATA0038.TTYPE = 2)
													AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, '01.08.2015', 103) 
													--AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
													AND dbo.DATA0034.DEPT_CODE = 'HBL-01-01' 
									), 0) 
									+
									 --s. Email von JHA vom Di 11.08.2015 08:27
									ISNULL((
										SELECT
											SUM(
												(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
												/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000))
											AS RES
										FROM         dbo.DATA0005 INNER JOIN
											  dbo.abfr_0059_GroupBy_TranPtr ON DATA0005.RKEY = dbo.abfr_0059_GroupBy_TranPtr.MaxMitarb RIGHT OUTER JOIN
											  dbo.DATA0006 INNER JOIN
											  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
											  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
											  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN
											  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
											  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR ON 
											  dbo.abfr_0059_GroupBy_TranPtr.TRAN_PTR = dbo.DATA0048.RKEY
										WHERE     (dbo.DATA0038.TTYPE = 2)
													AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, '01.08.2015', 103) 
													--AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
													AND dbo.DATA0034.DEPT_CODE = 'HBLX-01-01' 
													AND EMPL_CODE='1752' 
													AND dbo.DATA0006.WORK_ORDER_NUMBER NOT IN ('  -097301-01-000', '  -097715-01-000')
									), 0) 
								)
			END
			IF @para1='HAL VBH und NBH'
			BEGIN
				INSERT @tblDurchsatzHAL(DEPT_CODE, Durchsatz, BzgGr)
				SELECT
					@para2 AS DEPT_CODE,
					(
						ISNULL((
							SELECT
								SUM(
									(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
									/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000))
								AS RES
							FROM         dbo.DATA0006 INNER JOIN
												  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
												  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
												  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
												  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
												  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
							WHERE     (dbo.DATA0038.TTYPE = 2)
										AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
										AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
										AND dbo.DATA0034.DEPT_CODE IN ('HBF-01-01', 'HBL-01-01')
						), 0) 
						+
						 --s. Email von JHA vom Di 11.08.2015 08:27
						ISNULL((
							SELECT
								SUM(
									(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
									/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000))
								AS RES
							--FROM         dbo.DATA0006 INNER JOIN
							--					  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
							--					  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
							--					  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN
							--					  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
							--					  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR INNER JOIN
							--					  dbo.DATA0005 ON dbo.DATA0056.EMPLOYEE_PTR = dbo.DATA0005.RKEY
							FROM         dbo.DATA0005 INNER JOIN
								  dbo.abfr_0059_GroupBy_TranPtr ON DATA0005.RKEY = dbo.abfr_0059_GroupBy_TranPtr.MaxMitarb RIGHT OUTER JOIN
								  dbo.DATA0006 INNER JOIN
								  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
								  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
								  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN
								  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
								  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR ON 
								  dbo.abfr_0059_GroupBy_TranPtr.TRAN_PTR = dbo.DATA0048.RKEY
							WHERE     (dbo.DATA0038.TTYPE = 2)
										AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
										AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
										AND dbo.DATA0034.DEPT_CODE = 'HBLX-01-01' 
										AND EMPL_CODE='1752' 
										AND dbo.DATA0006.WORK_ORDER_NUMBER NOT IN ('  -097301-01-000', '  -097715-01-000')
						), 0) 
					)AS Durchsatz,
					'Zu-m2' AS BzgGr
			END





			DECLARE @tblAnlageArtikelHAL table(
											D17_PTR NUMERIC(10, 0),
											Abteilung varchar(250),
											Anlage varchar(250),
											Artikel char(20), 
											Bezeichnung char(40), 
											VerbrauchSOLL DECIMAL(20, 7),
											VerrPreis DECIMAL(20, 7),
											LagerEinheit varchar(5),
											Aktiviert bit
											)


		INSERT @tblAnlageArtikelHAL(D17_PTR, Abteilung, Anlage, Artikel, Bezeichnung, VerbrauchSOLL, VerrPreis, LagerEinheit, Aktiviert)
		SELECT  DISTINCT dbo.DATA0017.RKEY AS D17_PTR, LIVE2.dbo.MatRueck_Abteilung.Abteilung, 
				LIVE2.dbo.MatRueck_Anlage.Anlage, 
				dbo.DATA0017.INV_PART_NUMBER AS Artikel, 
				dbo.DATA0017.INV_PART_DESCRIPTION AS Bezeichnung, 
				LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, 
				dbo.DATA0017.STD_COST AS VerrPreis,
				dbo.DATA0002.UNIT_CODE AS LagerEinheit,
				LIVE2.dbo.MatRueck_Abteilung.Aktiviert
		--FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
		--			  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
		--			  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
		--			  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
		--			  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
		--			  dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
		--			  LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
		--			  dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
		FROM         LIVE2.dbo.MatRueck_AnlageAbteilung INNER JOIN
                      LIVE2.dbo.MatRueck_Abteilung ON LIVE2.dbo.MatRueck_AnlageAbteilung.Abteilung_PTR = LIVE2.dbo.MatRueck_Abteilung.ID INNER JOIN
                      LIVE2.dbo.NachKalk_MatVerteilung INNER JOIN
                      LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
                      dbo.DATA0017 INNER JOIN
                      dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
                      dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY ON LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = dbo.DATA0017.RKEY ON
                       LIVE2.dbo.MatRueck_AnlageAbteilung.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID
		GROUP BY dbo.DATA0017.RKEY, LIVE2.dbo.MatRueck_Abteilung.Abteilung, LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID,
				dbo.DATA0017.INV_PART_NUMBER, dbo.DATA0017.INV_PART_DESCRIPTION, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STOCK_PURCH, 
				dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE, dbo.DATA0017.CONSIGN_ONHAND_QTY,
				dbo.DATA0017.ACTIVE_FLAG, dbo.DATA0017.STD_COST, LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, 
				LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial, LIVE2.dbo.MatRueck_Abteilung.Aktiviert
		HAVING      dbo.DATA0017.ACTIVE_FLAG='Y' AND (LIVE2.dbo.MatRueck_Anlage.ID = CAST(@para3 AS INT)) 
					AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(1 AS bit) 
					AND LIVE2.dbo.MatRueck_Abteilung.Aktiviert=1


		SELECT
			Abteilung, 
			Anlage, 
			Artikel, 
			Bezeichnung, 
			Verbrauch,
			Durchsatz,
			Verbrauch*VerrPreis AS abs_Kosten,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch*VerrPreis)/Durchsatz 
				ELSE
					0
			END AS rel_Kosten,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch*VerrPreis)/Durchsatz*100 
				ELSE
					0
			END AS KS_IstKosten,
			VerrPreis*VerbrauchSOLL*100 AS SollKosten,
			CASE
				WHEN (VerrPreis*VerbrauchSOLL*100)>0 AND Durchsatz>0 THEN
					(((Verbrauch*VerrPreis)/Durchsatz*100)-(VerrPreis*VerbrauchSOLL*100.000000))/(VerrPreis*VerbrauchSOLL*100.000000) 
				ELSE
					0
			END AS Abweichung,
			(Verbrauch*VerrPreis)-(VerrPreis*Durchsatz*VerbrauchSOLL) AS MehrMinderKosten,
			(Verbrauch*VerrPreis) AS IstKosten,
			VerrPreis,
			CAST(VerbrauchSOLL*100.000000 AS DECIMAL(20, 7)) AS SollV_100,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch/Durchsatz)*100.000000 
				ELSE
					0
			END AS IstV_100,
			BzgGr,
			LagerEinheit,
			Durchsatz2,
			Durchsatz3,
			ISNULL((
					SELECT TOP 1 CASE WHEN LTRIM(RTRIM(ISNULL(ANALYSIS_CODE5, '')))='' THEN '0' ELSE ANALYSIS_CODE5 END
					 FROM dbo.DATA0017 WHERE RKEY = D17_PTR)
			, 0) AS MatFl,
			(
				SELECT TOP 1 CASE WHEN LTRIM(RTRIM(ISNULL(ANALYSIS_CODE1, '')))='' THEN '0' ELSE ANALYSIS_CODE1 END
				FROM dbo.DATA0017 WHERE RKEY = D17_PTR
			) AS AC_01,
			@AnsatzHBF AS AnsatzkostenHBF,
			@AnsatzHBL AS AnsatzkostenHBL

		FROM
		(
			SELECT 
				D17_PTR, 
				Abteilung, 
				Anlage, 
				Artikel, 
				Bezeichnung, 
				VerbrauchSOLL,
				CASE
					WHEN D17_PTR = 1032 THEN -- Fluxer
						ISNULL((
							SELECT
								SUM(ISNULL(tblDATA0095.QUANTITY, 0)) AS RES
							FROM
							(
								SELECT     LIVE2.dbo.MatRueck_Anlage.ID AS Anlage_PTR, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY AS D17_RKEY, dbo.DATA0017.INV_PART_DESCRIPTION AS ArtBezeichnung,
											dbo.DATA0002.UNIT_CODE AS Lagereinheit, dbo.DATA0017.STOCK_PURCH 
								FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
										  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
										  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
										  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
										  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
										  dbo.DATA0034 ON LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR = dbo.DATA0034.RKEY
								GROUP BY LIVE2.dbo.MatRueck_Anlage.ID, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY, dbo.DATA0017.INV_PART_DESCRIPTION , dbo.DATA0017.STOCK_PURCH, dbo.DATA0002.UNIT_CODE 
								HAVING LIVE2.dbo.MatRueck_Anlage.ID = CAST(@para3 AS INT)--(LIVE2.dbo.MatRueck_Anlage.Anlage = @Anlage)
							) AS tblAnlageArtikel INNER JOIN --LEFT OUTER JOIN 
							(SELECT QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, MONTH(TRAN_DATE) AS Monat, TRAN_TP 
							--FROM dbo.DATA0095 INNER JOIN  dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY 
							FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
							WHERE dbo.DATA0095.TRAN_TP IN (15, 16) 
							AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
							AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  
							AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR 
							) AS tblDATA0095 
							ON tblAnlageArtikel.D17_RKEY = tblDATA0095.INVT_PTR
							--) AS myTblSub	
						), 0)
						+
						ISNULL((
							SELECT 
								ISNULL((
									(-1)*SUM(QUANTITY) 
									*
									ISNULL((
										SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
										FROM LIVE2.dbo.NachKalk_MatVerteilung
										WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = CAST(@para3 AS INT)
												AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = tblAnlageArtikel_.D17_PTR
									), 0) 
								), 0) AS RES 

							FROM 
								dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
							WHERE 
								dbo.DATA0095.TRAN_TP = 23
								AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
								AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
								AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR
								AND dbo.DATA0095.REFERENCE_NUMBER <> 'Falschbuchung'
						), 0)
					ELSE
						CASE
							WHEN D17_PTR = 236 THEN -- Blei/Zinn-Stangen Sn63Pb37, DIN EN 29453
								ISNULL((
									SELECT
										SUM(ISNULL(tblDATA0095.QUANTITY, 0)) AS RES
									FROM
									(
										SELECT     LIVE2.dbo.MatRueck_Anlage.ID AS Anlage_PTR, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY AS D17_RKEY, dbo.DATA0017.INV_PART_DESCRIPTION AS ArtBezeichnung,
													dbo.DATA0002.UNIT_CODE AS Lagereinheit, dbo.DATA0017.STOCK_PURCH 
										FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
												  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
												  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
												  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
												  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
												  dbo.DATA0034 ON LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR = dbo.DATA0034.RKEY
										WHERE dbo.DATA0034.DEPT_CODE = @para2
										GROUP BY LIVE2.dbo.MatRueck_Anlage.ID, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY, dbo.DATA0017.INV_PART_DESCRIPTION , dbo.DATA0017.STOCK_PURCH, dbo.DATA0002.UNIT_CODE 
										HAVING LIVE2.dbo.MatRueck_Anlage.ID = CAST(@para3 AS INT)--(LIVE2.dbo.MatRueck_Anlage.Anlage = @Anlage)
									) AS tblAnlageArtikel INNER JOIN --LEFT OUTER JOIN 
									(SELECT QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, MONTH(TRAN_DATE) AS Monat, TRAN_TP 
									--FROM dbo.DATA0095 INNER JOIN  dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY 
									FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
									WHERE dbo.DATA0095.TRAN_TP IN (15, 16) AND dbo.DATA0034.DEPT_CODE = @para2
									AND dbo.DATA0095.TRAN_DATE <> CONVERT(DATETIME, '01.08.2015', 103) 
									AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
									AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR ) AS tblDATA0095 
									ON tblAnlageArtikel.D17_RKEY = tblDATA0095.INVT_PTR
									--) AS myTblSub	
								), 0)
							ELSE
								ISNULL((
									SELECT
										SUM(ISNULL(tblDATA0095.QUANTITY, 0)) AS RES
									FROM
									(
										SELECT     LIVE2.dbo.MatRueck_Anlage.ID AS Anlage_PTR, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY AS D17_RKEY, dbo.DATA0017.INV_PART_DESCRIPTION AS ArtBezeichnung,
													dbo.DATA0002.UNIT_CODE AS Lagereinheit, dbo.DATA0017.STOCK_PURCH 
										FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
												  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
												  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
												  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
												  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
												  dbo.DATA0034 ON LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR = dbo.DATA0034.RKEY
										WHERE dbo.DATA0034.DEPT_CODE = @para2
										GROUP BY LIVE2.dbo.MatRueck_Anlage.ID, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY, dbo.DATA0017.INV_PART_DESCRIPTION , dbo.DATA0017.STOCK_PURCH, dbo.DATA0002.UNIT_CODE 
										HAVING LIVE2.dbo.MatRueck_Anlage.ID = CAST(@para3 AS INT)--(LIVE2.dbo.MatRueck_Anlage.Anlage = @Anlage)
									) AS tblAnlageArtikel INNER JOIN --LEFT OUTER JOIN 
									(SELECT QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, MONTH(TRAN_DATE) AS Monat, TRAN_TP 
									--FROM dbo.DATA0095 INNER JOIN  dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY 
									FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
									WHERE dbo.DATA0095.TRAN_TP IN (15, 16) AND dbo.DATA0034.DEPT_CODE = @para2
									AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
									AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR ) AS tblDATA0095 
									ON tblAnlageArtikel.D17_RKEY = tblDATA0095.INVT_PTR
									--) AS myTblSub	
								), 0)
						END
						+
						ISNULL((
							SELECT 
								ISNULL((
									(-1)*SUM(QUANTITY) 
									*
									ISNULL((
										SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
										FROM LIVE2.dbo.NachKalk_MatVerteilung
										WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = CAST(@para3 AS INT)
												AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = tblAnlageArtikel_.D17_PTR
									), 0) 
								), 0) AS RES 

							FROM 
								dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
							WHERE 
								dbo.DATA0095.TRAN_TP = 23
								AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
								AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
								AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR
								AND dbo.DATA0095.REFERENCE_NUMBER <> 'Falschbuchung'
						), 0)
						---
						--CASE WHEN Bezeichnung='Blei/Zinn-Stangen Sn63Pb37, DIN EN 29453' THEN 300 ELSE 0 END
				END AS Verbrauch,
				ISNULL((SELECT TOP 1 Durchsatz FROM @tblDurchsatzHAL WHERE DEPT_CODE = @para2), 0) AS Durchsatz,
				ISNULL((SELECT TOP 1 BzgGr FROM @tblDurchsatzHAL WHERE DEPT_CODE = @para2), 0) AS BzgGr,
				VerrPreis,
				LagerEinheit,
				ISNULL((SELECT TOP 1 Durchsatz2 FROM @tblDurchsatzHAL WHERE DEPT_CODE = @para2), 0) AS Durchsatz2,
				ISNULL((SELECT TOP 1 Durchsatz3 FROM @tblDurchsatzHAL WHERE DEPT_CODE = @para2), 0) AS Durchsatz3

			FROM @tblAnlageArtikelHAL AS tblAnlageArtikel_
		) AS tblJeAnlage
		ORDER BY IstKosten DESC

	END

	IF @Case_ = 'Materialverbrauch_je_Anlage'
	BEGIN
		--DECLARE 
		--@para1 varchar(255),
		--@para2 varchar(255),
		--@para3 varchar(255),
		--@para4 varchar(255),
		--@para5 varchar(255)
		--SET @para1 = 'Black Hole'	--Anlage
		--SET @para2 = 'BLHO-01-01'	--Ressource
		--SET @para3 = '1'			--Anlage_PTR
		--SET @para4 = '01.01.2015'	--Datum Von
		--SET @para5 = '31.03.2015'	--Datum Bis


		DECLARE @tblDurchsatz table(
												DEPT_CODE char(10), 
												Durchsatz NUMERIC(10, 4),
												BzgGr varchar(20),
												Durchsatz2 FLOAT NULL, --NUMERIC(10, 4) NULL,
												Durchsatz3 NUMERIC(10, 4) NULL
											)

		IF @para1 IN ('Black Hole', 'Desmear', 'Black Oxide', 'Chem. Zinn', 'Mikroätze')
		BEGIN
			INSERT @tblDurchsatz(DEPT_CODE, Durchsatz, BzgGr)
			SELECT
				@para2 AS DEPT_CODE,
				ISNULL((
					SELECT TOP 1    
						SUM(
							(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
							/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000)) 
						AS RES
					FROM         dbo.DATA0006 INNER JOIN
								  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
								  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
								  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
					WHERE    
								dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
								AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
								AND dbo.DATA0034.DEPT_CODE = @para2
				), 0) AS Durchsatz,
				'Zu-m2' AS BzgGr
		END
		ELSE
		BEGIN
			-----------------------------------------------------------------------------------------------------
			-----------------------------------------------------------------------------------------------------
			IF @para1='Schlifferstellung'
			BEGIN
				INSERT @tblDurchsatz(DEPT_CODE, Durchsatz, BzgGr)
				SELECT
					'QS-01-06' AS DEPT_CODE,
					COUNT(LIVE2.dbo.QSSchliffe.Schliffnummer) AS Durchsatz,
					'Sch.' AS BzgGr
				FROM         dbo.DATA0006 INNER JOIN
									  LIVE2.dbo.QSSchliffe ON dbo.DATA0006.RKEY = LIVE2.dbo.QSSchliffe.D0006Ptr
				WHERE     ( LIVE2.dbo.QSSchliffe.Schliffdatum >= CONVERT(DATETIME, @para4, 103)) 
				AND ( LIVE2.dbo.QSSchliffe.Schliffdatum <= CONVERT(DATETIME, @para5, 103))
			END
			IF @para1='Klebefolie'
			BEGIN
				INSERT @tblDurchsatz(DEPT_CODE, Durchsatz, BzgGr, Durchsatz2, Durchsatz3)
				SELECT
					'QS-01-08' AS DEPT_CODE,
					ISNULL((
						SELECT TOP 1    
							SUM(
								(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
								/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000)) 
							AS RES
						FROM         dbo.DATA0006 INNER JOIN
									  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
									  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
									  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
						WHERE    
									dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
									AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
									AND LEFT(dbo.DATA0034.DEPT_CODE, 4) = 'KLEB'
									AND dbo.DATA0048.RKEY NOT IN (
																	SELECT
																		MaxID
																	FROM
																	(
																		SELECT 
																			COUNT(dbo.DATA0048.RKEY) AS RES,
																			MAX(dbo.DATA0048.RKEY) AS MaxID,
																			dbo.DATA0006.WORK_ORDER_NUMBER
																		FROM         dbo.DATA0006 INNER JOIN
																					  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
																					  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
																					  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
																		WHERE    
																					dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
																					AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
																					AND LEFT(dbo.DATA0034.DEPT_CODE, 4) = 'KLEB' AND dbo.DATA0048.QTY_PROD>0
																					
																		GROUP BY
																		dbo.DATA0006.WORK_ORDER_NUMBER
																	) AS tblWOGrp
																	WHERE RES>1
																)
					), 0) AS Durchsatz,
					'Zu-m2' AS BzgGr,
					ISNULL((
						SELECT TOP 1    
							SUM(
								CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
							) AS RES
						FROM         dbo.DATA0006 INNER JOIN
									  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
									  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
									  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
						WHERE    
									dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
									AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
									AND LEFT(dbo.DATA0034.DEPT_CODE, 4) = 'KLEB'
									AND dbo.DATA0048.RKEY NOT IN (
																	SELECT
																		MaxID
																	FROM
																	(
																		SELECT 
																			COUNT(dbo.DATA0048.RKEY) AS RES,
																			MAX(dbo.DATA0048.RKEY) AS MaxID,
																			dbo.DATA0006.WORK_ORDER_NUMBER
																		FROM         dbo.DATA0006 INNER JOIN
																					  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
																					  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
																					  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
																		WHERE    
																					dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
																					AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
																					AND LEFT(dbo.DATA0034.DEPT_CODE, 4) = 'KLEB' AND dbo.DATA0048.QTY_PROD>0
																					
																		GROUP BY
																		dbo.DATA0006.WORK_ORDER_NUMBER
																	) AS tblWOGrp
																	WHERE RES>1
																)
					), 0) AS Durchsatz2,
					ISNULL((
						SELECT TOP 1
							SUM(
									CAST((DATEDIFF(mi , dbo.UF_ToDateTime(dbo.DATA0059.START_TIME, dbo.DATA0059.START_DATE) 
									, dbo.UF_ToDateTime(dbo.DATA0059.STOP_TIME, dbo.DATA0059.STOP_DATE) ) 
								) AS NUMERIC(10, 4)))AS Anz_Sekunden
						FROM         dbo.DATA0006 INNER JOIN
											  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
											  dbo.DATA0050 ON dbo.DATA0006.CUST_PART_PTR = dbo.DATA0050.RKEY INNER JOIN
											  dbo.DATA0059 ON dbo.DATA0048.RKEY = dbo.DATA0059.TRAN_PTR INNER JOIN
											  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
											  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY INNER JOIN
											  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
											  dbo.DATA0005 ON dbo.DATA0059.EMPL_PTR = dbo.DATA0005.RKEY INNER JOIN
											  dbo.ARTIKELDATEN ON dbo.DATA0050.RKEY = dbo.ARTIKELDATEN.CUST_PART_PTR
						WHERE   
								(dbo.DATA0038.TTYPE = 2) 
								AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
								AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
								AND LEFT(dbo.DATA0034.DEPT_CODE, 4) = 'KLEB'
					), 0) AS Durchsatz3
			END
			-----------------------------------------------------------------------------------------------------
			-----------------------------------------------------------------------------------------------------
			IF @para1='Versand'
			BEGIN
				INSERT @tblDurchsatz(DEPT_CODE, Durchsatz, BzgGr, Durchsatz2)
				SELECT
					'VERS-03-01' AS DEPT_CODE,
					ISNULL((
						SELECT TOP 1    
							--SUM(
							--	(dbo.ARTIKELDATEN.KNX * dbo.ARTIKELDATEN.KNY * CAST(CAST(dbo.DATA0048.QTY_PROD AS FLOAT) 
							--	/ dbo.ARTIKELDATEN.ELP_KN + 0.9999 AS INT) / 1000000))
							--AS RES
							SUM(
								(dbo.ARTIKELDATEN.KNX * dbo.ARTIKELDATEN.KNY * CAST(CAST(dbo.DATA0048.QTY_PROD AS FLOAT) 
								/ dbo.ARTIKELDATEN.ELP_KN + 0.9999 AS INT) / 1000000))
							AS RES
						FROM         dbo.DATA0006 INNER JOIN
											  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
											  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
											  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR INNER JOIN
											  dbo.DATA0050 ON dbo.DATA0006.CUST_PART_PTR = dbo.DATA0050.RKEY
						WHERE    
									LEFT(dbo.DATA0050.CP_REV, 1) <> '3'
									AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
									AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
									AND dbo.DATA0034.DEPT_NAME LIKE 'VERSAND%'
					), 0) AS Durchsatz,
					'Zu-m2' AS BzgGr,
					ISNULL((
						SELECT TOP 1    
							--SUM(
							--	(dbo.ARTIKELDATEN.KNX * dbo.ARTIKELDATEN.KNY * CAST(CAST(dbo.DATA0048.QTY_PROD AS FLOAT) 
							--	/ dbo.ARTIKELDATEN.ELP_KN + 0.9999 AS INT) / 1000000))
							--AS RES
							SUM(
								CAST(CAST(dbo.DATA0048.QTY_PROD AS FLOAT) 
								/ dbo.ARTIKELDATEN.ELP_KN + 0.9999 AS INT))
							AS RES
						FROM         dbo.DATA0006 INNER JOIN
											  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
											  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
											  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR INNER JOIN
											  dbo.DATA0050 ON dbo.DATA0006.CUST_PART_PTR = dbo.DATA0050.RKEY
						WHERE    
									LEFT(dbo.DATA0050.CP_REV, 1) <> '3'
									AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
									AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
									AND dbo.DATA0034.DEPT_NAME LIKE 'VERSAND%'
					), 0) AS Durchsatz2
			END
			-----------------------------------------------------------------------------------------------------
			-----------------------------------------------------------------------------------------------------
/*
			IF @para1='Abwasser'
			BEGIN
				INSERT @tblDurchsatz(DEPT_CODE, Durchsatz, BzgGr)
				SELECT
					'ABW-01-01' AS DEPT_CODE,
					SUM(RES_) AS Durchsatz,
					'Zu-m2' AS BzgGr
				FROM
				(
					SELECT
						ISNULL((
							SELECT TOP 1    
								SUM(
									(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
									/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000)) 
								AS RES
							FROM         dbo.DATA0006 INNER JOIN
										  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
										  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
										  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
							WHERE    
										dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
										AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
										AND dbo.DATA0034.DEPT_CODE IN ('BLHO-01-01', 'MLDS-01-01', 'MERE-01-03', 'CZIN-01-01'
																		, 'GIES-01-01', 'HBF-01-01', 'HBL-01-01', 'MLBL-01-01', 'CGIN-01-01')
						), 0) AS RES_
					UNION ALL
					SELECT
						ISNULL((
							SELECT TOP 1    
								SUM(
									(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
									/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000)) 
								AS RES
							FROM         dbo.DATA0006 INNER JOIN
										  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
										  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
										  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
							WHERE    
										dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
										AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
										AND LEFT(dbo.DATA0034.DEPT_CODE, 4) IN ('ÄTZA', 'STSN')
						), 0) AS RES_
					UNION ALL
					SELECT
						ISNULL((
							SELECT TOP 1    
								SUM(
									(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
									/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000)) 
								AS RES
							FROM         dbo.DATA0006 INNER JOIN
										  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
										  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
										  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
							WHERE    
										dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
										AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
										AND LEFT(dbo.DATA0034.DEPT_CODE, 5) IN ('ÄTZS-', ' ÄS-MA')
						), 0) AS RES_
					UNION ALL
					SELECT
						ISNULL((
							SELECT TOP 1    
								SUM(
									(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
									/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000)) 
								AS RES
							FROM         dbo.DATA0006 INNER JOIN
										  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
										  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
										  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
							WHERE    
										dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
										AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
										AND LEFT(dbo.DATA0034.DEPT_CODE, 4) = 'LBA-'
						), 0) AS RES_
				) AS tblAbwDurchsatz
			END
*/
			-----------------------------------------------------------------------------------------------------
			-----------------------------------------------------------------------------------------------------
/*
			IF @para1='Entwickler Fotolabor'
			BEGIN
				INSERT @tblDurchsatz(DEPT_CODE, Durchsatz, BzgGr)
				SELECT
					'FOTL-01-03' AS DEPT_CODE,
					SUM(RES) AS Durchsatz,
					'Zu-m2' AS BzgGr
				FROM
				(
					SELECT	
							ISNULL((
								CAST(ISNULL((
									SELECT
										SUM(ISNULL(tblDATA0095.QUANTITY, 0)) AS RES
									FROM
									(
										SELECT     LIVE2.dbo.MatRueck_Anlage.ID AS Anlage_PTR, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY AS D17_RKEY, dbo.DATA0017.INV_PART_DESCRIPTION AS ArtBezeichnung,
													dbo.DATA0002.UNIT_CODE AS Lagereinheit, dbo.DATA0017.STOCK_PURCH 
										FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
												  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
												  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
												  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
												  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
												  dbo.DATA0034 ON LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR = dbo.DATA0034.RKEY
										WHERE dbo.DATA0034.DEPT_CODE = 'FOTL-01-01'
										GROUP BY LIVE2.dbo.MatRueck_Anlage.ID, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY, dbo.DATA0017.INV_PART_DESCRIPTION , dbo.DATA0017.STOCK_PURCH, dbo.DATA0002.UNIT_CODE 
										HAVING LIVE2.dbo.MatRueck_Anlage.ID = 64 --FL Silberfilme
									) AS tblAnlageArtikel INNER JOIN --LEFT OUTER JOIN 
									(SELECT QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, MONTH(TRAN_DATE) AS Monat, TRAN_TP 
									--FROM dbo.DATA0095 INNER JOIN  dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY 
									FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
									WHERE dbo.DATA0095.TRAN_TP IN (15, 16) AND dbo.DATA0034.DEPT_CODE = 'FOTL-01-01'
									AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
									AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  AND dbo.DATA0095.INVT_PTR = D17.RKEY ) AS tblDATA0095 
									ON tblAnlageArtikel.D17_RKEY = tblDATA0095.INVT_PTR
									--) AS myTblSub	
								), 0)
								+
								ISNULL((
									SELECT 
										ISNULL((
											(-1)*SUM(QUANTITY) 
											*
											ISNULL((
												SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
												FROM LIVE2.dbo.NachKalk_MatVerteilung
												WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = 64 --FL Silberfilme
														AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = D17.RKEY 
											), 1) 
										), 0) AS RES 

									FROM 
										dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
									WHERE 
										dbo.DATA0095.TRAN_TP = 23
										AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
										AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
										AND dbo.DATA0095.INVT_PTR = D17.RKEY 
								), 0) AS NUMERIC(10, 4))
								*
								CAST(REPLACE(D17.ANALYSIS_CODE5, ',', '.') AS NUMERIC(10, 4))
						), 0) AS RES
					FROM dbo.DATA0017 AS D17
					WHERE D17.RKEY IN (955, 1221)
				) AS tblDurchsatzEntwFix
			END
			IF @para1='FL Fixierer'
			BEGIN
				INSERT @tblDurchsatz(DEPT_CODE, Durchsatz, BzgGr)
				SELECT
					'FOTL-01-04' AS DEPT_CODE,
					SUM(RES) AS Durchsatz,
					'Zu-m2' AS BzgGr
				FROM
				(
					SELECT	
							ISNULL((
								CAST(ISNULL((
									SELECT
										SUM(ISNULL(tblDATA0095.QUANTITY, 0)) AS RES
									FROM
									(
										SELECT     LIVE2.dbo.MatRueck_Anlage.ID AS Anlage_PTR, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY AS D17_RKEY, dbo.DATA0017.INV_PART_DESCRIPTION AS ArtBezeichnung,
													dbo.DATA0002.UNIT_CODE AS Lagereinheit, dbo.DATA0017.STOCK_PURCH 
										FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
												  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
												  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
												  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
												  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
												  dbo.DATA0034 ON LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR = dbo.DATA0034.RKEY
										WHERE dbo.DATA0034.DEPT_CODE = 'FOTL-01-01'
										GROUP BY LIVE2.dbo.MatRueck_Anlage.ID, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY, dbo.DATA0017.INV_PART_DESCRIPTION , dbo.DATA0017.STOCK_PURCH, dbo.DATA0002.UNIT_CODE 
										HAVING LIVE2.dbo.MatRueck_Anlage.ID = 64 --FL Silberfilme
									) AS tblAnlageArtikel INNER JOIN --LEFT OUTER JOIN 
									(SELECT QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, MONTH(TRAN_DATE) AS Monat, TRAN_TP 
									--FROM dbo.DATA0095 INNER JOIN  dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY 
									FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
									WHERE dbo.DATA0095.TRAN_TP IN (15, 16) AND dbo.DATA0034.DEPT_CODE = 'FOTL-01-01'
									AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
									AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  AND dbo.DATA0095.INVT_PTR = D17.RKEY ) AS tblDATA0095 
									ON tblAnlageArtikel.D17_RKEY = tblDATA0095.INVT_PTR
									--) AS myTblSub	
								), 0)
								+
								ISNULL((
									SELECT 
										ISNULL((
											(-1)*SUM(QUANTITY) 
											*
											ISNULL((
												SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
												FROM LIVE2.dbo.NachKalk_MatVerteilung
												WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = 64 --FL Silberfilme
														AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = D17.RKEY 
											), 1) 
										), 0) AS RES 

									FROM 
										dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
									WHERE 
										dbo.DATA0095.TRAN_TP = 23
										AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
										AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
										AND dbo.DATA0095.INVT_PTR = D17.RKEY 
								), 0) AS NUMERIC(10, 4))
								*
								CAST(REPLACE(D17.ANALYSIS_CODE5, ',', '.') AS NUMERIC(10, 4))
						), 0) AS RES
					FROM dbo.DATA0017 AS D17
					WHERE D17.RKEY IN (955, 1221)
				) AS tblDurchsatzEntwFix
			END
			IF @para1='FL Diazo-Filme'
			BEGIN
				INSERT @tblDurchsatz(DEPT_CODE, Durchsatz, BzgGr)
				SELECT
					'FOTL-01-02' AS DEPT_CODE,
					COUNT(WORK_ORDER_NUMBER) AS Durchsatz,
					'FA' AS BzgGr
				FROM
				(
					SELECT DISTINCT dbo.DATA0006.WORK_ORDER_NUMBER
										FROM         dbo.DATA0006 INNER JOIN
													  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
													  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
													  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
					--WHERE LEFT(dbo.DATA0034.DEPT_CODE, 3) = 'CAM'
				) AS tblCAM
				WHERE
					 WORK_ORDER_NUMBER IN (
											SELECT 
												'  -' + BASE_WO + '-01-000'
											FROM         dbo.DATA0006 INNER JOIN
														  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
														  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
														  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
												WHERE   
														dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
														AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
														AND dbo.DATA0034.DEPT_CODE LIKE 'FILM%'
											)
			END
			IF @para1='FL Silber-Filme'
			BEGIN
*/
/*
				INSERT @tblDurchsatz(DEPT_CODE, Durchsatz, BzgGr)
				SELECT
					'FOTL-01-01' AS DEPT_CODE,
					COUNT(WORK_ORDER_NUMBER) AS Durchsatz,
					'FA' AS BzgGr
				FROM
				(
					SELECT DISTINCT dbo.DATA0006.WORK_ORDER_NUMBER
										FROM         dbo.DATA0006 INNER JOIN
													  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
													  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
													  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
					WHERE LEFT(dbo.DATA0034.DEPT_CODE, 3) = 'CAM'
				) AS tblCAM
				WHERE
					 WORK_ORDER_NUMBER IN (
											SELECT 
												'  -' + BASE_WO + '-01-000'
											FROM         dbo.DATA0006 INNER JOIN
														  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
														  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
														  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
												WHERE   
														dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
														AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
														AND dbo.DATA0034.DEPT_CODE LIKE 'FILM%'
											)
*/
/*
				INSERT @tblDurchsatz(DEPT_CODE, Durchsatz, BzgGr)
				SELECT
					'FOTL-01-01' AS DEPT_CODE,
					COUNT(WORK_ORDER_NUMBER) AS Durchsatz,
					'FA' AS BzgGr
				FROM
				(
					SELECT DISTINCT dbo.DATA0006.WORK_ORDER_NUMBER
										FROM         dbo.DATA0006 INNER JOIN
													  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
													  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
													  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
					--WHERE LEFT(dbo.DATA0034.DEPT_CODE, 3) = 'CAM'
				) AS tblCAM
				WHERE
					 WORK_ORDER_NUMBER IN (
											SELECT 
												'  -' + BASE_WO + '-01-000'
											FROM         dbo.DATA0006 INNER JOIN
														  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
														  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
														  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
												WHERE   
														dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
														AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
														AND dbo.DATA0034.DEPT_CODE LIKE 'FILM%'
											)
			END
			IF @para1='FL Sonstiges'
			BEGIN
				INSERT @tblDurchsatz(DEPT_CODE, Durchsatz, BzgGr)
				SELECT
					'FOTL-01-05' AS DEPT_CODE,
					COUNT(WORK_ORDER_NUMBER) AS Durchsatz,
					'FA' AS BzgGr
				FROM
				(
					SELECT DISTINCT dbo.DATA0006.WORK_ORDER_NUMBER
										FROM         dbo.DATA0006 INNER JOIN
													  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
													  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
													  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
					WHERE LEFT(dbo.DATA0034.DEPT_CODE, 3) = 'CAM'
				) AS tblCAM
				WHERE
					 WORK_ORDER_NUMBER IN (
											SELECT 
												'  -' + BASE_WO + '-01-000'
											FROM         dbo.DATA0006 INNER JOIN
														  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
														  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
														  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
												WHERE   
														dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
														AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
														AND dbo.DATA0034.DEPT_CODE LIKE 'FILM%'
											)
			END
*/
			-----------------------------------------------------------------------------------------------------
			-----------------------------------------------------------------------------------------------------
			IF @para1='Au-Allgemein'
			BEGIN
				INSERT @tblDurchsatz(DEPT_CODE, Durchsatz, BzgGr)
				SELECT
					@para2 AS DEPT_CODE,
					ISNULL((
						SELECT
							SUM(
								(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
								/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000))
							AS RES
						FROM         dbo.DATA0006 INNER JOIN
											  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
											  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
											  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
											  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
											  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
						WHERE     (dbo.DATA0038.TTYPE = 2)
									AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
									AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
									AND dbo.DATA0034.DEPT_CODE = 'CGIN-01-01'
					), 0) AS Durchsatz,
					'Zu-m2' AS BzgGr
			END
			-----------------------------------------------------------------------------------------------------
			-----------------------------------------------------------------------------------------------------
			IF @para1='SES Ätzen alkalisch'
			BEGIN
				IF @para6='X'
				BEGIN
					INSERT @tblDurchsatz(DEPT_CODE, Durchsatz, BzgGr)
					SELECT
						@para2 AS DEPT_CODE,
						ISNULL((
							SELECT
								SUM(ROUND(
									CASE
										WHEN dbo.ARTIKELDATEN.LE>1 THEN
											((2*dbo.ARTIKELDATEN.ZuX*dbo.ARTIKELDATEN.ZuY/1000000)-(dbo.ARTIKELDATEN.CuFl_L+dbo.ARTIKELDATEN.CuFl_B)/100)*dbo.ARTIKELDATEN.CuD_B*8.92/1000*(CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT))
										ELSE ((dbo.ARTIKELDATEN.ZuX*dbo.ARTIKELDATEN.ZuY/1000000)-(dbo.ARTIKELDATEN.CuFl_L+dbo.ARTIKELDATEN.CuFl_B)/100)*dbo.ARTIKELDATEN.CuD_B*8.92/1000*(CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT))
									END 
								, 4)) AS Cu_in_Kg
							FROM         dbo.DATA0056 WITH (nolock) LEFT OUTER JOIN
												  dbo.DATA0038 ON dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR AND dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER RIGHT OUTER JOIN
												  dbo.ARTIKELDATEN RIGHT OUTER JOIN
												  dbo.DATA0048 WITH (nolock) INNER JOIN
												  dbo.DATA0034 WITH (nolock) ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
												  dbo.DATA0006 WITH (nolock) ON dbo.DATA0048.WO_PTR = dbo.DATA0006.RKEY ON dbo.ARTIKELDATEN.CUST_PART_PTR = dbo.DATA0006.CUST_PART_PTR ON 
												  dbo.DATA0056.RKEY = dbo.DATA0048.TPUT_PTR
							WHERE     
								dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT > 0 
								AND dbo.DATA0038.TTYPE = 2 
								AND (dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103))
								AND (dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103))
								AND dbo.DATA0034.RKEY IN (86, 328, 329, 53, 452)
						), 0) AS Durchsatz,
						'kg Cu-Rec' AS BzgGr
				END
				ELSE
				BEGIN
					IF @para6='Y'
					BEGIN
						INSERT @tblDurchsatz(DEPT_CODE, Durchsatz, BzgGr)
						SELECT
							@para2 AS DEPT_CODE,
							ISNULL((
								SELECT
									SUM(
										(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
										/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000))
									AS RES
								FROM         dbo.DATA0006 INNER JOIN
													  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
													  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
													  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
													  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
													  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
								WHERE     (dbo.DATA0038.TTYPE = 2)
											AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
											AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
											AND dbo.DATA0034.RKEY IN (328, 329, 53, 452) --ohne ÄTZA-01-01
							), 0) AS Durchsatz,
							'Zu-m2' AS BzgGr
					END
					ELSE
					BEGIN
						INSERT @tblDurchsatz(DEPT_CODE, Durchsatz, BzgGr)
						SELECT
							@para2 AS DEPT_CODE,
							ISNULL((
								SELECT
									SUM(
										(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
										/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000))
									AS RES
								FROM         dbo.DATA0006 INNER JOIN
													  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
													  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
													  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
													  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
													  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
								WHERE     (dbo.DATA0038.TTYPE = 2)
											AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
											AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
											AND LEFT(dbo.DATA0034.DEPT_CODE, 4) IN ('ÄTZA', 'STSN')
											AND (LEFT(dbo.DATA0038.PARAMETER_2, 3)='1.C' OR dbo.DATA0038.PARAMETER_2='' OR dbo.DATA0038.PARAMETER_2='.')
							), 0) AS Durchsatz,
							'Zu-m2' AS BzgGr
					END
				END
			END
			IF @para1='SES Festresist-Stripper'
			BEGIN
				INSERT @tblDurchsatz(DEPT_CODE, Durchsatz, BzgGr)
				SELECT
					@para2 AS DEPT_CODE,
					ISNULL((
						SELECT
							SUM(
								(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
								/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000))
							AS RES
						FROM         dbo.DATA0006 INNER JOIN
											  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
											  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
											  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
											  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
											  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
						WHERE     (dbo.DATA0038.TTYPE = 2)
									AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
									AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
									AND LEFT(dbo.DATA0034.DEPT_CODE, 4) IN ('ÄTZA', 'STSN')
									AND (CHARINDEX('F', dbo.DATA0038.PARAMETER_2)>1 OR dbo.DATA0038.PARAMETER_2='' OR dbo.DATA0038.PARAMETER_2='.')
					), 0) AS Durchsatz,
					'Zu-m2' AS BzgGr
			END
			IF @para1='SES Zinn-Stripper'
			BEGIN
				IF @para6='J'
				BEGIN
					INSERT @tblDurchsatz(DEPT_CODE, Durchsatz, BzgGr)
					SELECT
						@para2 AS DEPT_CODE,
						ISNULL((
							SELECT     
								SUM(
									(CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT))
									*
									(dbo.ARTIKELDATEN.CuFl_L + dbo.ARTIKELDATEN.CuFl_B)
									/ 100
								) AS RES
							FROM         dbo.DATA0006 INNER JOIN
												  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
												  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
												  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
												  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
												  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
							WHERE     (dbo.DATA0038.TTYPE = 2)
										AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
										AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
										AND LEFT(dbo.DATA0034.DEPT_CODE, 4) IN ('ÄTZA', 'STSN')
										AND (CHARINDEX('S', dbo.DATA0038.PARAMETER_2)>1 OR dbo.DATA0038.PARAMETER_2='' OR dbo.DATA0038.PARAMETER_2='.')
						), 0) AS Durchsatz,
						'm2-aF' AS BzgGr
				END
				ELSE
				BEGIN
					INSERT @tblDurchsatz(DEPT_CODE, Durchsatz, BzgGr)
					SELECT
						@para2 AS DEPT_CODE,
						ISNULL((
							SELECT
								SUM(
									(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
									/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000))
								AS RES
							FROM         dbo.DATA0006 INNER JOIN
												  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
												  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
												  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
												  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
												  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
							WHERE     (dbo.DATA0038.TTYPE = 2)
										AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
										AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
										AND LEFT(dbo.DATA0034.DEPT_CODE, 4) IN ('ÄTZA', 'STSN')
										AND (CHARINDEX('S', dbo.DATA0038.PARAMETER_2)>1 OR dbo.DATA0038.PARAMETER_2='' OR dbo.DATA0038.PARAMETER_2='.')
						), 0) AS Durchsatz,
						'Zu-m2' AS BzgGr
				END
			END
			-----------------------------------------------------------------------------------------------------
			-----------------------------------------------------------------------------------------------------
			IF @para1='Ätzen sauer'
			BEGIN
				INSERT @tblDurchsatz(DEPT_CODE, Durchsatz, BzgGr)
				SELECT
					@para2 AS DEPT_CODE,
					ISNULL((
						SELECT
							SUM(
								(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
								/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000))
							AS RES
						FROM         dbo.DATA0006 INNER JOIN
											  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
											  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
											  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
											  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
											  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
						WHERE     (dbo.DATA0038.TTYPE = 2)
									AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
									AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
									AND LEFT(dbo.DATA0034.DEPT_CODE, 5) IN ('ÄTZS-', ' ÄS-MA')
									AND (LEFT(dbo.DATA0038.PARAMETER_2, 3)='1.C' OR dbo.DATA0038.PARAMETER_2='' OR dbo.DATA0038.PARAMETER_2='.')
					), 0) AS Durchsatz,
					'Zu-m2' AS BzgGr
			END
			-----------------------------------------------------------------------------------------------------
			-----------------------------------------------------------------------------------------------------
			IF @para1='Festresist-Stripper (ÄS)'
			BEGIN
				INSERT @tblDurchsatz(DEPT_CODE, Durchsatz, BzgGr)
				SELECT
					@para2 AS DEPT_CODE,
					ISNULL((
						SELECT
							SUM(
								(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
								/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000))
							AS RES
						FROM         dbo.DATA0006 INNER JOIN
											  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
											  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
											  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
											  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
											  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
						WHERE     (dbo.DATA0038.TTYPE = 2)
									AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
									AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
									AND LEFT(dbo.DATA0034.DEPT_CODE, 5) IN ('ÄTZS-', ' ÄS-MA')
									AND (
											(CHARINDEX('F', dbo.DATA0038.PARAMETER_2)>1) --Enthält Strippen Festresist
											OR 
											(dbo.DATA0006.ROOT_PTR=0 AND (dbo.ARTIKELDATEN.GalvAG<>'Ohne' OR dbo.ARTIKELDATEN.GalvAU<>'Ohne')) --Hauptauftrag enthält Gold oder Silber
										)	
					), 0) AS Durchsatz,
					'Zu-m2' AS BzgGr
			END
			-----------------------------------------------------------------------------------------------------
			-----------------------------------------------------------------------------------------------------
			IF @para1='FD Entwickler Innenlagen'
			BEGIN
				INSERT @tblDurchsatz(DEPT_CODE, Durchsatz, BzgGr)
				SELECT
					@para2 AS DEPT_CODE,
					ISNULL((
						SELECT
							SUM(
								(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
								/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000))
							AS RES
						FROM         dbo.DATA0006 INNER JOIN
											  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
											  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
											  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
											  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
											  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
						WHERE     (dbo.DATA0038.TTYPE = 2)
									AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
									AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
									AND LEFT(dbo.DATA0034.DEPT_CODE, 5) IN ('ÄTZS-', ' ÄS-MA')
									AND (LEFT(dbo.DATA0038.PARAMETER_2, 3)='1.C' OR dbo.DATA0038.PARAMETER_2='' OR dbo.DATA0038.PARAMETER_2='.')
					), 0) AS Durchsatz,
					'Zu-m2' AS BzgGr
			END
			-----------------------------------------------------------------------------------------------------
			-----------------------------------------------------------------------------------------------------
			IF @para1='AOI'
			BEGIN
				INSERT @tblDurchsatz(DEPT_CODE, Durchsatz, BzgGr)
				SELECT
					@para2 AS DEPT_CODE,
					ISNULL((
						SELECT     
							SUM(
								CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT)) 
							AS RES
						FROM         dbo.DATA0006 INNER JOIN
							  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
							  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
							  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR INNER JOIN
							  dbo.DATA0050 ON dbo.ARTIKELDATEN.CUST_PART_PTR = dbo.DATA0050.RKEY INNER JOIN
							  dbo.DATA0008 ON dbo.DATA0050.PROD_CODE_PTR = dbo.DATA0008.RKEY
						WHERE    
									dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
									AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
									AND dbo.DATA0034.DEPT_CODE = 'AOI-01-01'
									AND  LEFT(dbo.DATA0008.PROD_CODE, 2) IN ('FL', 'SF')
					), 0) AS Durchsatz,
					'Anz. ZU' AS BzgGr
			END
			-----------------------------------------------------------------------------------------------------
			-----------------------------------------------------------------------------------------------------
			IF @para1='Au-Goldbad' --Chem Ni/Au
			BEGIN
				INSERT @tblDurchsatz(DEPT_CODE, Durchsatz, BzgGr)
				SELECT
					@para2 AS DEPT_CODE,
					ISNULL((
						SELECT     
							SUM(
								(CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT))*dbo.ARTIKELDATEN.CHAuFl
							) AS RES
						FROM         dbo.DATA0006 INNER JOIN
									  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
									  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
									  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
						WHERE    
									dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
									AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
									AND dbo.DATA0034.DEPT_CODE = 'AOI-01-01'
					), 0) AS Durchsatz,
					'akt. Au-Fl dm2' AS BzgGr
			END
			-----------------------------------------------------------------------------------------------------
			-----------------------------------------------------------------------------------------------------
			IF @para1='Au-Goldbad Rest' --Chem Ni/Au
			BEGIN
				INSERT @tblDurchsatz(DEPT_CODE, Durchsatz, BzgGr)
				SELECT
					@para2 AS DEPT_CODE,
					ISNULL((
						SELECT
							SUM(
								(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
								/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000))
							AS RES
						FROM         dbo.DATA0006 INNER JOIN
											  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
											  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
											  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
											  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
											  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
						WHERE     (dbo.DATA0038.TTYPE = 2)
									AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
									AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
									AND dbo.DATA0034.DEPT_CODE = 'CGIN-01-01'
					), 0) AS Durchsatz,
					'Zu-m2' AS BzgGr
			END
			-----------------------------------------------------------------------------------------------------
			-----------------------------------------------------------------------------------------------------
			IF @para1='Au-Goldbad Vorreinigung' --Chem Ni/Au
			BEGIN
				INSERT @tblDurchsatz(DEPT_CODE, Durchsatz, BzgGr)
				SELECT
					@para2 AS DEPT_CODE,
					ISNULL((
						SELECT
							SUM(
								(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
								/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000))
							AS RES
						FROM         dbo.DATA0006 INNER JOIN
											  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
											  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
											  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
											  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
											  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
						WHERE     (dbo.DATA0038.TTYPE = 2)
									AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
									AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
									AND LEFT(dbo.DATA0034.DEPT_CODE, 4) = 'CGIN'
					), 0) AS Durchsatz,
					'Zu-m2' AS BzgGr
			END
			-----------------------------------------------------------------------------------------------------
			-----------------------------------------------------------------------------------------------------
			IF @para1='HAL bleifrei'
			BEGIN
				INSERT @tblDurchsatz(DEPT_CODE, Durchsatz, BzgGr)
				SELECT
					@para2 AS DEPT_CODE,
					ISNULL((
						SELECT
							SUM(
								(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
								/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000))
							AS RES
						FROM         dbo.DATA0006 INNER JOIN
											  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
											  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
											  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
											  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
											  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
						WHERE     (dbo.DATA0038.TTYPE = 2)
									AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
									AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
									AND dbo.DATA0034.DEPT_CODE = 'HBF-01-01' 
					), 0) AS Durchsatz,
					'Zu-m2' AS BzgGr
			END
			IF @para1='HAL PBSN'
			BEGIN
				INSERT @tblDurchsatz(DEPT_CODE, Durchsatz, BzgGr)
				SELECT
					@para2 AS DEPT_CODE,
					(
						ISNULL((
							SELECT
								SUM(
									(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
									/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000))
								AS RES
							FROM         dbo.DATA0006 INNER JOIN
												  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
												  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
												  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
												  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
												  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
							WHERE     (dbo.DATA0038.TTYPE = 2)
										AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
										AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
										AND dbo.DATA0034.DEPT_CODE = 'HBL-01-01' 
						), 0) 
						+
						 --s. Email von JHA vom Di 11.08.2015 08:27
						ISNULL((
							SELECT
								SUM(
									(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
									/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000))
								AS RES
							FROM         dbo.DATA0006 INNER JOIN
												  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
												  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
												  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN
												  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
												  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR INNER JOIN
												  dbo.DATA0005 ON dbo.DATA0056.EMPLOYEE_PTR = dbo.DATA0005.RKEY
							WHERE     (dbo.DATA0038.TTYPE = 2)
										AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
										AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
										AND dbo.DATA0034.DEPT_CODE = 'HBLX-01-01' 
										AND EMPL_CODE='1752' 
										AND dbo.DATA0006.WORK_ORDER_NUMBER NOT IN ('  -097301-01-000', '  -097715-01-000')
						), 0) 
/*
						ISNULL((
							SELECT
								SUM(
									(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
									/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000))
								AS RES
							FROM         dbo.DATA0006 INNER JOIN
												  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
												  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
												  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
												  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
												  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
							WHERE     (dbo.DATA0038.TTYPE = 2)
										AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
										AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
										AND dbo.DATA0034.DEPT_CODE = 'HBLX-01-01 ' 
										AND dbo.DATA0006.WORK_ORDER_NUMBER IN ('  -097301-01-000', '  -097715-01-000') --s. Email von JHA vom Di 11.08.2015 08:27
						), 0) 
*/

					) AS Durchsatz,
					'Zu-m2' AS BzgGr
			END
			IF @para1='HAL VBH und NBH'
			BEGIN
				INSERT @tblDurchsatz(DEPT_CODE, Durchsatz, BzgGr)
				SELECT
					@para2 AS DEPT_CODE,
					ISNULL((
						SELECT
							SUM(
								(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
								/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000))
							AS RES
						FROM         dbo.DATA0006 INNER JOIN
											  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
											  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
											  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
											  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
											  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
						WHERE     (dbo.DATA0038.TTYPE = 2)
									AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
									AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
									AND dbo.DATA0034.DEPT_CODE IN ('HBF-01-01', 'HBL-01-01', 'HBF-01-01', 'HBL-01-01')
					), 0) AS Durchsatz,
					'Zu-m2' AS BzgGr
			END
/*
			IF @para1='HAL VBH und NBH (BF)'
			BEGIN
				INSERT @tblDurchsatz(DEPT_CODE, Durchsatz, BzgGr)
				SELECT
					@para2 AS DEPT_CODE,
					ISNULL((
						SELECT
							SUM(
								(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
								/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000))
							AS RES
						FROM         dbo.DATA0006 INNER JOIN
											  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
											  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
											  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
											  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
											  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
						WHERE     (dbo.DATA0038.TTYPE = 2)
									AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
									AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
									AND dbo.DATA0034.DEPT_CODE IN ('HBF-01-01', 'HBL-01-01')
					), 0) AS Durchsatz,
					'Zu-m2' AS BzgGr
			END
			IF @para1='HAL VBH und NBH (PBSN)'
			BEGIN
				INSERT @tblDurchsatz(DEPT_CODE, Durchsatz, BzgGr)
				SELECT
					@para2 AS DEPT_CODE,
					ISNULL((
						SELECT
							SUM(
								(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
								/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000))
							AS RES
						FROM         dbo.DATA0006 INNER JOIN
											  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
											  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
											  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
											  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
											  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
						WHERE     (dbo.DATA0038.TTYPE = 2)
									AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
									AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
									AND dbo.DATA0034.DEPT_CODE IN ('HBF-01-01', 'HBL-01-01')
					), 0) AS Durchsatz,
					'Zu-m2' AS BzgGr
			END
*/
			-----------------------------------------------------------------------------------------------------
			-----------------------------------------------------------------------------------------------------
			IF @para1='ML-Pressen' 
			BEGIN
				INSERT @tblDurchsatz(DEPT_CODE, Durchsatz, BzgGr)
				SELECT
					@para2 AS DEPT_CODE,
					ISNULL((
						SELECT     
							SUM(
								(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
								/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000))
							AS RES
						FROM         dbo.DATA0006 INNER JOIN
									  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
									  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
									  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
						WHERE    
									dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
									AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
									AND LEFT(dbo.DATA0034.DEPT_CODE, 8) = 'MLPR-01-'
					), 0) AS Durchsatz,
					'Zu-m2' AS BzgGr
			END
			IF @para1='Plasma Ätze' 
			BEGIN
				INSERT @tblDurchsatz(DEPT_CODE, Durchsatz, BzgGr)
				SELECT
					@para2 AS DEPT_CODE,
					ISNULL((
						SELECT     
							SUM(
								(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
								/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000))
							AS RES
						FROM         dbo.DATA0006 INNER JOIN
									  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
									  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
									  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
						WHERE    
									dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
									AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
									AND dbo.DATA0034.DEPT_CODE = 'MLPL-01-01'
					), 0) AS Durchsatz,
					'Zu-m2' AS BzgGr
			END
			-----------------------------------------------------------------------------------------------------
			-----------------------------------------------------------------------------------------------------
			IF @para1='Bims-Anlage'
			BEGIN
				INSERT @tblDurchsatz(DEPT_CODE, Durchsatz, BzgGr)
				SELECT
					@para2 AS DEPT_CODE,
					ISNULL((
						SELECT
							SUM(
								(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
								/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000))
							AS RES
						FROM         dbo.DATA0006 INNER JOIN
											  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
											  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
											  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
											  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
											  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
						WHERE     (dbo.DATA0038.TTYPE = 2)
									AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
									AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
									AND (dbo.DATA0038.PARAMETER_1 = 'Bimsen' OR dbo.DATA0034.DEPT_CODE IN ('GIES-01-01', 'GIES-01-03'))
					), 0) AS Durchsatz,
					'Zu-m2' AS BzgGr
			END
			-----------------------------------------------------------------------------------------------------
			-----------------------------------------------------------------------------------------------------
			IF @para1='Stopplack-Entwickler'
			BEGIN
				INSERT @tblDurchsatz(DEPT_CODE, Durchsatz, BzgGr)
				SELECT
					@para2 AS DEPT_CODE,
					ISNULL((
						SELECT
							SUM(
								(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
								/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000))
							AS RES
						FROM         dbo.DATA0006 INNER JOIN
											  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
											  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
											  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
											  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
											  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
						WHERE     (dbo.DATA0038.TTYPE = 2)
									AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
									AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
									AND LEFT(dbo.DATA0034.DEPT_CODE, 8) = 'GIES-02-' --Durchsatz von Belichten
					), 0) AS Durchsatz,
					'Zu-m2' AS BzgGr
			END
			-----------------------------------------------------------------------------------------------------
			-----------------------------------------------------------------------------------------------------
/*
			IF @para1='Gießlinie'
			BEGIN
				INSERT @tblDurchsatz(DEPT_CODE, Durchsatz, BzgGr)
				SELECT
					@para2 AS DEPT_CODE,
					ISNULL((
						SELECT
							SUM(
								(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
								/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000) * CASE WHEN dbo.ARTIKELDATEN.LE > 1 THEN 2 ELSE 1 END 
								)
							AS RES
						FROM         dbo.DATA0006 INNER JOIN
											  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
											  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
											  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
											  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
											  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
						WHERE     (dbo.DATA0038.TTYPE = 2)
									AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
									AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
									AND dbo.DATA0034.DEPT_CODE = 'GIES-01-01'
					), 0) AS Durchsatz,
					'Ofl-m2' AS BzgGr
			END
*/
			-----------------------------------------------------------------------------------------------------
			-----------------------------------------------------------------------------------------------------
			IF @para1='Abziehlack'
			BEGIN
				INSERT @tblDurchsatz(DEPT_CODE, Durchsatz, BzgGr)
				SELECT
					@para2 AS DEPT_CODE,
					ISNULL((
						SELECT
							SUM(
								(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
								/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000) * CASE WHEN dbo.ARTIKELDATEN.LE > 1 THEN 2 ELSE 1 END 
								)
							AS RES
						FROM         dbo.DATA0006 INNER JOIN
											  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
											  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
											  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
											  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
											  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
						WHERE     (dbo.DATA0038.TTYPE = 2)
									AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
									AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
									AND LEFT(dbo.DATA0034.DEPT_CODE, 4) = 'SDA-'
									AND ((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.AZLack.' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.AZLack.')
										OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%abziehlack%' AND dbo.DATA0038.PARAMETER_2 = ''))
					), 0) AS Durchsatz,
					'Ofl-m2' AS BzgGr
			END
			-----------------------------------------------------------------------------------------------------
			-----------------------------------------------------------------------------------------------------
			IF @para1='Carbon'
			BEGIN
				INSERT @tblDurchsatz(DEPT_CODE, Durchsatz, BzgGr)
				SELECT
					@para2 AS DEPT_CODE,
					ISNULL((
						SELECT
							SUM(
								(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
								/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000) * CASE WHEN dbo.ARTIKELDATEN.LE > 1 THEN 2 ELSE 1 END 
								)
							AS RES
						FROM         dbo.DATA0006 INNER JOIN
											  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
											  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
											  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
											  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
											  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
						WHERE     (dbo.DATA0038.TTYPE = 2)
									AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
									AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103)
									AND LEFT(dbo.DATA0034.DEPT_CODE, 4) = 'SDA-' 
									AND (
											((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.Carbon.' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.Carbon.')
												OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%carbon%' AND dbo.DATA0038.PARAMETER_2 = ''))
											OR
											((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.WSLack.' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.WSLack.')
												OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%wderstandsdruck%' AND dbo.DATA0038.PARAMETER_2 = ''))
										)	
					), 0) AS Durchsatz,
					'Ofl-m2' AS BzgGr
			END
			-----------------------------------------------------------------------------------------------------
			-----------------------------------------------------------------------------------------------------
			IF @para1='KD'
			BEGIN
				INSERT @tblDurchsatz(DEPT_CODE, Durchsatz, BzgGr)
				SELECT
					@para2 AS DEPT_CODE,
					ISNULL((
						SELECT
							SUM(
								(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
								/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000) * CASE WHEN dbo.ARTIKELDATEN.LE > 1 THEN 2 ELSE 1 END 
								)
							AS RES
						FROM         dbo.DATA0006 INNER JOIN
											  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
											  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
											  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
											  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
											  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
						WHERE     (dbo.DATA0038.TTYPE = 2)
									AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
									AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103)
									AND LEFT(dbo.DATA0034.DEPT_CODE, 4) = 'SDA-' 
									AND ((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.KzDruck' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.KzDruck')
											OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%kd%' AND dbo.DATA0038.PARAMETER_2 = ''))	
					), 0) AS Durchsatz,
					'Ofl-m2' AS BzgGr
			END
			-----------------------------------------------------------------------------------------------------
			-----------------------------------------------------------------------------------------------------
			IF @para1='Stopplack'
			BEGIN
				INSERT @tblDurchsatz(DEPT_CODE, Durchsatz, BzgGr)
				SELECT
					@para2 AS DEPT_CODE,
					ISNULL((
						SELECT
							SUM(
								(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
								/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000) * CASE WHEN dbo.ARTIKELDATEN.LE > 1 THEN 2 ELSE 1 END 
								)
							AS RES
						FROM         dbo.DATA0006 INNER JOIN
											  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
											  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
											  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
											  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
											  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
						WHERE     (dbo.DATA0038.TTYPE = 2)
									AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
									AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103)
									AND LEFT(dbo.DATA0034.DEPT_CODE, 4) = 'SDA-' 
									AND ((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.StLack.' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.StLack.')
											OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%stoplack%' AND dbo.DATA0038.PARAMETER_2 = ''))
					), 0) AS Durchsatz,
					'Ofl-m2' AS BzgGr
			END
			-----------------------------------------------------------------------------------------------------
			-----------------------------------------------------------------------------------------------------
			IF @para1='Durchsteiger'
			BEGIN
				INSERT @tblDurchsatz(DEPT_CODE, Durchsatz, BzgGr)
				SELECT
					@para2 AS DEPT_CODE,
					ISNULL((
						SELECT
							SUM(
								(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
								/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000) * CASE WHEN dbo.ARTIKELDATEN.LE > 1 THEN 2 ELSE 1 END 
								)
							AS RES
						FROM         dbo.DATA0006 INNER JOIN
											  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
											  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
											  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
											  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
											  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
						WHERE     (dbo.DATA0038.TTYPE = 2)
									AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
									AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103)
									AND LEFT(dbo.DATA0034.DEPT_CODE, 4) = 'SDA-' 
									AND ((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.StLack.' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.StLack.')
										OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%durchsteiger%' AND dbo.DATA0038.PARAMETER_2 = ''))
					), 0) AS Durchsatz,
					'Ofl-m2' AS BzgGr
			END
			-----------------------------------------------------------------------------------------------------
			-----------------------------------------------------------------------------------------------------
			IF @para1='Silberleitlack'
			BEGIN
				INSERT @tblDurchsatz(DEPT_CODE, Durchsatz, BzgGr)
				SELECT
					@para2 AS DEPT_CODE,
					ISNULL((
						SELECT
							SUM(
								(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
								/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000) * CASE WHEN dbo.ARTIKELDATEN.LE > 1 THEN 2 ELSE 1 END 
								)
							AS RES
						FROM         dbo.DATA0006 INNER JOIN
											  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
											  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
											  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
											  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
											  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
						WHERE     (dbo.DATA0038.TTYPE = 2)
									AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
									AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103)
									AND LEFT(dbo.DATA0034.DEPT_CODE, 4) = 'SDA-' 
									AND ((LEFT(dbo.DATA0038.PARAMETER_2, 9)='1.AgLack.' OR LEFT(dbo.DATA0038.PARAMETER_2, 9)='2.AgLack.')
										OR (dbo.DATA0038.PARAMETER_1 COLLATE SQL_Latin1_General_CP1_CI_AS  LIKE '%silberleitlack%' AND dbo.DATA0038.PARAMETER_2 = ''))
					), 0) AS Durchsatz,
					'Ofl-m2' AS BzgGr
			END
			-----------------------------------------------------------------------------------------------------
			-----------------------------------------------------------------------------------------------------




		END

		--select * from @tblDurchsatz


		DECLARE @tblAnlageArtikel table(
											D17_PTR NUMERIC(10, 0),
											Abteilung varchar(250),
											Anlage varchar(250),
											Artikel char(20), 
											Bezeichnung char(40), 
											VerbrauchSOLL DECIMAL(20, 7),
											VerrPreis DECIMAL(20, 7),
											LagerEinheit varchar(5),
											Aktiviert bit
											)


		IF CAST(@para3 AS INT)=61 --Stopplack 2K und Stopplack Foto zusammenfassen
		BEGIN
			INSERT @tblAnlageArtikel(D17_PTR, Abteilung, Anlage, Artikel, Bezeichnung, VerbrauchSOLL, VerrPreis, LagerEinheit, Aktiviert)
			SELECT  DISTINCT dbo.DATA0017.RKEY AS D17_PTR, LIVE2.dbo.MatRueck_Abteilung.Abteilung, 
					'Stopplack' AS Anlage, --LIVE2.dbo.MatRueck_Anlage.Anlage, 
					dbo.DATA0017.INV_PART_NUMBER AS Artikel, 
					dbo.DATA0017.INV_PART_DESCRIPTION AS Bezeichnung, 
					LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, 
					dbo.DATA0017.STD_COST AS VerrPreis,
					dbo.DATA0002.UNIT_CODE AS LagerEinheit,
					LIVE2.dbo.MatRueck_Abteilung.Aktiviert
			FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
						  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
						  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
						  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
						  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
						  dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
						  LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
						  dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
			GROUP BY dbo.DATA0017.RKEY, LIVE2.dbo.MatRueck_Abteilung.Abteilung, LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID,
					dbo.DATA0017.INV_PART_NUMBER, dbo.DATA0017.INV_PART_DESCRIPTION, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STOCK_PURCH, 
					dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE, dbo.DATA0017.CONSIGN_ONHAND_QTY,
					dbo.DATA0017.ACTIVE_FLAG, dbo.DATA0017.STD_COST, LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, 
					LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial, LIVE2.dbo.MatRueck_Abteilung.Aktiviert
			HAVING      dbo.DATA0017.ACTIVE_FLAG='Y' AND (LIVE2.dbo.MatRueck_Anlage.ID IN (61, 62 ))
						AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(1 AS bit) AND LIVE2.dbo.MatRueck_Abteilung.Aktiviert=1
		END 
		ELSE
		BEGIN
			IF CAST(@para3 AS INT)=61 --Stopplack 2K und Stopplack Foto zusammenfassen
			BEGIN
				INSERT @tblAnlageArtikel(D17_PTR, Abteilung, Anlage, Artikel, Bezeichnung, VerbrauchSOLL, VerrPreis, LagerEinheit, Aktiviert)
				SELECT  DISTINCT dbo.DATA0017.RKEY AS D17_PTR, LIVE2.dbo.MatRueck_Abteilung.Abteilung, 
						'Abwasser' AS Anlage, --LIVE2.dbo.MatRueck_Anlage.Anlage, 
						dbo.DATA0017.INV_PART_NUMBER AS Artikel, 
						dbo.DATA0017.INV_PART_DESCRIPTION AS Bezeichnung, 
						LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, 
						dbo.DATA0017.STD_COST AS VerrPreis,
						dbo.DATA0002.UNIT_CODE AS LagerEinheit,
						LIVE2.dbo.MatRueck_Abteilung.Aktiviert
				FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
							  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
							  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
							  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
							  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
							  dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
							  LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
							  dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
				GROUP BY dbo.DATA0017.RKEY, LIVE2.dbo.MatRueck_Abteilung.Abteilung, LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID,
						dbo.DATA0017.INV_PART_NUMBER, dbo.DATA0017.INV_PART_DESCRIPTION, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STOCK_PURCH, 
						dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE, dbo.DATA0017.CONSIGN_ONHAND_QTY,
						dbo.DATA0017.ACTIVE_FLAG, dbo.DATA0017.STD_COST, LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, 
						LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial, LIVE2.dbo.MatRueck_Abteilung.Aktiviert
				HAVING      dbo.DATA0017.ACTIVE_FLAG='Y' AND (LIVE2.dbo.MatRueck_Anlage.ID IN (50, 51 ))
							AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(1 AS bit) AND LIVE2.dbo.MatRueck_Abteilung.Aktiviert=1
			END
			ELSE
			BEGIN
				IF CAST(@para3 AS INT)=145 --Klebefolie
				BEGIN
					INSERT @tblAnlageArtikel(D17_PTR, Abteilung, Anlage, Artikel, Bezeichnung, VerbrauchSOLL, VerrPreis, LagerEinheit, Aktiviert)
					SELECT  DISTINCT dbo.DATA0017.RKEY AS D17_PTR, LIVE2.dbo.MatRueck_Abteilung.Abteilung, 
							'Klebefolie' AS Anlage, --LIVE2.dbo.MatRueck_Anlage.Anlage, 
							dbo.DATA0017.INV_PART_NUMBER AS Artikel, 
							dbo.DATA0017.INV_PART_DESCRIPTION AS Bezeichnung, 
							LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, 
							dbo.DATA0017.STD_COST AS VerrPreis,
							dbo.DATA0002.UNIT_CODE AS LagerEinheit,
							LIVE2.dbo.MatRueck_Abteilung.Aktiviert
					FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
								  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
								  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
								  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
								  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
								  dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
								  LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
								  dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
					GROUP BY dbo.DATA0017.RKEY, LIVE2.dbo.MatRueck_Abteilung.Abteilung, LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID,
							dbo.DATA0017.INV_PART_NUMBER, dbo.DATA0017.INV_PART_DESCRIPTION, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STOCK_PURCH, 
							dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE, dbo.DATA0017.CONSIGN_ONHAND_QTY,
							dbo.DATA0017.ACTIVE_FLAG, dbo.DATA0017.STD_COST, LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, 
							LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial, LIVE2.dbo.MatRueck_Abteilung.Aktiviert
					HAVING      dbo.DATA0017.ACTIVE_FLAG='Y' AND (LIVE2.dbo.MatRueck_Anlage.ID = 145)
								AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(1 AS bit) AND LIVE2.dbo.MatRueck_Abteilung.Aktiviert=1
				END
				ELSE
				BEGIN
					IF CAST(@para3 AS INT)=39 AND @para6<>'Y' --Ätzen alkalisch
					BEGIN
						INSERT @tblAnlageArtikel(D17_PTR, Abteilung, Anlage, Artikel, Bezeichnung, VerbrauchSOLL, VerrPreis, LagerEinheit, Aktiviert)
						SELECT  DISTINCT dbo.DATA0017.RKEY AS D17_PTR, LIVE2.dbo.MatRueck_Abteilung.Abteilung, 
								LIVE2.dbo.MatRueck_Anlage.Anlage, 
								dbo.DATA0017.INV_PART_NUMBER AS Artikel, 
								dbo.DATA0017.INV_PART_DESCRIPTION AS Bezeichnung, 
								LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, 
								dbo.DATA0017.STD_COST AS VerrPreis,
								dbo.DATA0002.UNIT_CODE AS LagerEinheit,
								1 AS Aktiviert
						FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
									  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
									  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
									  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
									  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
									  dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
									  LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
									  dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
						GROUP BY dbo.DATA0017.RKEY, LIVE2.dbo.MatRueck_Abteilung.Abteilung, LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID,
								dbo.DATA0017.INV_PART_NUMBER, dbo.DATA0017.INV_PART_DESCRIPTION, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STOCK_PURCH, 
								dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE, dbo.DATA0017.CONSIGN_ONHAND_QTY,
								dbo.DATA0017.ACTIVE_FLAG, dbo.DATA0017.STD_COST, LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial
						HAVING      dbo.DATA0017.ACTIVE_FLAG='Y' AND (LIVE2.dbo.MatRueck_Anlage.ID = CAST(@para3 AS INT)) 
									AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(1 AS bit) 
									AND dbo.DATA0017.RKEY NOT IN (67439, 67440) --Ansatzlösung CTS, Ansatzlösung ohne Kupfersulfat
					END
					ELSE
					BEGIN
						IF @para6='Y' --Ansatzlösung
						BEGIN
							INSERT @tblAnlageArtikel(D17_PTR, Abteilung, Anlage, Artikel, Bezeichnung, VerbrauchSOLL, VerrPreis, LagerEinheit, Aktiviert)
							SELECT  DISTINCT dbo.DATA0017.RKEY AS D17_PTR, LIVE2.dbo.MatRueck_Abteilung.Abteilung, 
									LIVE2.dbo.MatRueck_Anlage.Anlage, 
									dbo.DATA0017.INV_PART_NUMBER AS Artikel, 
									dbo.DATA0017.INV_PART_DESCRIPTION AS Bezeichnung, 
									LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, 
									dbo.DATA0017.STD_COST AS VerrPreis,
									dbo.DATA0002.UNIT_CODE AS LagerEinheit,
									1 AS Aktiviert
							FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
										  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
										  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
										  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
										  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
										  dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
										  LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
										  dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
							GROUP BY dbo.DATA0017.RKEY, LIVE2.dbo.MatRueck_Abteilung.Abteilung, LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID,
									dbo.DATA0017.INV_PART_NUMBER, dbo.DATA0017.INV_PART_DESCRIPTION, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STOCK_PURCH, 
									dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE, dbo.DATA0017.CONSIGN_ONHAND_QTY,
									dbo.DATA0017.ACTIVE_FLAG, dbo.DATA0017.STD_COST, LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial
							HAVING      dbo.DATA0017.RKEY IN (67439, 67440)
										--dbo.DATA0017.ACTIVE_FLAG='Y' AND (LIVE2.dbo.MatRueck_Anlage.ID = CAST(@para3 AS INT)) 
										--AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(1 AS bit)
						END
						ELSE
						BEGIN
							INSERT @tblAnlageArtikel(D17_PTR, Abteilung, Anlage, Artikel, Bezeichnung, VerbrauchSOLL, VerrPreis, LagerEinheit, Aktiviert)
							SELECT  DISTINCT dbo.DATA0017.RKEY AS D17_PTR, LIVE2.dbo.MatRueck_Abteilung.Abteilung, 
									LIVE2.dbo.MatRueck_Anlage.Anlage, 
									dbo.DATA0017.INV_PART_NUMBER AS Artikel, 
									dbo.DATA0017.INV_PART_DESCRIPTION AS Bezeichnung, 
									LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, 
									dbo.DATA0017.STD_COST AS VerrPreis,
									dbo.DATA0002.UNIT_CODE AS LagerEinheit,
									LIVE2.dbo.MatRueck_Abteilung.Aktiviert
							FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
										  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
										  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
										  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
										  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
										  dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
										  LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
										  dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
							GROUP BY dbo.DATA0017.RKEY, LIVE2.dbo.MatRueck_Abteilung.Abteilung, LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID,
									dbo.DATA0017.INV_PART_NUMBER, dbo.DATA0017.INV_PART_DESCRIPTION, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STOCK_PURCH, 
									dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE, dbo.DATA0017.CONSIGN_ONHAND_QTY,
									dbo.DATA0017.ACTIVE_FLAG, dbo.DATA0017.STD_COST, LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, 
									LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial, LIVE2.dbo.MatRueck_Abteilung.Aktiviert
							HAVING      dbo.DATA0017.ACTIVE_FLAG='Y' AND (LIVE2.dbo.MatRueck_Anlage.ID = CAST(@para3 AS INT)) 
										AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(1 AS bit) AND LIVE2.dbo.MatRueck_Abteilung.Aktiviert=1
						END
					END
				END
			END
		END


		SELECT
			Abteilung, 
			Anlage, 
			Artikel, 
			Bezeichnung, 
			Verbrauch,
			Durchsatz,
			Verbrauch*VerrPreis AS abs_Kosten,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch*VerrPreis)/Durchsatz 
				ELSE
					0
			END AS rel_Kosten,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch*VerrPreis)/Durchsatz*100 
				ELSE
					0
			END AS KS_IstKosten,
			VerrPreis*VerbrauchSOLL*100 AS SollKosten,
			CASE
				WHEN (VerrPreis*VerbrauchSOLL*100)>0 AND Durchsatz>0 THEN
					(((Verbrauch*VerrPreis)/Durchsatz*100)-(VerrPreis*VerbrauchSOLL*100.000000))/(VerrPreis*VerbrauchSOLL*100.000000) 
				ELSE
					0
			END AS Abweichung,
			(Verbrauch*VerrPreis)-(VerrPreis*Durchsatz*VerbrauchSOLL) AS MehrMinderKosten,
			(Verbrauch*VerrPreis) AS IstKosten,
			VerrPreis,
			CAST(VerbrauchSOLL*100.000000 AS DECIMAL(20, 7)) AS SollV_100,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch/Durchsatz)*100.000000 
				ELSE
					0
			END AS IstV_100,
			BzgGr,
			LagerEinheit,
			ISNULL((
				CASE
					WHEN Anlage='Gießlinie' THEN
						(SELECT
							(
								SUM(ISNULL(bis60_HAL_HALBF, 0))*75 + SUM(ISNULL(bis60_nicht_HAL_HALBF, 0))*86.8 + SUM(ISNULL(bis99_HAL_HALBF, 0))*86.8 
								+ SUM(ISNULL(bis99_nicht_HAL_HALBF, 0))*94.7 + SUM(ISNULL(bis150, 0))*134.2 + SUM(ISNULL(ueber150, 0))*155
							)/1000 AS RES
						FROM
						(
							SELECT
								CASE
									WHEN dbo.ARTIKELDATEN.CuD_End<=60 AND (dbo.ARTIKELDATEN.HAL = 1 OR dbo.ARTIKELDATEN.HAL_BF=1) THEN
										ISNULL((
											(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
											/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000) * CASE WHEN dbo.ARTIKELDATEN.LE > 1 THEN 2 ELSE 1 END 
											), 0)
								END AS bis60_HAL_HALBF,
								CASE
									WHEN dbo.ARTIKELDATEN.CuD_End<=60 AND dbo.ARTIKELDATEN.HAL = 0 AND dbo.ARTIKELDATEN.HAL_BF=0 THEN
										ISNULL((
											(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
											/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000) * CASE WHEN dbo.ARTIKELDATEN.LE > 1 THEN 2 ELSE 1 END 
											), 0)
								END AS bis60_nicht_HAL_HALBF,
								CASE
									WHEN dbo.ARTIKELDATEN.CuD_End>60 AND dbo.ARTIKELDATEN.CuD_End<=99  AND (dbo.ARTIKELDATEN.HAL = 1 OR dbo.ARTIKELDATEN.HAL_BF=1) THEN
										ISNULL((
											(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
											/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000) * CASE WHEN dbo.ARTIKELDATEN.LE > 1 THEN 2 ELSE 1 END 
											), 0)
								END AS bis99_HAL_HALBF,
								CASE
									WHEN dbo.ARTIKELDATEN.CuD_End>60 AND dbo.ARTIKELDATEN.CuD_End<=99 AND dbo.ARTIKELDATEN.HAL = 0 AND dbo.ARTIKELDATEN.HAL_BF=0 THEN
										ISNULL((
											(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
											/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000) * CASE WHEN dbo.ARTIKELDATEN.LE > 1 THEN 2 ELSE 1 END 
											), 0)
								END AS bis99_nicht_HAL_HALBF,
								CASE
									WHEN dbo.ARTIKELDATEN.CuD_End>99 AND dbo.ARTIKELDATEN.CuD_End<=150 THEN
										ISNULL((
											(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
											/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000) * CASE WHEN dbo.ARTIKELDATEN.LE > 1 THEN 2 ELSE 1 END 
											), 0)
								END AS bis150,
								CASE
									WHEN dbo.ARTIKELDATEN.CuD_End>150 THEN
										ISNULL((
											(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
											/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000) * CASE WHEN dbo.ARTIKELDATEN.LE > 1 THEN 2 ELSE 1 END 
											), 0)
								END AS ueber150


							FROM         dbo.DATA0006 INNER JOIN
												  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
												  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
												  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
												  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
												  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
							WHERE     (dbo.DATA0038.TTYPE = 2)
										AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
										AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
										AND dbo.DATA0034.DEPT_CODE = 'GIES-01-01'
						) AS tblGies)
					ELSE
						0
				END
			), 0) AS SOLLVerbrauch_Abs_Lack,
			ISNULL((
				CASE
					WHEN Anlage='Gießlinie' THEN
						(SELECT
							(
								SUM(ISNULL(bis60_HAL_HALBF, 0))*20 + SUM(ISNULL(bis60_nicht_HAL_HALBF, 0))*23.2 + SUM(ISNULL(bis99_HAL_HALBF, 0))*23.2 
								+ SUM(ISNULL(bis99_nicht_HAL_HALBF, 0))*25.3 + SUM(ISNULL(bis150, 0))*35.8 + SUM(ISNULL(ueber150, 0))*41.3
							)/1000 AS RES
						FROM
						(
							SELECT
								CASE
									WHEN dbo.ARTIKELDATEN.CuD_End<=60 AND (dbo.ARTIKELDATEN.HAL = 1 OR dbo.ARTIKELDATEN.HAL_BF=1) THEN
										ISNULL((
											(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
											/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000) * CASE WHEN dbo.ARTIKELDATEN.LE > 1 THEN 2 ELSE 1 END 
											), 0)
								END AS bis60_HAL_HALBF,
								CASE
									WHEN dbo.ARTIKELDATEN.CuD_End<=60 AND dbo.ARTIKELDATEN.HAL = 0 AND dbo.ARTIKELDATEN.HAL_BF=0 THEN
										ISNULL((
											(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
											/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000) * CASE WHEN dbo.ARTIKELDATEN.LE > 1 THEN 2 ELSE 1 END 
											), 0)
								END AS bis60_nicht_HAL_HALBF,
								CASE
									WHEN dbo.ARTIKELDATEN.CuD_End>60 AND dbo.ARTIKELDATEN.CuD_End<=99  AND (dbo.ARTIKELDATEN.HAL = 1 OR dbo.ARTIKELDATEN.HAL_BF=1) THEN
										ISNULL((
											(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
											/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000) * CASE WHEN dbo.ARTIKELDATEN.LE > 1 THEN 2 ELSE 1 END 
											), 0)
								END AS bis99_HAL_HALBF,
								CASE
									WHEN dbo.ARTIKELDATEN.CuD_End>60 AND dbo.ARTIKELDATEN.CuD_End<=99 AND dbo.ARTIKELDATEN.HAL = 0 AND dbo.ARTIKELDATEN.HAL_BF=0 THEN
										ISNULL((
											(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
											/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000) * CASE WHEN dbo.ARTIKELDATEN.LE > 1 THEN 2 ELSE 1 END 
											), 0)
								END AS bis99_nicht_HAL_HALBF,
								CASE
									WHEN dbo.ARTIKELDATEN.CuD_End>99 AND dbo.ARTIKELDATEN.CuD_End<=150 THEN
										ISNULL((
											(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
											/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000) * CASE WHEN dbo.ARTIKELDATEN.LE > 1 THEN 2 ELSE 1 END 
											), 0)
								END AS bis150,
								CASE
									WHEN dbo.ARTIKELDATEN.CuD_End>150 THEN
										ISNULL((
											(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
											/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000) * CASE WHEN dbo.ARTIKELDATEN.LE > 1 THEN 2 ELSE 1 END 
											), 0)
								END AS ueber150


							FROM         dbo.DATA0006 INNER JOIN
												  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
												  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
												  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
												  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
												  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
							WHERE     (dbo.DATA0038.TTYPE = 2)
										AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
										AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
										AND dbo.DATA0034.DEPT_CODE = 'GIES-01-01'
						) AS tblGies)
					ELSE
						0
				END
			), 0) AS SOLLVerbrauch_Abs_Verd,
			Durchsatz2,
			Durchsatz3,
			ISNULL((
					SELECT TOP 1 CASE WHEN LTRIM(RTRIM(ISNULL(ANALYSIS_CODE5, '')))='' THEN '0' ELSE ANALYSIS_CODE5 END
					 FROM dbo.DATA0017 WHERE RKEY = D17_PTR)
			, 0) AS MatFl,
			(
				SELECT TOP 1 CASE WHEN LTRIM(RTRIM(ISNULL(ANALYSIS_CODE1, '')))='' THEN '0' ELSE ANALYSIS_CODE1 END
				FROM dbo.DATA0017 WHERE RKEY = D17_PTR
			) AS AC_01,
			ISNULL((
				--SELECT
				--	SUM(dbo.ARTIKELDATEN.KapAnzPkt) AS RES
				--FROM
				--dbo.ARTIKELDATEN
				--WHERE CUST_PART_PTR IN 
				--					(
				--						SELECT DISTINCT
				--							dbo.ARTIKELDATEN.CUST_PART_PTR
				--						FROM         dbo.DATA0006 INNER JOIN
				--											  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
				--											  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
				--						WHERE     dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
				--									AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103)
				--					)
				SELECT TOP 1
					SUM(ELP * KapAnzPkt) AS RES
				FROM
				(
							SELECT DISTINCT
								dbo.DATA0006.WORK_ORDER_NUMBER,
								CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) AS ELP,
								(SELECT TOP 1 CUSTOMER_PART_NUMBER FROM dbo.DATA0050 WHERE RKEY=dbo.ARTIKELDATEN.CUST_PART_PTR) AS Artikel,
								dbo.ARTIKELDATEN.KapAnzPkt
								--dbo.ARTIKELDATEN.CUST_PART_PTR
							FROM         dbo.DATA0006 INNER JOIN
							  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
							  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
							  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
							WHERE		dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
										AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) AND KapAnzPkt>0
										AND LEFT(dbo.DATA0034.DEPT_CODE, 4) = 'KLEB'
										AND dbo.DATA0048.RKEY NOT IN (
																		SELECT
																			MaxID
																		FROM
																		(
																			SELECT 
																				COUNT(dbo.DATA0048.RKEY) AS RES,
																				MAX(dbo.DATA0048.RKEY) AS MaxID,
																				dbo.DATA0006.WORK_ORDER_NUMBER
																			FROM         dbo.DATA0006 INNER JOIN
																						  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
																						  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
																						  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
																			WHERE    
																						dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
																						AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
																						AND LEFT(dbo.DATA0034.DEPT_CODE, 4) = 'KLEB' AND dbo.DATA0048.QTY_PROD>0
																						
																			GROUP BY
																			dbo.DATA0006.WORK_ORDER_NUMBER
																		) AS tblWOGrp
																		WHERE RES>1
																	)
				) AS tblELPKapAnzPkt
			), 0) AS KapAnzPkt,
			ISNULL((
					SELECT
						SUM(ELP * KapFlELPqdm) AS RES
					FROM
					(
						SELECT DISTINCT
							dbo.ARTIKELDATEN.CUST_PART_PTR,
							CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) AS ELP,
							dbo.ARTIKELDATEN.KapFlELPqdm
						FROM         dbo.DATA0006 INNER JOIN
											  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
											  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
						WHERE     dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
									AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103)
					) AS tblCustPart
			), 0) AS MatVerbAbsSoll_KlebeFolie

		FROM
		(
			SELECT 
				D17_PTR, 
				Abteilung, 
				Anlage, 
				Artikel, 
				Bezeichnung, 
				CASE
					WHEN @para6='J' THEN 0.35 
						ELSE 
							CASE
								WHEN @para1='SES Festresist-Stripper' AND D17_PTR=707 THEN 0
									ELSE
										VerbrauchSOLL
							END 
				END AS VerbrauchSOLL,
				CASE
					WHEN CAST(@para3 AS INT)=145 THEN
						ISNULL((
							SELECT
								SUM(ISNULL(tblDATA0095.QUANTITY, 0)) AS RES
							FROM
							(
								SELECT     LIVE2.dbo.MatRueck_Anlage.ID AS Anlage_PTR, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY AS D17_RKEY, dbo.DATA0017.INV_PART_DESCRIPTION AS ArtBezeichnung,
											dbo.DATA0002.UNIT_CODE AS Lagereinheit, dbo.DATA0017.STOCK_PURCH 
								FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
										  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
										  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
										  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
										  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
										  dbo.DATA0034 ON LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR = dbo.DATA0034.RKEY
								WHERE dbo.DATA0034.DEPT_CODE IN ('QS-01-08', 'VERS-03-01') --@para2
								GROUP BY LIVE2.dbo.MatRueck_Anlage.ID, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY, dbo.DATA0017.INV_PART_DESCRIPTION , dbo.DATA0017.STOCK_PURCH, dbo.DATA0002.UNIT_CODE 
								HAVING LIVE2.dbo.MatRueck_Anlage.ID = CAST(@para3 AS INT)--(LIVE2.dbo.MatRueck_Anlage.Anlage = @Anlage)
							) AS tblAnlageArtikel INNER JOIN --LEFT OUTER JOIN 
							(SELECT QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, MONTH(TRAN_DATE) AS Monat, TRAN_TP 
							--FROM dbo.DATA0095 INNER JOIN  dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY 
							FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
							WHERE dbo.DATA0095.TRAN_TP IN (15, 16) AND dbo.DATA0034.DEPT_CODE IN ('QS-01-08', 'VERS-03-01')
							AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
							AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR ) AS tblDATA0095 
							ON tblAnlageArtikel.D17_RKEY = tblDATA0095.INVT_PTR
							--) AS myTblSub	
						), 0)
						+
						ISNULL((
							SELECT 
								ISNULL((
									(-1)*SUM(QUANTITY) 
									*
									ISNULL((
										SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
										FROM LIVE2.dbo.NachKalk_MatVerteilung
										WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = CAST(@para3 AS INT)
												AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = tblAnlageArtikel_.D17_PTR
									), 0) 
								), 0) AS RES 

							FROM 
								dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
							WHERE 
								dbo.DATA0095.TRAN_TP = 23
								AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
								AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
								AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR
						), 0)
					ELSE
						CASE 
							WHEN CAST(@para3 AS INT)=50 THEN
								ISNULL((
									SELECT
										SUM(ISNULL(RES, 0)) AS RES_
									FROM
									(
										SELECT
											'Abw1' AS Abwasser,
											TRAN_DATE,
											DEPT_CODE,
											ArtBezeichnung,
											(ISNULL(tblDATA0095.QUANTITY, 0)) AS RES
										FROM
										(
											SELECT     LIVE2.dbo.MatRueck_Anlage.ID AS Anlage_PTR, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY AS D17_RKEY, dbo.DATA0017.INV_PART_DESCRIPTION AS ArtBezeichnung,
														dbo.DATA0002.UNIT_CODE AS Lagereinheit, dbo.DATA0017.STOCK_PURCH, DEPT_CODE
											FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
													  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
													  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
													  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
													  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
													  dbo.DATA0034 ON LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR = dbo.DATA0034.RKEY
											WHERE dbo.DATA0034.DEPT_CODE IN ('ABW-01-01') --, 'ABW-01-02') --@para2
											GROUP BY LIVE2.dbo.MatRueck_Anlage.ID, LIVE2.dbo.MatRueck_Anlage.Anlage, 
											dbo.DATA0017.RKEY, dbo.DATA0017.INV_PART_DESCRIPTION , dbo.DATA0017.STOCK_PURCH, dbo.DATA0002.UNIT_CODE, DEPT_CODE 
											HAVING LIVE2.dbo.MatRueck_Anlage.ID = 50--(LIVE2.dbo.MatRueck_Anlage.Anlage = @Anlage)
										) AS tblAnlageArtikel INNER JOIN --LEFT OUTER JOIN 
										(SELECT QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, MONTH(TRAN_DATE) AS Monat, TRAN_TP 
										--FROM dbo.DATA0095 INNER JOIN  dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY 
										FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
										WHERE dbo.DATA0095.TRAN_TP IN (15, 16) AND dbo.DATA0034.DEPT_CODE IN ('ABW-01-01') --, 'ABW-01-02')
										AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
										AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR ) AS tblDATA0095 
										ON tblAnlageArtikel.D17_RKEY = tblDATA0095.INVT_PTR
										UNION ALL
										SELECT
											'Abw2' AS Abwasser,
											TRAN_DATE,
											DEPT_CODE,
											ArtBezeichnung,
											(ISNULL(tblDATA0095.QUANTITY, 0)) AS RES
										FROM
										(
											SELECT     LIVE2.dbo.MatRueck_Anlage.ID AS Anlage_PTR, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY AS D17_RKEY, dbo.DATA0017.INV_PART_DESCRIPTION AS ArtBezeichnung,
														dbo.DATA0002.UNIT_CODE AS Lagereinheit, dbo.DATA0017.STOCK_PURCH , DEPT_CODE
											FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
													  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
													  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
													  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
													  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
													  dbo.DATA0034 ON LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR = dbo.DATA0034.RKEY
											WHERE dbo.DATA0034.DEPT_CODE IN ('ABW-01-02') --, 'ABW-01-02') --@para2
											GROUP BY LIVE2.dbo.MatRueck_Anlage.ID, LIVE2.dbo.MatRueck_Anlage.Anlage, 
											dbo.DATA0017.RKEY, dbo.DATA0017.INV_PART_DESCRIPTION , dbo.DATA0017.STOCK_PURCH, dbo.DATA0002.UNIT_CODE, DEPT_CODE 
											HAVING LIVE2.dbo.MatRueck_Anlage.ID = 51--(LIVE2.dbo.MatRueck_Anlage.Anlage = @Anlage)
										) AS tblAnlageArtikel INNER JOIN --LEFT OUTER JOIN 
										(SELECT QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, MONTH(TRAN_DATE) AS Monat, TRAN_TP 
										--FROM dbo.DATA0095 INNER JOIN  dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY 
										FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
										WHERE dbo.DATA0095.TRAN_TP IN (15, 16) AND dbo.DATA0034.DEPT_CODE IN ('ABW-01-02') --, 'ABW-01-02')
										AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
										AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR ) AS tblDATA0095 
										ON tblAnlageArtikel.D17_RKEY = tblDATA0095.INVT_PTR
									) AS tblAbw
								), 0)
								+
								ISNULL((
									SELECT 
										ISNULL((
											(-1)*SUM(QUANTITY) 
											*
											ISNULL((
												SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
												FROM LIVE2.dbo.NachKalk_MatVerteilung
												WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = 50
														AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = tblAnlageArtikel_.D17_PTR
											), 0) 
										), 0) AS RES 

									FROM 
										dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
									WHERE 
										dbo.DATA0095.TRAN_TP = 23
										AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
										AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
										AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR
								), 0) 
								+
								ISNULL((
									SELECT 
										ISNULL((
											(-1)*SUM(QUANTITY) 
											*
											ISNULL((
												SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
												FROM LIVE2.dbo.NachKalk_MatVerteilung
												WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = 51
														AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = tblAnlageArtikel_.D17_PTR
											), 0) 
										), 0) AS RES 

									FROM 
										dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
									WHERE 
										dbo.DATA0095.TRAN_TP = 23
										AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
										AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
										AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR
								), 0) 
							ELSE
								ISNULL((
									SELECT
										SUM(ISNULL(tblDATA0095.QUANTITY, 0)) AS RES
									FROM
									(
										SELECT     LIVE2.dbo.MatRueck_Anlage.ID AS Anlage_PTR, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY AS D17_RKEY, dbo.DATA0017.INV_PART_DESCRIPTION AS ArtBezeichnung,
													dbo.DATA0002.UNIT_CODE AS Lagereinheit, dbo.DATA0017.STOCK_PURCH 
										FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
												  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
												  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
												  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
												  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
												  dbo.DATA0034 ON LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR = dbo.DATA0034.RKEY
										WHERE dbo.DATA0034.DEPT_CODE = @para2
										GROUP BY LIVE2.dbo.MatRueck_Anlage.ID, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY, dbo.DATA0017.INV_PART_DESCRIPTION , dbo.DATA0017.STOCK_PURCH, dbo.DATA0002.UNIT_CODE 
										HAVING LIVE2.dbo.MatRueck_Anlage.ID = CAST(@para3 AS INT)--(LIVE2.dbo.MatRueck_Anlage.Anlage = @Anlage)
									) AS tblAnlageArtikel INNER JOIN --LEFT OUTER JOIN 
									(SELECT QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, MONTH(TRAN_DATE) AS Monat, TRAN_TP 
									--FROM dbo.DATA0095 INNER JOIN  dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY 
									FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
									WHERE dbo.DATA0095.TRAN_TP IN (15, 16) AND dbo.DATA0034.DEPT_CODE = @para2
									AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
									AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR ) AS tblDATA0095 
									ON tblAnlageArtikel.D17_RKEY = tblDATA0095.INVT_PTR
									--) AS myTblSub	
								), 0)
								+
								ISNULL((
									SELECT 
										ISNULL((
											(-1)*SUM(QUANTITY) 
											*
											ISNULL((
												SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
												FROM LIVE2.dbo.NachKalk_MatVerteilung
												WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = CAST(@para3 AS INT)
														AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = tblAnlageArtikel_.D17_PTR
											), 0) 
										), 0) AS RES 

									FROM 
										dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
									WHERE 
										dbo.DATA0095.TRAN_TP = 23
										AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
										AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
										AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR
								), 0)
						END
				END AS Verbrauch,
				ISNULL((SELECT TOP 1 Durchsatz FROM @tblDurchsatz WHERE DEPT_CODE = @para2), 0) AS Durchsatz,
				ISNULL((SELECT TOP 1 BzgGr FROM @tblDurchsatz WHERE DEPT_CODE = @para2), 0) AS BzgGr,
				VerrPreis,
				LagerEinheit,
				ISNULL((SELECT TOP 1 Durchsatz2 FROM @tblDurchsatz WHERE DEPT_CODE = @para2), 0) AS Durchsatz2,
				ISNULL((SELECT TOP 1 Durchsatz3 FROM @tblDurchsatz WHERE DEPT_CODE = @para2), 0) AS Durchsatz3

			FROM @tblAnlageArtikel AS tblAnlageArtikel_
		) AS tblJeAnlage
		ORDER BY IstKosten DESC
	END

	IF @Case_ = 'Materialverbrauch_LBA_CuFl_ZUm2'
	BEGIN
		--DECLARE 
		--@para1 varchar(255),
		--@para2 varchar(255),
		--@para3 varchar(255),
		--@para4 varchar(255),
		--@para5 varchar(255)
		--SET @para1 = 'Black Hole'	--Anlage
		--SET @para2 = 'BLHO-01-01'	--Ressource
		--SET @para3 = '1'			--Anlage_PTR
		--SET @para4 = '01.01.2015'	--Datum Von
		--SET @para5 = '31.03.2015'	--Datum Bis


		DECLARE @tblDurchsatzLBA table(
										DEPT_CODE char(10), 
										Durchsatz NUMERIC(10, 4)
									)

		INSERT @tblDurchsatzLBA(DEPT_CODE, Durchsatz)
		SELECT
			'LBA' AS DEPT_CODE,
			ISNULL((
				SELECT TOP 1    
					SUM(
						CASE
							WHEN @para3='CuFl' THEN
								(CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT))
								*
								(dbo.ARTIKELDATEN.CuFl_L+dbo.ARTIKELDATEN.CuFl_B)/100		
							ELSE
								(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
								/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000)
						END
					) AS RES
				FROM         dbo.DATA0006 INNER JOIN
								dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
								dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
								dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
				WHERE     
					dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT > 0 
					AND (dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103))
					AND (dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103))
					AND dbo.DATA0034.RKEY IN (86, 328, 329, 53, 452)
			), 0) AS Durchsatz
			/*
			ISNULL((
				SELECT TOP 1    
					SUM(
						(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
						/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000)) 
					AS RES
				FROM         dbo.DATA0006 INNER JOIN
								dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
								dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
								dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
				WHERE     
					dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT > 0 
					AND (dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103))
					AND (dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103))
					AND dbo.DATA0034.RKEY IN (86, 328, 329, 53, 452)
			), 0) AS Durchsatz_ZUm2
			*/

		--SELECT * FROM @tblDurchsatzLBA


		DECLARE @tblAnlageArtikelLBA table(
											D17_PTR NUMERIC(10, 0),
											Abteilung varchar(250),
											Anlage varchar(250),
											Artikel char(20), 
											Bezeichnung char(40), 
											VerbrauchSOLL DECIMAL(20, 7),
											VerrPreis DECIMAL(20, 7),
											LagerEinheit varchar(5),
											Aktiviert bit
											)
		INSERT @tblAnlageArtikelLBA(D17_PTR, Abteilung, Anlage, Artikel, Bezeichnung, VerbrauchSOLL, VerrPreis, LagerEinheit, Aktiviert)
		SELECT  DISTINCT dbo.DATA0017.RKEY AS D17_PTR, LIVE2.dbo.MatRueck_Abteilung.Abteilung, 
				'LBA' AS Anlage, --LIVE2.dbo.MatRueck_Anlage.Anlage, 
				dbo.DATA0017.INV_PART_NUMBER AS Artikel, 
				dbo.DATA0017.INV_PART_DESCRIPTION AS Bezeichnung, 
				LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, 
				dbo.DATA0017.STD_COST AS VerrPreis,
				dbo.DATA0002.UNIT_CODE AS LagerEinheit,
				LIVE2.dbo.MatRueck_Abteilung.Aktiviert
		FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
						LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
						LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
						dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
						dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
						dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
						LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
						dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
		GROUP BY dbo.DATA0017.RKEY, LIVE2.dbo.MatRueck_Abteilung.Abteilung, LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID,
				dbo.DATA0017.INV_PART_NUMBER, dbo.DATA0017.INV_PART_DESCRIPTION, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STOCK_PURCH, 
				dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE, dbo.DATA0017.CONSIGN_ONHAND_QTY,
				dbo.DATA0017.ACTIVE_FLAG, dbo.DATA0017.STD_COST, LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, 
				LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial, LIVE2.dbo.MatRueck_Abteilung.Aktiviert, LIVE2.dbo.MatRueck_Abteilung.ID
		HAVING      dbo.DATA0017.ACTIVE_FLAG='Y' AND LIVE2.dbo.MatRueck_Abteilung.ID = 23 
					--AND dbo.DATA0017.RKEY IN (54210, 580) --Kupferanoden Kugeln , Reinzinn Knüppelanoden 600 mm
					AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(1 AS bit) AND LIVE2.dbo.MatRueck_Abteilung.Aktiviert=1

		--SELECT * FROM @tblAnlageArtikelLBA


		SELECT
			Abteilung, 
			Anlage, 
			Artikel, 
			Bezeichnung, 
			Verbrauch,
			Durchsatz,
			Verbrauch*VerrPreis AS abs_Kosten,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch*VerrPreis)/Durchsatz 
				ELSE
					0
			END AS rel_Kosten,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch*VerrPreis)/Durchsatz*100 
				ELSE
					0
			END AS KS_IstKosten,
			VerrPreis*VerbrauchSOLL*100 AS SollKosten,
			CASE
				WHEN (VerrPreis*VerbrauchSOLL*100)>0 AND Durchsatz>0 THEN
					(((Verbrauch*VerrPreis)/Durchsatz*100)-(VerrPreis*VerbrauchSOLL*100.000000))/(VerrPreis*VerbrauchSOLL*100.000000) 
				ELSE
					0
			END AS Abweichung,
			(Verbrauch*VerrPreis)-(VerrPreis*Durchsatz*VerbrauchSOLL) AS MehrMinderKosten,
			(Verbrauch*VerrPreis) AS IstKosten,
			VerrPreis,
			CAST(VerbrauchSOLL*100.000000 AS DECIMAL(20, 7)) AS SollV_100,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch/Durchsatz)*100.000000 
				ELSE
					0
			END AS IstV_100,
			LagerEinheit
			
		FROM
		(
			SELECT 
				D17_PTR, 
				Abteilung, 
				Anlage, 
				Artikel, 
				Bezeichnung, 
				VerbrauchSOLL,
				ISNULL((
						ISNULL((
							SELECT
								SUM(ISNULL(QUANTITY, 0)) AS RES
							FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
							WHERE dbo.DATA0095.TRAN_TP IN (15, 16) --AND dbo.DATA0034.DEPT_CODE = @para2
								AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
								AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  
								AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR
								AND LEFT(dbo.DATA0034.DEPT_CODE, 4) = 'LBA-'
						), 0)
						+
						ISNULL((
							SELECT 
								ISNULL((
									(-1)*SUM(QUANTITY) 
									--*
									--ISNULL((
									--	SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
									--	FROM LIVE2.dbo.NachKalk_MatVerteilung
									--	WHERE --LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = CAST(@para3 AS INT)
									--			--AND 
									--			LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = tblAnlageArtikel_.D17_PTR
									--), 0) 
								), 0) AS RES 

							FROM 
								dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
							WHERE 
								dbo.DATA0095.TRAN_TP = 23
								AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
								AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
								AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR
						), 0)
				), 0) AS Verbrauch,
				ISNULL((SELECT TOP 1 Durchsatz FROM @tblDurchsatzLBA WHERE DEPT_CODE = 'LBA'), 0) AS Durchsatz,
				VerrPreis,
				LagerEinheit

			FROM @tblAnlageArtikelLBA AS tblAnlageArtikel_
		) AS tblJeAnlage
		ORDER BY IstKosten DESC
	END

	IF @Case_ = 'Materialverbrauch_LBA_Cu_OMG'
	BEGIN
		--DECLARE 
		--@para1 varchar(255),
		--@para2 varchar(255),
		--@para3 varchar(255),
		--@para4 varchar(255),
		--@para5 varchar(255)
		--SET @para1 = 'Black Hole'	--Anlage
		--SET @para2 = 'BLHO-01-01'	--Ressource
		--SET @para3 = 'CuFl'			--Anlage_PTR
		--SET @para4 = '01.01.2016'	--Datum Von
		--SET @para5 = '31.03.2016'	--Datum Bis


		DECLARE @tblDurchsatzLBACuOMG table(
										DEPT_CODE char(10), 
										Durchsatz NUMERIC(10, 4)
									)

		INSERT @tblDurchsatzLBACuOMG(DEPT_CODE, Durchsatz)
		SELECT
			'LBA' AS DEPT_CODE,
			ISNULL((
				SELECT TOP 1    
					SUM(
						--CASE
						--	WHEN @para3='CuFl' THEN
						--		(CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT))
						--		*
						--		(dbo.ARTIKELDATEN.CuFl_L+dbo.ARTIKELDATEN.CuFl_B)/100		
						--	ELSE
						--		(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
						--		/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000)
						--END
						(CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT))
						*
						(dbo.ARTIKELDATEN.CuFl_L+dbo.ARTIKELDATEN.CuFl_B)/100	
					) AS RES
				FROM         dbo.DATA0006 INNER JOIN
								dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
								dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
								dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
				WHERE     
					dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT > 0 
					AND (dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103))
					AND (dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103))
					AND dbo.DATA0034.RKEY IN (86, 328, 329, 53, 452)
			), 0) AS Durchsatz

		--SELECT * FROM @tblDurchsatzLBA


		DECLARE @tblAnlageArtikelLBACuOMG table(
											D17_PTR NUMERIC(10, 0),
											Abteilung varchar(250),
											Anlage varchar(250),
											Artikel char(20), 
											Bezeichnung char(40), 
											VerbrauchSOLL DECIMAL(20, 7),
											VerrPreis DECIMAL(20, 7),
											LagerEinheit varchar(5),
											Aktiviert bit
											)
		INSERT @tblAnlageArtikelLBACuOMG(D17_PTR, Abteilung, Anlage, Artikel, Bezeichnung, VerbrauchSOLL, VerrPreis, LagerEinheit, Aktiviert)
		SELECT  DISTINCT dbo.DATA0017.RKEY AS D17_PTR, LIVE2.dbo.MatRueck_Abteilung.Abteilung, 
				'LBA' AS Anlage, --LIVE2.dbo.MatRueck_Anlage.Anlage, 
				dbo.DATA0017.INV_PART_NUMBER AS Artikel, 
				dbo.DATA0017.INV_PART_DESCRIPTION AS Bezeichnung, 
				LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, 
				dbo.DATA0017.STD_COST AS VerrPreis,
				dbo.DATA0002.UNIT_CODE AS LagerEinheit,
				LIVE2.dbo.MatRueck_Abteilung.Aktiviert
		FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
						LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
						LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
						dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
						dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
						dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
						LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
						dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
		GROUP BY dbo.DATA0017.RKEY, LIVE2.dbo.MatRueck_Abteilung.Abteilung, LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID,
				dbo.DATA0017.INV_PART_NUMBER, dbo.DATA0017.INV_PART_DESCRIPTION, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STOCK_PURCH, 
				dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE, dbo.DATA0017.CONSIGN_ONHAND_QTY,
				dbo.DATA0017.ACTIVE_FLAG, dbo.DATA0017.STD_COST, LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, 
				LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial, LIVE2.dbo.MatRueck_Abteilung.Aktiviert, LIVE2.dbo.MatRueck_Abteilung.ID
		HAVING      dbo.DATA0017.ACTIVE_FLAG='Y' AND LIVE2.dbo.MatRueck_Abteilung.ID = 23 
					AND dbo.DATA0017.RKEY IN (70391, 43243, 43134, 67780, 43244) --ACID COPPER CARRIER, Kupfer Carrier PC630HT, Kupfer Replenisher PC630HT, Kupfer 630 Breitner, Saurer Reiniger AC26A
					AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(1 AS bit) AND LIVE2.dbo.MatRueck_Abteilung.Aktiviert=1

		--SELECT * FROM @tblAnlageArtikelLBA


		SELECT
			Abteilung, 
			Anlage, 
			Artikel, 
			Bezeichnung, 
			Verbrauch,
			Durchsatz,
			Verbrauch*VerrPreis AS abs_Kosten,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch*VerrPreis)/Durchsatz 
				ELSE
					0
			END AS rel_Kosten,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch*VerrPreis)/Durchsatz*100 
				ELSE
					0
			END AS KS_IstKosten,
			VerrPreis*VerbrauchSOLL*100 AS SollKosten,
			CASE
				WHEN (VerrPreis*VerbrauchSOLL*100)>0 AND Durchsatz>0 THEN
					(((Verbrauch*VerrPreis)/Durchsatz*100)-(VerrPreis*VerbrauchSOLL*100.000000))/(VerrPreis*VerbrauchSOLL*100.000000) 
				ELSE
					0
			END AS Abweichung,
			(Verbrauch*VerrPreis)-(VerrPreis*Durchsatz*VerbrauchSOLL) AS MehrMinderKosten,
			(Verbrauch*VerrPreis) AS IstKosten,
			VerrPreis,
			CAST(VerbrauchSOLL*100.000000 AS DECIMAL(20, 7)) AS SollV_100,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch/Durchsatz)*100.000000 
				ELSE
					0
			END AS IstV_100,
			LagerEinheit
			
		FROM
		(
			SELECT 
				D17_PTR, 
				Abteilung, 
				Anlage, 
				Artikel, 
				Bezeichnung, 
				VerbrauchSOLL,
				ISNULL((
						ISNULL((
							SELECT
								SUM(ISNULL(QUANTITY, 0)) AS RES
							FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
							WHERE dbo.DATA0095.TRAN_TP IN (15, 16) --AND dbo.DATA0034.DEPT_CODE = @para2
								AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
								AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  
								AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR
								--AND LEFT(dbo.DATA0034.DEPT_CODE, 4) = 'LBA-'
								
						), 0)
						+
						ISNULL((
							SELECT 
								ISNULL((
									(-1)*SUM(QUANTITY) --Die Inventurwerte werden zu 100% berücksichtigt / JHA => Gilt nur für Cu/Sn-OMG Excel-Reiter 07.04.16/Dsi
									--*
									--ISNULL((
									--	SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
									--	FROM LIVE2.dbo.NachKalk_MatVerteilung
									--	WHERE --LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = CAST(@para3 AS INT)
									--			--AND 
									--			LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = tblAnlageArtikel_.D17_PTR
									--), 0) 
								), 0) AS RES 

							FROM 
								dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
							WHERE 
								dbo.DATA0095.TRAN_TP = 23
								AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
								AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
								AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR
						), 0)
				), 0) AS Verbrauch,
				ISNULL((SELECT TOP 1 Durchsatz FROM @tblDurchsatzLBACuOMG WHERE DEPT_CODE = 'LBA'), 0) AS Durchsatz,
				VerrPreis,
				LagerEinheit

			FROM @tblAnlageArtikelLBACuOMG AS tblAnlageArtikel_
		) AS tblJeAnlage
		ORDER BY IstKosten DESC
	END

	IF @Case_ = 'Materialverbrauch_LBA_Sn_OMG'
	BEGIN
		--DECLARE 
		--@para1 varchar(255),
		--@para2 varchar(255),
		--@para3 varchar(255),
		--@para4 varchar(255),
		--@para5 varchar(255)
		--SET @para1 = 'Black Hole'	--Anlage
		--SET @para2 = 'BLHO-01-01'	--Ressource
		--SET @para3 = 'CuFl'			--Anlage_PTR
		--SET @para4 = '01.01.2016'	--Datum Von
		--SET @para5 = '31.03.2016'	--Datum Bis


		DECLARE @tblDurchsatzLBASnOMG table(
										DEPT_CODE char(10), 
										Durchsatz NUMERIC(10, 4)
									)

		INSERT @tblDurchsatzLBASnOMG(DEPT_CODE, Durchsatz)
		SELECT
			'LBA' AS DEPT_CODE,
			ISNULL((
				SELECT TOP 1    
					SUM(
						--CASE
						--	WHEN @para3='CuFl' THEN
						--		(CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT))
						--		*
						--		(dbo.ARTIKELDATEN.CuFl_L+dbo.ARTIKELDATEN.CuFl_B)/100		
						--	ELSE
						--		(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
						--		/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000)
						--END
						(CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT))
						*
						(dbo.ARTIKELDATEN.CuFl_L+dbo.ARTIKELDATEN.CuFl_B)/100	
					) AS RES
				FROM         dbo.DATA0006 INNER JOIN
								dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
								dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
								dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
				WHERE     
					dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT > 0 
					AND (dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103))
					AND (dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103))
					AND dbo.DATA0034.RKEY IN (86, 328, 329, 53, 452)
			), 0) AS Durchsatz

		--SELECT * FROM @tblDurchsatzLBA


		DECLARE @tblAnlageArtikelLBASnOMG table(
											D17_PTR NUMERIC(10, 0),
											Abteilung varchar(250),
											Anlage varchar(250),
											Artikel char(20), 
											Bezeichnung char(40), 
											VerbrauchSOLL DECIMAL(20, 7),
											VerrPreis DECIMAL(20, 7),
											LagerEinheit varchar(5),
											Aktiviert bit
											)
		INSERT @tblAnlageArtikelLBASnOMG(D17_PTR, Abteilung, Anlage, Artikel, Bezeichnung, VerbrauchSOLL, VerrPreis, LagerEinheit, Aktiviert)
		SELECT  DISTINCT dbo.DATA0017.RKEY AS D17_PTR, LIVE2.dbo.MatRueck_Abteilung.Abteilung, 
				'LBA' AS Anlage, --LIVE2.dbo.MatRueck_Anlage.Anlage, 
				dbo.DATA0017.INV_PART_NUMBER AS Artikel, 
				dbo.DATA0017.INV_PART_DESCRIPTION AS Bezeichnung, 
				LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, 
				dbo.DATA0017.STD_COST AS VerrPreis,
				dbo.DATA0002.UNIT_CODE AS LagerEinheit,
				LIVE2.dbo.MatRueck_Abteilung.Aktiviert
		FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
						LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
						LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
						dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
						dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
						dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
						LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
						dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
		GROUP BY dbo.DATA0017.RKEY, LIVE2.dbo.MatRueck_Abteilung.Abteilung, LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID,
				dbo.DATA0017.INV_PART_NUMBER, dbo.DATA0017.INV_PART_DESCRIPTION, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STOCK_PURCH, 
				dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE, dbo.DATA0017.CONSIGN_ONHAND_QTY,
				dbo.DATA0017.ACTIVE_FLAG, dbo.DATA0017.STD_COST, LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, 
				LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial, LIVE2.dbo.MatRueck_Abteilung.Aktiviert, LIVE2.dbo.MatRueck_Abteilung.ID
		HAVING      dbo.DATA0017.ACTIVE_FLAG='Y' AND LIVE2.dbo.MatRueck_Abteilung.ID = 23 
					AND dbo.DATA0017.RKEY IN (54296, 54295, 54294, 54293) --Zinnbad 2540AO Antioxidant, Zinnbad 2544LF Reel-Satin Additive, Zinnbad NF2019 Methane Sulfonic Acid, Zinnbad NF2026 Tin Concentrate
					AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(1 AS bit) AND LIVE2.dbo.MatRueck_Abteilung.Aktiviert=1

		--SELECT * FROM @tblAnlageArtikelLBA


		SELECT
			Abteilung, 
			Anlage, 
			Artikel, 
			Bezeichnung, 
			Verbrauch,
			Durchsatz,
			Verbrauch*VerrPreis AS abs_Kosten,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch*VerrPreis)/Durchsatz 
				ELSE
					0
			END AS rel_Kosten,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch*VerrPreis)/Durchsatz*100 
				ELSE
					0
			END AS KS_IstKosten,
			VerrPreis*VerbrauchSOLL*100 AS SollKosten,
			CASE
				WHEN (VerrPreis*VerbrauchSOLL*100)>0 AND Durchsatz>0 THEN
					(((Verbrauch*VerrPreis)/Durchsatz*100)-(VerrPreis*VerbrauchSOLL*100.000000))/(VerrPreis*VerbrauchSOLL*100.000000) 
				ELSE
					0
			END AS Abweichung,
			(Verbrauch*VerrPreis)-(VerrPreis*Durchsatz*VerbrauchSOLL) AS MehrMinderKosten,
			(Verbrauch*VerrPreis) AS IstKosten,
			VerrPreis,
			CAST(VerbrauchSOLL*100.000000 AS DECIMAL(20, 7)) AS SollV_100,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch/Durchsatz)*100.000000 
				ELSE
					0
			END AS IstV_100,
			LagerEinheit
			
		FROM
		(
			SELECT 
				D17_PTR, 
				Abteilung, 
				Anlage, 
				Artikel, 
				Bezeichnung, 
				VerbrauchSOLL,
				ISNULL((
						ISNULL((
							SELECT
								SUM(ISNULL(QUANTITY, 0)) AS RES
							FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
							WHERE dbo.DATA0095.TRAN_TP IN (15, 16) --AND dbo.DATA0034.DEPT_CODE = @para2
								AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
								AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  
								AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR
								--AND LEFT(dbo.DATA0034.DEPT_CODE, 4) = 'LBA-'
								
						), 0)
						+
						ISNULL((
							SELECT 
								ISNULL((
									(-1)*SUM(QUANTITY) --Die Inventurwerte werden zu 100% berücksichtigt / JHA => Gilt nur für Cu/Sn-OMG Excel-Reiter 07.04.16/Dsi
									--*
									--ISNULL((
									--	SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
									--	FROM LIVE2.dbo.NachKalk_MatVerteilung
									--	WHERE --LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = CAST(@para3 AS INT)
									--			--AND 
									--			LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = tblAnlageArtikel_.D17_PTR
									), 0) 
								--), 0) AS RES 

							FROM 
								dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
							WHERE 
								dbo.DATA0095.TRAN_TP = 23
								AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
								AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
								AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR
						), 0)
				), 0) AS Verbrauch,
				ISNULL((SELECT TOP 1 Durchsatz FROM @tblDurchsatzLBASnOMG WHERE DEPT_CODE = 'LBA'), 0) AS Durchsatz,
				VerrPreis,
				LagerEinheit

			FROM @tblAnlageArtikelLBASnOMG AS tblAnlageArtikel_
		) AS tblJeAnlage
		ORDER BY IstKosten DESC
	END

	IF @Case_ = 'Materialverbrauch_LBA_Bad'
	BEGIN
		--DECLARE 
		--@para1 varchar(255),
		--@para2 varchar(255),
		--@para3 varchar(255),
		--@para4 varchar(255),
		--@para5 varchar(255)
		--SET @para1 = 'Black Hole'	--Anlage
		--SET @para2 = 'BLHO-01-01'	--Ressource
		--SET @para3 = 'PAL Kupferbad'			--Anlage_PTR
		--SET @para4 = '01.01.2016'	--Datum Von
		--SET @para5 = '31.03.2016'	--Datum Bis

		DECLARE
			@AnlageID INT
		SET @AnlageID = (SELECT TOP 1 ID FROM LIVE2.dbo.MatRueck_Anlage WHERE LIVE2.dbo.MatRueck_Anlage.Anlage = @para3)

		DECLARE @tblDurchsatzLBACuBad table(
										DEPT_CODE char(10), 
										Durchsatz NUMERIC(10, 4)
									)

		INSERT @tblDurchsatzLBACuBad(DEPT_CODE, Durchsatz)
		SELECT
			'LBA' AS DEPT_CODE,
			ISNULL((
				SELECT TOP 1    
					SUM(
						--CASE
						--	WHEN @para3='CuFl' THEN
						--		(CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT))
						--		*
						--		(dbo.ARTIKELDATEN.CuFl_L+dbo.ARTIKELDATEN.CuFl_B)/100		
						--	ELSE
						--		(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
						--		/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000)
						--END
						(CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT))
						*
						(dbo.ARTIKELDATEN.CuFl_L+dbo.ARTIKELDATEN.CuFl_B)/100		
					) AS RES
				FROM         dbo.DATA0006 INNER JOIN
								dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
								dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
								dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
				WHERE     
					dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT > 0 
					AND (dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103))
					AND (dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103))
					AND dbo.DATA0034.RKEY IN (86, 328, 329, 53, 452)
			), 0) AS Durchsatz

		--SELECT * FROM @tblDurchsatzLBA


		DECLARE @tblAnlageArtikelLBACuBad table(
											D17_PTR NUMERIC(10, 0),
											Abteilung varchar(250),
											Anlage varchar(250),
											Artikel char(20), 
											Bezeichnung char(40), 
											VerbrauchSOLL DECIMAL(20, 7),
											VerrPreis DECIMAL(20, 7),
											LagerEinheit varchar(5),
											Aktiviert bit
											)
		INSERT @tblAnlageArtikelLBACuBad(D17_PTR, Abteilung, Anlage, Artikel, Bezeichnung, VerbrauchSOLL, VerrPreis, LagerEinheit, Aktiviert)
		SELECT  DISTINCT dbo.DATA0017.RKEY AS D17_PTR, LIVE2.dbo.MatRueck_Abteilung.Abteilung, 
				'LBA' AS Anlage, --LIVE2.dbo.MatRueck_Anlage.Anlage, 
				dbo.DATA0017.INV_PART_NUMBER AS Artikel, 
				dbo.DATA0017.INV_PART_DESCRIPTION AS Bezeichnung, 
				LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, 
				dbo.DATA0017.STD_COST AS VerrPreis,
				dbo.DATA0002.UNIT_CODE AS LagerEinheit,
				LIVE2.dbo.MatRueck_Abteilung.Aktiviert
		FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
						LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
						LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
						dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
						dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
						dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
						LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
						dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
		GROUP BY dbo.DATA0017.RKEY, LIVE2.dbo.MatRueck_Abteilung.Abteilung, LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID,
				dbo.DATA0017.INV_PART_NUMBER, dbo.DATA0017.INV_PART_DESCRIPTION, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STOCK_PURCH, 
				dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE, dbo.DATA0017.CONSIGN_ONHAND_QTY,
				dbo.DATA0017.ACTIVE_FLAG, dbo.DATA0017.STD_COST, LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, 
				LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial, LIVE2.dbo.MatRueck_Abteilung.Aktiviert, LIVE2.dbo.MatRueck_Abteilung.ID
		HAVING      dbo.DATA0017.ACTIVE_FLAG='Y' AND LIVE2.dbo.MatRueck_Anlage.ID = @AnlageID --88 
					--AND dbo.DATA0017.RKEY IN (70391, 43243, 43134, 67780) --ACID COPPER CARRIER, Kupfer Carrier PC630HT, Kupfer Replenisher PC630HT, Kupfer 630 Breitner
					AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(1 AS bit) AND LIVE2.dbo.MatRueck_Abteilung.Aktiviert=1

		--SELECT * FROM @tblAnlageArtikelLBA


		SELECT
			Abteilung, 
			Anlage, 
			Artikel, 
			Bezeichnung, 
			Verbrauch,
			Durchsatz,
			Verbrauch*VerrPreis AS abs_Kosten,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch*VerrPreis)/Durchsatz 
				ELSE
					0
			END AS rel_Kosten,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch*VerrPreis)/Durchsatz*100 
				ELSE
					0
			END AS KS_IstKosten,
			VerrPreis*VerbrauchSOLL*100 AS SollKosten,
			CASE
				WHEN (VerrPreis*VerbrauchSOLL*100)>0 AND Durchsatz>0 THEN
					(((Verbrauch*VerrPreis)/Durchsatz*100)-(VerrPreis*VerbrauchSOLL*100.000000))/(VerrPreis*VerbrauchSOLL*100.000000) 
				ELSE
					0
			END AS Abweichung,
			(Verbrauch*VerrPreis)-(VerrPreis*Durchsatz*VerbrauchSOLL) AS MehrMinderKosten,
			(Verbrauch*VerrPreis) AS IstKosten,
			VerrPreis,
			CAST(VerbrauchSOLL*100.000000 AS DECIMAL(20, 7)) AS SollV_100,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch/Durchsatz)*100.000000 
				ELSE
					0
			END AS IstV_100,
			LagerEinheit
			
		FROM
		(
			SELECT 
				D17_PTR, 
				Abteilung, 
				Anlage, 
				Artikel, 
				Bezeichnung, 
				VerbrauchSOLL,
				ISNULL((
						ISNULL((
							SELECT
								SUM(ISNULL(QUANTITY, 0)) AS RES
							FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
							WHERE dbo.DATA0095.TRAN_TP IN (15, 16) --AND dbo.DATA0034.DEPT_CODE = @para2
								AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
								AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  
								AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR
								AND dbo.DATA0034.DEPT_CODE = @para2 --'LBA-04-05'
								
						), 0)
						+
						ISNULL((
							SELECT 
								ISNULL((
									(-1)*SUM(QUANTITY) 
									*
									ISNULL((
										SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
										FROM LIVE2.dbo.NachKalk_MatVerteilung
										WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = @AnlageID --88
												AND 
												LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = tblAnlageArtikel_.D17_PTR
									), 0) 
								), 0) AS RES 

							FROM 
								dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
							WHERE 
								dbo.DATA0095.TRAN_TP = 23
								AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
								AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
								AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR
						), 0)
				), 0) AS Verbrauch,
				ISNULL((SELECT TOP 1 Durchsatz FROM @tblDurchsatzLBACuBad WHERE DEPT_CODE = 'LBA'), 0) AS Durchsatz,
				VerrPreis,
				LagerEinheit

			FROM @tblAnlageArtikelLBACuBad AS tblAnlageArtikel_
		) AS tblJeAnlage
		ORDER BY IstKosten DESC
	END

	IF @Case_ = 'Materialverbrauch_BohrUnter'
	BEGIN
		--DECLARE 
		--@para4 varchar(255),
		--@para5 varchar(255)
		--SET @para4 = '01.01.2015'	--Datum Von
		--SET @para5 = '31.01.2015'	--Datum Bis


		DECLARE @tblDurchsatzBohrUnter table(
												DEPT_CODE char(10), 
												Durchsatz NUMERIC(10, 4),
												BzgGr varchar(20),
												SOLL_BohrAlu NUMERIC(10, 4)
											)

		INSERT @tblDurchsatzBohrUnter(DEPT_CODE, Durchsatz, BzgGr, SOLL_BohrAlu)
		SELECT
			'ZU-01-01' AS DEPT_CODE,
			ISNULL((
				SELECT TOP 1    
					SUM(
						(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
						/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000)) 
					AS RES
				FROM         dbo.DATA0006 INNER JOIN
							  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
							  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
							  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
				WHERE    
							--dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
							--AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
							--AND dbo.DATA0034.DEPT_CODE = 'ZU-01-01'
							dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
							AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
							AND dbo.DATA0034.DEPT_CODE = 'VS-01-01' 
							AND (ISNULL(dbo.ARTIKELDATEN.SacklochB, 0)=0 AND ISNULL(dbo.ARTIKELDATEN.SacklochL, 0)=0)
			), 0) AS Durchsatz,
			'Zu-m2' AS BzgGr,
			ISNULL((
				SELECT TOP 1    
					--SUM(
					--	CAST((CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT)--Anz ZU
					--	/
					--	dbo.ARTIKELDATEN.Verstiften) + 0.9999 AS INT)
					--	*
					--	(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY) / 1000000
					--) AS RES
					SUM(
						CAST( (CAST(CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) AS FLOAT)--Anz ZU
						/
						CAST(dbo.ARTIKELDATEN.Verstiften AS FLOAT)) + 0.9999 AS INT)
						*
						(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY) / 1000000
					) AS RES
					--SUM(
					--	(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
					--	/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000)) 
					--AS RES
				FROM         dbo.DATA0006 INNER JOIN
							  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
							  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
							  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
				WHERE    
							--dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
							--AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
							--AND dbo.DATA0034.DEPT_CODE = 'ZU-01-01'
							--AND (
							--		RIGHT(RTRIM(dbo.DATA0006.WORK_ORDER_NUMBER), 1) IN ('0', '1') -- AL oder erste IL
							--		OR
							--		LEFT(RIGHT(RTRIM(dbo.DATA0006.WORK_ORDER_NUMBER), 3), 1) = '2' -- HBF
							--	)
							dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
							AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
							AND dbo.DATA0034.DEPT_CODE = 'VS-01-01' 
							AND (ISNULL(dbo.ARTIKELDATEN.SacklochB, 0)=0 AND ISNULL(dbo.ARTIKELDATEN.SacklochL, 0)=0)
			), 0) AS SOLL_BohrAlu



		DECLARE @tblANALYSIS_CODE5BohrUnter table(
												Bezeichnung char(40), 
												ArtFl NUMERIC(10, 4)
											)


		INSERT @tblANALYSIS_CODE5BohrUnter(Bezeichnung, ArtFl)
		SELECT 
			INV_PART_DESCRIPTION AS Bezeichnung,
			CAST(CASE WHEN LTRIM(RTRIM(ISNULL(ANALYSIS_CODE5, '')))='' THEN '0' ELSE REPLACE(LEFT(ANALYSIS_CODE5, 6), ',', '.') END AS NUMERIC(20, 7)) AS ArtFl
		FROM dbo.DATA0017 
		WHERE 
			dbo.DATA0017.ACTIVE_FLAG='Y' 
			AND LEFT(dbo.DATA0017.INV_PART_NUMBER, 5) = 'BO-BU'


		DECLARE @tblSollDurchsatzBohrUnter table(
												Bezeichnung char(40), 
												Soll_m2 NUMERIC(10, 4)
											)

		INSERT @tblSollDurchsatzBohrUnter(Bezeichnung, Soll_m2)
		SELECT
			Alu,
			SUM(Soll_m2) AS Soll_m2
		FROM
		(
			SELECT   
				--dbo.DATA0006.WORK_ORDER_NUMBER,
				CASE
					WHEN dbo.ARTIKELDATEN.ZuX=610 AND dbo.ARTIKELDATEN.ZuY=460 THEN 'Bohrunterlagen Melamin weiss 460x610mm' ELSE
						CASE
							WHEN dbo.ARTIKELDATEN.ZuX=610 AND dbo.ARTIKELDATEN.ZuY=532 THEN 'Bohrunterlagen Melamin weiss 532x610mm' ELSE
								CASE
									WHEN dbo.ARTIKELDATEN.ZuX=610 AND dbo.ARTIKELDATEN.ZuY=355 THEN 'Bohrunterlagen Melamin weiss 355x610mm' ELSE
										CASE
											WHEN dbo.ARTIKELDATEN.ZuX=532 AND dbo.ARTIKELDATEN.ZuY=406 THEN 'Bohrunterlagen Melamin weiss 406x532mm' ELSE
												CASE
													WHEN dbo.ARTIKELDATEN.ZuX=532 AND dbo.ARTIKELDATEN.ZuY=355 THEN 'Bohrunterlagen Melamin weiss 355x532mm' ELSE
														CASE
															WHEN dbo.ARTIKELDATEN.ZuX=460 AND dbo.ARTIKELDATEN.ZuY=305 THEN 'Bohrunterlagen Melamin weiss 305x460mm' ELSE
																(
																	SELECT TOP 1 Bezeichnung FROM @tblANALYSIS_CODE5BohrUnter AS tblANALYSIS_CODE5 WHERE ArtFl >= (dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY)/1000000 ORDER BY ArtFl
																) 
														END
												END
										END
								END
						END
				END AS Alu,
				--(
				--	SELECT TOP 1 ArtFl FROM @tblANALYSIS_CODE5 AS tblANALYSIS_CODE5 WHERE ArtFl >= (dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY)/1000000 ORDER BY ArtFl
				--) AS Alu_m2,
				--LTRIM(dbo.ARTIKELDATEN.ZuX) + 'x' + LTRIM(dbo.ARTIKELDATEN.ZuY) AS ZUX_ZUY,
				--dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY / 1000000 AS ZUX_ZUY_m2
				(
					CAST( (CAST(CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) AS FLOAT)--Anz ZU
					/
					CAST(dbo.ARTIKELDATEN.Verstiften AS FLOAT)) + 0.9999 AS INT)
					*
					(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY) / 1000000
				) AS Soll_m2
				--(
				--	(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
				--	/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000)) 
				--AS ZU_m2,
			FROM         dbo.DATA0006 INNER JOIN
						  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
						  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
						  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
			WHERE    
						--dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
						--AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
						--AND dbo.DATA0034.DEPT_CODE = 'ZU-01-01'
						--AND (
						--		RIGHT(RTRIM(dbo.DATA0006.WORK_ORDER_NUMBER), 1) IN ('0', '1') -- AL oder erste IL
						--		OR
						--		LEFT(RIGHT(RTRIM(dbo.DATA0006.WORK_ORDER_NUMBER), 3), 1) = '2' -- HBF
						--	)
						dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
						AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
						AND dbo.DATA0034.DEPT_CODE = 'VS-01-01' 
						AND (ISNULL(dbo.ARTIKELDATEN.SacklochB, 0)=0 AND ISNULL(dbo.ARTIKELDATEN.SacklochL, 0)=0)
		) AS tblAluGrp
		GROUP BY Alu

--SELECT * FROM @tblSollDurchsatzBohrAlu


		DECLARE @tblAnlageArtikelBohrUnter table(
											D17_PTR NUMERIC(10, 0),
											Abteilung varchar(250),
											Anlage varchar(250),
											Artikel char(20), 
											Bezeichnung char(40), 
											VerbrauchSOLL DECIMAL(20, 7),
											VerrPreis DECIMAL(20, 7),
											LagerEinheit varchar(5)
											)

		INSERT @tblAnlageArtikelBohrUnter(D17_PTR, Abteilung, Anlage, Artikel, Bezeichnung, VerbrauchSOLL, VerrPreis, LagerEinheit)
		SELECT  DISTINCT dbo.DATA0017.RKEY AS D17_PTR, LIVE2.dbo.MatRueck_Abteilung.Abteilung, 
				LIVE2.dbo.MatRueck_Anlage.Anlage, 
				dbo.DATA0017.INV_PART_NUMBER AS Artikel, 
				dbo.DATA0017.INV_PART_DESCRIPTION AS Bezeichnung, 
				LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, 
				dbo.DATA0017.STD_COST AS VerrPreis,
				dbo.DATA0002.UNIT_CODE AS LagerEinheit
		FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
					  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
					  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
					  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
					  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
					  dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
					  LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
					  dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
		GROUP BY dbo.DATA0017.RKEY, LIVE2.dbo.MatRueck_Abteilung.Abteilung, LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID,
				dbo.DATA0017.INV_PART_NUMBER, dbo.DATA0017.INV_PART_DESCRIPTION, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STOCK_PURCH, 
				dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE, dbo.DATA0017.CONSIGN_ONHAND_QTY,
				dbo.DATA0017.ACTIVE_FLAG, dbo.DATA0017.STD_COST, LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial
		HAVING      dbo.DATA0017.ACTIVE_FLAG='Y' --AND (LIVE2.dbo.MatRueck_Anlage.ID = CAST(@para3 AS INT)) 
					AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(1 AS bit)
					AND  LEFT(dbo.DATA0017.INV_PART_NUMBER, 5) = 'BO-BU'


--SELECT * FROM @tblAnlageArtikelBohrAlu

		SELECT
			Abteilung, 
			Anlage, 
			Artikel, 
			Bezeichnung, 
			Verbrauch,
			Durchsatz,
			Verbrauch*VerrPreis AS abs_Kosten,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch*VerrPreis)/Durchsatz 
				ELSE
					0
			END AS rel_Kosten,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch*VerrPreis)/Durchsatz*100 
				ELSE
					0
			END AS KS_IstKosten,
			VerrPreis*VerbrauchSOLL*100 AS SollKosten,
			CASE
				WHEN (VerrPreis*VerbrauchSOLL*100)>0 AND Durchsatz>0 THEN
					(((Verbrauch*VerrPreis)/Durchsatz*100)-(VerrPreis*VerbrauchSOLL*100.000000))/(VerrPreis*VerbrauchSOLL*100.000000) 
				ELSE
					0
			END AS Abweichung,
			(Verbrauch*VerrPreis)-(VerrPreis*Durchsatz*VerbrauchSOLL) AS MehrMinderKosten,
			(Verbrauch*VerrPreis) AS IstKosten,
			VerrPreis,
			CAST(VerbrauchSOLL*100.000000 AS DECIMAL(20, 7)) AS SollV_100,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch/Durchsatz)*100.000000 
				ELSE
					0
			END AS IstV_100,
			BzgGr,
			LagerEinheit,
			ISNULL((
					SELECT TOP 1 CASE WHEN LTRIM(RTRIM(ISNULL(ANALYSIS_CODE5, '')))='' THEN '0' ELSE ANALYSIS_CODE5 END
					 FROM dbo.DATA0017 WHERE RKEY = D17_PTR)
			, 0) AS MatFl,
			(
				SELECT TOP 1 CASE WHEN LTRIM(RTRIM(ISNULL(ANALYSIS_CODE1, '')))='' THEN '0' ELSE ANALYSIS_CODE1 END
				FROM dbo.DATA0017 WHERE RKEY = D17_PTR
			) AS AC_01,
			SOLL_BohrAlu,
			SOLL_BohrAluArtikel,
			ISNULL((
					SELECT TOP 1
						(
							SUM(CAST(QUANTITY AS NUMERIC(10, 4)) * CAST(PRICE AS NUMERIC(10, 4)) / CAST(EX_RATE AS NUMERIC(10, 4)))
							-
							SUM(CAST(QUANTITY AS NUMERIC(10, 4)) * CAST(STD_COST AS NUMERIC(10, 4)))
						) AS RES

					FROM
					(
						SELECT     
							CASE 
								WHEN ISNULL(dbo.DATA0108.PRICE, 0)>0 THEN
									ISNULL(dbo.DATA0108.QUANTITY, 0)
								ELSE
									ISNULL(dbo.DATA0071.QUAN_ORD, 0)
							END AS QUANTITY,
							CASE 
								WHEN ISNULL(dbo.DATA0108.PRICE, 0)>0 THEN
									ISNULL(dbo.DATA0108.PRICE, 0)
								ELSE
									ISNULL(dbo.DATA0071.PRICE, 0)
							END AS PRICE,
							CASE 
								WHEN ISNULL(dbo.DATA0108.PRICE, 0)>0 THEN
									ISNULL(dbo.DATA0107.EX_RATE, 0)
								ELSE
									ISNULL(dbo.DATA0070.EXCHANGE_RATE, 0)
							END AS EX_RATE,
							dbo.DATA0017.STD_COST,
							dbo.DATA0107.INV_DATE,
							dbo.DATA0070.PO_DATE,
							dbo.DATA0071.INVT_PTR

						FROM         dbo.DATA0070 INNER JOIN
							  dbo.DATA0071 ON dbo.DATA0070.RKEY = dbo.DATA0071.PO_PTR INNER JOIN
							  dbo.DATA0017 ON dbo.DATA0071.INVT_PTR = dbo.DATA0017.RKEY LEFT OUTER JOIN
							  dbo.DATA0108 INNER JOIN
							  dbo.DATA0107 ON dbo.DATA0108.DATA0107_PTR = dbo.DATA0107.RKEY ON dbo.DATA0071.RKEY = dbo.DATA0108.DATA0071_PTR
						WHERE     --(dbo.DATA0071.INVT_PTR = tblAnlageArtikel_.D17_PTR) 
								(dbo.DATA0107.INV_DATE >= CONVERT(DATETIME, @para4, 103) AND dbo.DATA0107.INV_DATE <= CONVERT(DATETIME, @para5, 103))  --AND MONTH(INV_DATE) = tblPruefSpitz.Monat) 
								OR
								(dbo.DATA0070.PO_DATE >= CONVERT(DATETIME, @para4, 103) AND dbo.DATA0070.PO_DATE <= CONVERT(DATETIME, @para5, 103)) 
					) AS tblPreis
					WHERE
							INVT_PTR = tblJeAnlage.D17_PTR
			), 0) AS Preisabweichung

		FROM
		(
			SELECT 
				D17_PTR, 
				Abteilung, 
				Anlage, 
				Artikel, 
				Bezeichnung, 
				VerbrauchSOLL,
				(
					ISNULL((
						SELECT
							SUM(ISNULL(tblDATA0095.QUANTITY, 0)) AS RES
						FROM
						(
							SELECT     LIVE2.dbo.MatRueck_Anlage.ID AS Anlage_PTR, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY AS D17_RKEY, dbo.DATA0017.INV_PART_DESCRIPTION AS ArtBezeichnung,
										dbo.DATA0002.UNIT_CODE AS Lagereinheit, dbo.DATA0017.STOCK_PURCH 
							FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
									  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
									  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
									  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
									  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
									  dbo.DATA0034 ON LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR = dbo.DATA0034.RKEY
							--WHERE dbo.DATA0034.DEPT_CODE = @para2
							GROUP BY LIVE2.dbo.MatRueck_Anlage.ID, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY, dbo.DATA0017.INV_PART_DESCRIPTION , dbo.DATA0017.STOCK_PURCH, dbo.DATA0002.UNIT_CODE 
							--HAVING LIVE2.dbo.MatRueck_Anlage.ID = CAST(@para3 AS INT)--(LIVE2.dbo.MatRueck_Anlage.Anlage = @Anlage)
						) AS tblAnlageArtikel INNER JOIN --LEFT OUTER JOIN 
						(SELECT QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, MONTH(TRAN_DATE) AS Monat, TRAN_TP 
						--FROM dbo.DATA0095 INNER JOIN  dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY 
						FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
						WHERE dbo.DATA0095.TRAN_TP IN (15, 16) --AND dbo.DATA0034.DEPT_CODE = @para2
						AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
						AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  
						AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR ) AS tblDATA0095 
						ON tblAnlageArtikel.D17_RKEY = tblDATA0095.INVT_PTR
						--) AS myTblSub	
					), 0)
					+
					ISNULL((
						SELECT 
							ISNULL((
								(-1)*SUM(QUANTITY) 
								*
								ISNULL((
									SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
									FROM LIVE2.dbo.NachKalk_MatVerteilung
									WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = 68 --Zuschneiden
											AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = tblAnlageArtikel_.D17_PTR
								), 0) 
							), 0) AS RES 

						FROM 
							dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
						WHERE 
							dbo.DATA0095.TRAN_TP = 23
							AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
							AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
							AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR
					), 0)
				) AS Verbrauch,
				ISNULL((SELECT TOP 1 Durchsatz FROM @tblDurchsatzBohrUnter WHERE DEPT_CODE = 'ZU-01-01'), 0) AS Durchsatz,
				ISNULL((SELECT TOP 1 BzgGr FROM @tblDurchsatzBohrUnter WHERE DEPT_CODE = 'ZU-01-01'), 0) AS BzgGr,
				VerrPreis,
				LagerEinheit,
				ISNULL((SELECT TOP 1 SOLL_BohrAlu FROM @tblDurchsatzBohrUnter WHERE DEPT_CODE = 'ZU-01-01'), 0) AS SOLL_BohrAlu,
				ISNULL((SELECT TOP 1 Soll_m2 FROM @tblSollDurchsatzBohrUnter WHERE Bezeichnung = tblAnlageArtikel_.Bezeichnung), 0) AS SOLL_BohrAluArtikel

			FROM @tblAnlageArtikelBohrUnter AS tblAnlageArtikel_
		) AS tblJeAnlage
		ORDER BY IstKosten DESC
	END

	IF @Case_ = 'Materialverbrauch_BohrWZ'
	BEGIN
		--DECLARE 
		--@para4 varchar(255),
		--@para5 varchar(255)
		--SET @para4 = '01.01.2015'	--Datum Von
		--SET @para5 = '31.10.2015'	--Datum Bis

		DECLARE @tblAnlageArtikelBohrWZ table(
											D17_PTR_Neu NUMERIC(10, 0),
											D17_PTR_Angesch NUMERIC(10, 0),
											Bezeichnung_Neu char(40), 
											INV_PART_NUMBER char(20),
											BD DECIMAL(5,2),
											VerbrauchSOLL DECIMAL(20, 7),
											VerrPreis_Neu DECIMAL(20, 7),
											LagerEinheit varchar(5),
											SUPPLIER_PART_NO char(60), 
											ANALYSIS_CODE1 char(20), 
											Bezeichnung_Angesch char(40), 
											VerrPreis_Angesch DECIMAL(20, 7),
											DEKPreis_Neu FLOAT,
											DEKPreis_Angesch FLOAT
											)

		INSERT @tblAnlageArtikelBohrWZ(D17_PTR_Neu, D17_PTR_Angesch, Bezeichnung_Neu, INV_PART_NUMBER, BD, VerbrauchSOLL, VerrPreis_Neu, LagerEinheit, SUPPLIER_PART_NO, ANALYSIS_CODE1, Bezeichnung_Angesch, VerrPreis_Angesch, DEKPreis_Neu, DEKPreis_Angesch)

		SELECT DISTINCT 
				dbo.DATA0017.RKEY AS D17_PTR_Neu,
				ISNULL((
						SELECT TOP 1 D17.RKEY 
						FROM dbo.DATA0017 AS D17 
						WHERE 
							D17.ANALYSIS_CODE1 = dbo.DATA0017.ANALYSIS_CODE1
							AND D17.INV_PART_NUMBER LIKE '%ANGESCHL%'
				), 0) AS D17_PTR_Angesch, 
				dbo.DATA0017.INV_PART_DESCRIPTION AS Bezeichnung_Neu, 
				dbo.DATA0017.INV_PART_NUMBER,
				CAST(REPLACE(ISNULL(dbo.DATA0017.ANALYSIS_CODE1, 0), ',', '.') AS DECIMAL(5,2)) AS BD, 
				0 AS VerbrauchSOLL, 
				dbo.DATA0017.STD_COST AS VerrPreis_Neu, 
				dbo.DATA0002.UNIT_CODE AS LagerEinheit, 
				CASE
					WHEN ISNULL((SELECT TOP 1 RTRIM(SUPPLIER_PART_NO) AS RES FROM dbo.DATA0028 WHERE INVENTORY_PTR=dbo.DATA0017.RKEY AND SUPPLIER_PTR=263), '') <> '' THEN
						(ISNULL((SELECT TOP 1 RTRIM(SUPPLIER_PART_NO) AS RES FROM dbo.DATA0028 WHERE INVENTORY_PTR=dbo.DATA0017.RKEY AND SUPPLIER_PTR=263), '') + '-' + REPLACE(LTRIM(CAST(CAST(REPLACE(dbo.DATA0017.ANALYSIS_CODE1, ',', '.') AS DECIMAL(5,2)) AS VARCHAR(5))), '.', '')) 
					ELSE
						''
				END AS SUPPLIER_PART_NO,
				dbo.DATA0017.ANALYSIS_CODE1,
				ISNULL((
						SELECT TOP 1 D17.INV_PART_DESCRIPTION  
						FROM dbo.DATA0017 AS D17 
						WHERE 
							D17.ANALYSIS_CODE1 = dbo.DATA0017.ANALYSIS_CODE1
							AND D17.INV_PART_NUMBER LIKE '%ANGESCHL%'
				), '') AS Bezeichnung_Angesch,
				ISNULL((
						SELECT TOP 1 D17.STD_COST  
						FROM dbo.DATA0017 AS D17 
						WHERE 
							D17.ANALYSIS_CODE1 = dbo.DATA0017.ANALYSIS_CODE1
							AND D17.INV_PART_NUMBER LIKE '%ANGESCHL%'
				), 0) AS VerrPreis_Angesch,
				dbo.F_dsi_12M_DEKPreis_gew(
											dbo.DATA0017.RKEY,
											'01.' + LTRIM(RTRIM(STR(MONTH(DATEADD(mm, - 12, GETDATE()))))) + '.' + LTRIM(RTRIM(STR(YEAR(DATEADD(mm, - 12, GETDATE()))))),
											RTRIM(LTRIM(STR(DAY(GETDATE())))) + '.' + RTRIM(LTRIM(STR(MONTH(GETDATE())))) + '.' + RTRIM(LTRIM(STR(YEAR(GETDATE()))))
				) AS DEKPreis_Neu,
				dbo.F_dsi_12M_DEKPreis_gew(
											ISNULL((
													SELECT TOP 1 D17.RKEY 
													FROM dbo.DATA0017 AS D17 
													WHERE 
														D17.ANALYSIS_CODE1 = dbo.DATA0017.ANALYSIS_CODE1
														AND D17.INV_PART_NUMBER LIKE '%ANGESCHL%'
											), 0),
											'01.' + LTRIM(RTRIM(STR(MONTH(DATEADD(mm, - 12, GETDATE()))))) + '.' + LTRIM(RTRIM(STR(YEAR(DATEADD(mm, - 12, GETDATE()))))),
											RTRIM(LTRIM(STR(DAY(GETDATE())))) + '.' + RTRIM(LTRIM(STR(MONTH(GETDATE())))) + '.' + RTRIM(LTRIM(STR(YEAR(GETDATE()))))
				) AS DEKPreis_Angesch

		--FROM         dbo.DATA0017 INNER JOIN
		--					  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
		--					  dbo.DATA0017 AS DATA0017_1 ON dbo.DATA0017.ANALYSIS_CODE1 = DATA0017_1.ANALYSIS_CODE1
		FROM         dbo.DATA0017 INNER JOIN
							  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY
		WHERE     
			(dbo.DATA0017.ACTIVE_FLAG = 'Y') 
			AND (dbo.DATA0017.INV_PART_NUMBER LIKE '%BOHRER%') 
			AND ISNULL(dbo.DATA0017.ANALYSIS_CODE1, '') <> ''
			--AND (dbo.DATA0028.SUPPLIER_PTR = 263) 
			AND 
				(
					dbo.DATA0017.INV_PART_NUMBER NOT LIKE '%ANGESCHL%'
					AND 
					dbo.DATA0017.INV_PART_NUMBER NOT LIKE '%Z_A%'
					--AND 
					--dbo.DATA0017.INV_PART_NUMBER NOT LIKE '%KOPF%'
					--AND 
					--dbo.DATA0017.INV_PART_NUMBER NOT LIKE '%SACK%'
					--AND 
					--dbo.DATA0017.INV_PART_NUMBER NOT LIKE '%EINS%'
				)
			--AND ISNULL(dbo.DATA0028.SUPPLIER_PART_NO, '') <> ''
		--ORDER BY CAST(REPLACE(dbo.DATA0017.ANALYSIS_CODE1, ',', '.') AS DECIMAL(5,2))

--SELECT * FROM @tblAnlageArtikelBohrWZ


		SELECT 
			--D17_PTR_Neu,
			Bezeichnung_Neu,
			--Bezeichnung_Angesch,
			(
				ISNULL((
					SELECT
						SUM(ISNULL(QUANTITY, 0)) AS RES
					FROM dbo.DATA0095
					WHERE dbo.DATA0095.TRAN_TP IN (15, 16) --AND dbo.DATA0034.DEPT_CODE = @para2
					AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
					AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  
					AND dbo.DATA0095.INVT_PTR = tblBohrer.D17_PTR_Neu 
				), 0)
				+
				ISNULL((
					SELECT 
						ISNULL((
							(-1)*SUM(QUANTITY) 
						), 0) AS RES 

					FROM 
						dbo.DATA0095
					WHERE 
						dbo.DATA0095.TRAN_TP = 23
						AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
						AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
						AND dbo.DATA0095.INVT_PTR = tblBohrer.D17_PTR_Neu
				), 0)
			) AS Verbrauch_Neu,
			CASE
				WHEN Bezeichnung_Neu NOT LIKE 'Langlochbohrer %' AND Bezeichnung_Neu NOT LIKE '%Köpfchenbohrer%' AND Bezeichnung_Neu NOT LIKE '%Sackloch%' AND Bezeichnung_Neu NOT LIKE '%Einschneider%' THEN
					(
						ISNULL((
							SELECT
								SUM(ISNULL(QUANTITY, 0)) AS RES
							FROM dbo.DATA0095
							WHERE dbo.DATA0095.TRAN_TP IN (15, 16) --AND dbo.DATA0034.DEPT_CODE = @para2
							AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
							AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  
							AND dbo.DATA0095.INVT_PTR = tblBohrer.D17_PTR_Angesch 
						), 0)
						+
						ISNULL((
							SELECT 
								ISNULL((
									(-1)*SUM(QUANTITY) 
								), 0) AS RES 

							FROM 
								dbo.DATA0095
							WHERE 
								dbo.DATA0095.TRAN_TP = 23
								AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
								AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
								AND dbo.DATA0095.INVT_PTR = tblBohrer.D17_PTR_Angesch
						), 0)
					) 
				ELSE
					0
			END AS Verbrauch_Angesch,
			VerrPreis_Neu,
			VerrPreis_Angesch,
			SUPPLIER_PART_NO,
			DEKPreis_Neu,
			DEKPreis_Angesch
		FROM
		(
			SELECT
				D17_PTR_Neu,
				D17_PTR_Angesch,
				Bezeichnung_Neu,
				Bezeichnung_Angesch,
				VerrPreis_Neu,
				VerrPreis_Angesch,
				SUPPLIER_PART_NO,
				DEKPreis_Neu,
				DEKPreis_Angesch
			FROM 
				@tblAnlageArtikelBohrWZ AS tblArtikel
			WHERE
				Bezeichnung_Neu NOT LIKE '%angeschliffen%' AND Bezeichnung_Neu NOT LIKE '%zum Anschliff%'
		) AS tblBohrer
		ORDER BY
			Bezeichnung_Neu
	END

	IF @Case_ = 'Materialverbrauch_BohrWZGrp'
	BEGIN
		--DECLARE 
		--@para1 varchar(255),
		--@para4 varchar(255),
		--@para5 varchar(255)
		--SET @para1 = 'GGPOHA\dsi 27.11.2015 12:11:40'
		--SET @para4 = '01.01.2015'	--Datum Von
		--SET @para5 = '31.10.2015'	--Datum Bis

		DECLARE @tblAnlageArtikelBohrWZGrp table(
											D17_PTR_Neu NUMERIC(10, 0),
											D17_PTR_Angesch NUMERIC(10, 0),
											Bezeichnung_Neu char(40), 
											INV_PART_NUMBER char(20),
											BD DECIMAL(5,2),
											VerbrauchSOLL DECIMAL(20, 7),
											VerrPreis_Neu DECIMAL(20, 7),
											LagerEinheit varchar(5),
											SUPPLIER_PART_NO char(60), 
											ANALYSIS_CODE1 char(20), 
											Bezeichnung_Angesch char(40), 
											VerrPreis_Angesch DECIMAL(20, 7),
											Gruppierung varchar(50),
											DEKPreis_Neu FLOAT,
											DEKPreis_Angesch FLOAT
											)

		INSERT @tblAnlageArtikelBohrWZGrp(D17_PTR_Neu, D17_PTR_Angesch, Bezeichnung_Neu, INV_PART_NUMBER, BD, VerbrauchSOLL, VerrPreis_Neu, LagerEinheit, SUPPLIER_PART_NO, ANALYSIS_CODE1, Bezeichnung_Angesch, VerrPreis_Angesch, Gruppierung, DEKPreis_Neu, DEKPreis_Angesch)

		SELECT DISTINCT 
				dbo.DATA0017.RKEY AS D17_PTR_Neu,
				ISNULL((
						SELECT TOP 1 D17.RKEY 
						FROM dbo.DATA0017 AS D17 
						WHERE 
							D17.ANALYSIS_CODE1 = dbo.DATA0017.ANALYSIS_CODE1
							AND D17.INV_PART_NUMBER LIKE '%ANGESCHL%'
				), 0) AS D17_PTR_Angesch, 
				dbo.DATA0017.INV_PART_DESCRIPTION AS Bezeichnung_Neu, 
				dbo.DATA0017.INV_PART_NUMBER,
				CAST(REPLACE(ISNULL(dbo.DATA0017.ANALYSIS_CODE1, 0), ',', '.') AS DECIMAL(5,2)) AS BD, 
				0 AS VerbrauchSOLL, 
				dbo.DATA0017.STD_COST AS VerrPreis_Neu, 
				dbo.DATA0002.UNIT_CODE AS LagerEinheit, 
				CASE
					WHEN ISNULL((SELECT TOP 1 RTRIM(SUPPLIER_PART_NO) AS RES FROM dbo.DATA0028 WHERE INVENTORY_PTR=dbo.DATA0017.RKEY AND SUPPLIER_PTR=263), '') <> '' THEN
						(ISNULL((SELECT TOP 1 RTRIM(SUPPLIER_PART_NO) AS RES FROM dbo.DATA0028 WHERE INVENTORY_PTR=dbo.DATA0017.RKEY AND SUPPLIER_PTR=263), '') + '-' + REPLACE(LTRIM(CAST(CAST(REPLACE(dbo.DATA0017.ANALYSIS_CODE1, ',', '.') AS DECIMAL(5,2)) AS VARCHAR(5))), '.', '')) 
					ELSE
						''
				END AS SUPPLIER_PART_NO,
				dbo.DATA0017.ANALYSIS_CODE1,
				ISNULL((
						SELECT TOP 1 D17.INV_PART_DESCRIPTION  
						FROM dbo.DATA0017 AS D17 
						WHERE 
							D17.ANALYSIS_CODE1 = dbo.DATA0017.ANALYSIS_CODE1
							AND D17.INV_PART_NUMBER LIKE '%ANGESCHL%'
				), '') AS Bezeichnung_Angesch,
				ISNULL((
						SELECT TOP 1 D17.STD_COST  
						FROM dbo.DATA0017 AS D17 
						WHERE 
							D17.ANALYSIS_CODE1 = dbo.DATA0017.ANALYSIS_CODE1
							AND D17.INV_PART_NUMBER LIKE '%ANGESCHL%'
				), 0) AS VerrPreis_Angesch,
				CASE
					WHEN CAST(REPLACE(ISNULL(dbo.DATA0017.ANALYSIS_CODE1, 0), ',', '.') AS DECIMAL(5,2))<0.15 THEN 'DM < 0,15' ELSE
					CASE
						WHEN CAST(REPLACE(ISNULL(dbo.DATA0017.ANALYSIS_CODE1, 0), ',', '.') AS DECIMAL(5,2))=0.15 THEN 'DM = 0,15' ELSE
						CASE
							WHEN CAST(REPLACE(ISNULL(dbo.DATA0017.ANALYSIS_CODE1, 0), ',', '.') AS DECIMAL(5,2))=0.2 THEN 'DM = 0,2' ELSE
							CASE
								WHEN CAST(REPLACE(ISNULL(dbo.DATA0017.ANALYSIS_CODE1, 0), ',', '.') AS DECIMAL(5,2))=0.25 THEN 'DM = 0,25' ELSE
								CASE
									WHEN CAST(REPLACE(ISNULL(dbo.DATA0017.ANALYSIS_CODE1, 0), ',', '.') AS DECIMAL(5,2))>0.25
										AND  CAST(REPLACE(ISNULL(dbo.DATA0017.ANALYSIS_CODE1, 0), ',', '.') AS DECIMAL(5,2))<=0.5 THEN 'DM = 0.30 - 0,50' ELSE
									CASE
										WHEN CAST(REPLACE(ISNULL(dbo.DATA0017.ANALYSIS_CODE1, 0), ',', '.') AS DECIMAL(5,2))>0.5
											AND  CAST(REPLACE(ISNULL(dbo.DATA0017.ANALYSIS_CODE1, 0), ',', '.') AS DECIMAL(5,2))<=1 THEN 'DM = 0,55 - 1,00' ELSE
										CASE
											WHEN CAST(REPLACE(ISNULL(dbo.DATA0017.ANALYSIS_CODE1, 0), ',', '.') AS DECIMAL(5,2))>1 
												AND  CAST(REPLACE(ISNULL(dbo.DATA0017.ANALYSIS_CODE1, 0), ',', '.') AS DECIMAL(5,2))<=2 THEN 'DM = 1,05 - 2,00' ELSE
											CASE
												WHEN CAST(REPLACE(ISNULL(dbo.DATA0017.ANALYSIS_CODE1, 0), ',', '.') AS DECIMAL(5,2))>2
													AND  CAST(REPLACE(ISNULL(dbo.DATA0017.ANALYSIS_CODE1, 0), ',', '.') AS DECIMAL(5,2))<=3.15 THEN 'DM = 2,05 - 3,15' ELSE
												CASE
													WHEN CAST(REPLACE(ISNULL(dbo.DATA0017.ANALYSIS_CODE1, 0), ',', '.') AS DECIMAL(5,2))>3.15
														AND  CAST(REPLACE(ISNULL(dbo.DATA0017.ANALYSIS_CODE1, 0), ',', '.') AS DECIMAL(5,2))<=4 THEN 'DM = 3,20 - 4,00' ELSE
													--CASE
														--WHEN CAST(REPLACE(ISNULL(dbo.DATA0017.ANALYSIS_CODE1, 0), ',', '.') AS DECIMAL(5,2))>4
														--	AND  CAST(REPLACE(ISNULL(dbo.DATA0017.ANALYSIS_CODE1, 0), ',', '.') AS DECIMAL(5,2))<=5 THEN 'DM = 4,05 - 5,00' ELSE
														--CASE
															'DM > 4.00'
															--WHEN CAST(REPLACE(ISNULL(dbo.DATA0017.ANALYSIS_CODE1, 0), ',', '.') AS DECIMAL(5,2))>5
															--	AND  CAST(REPLACE(ISNULL(dbo.DATA0017.ANALYSIS_CODE1, 0), ',', '.') AS DECIMAL(5,2))<=4.5 THEN 'DM = 4,05 - 4,50' ELSE
															--CASE
															--	WHEN CAST(REPLACE(ISNULL(dbo.DATA0017.ANALYSIS_CODE1, 0), ',', '.') AS DECIMAL(5,2))>4.5
															--		AND  CAST(REPLACE(ISNULL(dbo.DATA0017.ANALYSIS_CODE1, 0), ',', '.') AS DECIMAL(5,2))<=5 THEN 'DM = 4,50 - 5,00' ELSE
															--	CASE
															--		WHEN CAST(REPLACE(ISNULL(dbo.DATA0017.ANALYSIS_CODE1, 0), ',', '.') AS DECIMAL(5,2))>5
															--			AND  CAST(REPLACE(ISNULL(dbo.DATA0017.ANALYSIS_CODE1, 0), ',', '.') AS DECIMAL(5,2))<=5.5 THEN 'DM = 5,00 - 5,50' ELSE
															--		CASE
															--			WHEN CAST(REPLACE(ISNULL(dbo.DATA0017.ANALYSIS_CODE1, 0), ',', '.') AS DECIMAL(5,2))>5.5
															--				AND  CAST(REPLACE(ISNULL(dbo.DATA0017.ANALYSIS_CODE1, 0), ',', '.') AS DECIMAL(5,2))<=6 THEN 'DM = 5,50 - 6,00' ELSE
															--			--CASE
															--				'DM > 6.00'
															--			--END
															--		END
															--	END
															--END
														--END
													--END
												END
											END
										END
									END
								END
							END
						END
					END
				END AS Gruppierung,
				dbo.F_dsi_12M_DEKPreis_gew(
											dbo.DATA0017.RKEY,
											'01.' + LTRIM(RTRIM(STR(MONTH(DATEADD(mm, - 12, GETDATE()))))) + '.' + LTRIM(RTRIM(STR(YEAR(DATEADD(mm, - 12, GETDATE()))))),
											RTRIM(LTRIM(STR(DAY(GETDATE())))) + '.' + RTRIM(LTRIM(STR(MONTH(GETDATE())))) + '.' + RTRIM(LTRIM(STR(YEAR(GETDATE()))))
				) AS DEKPreis_Neu,
				dbo.F_dsi_12M_DEKPreis_gew(
											ISNULL((
													SELECT TOP 1 D17.RKEY 
													FROM dbo.DATA0017 AS D17 
													WHERE 
														D17.ANALYSIS_CODE1 = dbo.DATA0017.ANALYSIS_CODE1
														AND D17.INV_PART_NUMBER LIKE '%ANGESCHL%'
											), 0),
											'01.' + LTRIM(RTRIM(STR(MONTH(DATEADD(mm, - 12, GETDATE()))))) + '.' + LTRIM(RTRIM(STR(YEAR(DATEADD(mm, - 12, GETDATE()))))),
											RTRIM(LTRIM(STR(DAY(GETDATE())))) + '.' + RTRIM(LTRIM(STR(MONTH(GETDATE())))) + '.' + RTRIM(LTRIM(STR(YEAR(GETDATE()))))
				) AS DEKPreis_Angesch

		--FROM         dbo.DATA0017 INNER JOIN
		--					  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
		--					  dbo.DATA0017 AS DATA0017_1 ON dbo.DATA0017.ANALYSIS_CODE1 = DATA0017_1.ANALYSIS_CODE1
		FROM         dbo.DATA0017 INNER JOIN
							  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY
		WHERE     
			(dbo.DATA0017.ACTIVE_FLAG = 'Y') 
			AND (dbo.DATA0017.INV_PART_NUMBER LIKE '%BOHRER%') 
			AND ISNULL(dbo.DATA0017.ANALYSIS_CODE1, '') <> ''
			--AND (dbo.DATA0028.SUPPLIER_PTR = 263) 
			AND 
				(
					dbo.DATA0017.INV_PART_NUMBER NOT LIKE '%ANGESCHL%'
					AND 
					dbo.DATA0017.INV_PART_NUMBER NOT LIKE '%Z_A%'
					--AND 
					--dbo.DATA0017.INV_PART_NUMBER NOT LIKE '%KOPF%'
					--AND 
					--dbo.DATA0017.INV_PART_NUMBER NOT LIKE '%SACK%'
					--AND 
					--dbo.DATA0017.INV_PART_NUMBER NOT LIKE '%EINS%'
				)
			--AND ISNULL(dbo.DATA0028.SUPPLIER_PART_NO, '') <> ''
		--ORDER BY CAST(REPLACE(dbo.DATA0017.ANALYSIS_CODE1, ',', '.') AS DECIMAL(5,2))

--SELECT * FROM @tblAnlageArtikelBohrWZ


		SELECT
			Gruppierung,
			SUM(Verbrauch_Neu) AS SUM_Verbrauch_Neu,
			SUM(Verbrauch_MPK) AS SUM_Verbrauch_MPK,
			SUM(Verbrauch_Angesch) AS SUM_Verbrauch_Angesch,
			CASE WHEN SUM(Verbrauch_Neu)>0 THEN SUM(Verbrauch_Neu*VerrPreis_Neu)/SUM(Verbrauch_Neu) ELSE 0 END AS DPreis_Verbrauch_Neu,
			CASE WHEN SUM(Verbrauch_MPK)>0 THEN SUM(Verbrauch_MPK*VerrPreis_MPK)/SUM(Verbrauch_MPK) ELSE 0 END AS DPreis_Verbrauch_MPK,
			CASE WHEN SUM(Verbrauch_Angesch)>0 THEN SUM(Verbrauch_Angesch*VerrPreis_Angesch)/SUM(Verbrauch_Angesch) ELSE 0 END AS DPreis_VerrPreis_Angesch
		FROM
		(
			SELECT 
				--D17_PTR_Neu,
				Gruppierung,
				--Bezeichnung_Neu,
				--Bezeichnung_Angesch,
				(
					ISNULL((
						SELECT
							SUM(ISNULL(QUANTITY, 0)) AS RES
						FROM dbo.DATA0095
						WHERE dbo.DATA0095.TRAN_TP IN (15, 16) --AND dbo.DATA0034.DEPT_CODE = @para2
						AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
						AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  
						AND dbo.DATA0095.INVT_PTR = tblBohrer.D17_PTR_Neu 
					), 0)
					+
					ISNULL((
						SELECT 
							ISNULL((
								(-1)*SUM(QUANTITY) 
							), 0) AS RES 

						FROM 
							dbo.DATA0095
						WHERE 
							dbo.DATA0095.TRAN_TP = 23
							AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
							AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
							AND dbo.DATA0095.INVT_PTR = tblBohrer.D17_PTR_Neu
					), 0)
				) AS Verbrauch_Neu,
				ISNULL((
					SELECT TOP 1 AnzBohr FROM LIVE2.dbo.MPKBohrer_Excel_TMP WHERE ZeitStempel COLLATE SQL_Latin1_General_CP1_CI_AS =@para1 AND BohrBezeichnung COLLATE SQL_Latin1_General_CP1_CI_AS LIKE RTRIM(tblBohrer.SUPPLIER_PART_NO ) + '%'
				), 0) AS Verbrauch_MPK,
				CASE
					WHEN Bezeichnung_Neu NOT LIKE 'Langlochbohrer %' AND Bezeichnung_Neu NOT LIKE '%Köpfchenbohrer%' AND Bezeichnung_Neu NOT LIKE '%Sackloch%' AND Bezeichnung_Neu NOT LIKE '%Einschneider%' THEN
						(
							ISNULL((
								SELECT
									SUM(ISNULL(QUANTITY, 0)) AS RES
								FROM dbo.DATA0095
								WHERE dbo.DATA0095.TRAN_TP IN (15, 16) --AND dbo.DATA0034.DEPT_CODE = @para2
								AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
								AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  
								AND dbo.DATA0095.INVT_PTR = tblBohrer.D17_PTR_Angesch 
							), 0)
							+
							ISNULL((
								SELECT 
									ISNULL((
										(-1)*SUM(QUANTITY) 
									), 0) AS RES 

								FROM 
									dbo.DATA0095
								WHERE 
									dbo.DATA0095.TRAN_TP = 23
									AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
									AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
									AND dbo.DATA0095.INVT_PTR = tblBohrer.D17_PTR_Angesch
							), 0)
						) 
					ELSE
						0
				END AS Verbrauch_Angesch,
				CASE WHEN DEKPreis_Neu>0 THEN DEKPreis_Neu ELSE VerrPreis_Neu END AS VerrPreis_Neu,
				ISNULL((
					SELECT TOP 1 EKPreis FROM LIVE2.dbo.MPKBohrer_Excel_TMP WHERE ZeitStempel COLLATE SQL_Latin1_General_CP1_CI_AS =@para1 AND BohrBezeichnung COLLATE SQL_Latin1_General_CP1_CI_AS LIKE RTRIM(tblBohrer.SUPPLIER_PART_NO ) + '%'
				), 0) AS VerrPreis_MPK,
				CASE WHEN DEKPreis_Angesch>0 THEN DEKPreis_Angesch ELSE VerrPreis_Angesch END AS VerrPreis_Angesch,
				SUPPLIER_PART_NO
			FROM
			(
				SELECT DISTINCT
					Gruppierung,
					D17_PTR_Neu,
					D17_PTR_Angesch,
					Bezeichnung_Neu,
					--Bezeichnung_Angesch,
					VerrPreis_Neu,
					VerrPreis_Angesch,
					SUPPLIER_PART_NO,
					DEKPreis_Neu,
					DEKPreis_Angesch
				FROM 
					@tblAnlageArtikelBohrWZGrp AS tblArtikel
				WHERE
					Bezeichnung_Neu NOT LIKE '%angeschliffen%' AND Bezeichnung_Neu NOT LIKE '%zum Anschliff%'
			) AS tblBohrer
		) AS tblGrp
		GROUP BY
			Gruppierung
		ORDER BY
			Gruppierung
	END

	IF @Case_ = 'Materialverbrauch_BohrAlu'
	BEGIN
		--DECLARE 
		--@para4 varchar(255),
		--@para5 varchar(255)
		--SET @para4 = '01.01.2015'	--Datum Von
		--SET @para5 = '31.01.2015'	--Datum Bis

		DECLARE @tblDurchsatzBohrAlu table(
												DEPT_CODE char(10), 
												Durchsatz NUMERIC(10, 4),
												BzgGr varchar(20),
												SOLL_BohrAlu NUMERIC(10, 4)
											)

		INSERT @tblDurchsatzBohrAlu(DEPT_CODE, Durchsatz, BzgGr, SOLL_BohrAlu)
		SELECT
			'ZU-01-01' AS DEPT_CODE,
			ISNULL((
				SELECT TOP 1    
					SUM(
						(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
						/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000)) 
					AS RES
				FROM         dbo.DATA0006 INNER JOIN
							  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
							  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
							  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
				WHERE    
							--dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
							--AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
							--AND dbo.DATA0034.DEPT_CODE = 'ZU-01-01'
							dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
							AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
							AND dbo.DATA0034.DEPT_CODE = 'VS-01-01' 
							AND (ISNULL(dbo.ARTIKELDATEN.SacklochB, 0)=0 AND ISNULL(dbo.ARTIKELDATEN.SacklochL, 0)=0)
			), 0) AS Durchsatz,
			'Zu-m2' AS BzgGr,
			ISNULL((
				SELECT TOP 1    
					--SUM(
					--	CAST((CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT)--Anz ZU
					--	/
					--	dbo.ARTIKELDATEN.Verstiften) + 0.9999 AS INT)
					--	*
					--	(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY) / 1000000
					--) AS RES
					SUM(
						CAST( (CAST(CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) AS FLOAT)--Anz ZU
						/
						CAST(dbo.ARTIKELDATEN.Verstiften AS FLOAT)) + 0.9999 AS INT)
						*
						(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY) / 1000000
					) AS RES
					--SUM(
					--	(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
					--	/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000)) 
					--AS RES
/*
				FROM         dbo.DATA0006 INNER JOIN
							  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
							  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
							  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
				WHERE    
							dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
							AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
							--AND dbo.DATA0034.DEPT_CODE = 'ZU-01-01'
							AND LEFT(dbo.DATA0034.DEPT_CODE, 5) = 'BOHR-' AND dbo.DATA0034.DEPT_CODE NOT IN ('BOHR-EXT', 'BOHR-01-13', 'BOHR-02-08')
							--AND dbo.DATA0034.DEPT_CODE = 'VS-01-01'
							AND (
									RIGHT(RTRIM(dbo.DATA0006.WORK_ORDER_NUMBER), 1) IN ('0', '1') -- AL oder erste IL
									OR
									LEFT(RIGHT(RTRIM(dbo.DATA0006.WORK_ORDER_NUMBER), 3), 1) = '2' -- HBF
								)
*/
			FROM         dbo.DATA0006 INNER JOIN
								  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
								  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
								  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR INNER JOIN
								  dbo.DATA0050 ON dbo.DATA0006.CUST_PART_PTR = dbo.DATA0050.RKEY
			WHERE    
						dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
						AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
						AND dbo.DATA0034.DEPT_CODE = 'VS-01-01' 
						--AND LEFT(LTRIM(dbo.DATA0050.CP_REV), 1)='2'
						AND (ISNULL(dbo.ARTIKELDATEN.SacklochB, 0)=0 AND ISNULL(dbo.ARTIKELDATEN.SacklochL, 0)=0)
						--AND 
						--	(
						--		(
						--			dbo.DATA0034.DEPT_CODE = 'ZU-01-01'
						--			--AND LEFT(dbo.DATA0034.DEPT_CODE, 5) = 'BOHR-'
						--			--AND (dbo.DATA0034.DEPT_CODE = 'VS-01-01' OR dbo.DATA0034.DEPT_CODE = 'ZU-01-01')
						--			AND (
						--					RIGHT(RTRIM(dbo.DATA0006.WORK_ORDER_NUMBER), 1) IN ('0', '1') -- AL oder erste IL
						--					OR
						--					LEFT(RIGHT(RTRIM(dbo.DATA0006.WORK_ORDER_NUMBER), 3), 1) = '2' -- HBF
						--				)
						--		)
						--		OR 
						--		(
						--			dbo.DATA0034.DEPT_CODE = 'VS-01-01' AND LEFT(LTRIM(dbo.DATA0050.CP_REV), 1)='2'
						--		)
						--	)
			), 0) AS SOLL_BohrAlu


		DECLARE @tblANALYSIS_CODE5 table(
												Bezeichnung char(40), 
												ArtFl NUMERIC(10, 4)
											)


		INSERT @tblANALYSIS_CODE5(Bezeichnung, ArtFl)
		SELECT 
			INV_PART_DESCRIPTION AS Bezeichnung,
			CAST(CASE WHEN LTRIM(RTRIM(ISNULL(ANALYSIS_CODE5, '')))='' THEN '0' ELSE REPLACE(LEFT(ANALYSIS_CODE5, 6), ',', '.') END AS NUMERIC(20, 7)) AS ArtFl
		FROM dbo.DATA0017 
		WHERE 
			dbo.DATA0017.ACTIVE_FLAG='Y' 
			AND LEFT(dbo.DATA0017.INV_PART_DESCRIPTION, 10) = 'Aluminium '


		DECLARE @tblSollDurchsatzBohrAlu table(
												Bezeichnung char(40), 
												Soll_m2 NUMERIC(10, 4)
											)

		INSERT @tblSollDurchsatzBohrAlu(Bezeichnung, Soll_m2)
		SELECT
			Alu,
			SUM(Soll_m2) AS Soll_m2
		FROM
		(
			SELECT   
				--dbo.DATA0006.WORK_ORDER_NUMBER,
				CASE
					WHEN dbo.ARTIKELDATEN.ZuX=610 AND dbo.ARTIKELDATEN.ZuY=460 THEN 'Aluminium 0,24mm Bohrdecklage 455x609mm' ELSE
						CASE
							WHEN dbo.ARTIKELDATEN.ZuX=610 AND dbo.ARTIKELDATEN.ZuY=532 THEN 'Aluminium 0,24mm Bohrdecklage 530x609mm' ELSE
								CASE
									WHEN dbo.ARTIKELDATEN.ZuX=610 AND dbo.ARTIKELDATEN.ZuY=355 THEN 'Aluminium 0,24mm Bohrdecklage 352x609mm' ELSE
										CASE
											WHEN dbo.ARTIKELDATEN.ZuX=532 AND dbo.ARTIKELDATEN.ZuY=406 THEN 'Aluminium 0,24mm Bohrdecklage 402x531mm' ELSE
												CASE
													WHEN dbo.ARTIKELDATEN.ZuX=532 AND dbo.ARTIKELDATEN.ZuY=355 THEN 'Aluminium 0,24mm Bohrdecklage 352x530mm' ELSE
														CASE
															WHEN dbo.ARTIKELDATEN.ZuX=460 AND dbo.ARTIKELDATEN.ZuY=305 THEN 'Aluminium 0,24mm Bohrdecklage 304x455mm' ELSE
																(
																	SELECT TOP 1 Bezeichnung FROM @tblANALYSIS_CODE5 AS tblANALYSIS_CODE5 WHERE ArtFl >= (dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY)/1000000 ORDER BY ArtFl
																) 
														END
												END
										END
								END
						END
				END AS Alu,
				--(
				--	SELECT TOP 1 ArtFl FROM @tblANALYSIS_CODE5 AS tblANALYSIS_CODE5 WHERE ArtFl >= (dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY)/1000000 ORDER BY ArtFl
				--) AS Alu_m2,
				--LTRIM(dbo.ARTIKELDATEN.ZuX) + 'x' + LTRIM(dbo.ARTIKELDATEN.ZuY) AS ZUX_ZUY,
				--dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY / 1000000 AS ZUX_ZUY_m2
				(
					CAST( (CAST(CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) AS FLOAT)--Anz ZU
					/
					CAST(dbo.ARTIKELDATEN.Verstiften AS FLOAT)) + 0.9999 AS INT)
					*
					(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY) / 1000000
				) AS Soll_m2
				--(
				--	(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
				--	/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000)) 
				--AS ZU_m2,
/*
			FROM         dbo.DATA0006 INNER JOIN
						  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
						  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
						  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
			WHERE    
						dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
						AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
						--AND dbo.DATA0034.DEPT_CODE = 'ZU-01-01'
						AND LEFT(dbo.DATA0034.DEPT_CODE, 5) = 'BOHR-' AND dbo.DATA0034.DEPT_CODE NOT IN ('BOHR-EXT', 'BOHR-01-13', 'BOHR-02-08')
						--AND dbo.DATA0034.DEPT_CODE = 'VS-01-01'
						AND (
								RIGHT(RTRIM(dbo.DATA0006.WORK_ORDER_NUMBER), 1) IN ('0', '1') -- AL oder erste IL
								OR
								LEFT(RIGHT(RTRIM(dbo.DATA0006.WORK_ORDER_NUMBER), 3), 1) = '2' -- HBF
							)
*/
			FROM         dbo.DATA0006 INNER JOIN
								  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
								  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
								  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR INNER JOIN
								  dbo.DATA0050 ON dbo.DATA0006.CUST_PART_PTR = dbo.DATA0050.RKEY
			WHERE    
						dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
						AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
						AND dbo.DATA0034.DEPT_CODE = 'VS-01-01' 
						--AND LEFT(LTRIM(dbo.DATA0050.CP_REV), 1)='2'
						AND (ISNULL(dbo.ARTIKELDATEN.SacklochB, 0)=0 AND ISNULL(dbo.ARTIKELDATEN.SacklochL, 0)=0)
						--AND 
						--	(
						--		(
						--			dbo.DATA0034.DEPT_CODE = 'ZU-01-01'
						--			--AND LEFT(dbo.DATA0034.DEPT_CODE, 5) = 'BOHR-'
						--			--AND (dbo.DATA0034.DEPT_CODE = 'VS-01-01' OR dbo.DATA0034.DEPT_CODE = 'ZU-01-01')
						--			AND (
						--					RIGHT(RTRIM(dbo.DATA0006.WORK_ORDER_NUMBER), 1) IN ('0', '1') -- AL oder erste IL
						--					OR
						--					LEFT(RIGHT(RTRIM(dbo.DATA0006.WORK_ORDER_NUMBER), 3), 1) = '2' -- HBF
						--				)
						--		)
						--		OR 
						--		(
						--			dbo.DATA0034.DEPT_CODE = 'VS-01-01' AND LEFT(LTRIM(dbo.DATA0050.CP_REV), 1)='2'
						--		)
						--	)
		) AS tblAluGrp
		GROUP BY Alu

--SELECT * FROM @tblSollDurchsatzBohrAlu


		DECLARE @tblAnlageArtikelBohrAlu table(
											D17_PTR NUMERIC(10, 0),
											Abteilung varchar(250),
											Anlage varchar(250),
											Artikel char(20), 
											Bezeichnung char(40), 
											VerbrauchSOLL DECIMAL(20, 7),
											VerrPreis DECIMAL(20, 7),
											LagerEinheit varchar(5)
											)

		INSERT @tblAnlageArtikelBohrAlu(D17_PTR, Abteilung, Anlage, Artikel, Bezeichnung, VerbrauchSOLL, VerrPreis, LagerEinheit)
		SELECT  DISTINCT dbo.DATA0017.RKEY AS D17_PTR, LIVE2.dbo.MatRueck_Abteilung.Abteilung, 
				LIVE2.dbo.MatRueck_Anlage.Anlage, 
				dbo.DATA0017.INV_PART_NUMBER AS Artikel, 
				dbo.DATA0017.INV_PART_DESCRIPTION AS Bezeichnung, 
				LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, 
				dbo.DATA0017.STD_COST AS VerrPreis,
				dbo.DATA0002.UNIT_CODE AS LagerEinheit
		FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
					  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
					  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
					  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
					  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
					  dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
					  LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
					  dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
		GROUP BY dbo.DATA0017.RKEY, LIVE2.dbo.MatRueck_Abteilung.Abteilung, LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID,
				dbo.DATA0017.INV_PART_NUMBER, dbo.DATA0017.INV_PART_DESCRIPTION, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STOCK_PURCH, 
				dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE, dbo.DATA0017.CONSIGN_ONHAND_QTY,
				dbo.DATA0017.ACTIVE_FLAG, dbo.DATA0017.STD_COST, LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial
		HAVING      dbo.DATA0017.ACTIVE_FLAG='Y' --AND (LIVE2.dbo.MatRueck_Anlage.ID = CAST(@para3 AS INT)) 
					AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(1 AS bit)
					AND  LEFT(dbo.DATA0017.INV_PART_NUMBER, 9) = 'ALUMINIUM'


--SELECT * FROM @tblAnlageArtikelBohrAlu

		SELECT
			Abteilung, 
			Anlage, 
			Artikel, 
			Bezeichnung, 
			Verbrauch,
			Durchsatz,
			Verbrauch*VerrPreis AS abs_Kosten,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch*VerrPreis)/Durchsatz 
				ELSE
					0
			END AS rel_Kosten,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch*VerrPreis)/Durchsatz*100 
				ELSE
					0
			END AS KS_IstKosten,
			VerrPreis*VerbrauchSOLL*100 AS SollKosten,
			CASE
				WHEN (VerrPreis*VerbrauchSOLL*100)>0 AND Durchsatz>0 THEN
					(((Verbrauch*VerrPreis)/Durchsatz*100)-(VerrPreis*VerbrauchSOLL*100.000000))/(VerrPreis*VerbrauchSOLL*100.000000) 
				ELSE
					0
			END AS Abweichung,
			(Verbrauch*VerrPreis)-(VerrPreis*Durchsatz*VerbrauchSOLL) AS MehrMinderKosten,
			(Verbrauch*VerrPreis) AS IstKosten,
			VerrPreis,
			CAST(VerbrauchSOLL*100.000000 AS DECIMAL(20, 7)) AS SollV_100,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch/Durchsatz)*100.000000 
				ELSE
					0
			END AS IstV_100,
			BzgGr,
			LagerEinheit,
			ISNULL((
					SELECT TOP 1 CASE WHEN LTRIM(RTRIM(ISNULL(ANALYSIS_CODE5, '')))='' THEN '0' ELSE ANALYSIS_CODE5 END
					 FROM dbo.DATA0017 WHERE RKEY = D17_PTR)
			, 0) AS MatFl,
			(
				SELECT TOP 1 CASE WHEN LTRIM(RTRIM(ISNULL(ANALYSIS_CODE1, '')))='' THEN '0' ELSE ANALYSIS_CODE1 END
				FROM dbo.DATA0017 WHERE RKEY = D17_PTR
			) AS AC_01,
			SOLL_BohrAlu,
			SOLL_BohrAluArtikel,
			ISNULL((
					SELECT TOP 1
						(
							SUM(CAST(QUANTITY AS NUMERIC(10, 4)) * CAST(PRICE AS NUMERIC(10, 4)) / CAST(EX_RATE AS NUMERIC(10, 4)))
							-
							SUM(CAST(QUANTITY AS NUMERIC(10, 4)) * CAST(STD_COST AS NUMERIC(10, 4)))
						) AS RES

					FROM
					(
						SELECT     
							CASE 
								WHEN ISNULL(dbo.DATA0108.PRICE, 0)>0 THEN
									ISNULL(dbo.DATA0108.QUANTITY, 0)
								ELSE
									ISNULL(dbo.DATA0071.QUAN_ORD, 0)
							END AS QUANTITY,
							CASE 
								WHEN ISNULL(dbo.DATA0108.PRICE, 0)>0 THEN
									ISNULL(dbo.DATA0108.PRICE, 0)
								ELSE
									ISNULL(dbo.DATA0071.PRICE, 0)
							END AS PRICE,
							CASE 
								WHEN ISNULL(dbo.DATA0108.PRICE, 0)>0 THEN
									ISNULL(dbo.DATA0107.EX_RATE, 0)
								ELSE
									ISNULL(dbo.DATA0070.EXCHANGE_RATE, 0)
							END AS EX_RATE,
							dbo.DATA0017.STD_COST,
							dbo.DATA0107.INV_DATE,
							dbo.DATA0070.PO_DATE,
							dbo.DATA0071.INVT_PTR

						FROM         dbo.DATA0070 INNER JOIN
							  dbo.DATA0071 ON dbo.DATA0070.RKEY = dbo.DATA0071.PO_PTR INNER JOIN
							  dbo.DATA0017 ON dbo.DATA0071.INVT_PTR = dbo.DATA0017.RKEY LEFT OUTER JOIN
							  dbo.DATA0108 INNER JOIN
							  dbo.DATA0107 ON dbo.DATA0108.DATA0107_PTR = dbo.DATA0107.RKEY ON dbo.DATA0071.RKEY = dbo.DATA0108.DATA0071_PTR
						WHERE     --(dbo.DATA0071.INVT_PTR = tblAnlageArtikel_.D17_PTR) 
								(dbo.DATA0107.INV_DATE >= CONVERT(DATETIME, @para4, 103) AND dbo.DATA0107.INV_DATE <= CONVERT(DATETIME, @para5, 103))  --AND MONTH(INV_DATE) = tblPruefSpitz.Monat) 
								OR
								(dbo.DATA0070.PO_DATE >= CONVERT(DATETIME, @para4, 103) AND dbo.DATA0070.PO_DATE <= CONVERT(DATETIME, @para5, 103)) 
					) AS tblPreis
					WHERE
							INVT_PTR = tblJeAnlage.D17_PTR
			), 0) AS Preisabweichung

		FROM
		(
			SELECT 
				D17_PTR, 
				Abteilung, 
				Anlage, 
				Artikel, 
				Bezeichnung, 
				VerbrauchSOLL,
				(
					ISNULL((
						SELECT
							SUM(ISNULL(tblDATA0095.QUANTITY, 0)) AS RES
						FROM
						(
							SELECT     LIVE2.dbo.MatRueck_Anlage.ID AS Anlage_PTR, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY AS D17_RKEY, dbo.DATA0017.INV_PART_DESCRIPTION AS ArtBezeichnung,
										dbo.DATA0002.UNIT_CODE AS Lagereinheit, dbo.DATA0017.STOCK_PURCH 
							FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
									  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
									  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
									  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
									  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
									  dbo.DATA0034 ON LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR = dbo.DATA0034.RKEY
							--WHERE dbo.DATA0034.DEPT_CODE = @para2
							GROUP BY LIVE2.dbo.MatRueck_Anlage.ID, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY, dbo.DATA0017.INV_PART_DESCRIPTION , dbo.DATA0017.STOCK_PURCH, dbo.DATA0002.UNIT_CODE 
							--HAVING LIVE2.dbo.MatRueck_Anlage.ID = CAST(@para3 AS INT)--(LIVE2.dbo.MatRueck_Anlage.Anlage = @Anlage)
						) AS tblAnlageArtikel INNER JOIN --LEFT OUTER JOIN 
						(SELECT QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, MONTH(TRAN_DATE) AS Monat, TRAN_TP 
						--FROM dbo.DATA0095 INNER JOIN  dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY 
						FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
						WHERE dbo.DATA0095.TRAN_TP IN (15, 16) --AND dbo.DATA0034.DEPT_CODE = @para2
						AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
						AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  
						AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR ) AS tblDATA0095 
						ON tblAnlageArtikel.D17_RKEY = tblDATA0095.INVT_PTR
						--) AS myTblSub	
					), 0)
					+
					ISNULL((
						SELECT 
							ISNULL((
								(-1)*SUM(QUANTITY) 
								*
								ISNULL((
									SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
									FROM LIVE2.dbo.NachKalk_MatVerteilung
									WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = 68 --Zuschneiden
											AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = tblAnlageArtikel_.D17_PTR
								), 0) 
							), 0) AS RES 

						FROM 
							dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
						WHERE 
							dbo.DATA0095.TRAN_TP = 23
							AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
							AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
							AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR
					), 0)
				) AS Verbrauch,
				ISNULL((SELECT TOP 1 Durchsatz FROM @tblDurchsatzBohrAlu WHERE DEPT_CODE = 'ZU-01-01'), 0) AS Durchsatz,
				ISNULL((SELECT TOP 1 BzgGr FROM @tblDurchsatzBohrAlu WHERE DEPT_CODE = 'ZU-01-01'), 0) AS BzgGr,
				VerrPreis,
				LagerEinheit,
				ISNULL((SELECT TOP 1 SOLL_BohrAlu FROM @tblDurchsatzBohrAlu WHERE DEPT_CODE = 'ZU-01-01'), 0) AS SOLL_BohrAlu,
				ISNULL((SELECT TOP 1 Soll_m2 FROM @tblSollDurchsatzBohrAlu WHERE Bezeichnung = tblAnlageArtikel_.Bezeichnung), 0) AS SOLL_BohrAluArtikel

			FROM @tblAnlageArtikelBohrAlu AS tblAnlageArtikel_
		) AS tblJeAnlage
		ORDER BY IstKosten DESC
	END

	IF @Case_ = 'DurchsatzaufteilungGiessen'
	BEGIN
		SELECT TOP 1
			SUM(ISNULL((CASE
				WHEN dbo.ARTIKELDATEN.CuD_End<=60 AND (dbo.ARTIKELDATEN.HAL = 1 OR dbo.ARTIKELDATEN.HAL_BF=1) THEN
					ISNULL((
						(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
						/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000) * CASE WHEN dbo.ARTIKELDATEN.LE > 1 THEN 2 ELSE 1 END 
						), 0)
			END), 0)) AS bis60_HAL_HALBF,
			SUM(ISNULL((CASE
				WHEN dbo.ARTIKELDATEN.CuD_End<=60 AND dbo.ARTIKELDATEN.HAL = 0 AND dbo.ARTIKELDATEN.HAL_BF=0 THEN
					ISNULL((
						(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
						/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000) * CASE WHEN dbo.ARTIKELDATEN.LE > 1 THEN 2 ELSE 1 END 
						), 0)
			END), 0)) AS bis60_nicht_HAL_HALBF,
			SUM(ISNULL((CASE
				WHEN dbo.ARTIKELDATEN.CuD_End>60 AND dbo.ARTIKELDATEN.CuD_End<=99  AND (dbo.ARTIKELDATEN.HAL = 1 OR dbo.ARTIKELDATEN.HAL_BF=1) THEN
					ISNULL((
						(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
						/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000) * CASE WHEN dbo.ARTIKELDATEN.LE > 1 THEN 2 ELSE 1 END 
						), 0)
			END), 0)) AS bis99_HAL_HALBF,
			SUM(ISNULL((CASE
				WHEN dbo.ARTIKELDATEN.CuD_End>60 AND dbo.ARTIKELDATEN.CuD_End<=99 AND dbo.ARTIKELDATEN.HAL = 0 AND dbo.ARTIKELDATEN.HAL_BF=0 THEN
					ISNULL((
						(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
						/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000) * CASE WHEN dbo.ARTIKELDATEN.LE > 1 THEN 2 ELSE 1 END 
						), 0)
			END), 0)) AS bis99_nicht_HAL_HALBF,
			SUM(ISNULL((CASE
				WHEN dbo.ARTIKELDATEN.CuD_End>99 AND dbo.ARTIKELDATEN.CuD_End<=150 THEN
					ISNULL((
						(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
						/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000) * CASE WHEN dbo.ARTIKELDATEN.LE > 1 THEN 2 ELSE 1 END 
						), 0)
			END), 0)) AS bis150,
			SUM(ISNULL((CASE
				WHEN dbo.ARTIKELDATEN.CuD_End>150 THEN
					ISNULL((
						(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
						/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000) * CASE WHEN dbo.ARTIKELDATEN.LE > 1 THEN 2 ELSE 1 END 
						), 0)
			END), 0)) AS ueber150


		FROM         dbo.DATA0006 INNER JOIN
							  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
							  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
							  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
							  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
							  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
		WHERE     (dbo.DATA0038.TTYPE = 2)
					AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103) 
					AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103) 
					AND dbo.DATA0034.DEPT_CODE = 'GIES-01-01'
	END

	IF @Case_ = 'MaterialverbrauchDurchsatzProMonat'
	BEGIN
		--DECLARE 
		--@para1 varchar(255),
		--@para2 varchar(255),
		--@para4 varchar(255),
		--@para5 varchar(255)
		--SET @para1 = 'SES Festresist-Stripper' 
		--SET @para2 = 'BLHO-01-01' 
		--SET @para4 = '01.2015' 
		--SET @para5 = '03.2015' 

		DECLARE @tblJahrMonatDurchsatz table(
												Jahr int, 
												Monat int, 
												JahrMonat varchar(7), 
												MonatJahr varchar(15), 
												DEPT_CODE char(10), 
												Durchsatz NUMERIC(10, 4),
												BzgGr varchar(20) 
											)

		DECLARE 
			@MonatJahrDS varchar(7),
			@iExitLoopDS INT

		SET @MonatJahrDS = @para4
		SET @iExitLoopDS = 1

		DECLARE
			@JahrDS INT,
			@MonatDS INT




		WHILE @iExitLoopDS < 60 AND @MonatJahrDS <> @para5 
		BEGIN


			-----------------------------------------------------------------------------------------------------
			-----------------------------------------------------------------------------------------------------
			IF @para1=''
			BEGIN
				INSERT @tblJahrMonatDurchsatz(Jahr, Monat, JahrMonat, MonatJahr, DEPT_CODE, Durchsatz, BzgGr)
				SELECT
					CAST(RIGHT(RTRIM(@MonatJahrDS), 4) AS INT),
					CAST(LEFT(RTRIM(@MonatJahrDS), 2) AS INT),
					RIGHT(RTRIM(@MonatJahrDS), 4) + '.' + LEFT(RTRIM(@MonatJahrDS), 2) AS JahrMonat,
					--@MonatJahr AS MonatJahr,
					DATENAME(month, CAST(('01.' + LEFT(RTRIM(@MonatJahrDS), 2) + '.2000') AS smalldatetime)) + ' ' 
							+ SUBSTRING(RIGHT(RTRIM(@MonatJahrDS), 4), 3,2) AS MonatJahr,
					@para2 AS DEPT_CODE,
					ISNULL((
						SELECT     
							SUM(
								(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
								/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000)) 
							AS RES
						FROM         dbo.DATA0006 INNER JOIN
									  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
									  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
									  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
						WHERE    
									YEAR(dbo.DATA0048.TDATE) = CAST(RIGHT(RTRIM(@MonatJahrDS), 4) AS INT)  
									AND MONTH(dbo.DATA0048.TDATE)= CAST(LEFT(RTRIM(@MonatJahrDS), 2) AS INT)
									AND dbo.DATA0034.DEPT_CODE = @para2
					), 0) AS Durchsatz,
					'ZU m2' AS BzgGr
			END
			-----------------------------------------------------------------------------------------------------
			-----------------------------------------------------------------------------------------------------
			IF @para1='SES Festresist-Stripper'
			BEGIN
				INSERT @tblJahrMonatDurchsatz(Jahr, Monat, JahrMonat, MonatJahr, DEPT_CODE, Durchsatz, BzgGr)
				SELECT
					CAST(RIGHT(RTRIM(@MonatJahrDS), 4) AS INT),
					CAST(LEFT(RTRIM(@MonatJahrDS), 2) AS INT),
					RIGHT(RTRIM(@MonatJahrDS), 4) + '.' + LEFT(RTRIM(@MonatJahrDS), 2) AS JahrMonat,
					--@MonatJahr AS MonatJahr,
					DATENAME(month, CAST(('01.' + LEFT(RTRIM(@MonatJahrDS), 2) + '.2000') AS smalldatetime)) + ' ' 
							+ SUBSTRING(RIGHT(RTRIM(@MonatJahrDS), 4), 3,2) AS MonatJahr,
					@para2 AS DEPT_CODE,
					ISNULL((
						SELECT
							SUM(
								(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
								/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000))
							AS RES
						FROM         dbo.DATA0006 INNER JOIN
											  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
											  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
											  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
											  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
											  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
						WHERE     (dbo.DATA0038.TTYPE = 2)
									AND YEAR(dbo.DATA0048.TDATE) = CAST(RIGHT(RTRIM(@MonatJahrDS), 4) AS INT)  
									AND MONTH(dbo.DATA0048.TDATE)= CAST(LEFT(RTRIM(@MonatJahrDS), 2) AS INT)
									AND LEFT(dbo.DATA0034.DEPT_CODE, 4) IN ('ÄTZA', 'STSN')
									AND (CHARINDEX('F', dbo.DATA0038.PARAMETER_2)>1 OR dbo.DATA0038.PARAMETER_2='' OR dbo.DATA0038.PARAMETER_2='.')
					), 0) AS Durchsatz,
					'ZU m2' AS BzgGr
			END
			-----------------------------------------------------------------------------------------------------
			-----------------------------------------------------------------------------------------------------
			IF @para1='SES Ätzen alkalisch'
			BEGIN
				INSERT @tblJahrMonatDurchsatz(Jahr, Monat, JahrMonat, MonatJahr, DEPT_CODE, Durchsatz, BzgGr)
				SELECT
					CAST(RIGHT(RTRIM(@MonatJahrDS), 4) AS INT),
					CAST(LEFT(RTRIM(@MonatJahrDS), 2) AS INT),
					RIGHT(RTRIM(@MonatJahrDS), 4) + '.' + LEFT(RTRIM(@MonatJahrDS), 2) AS JahrMonat,
					--@MonatJahr AS MonatJahr,
					DATENAME(month, CAST(('01.' + LEFT(RTRIM(@MonatJahrDS), 2) + '.2000') AS smalldatetime)) + ' ' 
							+ SUBSTRING(RIGHT(RTRIM(@MonatJahrDS), 4), 3,2) AS MonatJahr,
					@para2 AS DEPT_CODE,
					ISNULL((
						SELECT
							SUM(
								(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
								/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000))
							AS RES
						FROM         dbo.DATA0006 INNER JOIN
											  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
											  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
											  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
											  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
											  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
						WHERE     (dbo.DATA0038.TTYPE = 2)
									AND YEAR(dbo.DATA0048.TDATE) = CAST(RIGHT(RTRIM(@MonatJahrDS), 4) AS INT)  
									AND MONTH(dbo.DATA0048.TDATE)= CAST(LEFT(RTRIM(@MonatJahrDS), 2) AS INT)
									AND LEFT(dbo.DATA0034.DEPT_CODE, 4) IN ('ÄTZA', 'STSN')
									AND (LEFT(dbo.DATA0038.PARAMETER_2, 3)='1.C' OR dbo.DATA0038.PARAMETER_2='' OR dbo.DATA0038.PARAMETER_2='.')
					), 0) AS Durchsatz,
					'ZU m2' AS BzgGr
			END
			-----------------------------------------------------------------------------------------------------
			-----------------------------------------------------------------------------------------------------
			IF @para1='SES Zinn-Stripper'
			BEGIN
				INSERT @tblJahrMonatDurchsatz(Jahr, Monat, JahrMonat, MonatJahr, DEPT_CODE, Durchsatz, BzgGr)
				SELECT
					CAST(RIGHT(RTRIM(@MonatJahrDS), 4) AS INT),
					CAST(LEFT(RTRIM(@MonatJahrDS), 2) AS INT),
					RIGHT(RTRIM(@MonatJahrDS), 4) + '.' + LEFT(RTRIM(@MonatJahrDS), 2) AS JahrMonat,
					--@MonatJahr AS MonatJahr,
					DATENAME(month, CAST(('01.' + LEFT(RTRIM(@MonatJahrDS), 2) + '.2000') AS smalldatetime)) + ' ' 
							+ SUBSTRING(RIGHT(RTRIM(@MonatJahrDS), 4), 3,2) AS MonatJahr,
					@para2 AS DEPT_CODE,
					ISNULL((
						SELECT
							SUM(
								(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
								/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000))
							AS RES
						FROM         dbo.DATA0006 INNER JOIN
											  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
											  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
											  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
											  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
											  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
						WHERE     (dbo.DATA0038.TTYPE = 2)
									AND YEAR(dbo.DATA0048.TDATE) = CAST(RIGHT(RTRIM(@MonatJahrDS), 4) AS INT)  
									AND MONTH(dbo.DATA0048.TDATE)= CAST(LEFT(RTRIM(@MonatJahrDS), 2) AS INT)
									AND LEFT(dbo.DATA0034.DEPT_CODE, 4) IN ('ÄTZA', 'STSN')
									AND (CHARINDEX('S', dbo.DATA0038.PARAMETER_2)>1 OR dbo.DATA0038.PARAMETER_2='' OR dbo.DATA0038.PARAMETER_2='.')
					), 0) AS Durchsatz,
					'ZU m2' AS BzgGr
			END
			-----------------------------------------------------------------------------------------------------
			-----------------------------------------------------------------------------------------------------
			IF @para1='Ätzen sauer'
			BEGIN
				INSERT @tblJahrMonatDurchsatz(Jahr, Monat, JahrMonat, MonatJahr, DEPT_CODE, Durchsatz, BzgGr)
				SELECT
					CAST(RIGHT(RTRIM(@MonatJahrDS), 4) AS INT),
					CAST(LEFT(RTRIM(@MonatJahrDS), 2) AS INT),
					RIGHT(RTRIM(@MonatJahrDS), 4) + '.' + LEFT(RTRIM(@MonatJahrDS), 2) AS JahrMonat,
					--@MonatJahr AS MonatJahr,
					DATENAME(month, CAST(('01.' + LEFT(RTRIM(@MonatJahrDS), 2) + '.2000') AS smalldatetime)) + ' ' 
							+ SUBSTRING(RIGHT(RTRIM(@MonatJahrDS), 4), 3,2) AS MonatJahr,
					@para2 AS DEPT_CODE,
					ISNULL((
						SELECT
							SUM(
								(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
								/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000))
							AS RES
						FROM         dbo.DATA0006 INNER JOIN
											  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
											  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
											  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
											  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
											  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
						WHERE     (dbo.DATA0038.TTYPE = 2)
									AND YEAR(dbo.DATA0048.TDATE) = CAST(RIGHT(RTRIM(@MonatJahrDS), 4) AS INT)  
									AND MONTH(dbo.DATA0048.TDATE)= CAST(LEFT(RTRIM(@MonatJahrDS), 2) AS INT)
									AND LEFT(dbo.DATA0034.DEPT_CODE, 5) IN ('ÄTZS-', ' ÄS-MA')
									AND (LEFT(dbo.DATA0038.PARAMETER_2, 3)='1.C' OR dbo.DATA0038.PARAMETER_2='' OR dbo.DATA0038.PARAMETER_2='.')
					), 0) AS Durchsatz,
					'ZU m2' AS BzgGr
			END
			-----------------------------------------------------------------------------------------------------
			-----------------------------------------------------------------------------------------------------
			IF @para1='Festresist-Stripper (ÄS)'
			BEGIN
				INSERT @tblJahrMonatDurchsatz(Jahr, Monat, JahrMonat, MonatJahr, DEPT_CODE, Durchsatz, BzgGr)
				SELECT
					CAST(RIGHT(RTRIM(@MonatJahrDS), 4) AS INT),
					CAST(LEFT(RTRIM(@MonatJahrDS), 2) AS INT),
					RIGHT(RTRIM(@MonatJahrDS), 4) + '.' + LEFT(RTRIM(@MonatJahrDS), 2) AS JahrMonat,
					--@MonatJahr AS MonatJahr,
					DATENAME(month, CAST(('01.' + LEFT(RTRIM(@MonatJahrDS), 2) + '.2000') AS smalldatetime)) + ' ' 
							+ SUBSTRING(RIGHT(RTRIM(@MonatJahrDS), 4), 3,2) AS MonatJahr,
					@para2 AS DEPT_CODE,
					ISNULL((
						SELECT
							SUM(
								(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
								/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000))
							AS RES
						FROM         dbo.DATA0006 INNER JOIN
											  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
											  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
											  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
											  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
											  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
						WHERE     (dbo.DATA0038.TTYPE = 2)
									AND YEAR(dbo.DATA0048.TDATE) = CAST(RIGHT(RTRIM(@MonatJahrDS), 4) AS INT)  
									AND MONTH(dbo.DATA0048.TDATE)= CAST(LEFT(RTRIM(@MonatJahrDS), 2) AS INT)
									AND LEFT(dbo.DATA0034.DEPT_CODE, 5) IN ('ÄTZS-', ' ÄS-MA')
									AND (
											(CHARINDEX('F', dbo.DATA0038.PARAMETER_2)>1) --Enthält Strippen Festresist
											OR 
											(dbo.DATA0006.ROOT_PTR=0 AND (dbo.ARTIKELDATEN.GalvAG<>'Ohne' OR dbo.ARTIKELDATEN.GalvAU<>'Ohne')) --Hauptauftrag enthält Gold oder Silber
										)	
					), 0) AS Durchsatz,
					'ZU m2' AS BzgGr
			END
			-----------------------------------------------------------------------------------------------------
			-----------------------------------------------------------------------------------------------------
			IF @para1='FD Entwickler Innenlagen'
			BEGIN
				INSERT @tblJahrMonatDurchsatz(Jahr, Monat, JahrMonat, MonatJahr, DEPT_CODE, Durchsatz, BzgGr)
				SELECT
					CAST(RIGHT(RTRIM(@MonatJahrDS), 4) AS INT),
					CAST(LEFT(RTRIM(@MonatJahrDS), 2) AS INT),
					RIGHT(RTRIM(@MonatJahrDS), 4) + '.' + LEFT(RTRIM(@MonatJahrDS), 2) AS JahrMonat,
					--@MonatJahr AS MonatJahr,
					DATENAME(month, CAST(('01.' + LEFT(RTRIM(@MonatJahrDS), 2) + '.2000') AS smalldatetime)) + ' ' 
							+ SUBSTRING(RIGHT(RTRIM(@MonatJahrDS), 4), 3,2) AS MonatJahr,
					@para2 AS DEPT_CODE,
					ISNULL((
						SELECT
							SUM(
								(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
								/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000))
							AS RES
						FROM         dbo.DATA0006 INNER JOIN
											  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
											  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
											  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
											  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
											  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
						WHERE     (dbo.DATA0038.TTYPE = 2)
									AND YEAR(dbo.DATA0048.TDATE) = CAST(RIGHT(RTRIM(@MonatJahrDS), 4) AS INT)  
									AND MONTH(dbo.DATA0048.TDATE)= CAST(LEFT(RTRIM(@MonatJahrDS), 2) AS INT)
									AND LEFT(dbo.DATA0034.DEPT_CODE, 5) IN ('ÄTZS-', ' ÄS-MA')
									AND (LEFT(dbo.DATA0038.PARAMETER_2, 3)='1.C' OR dbo.DATA0038.PARAMETER_2='' OR dbo.DATA0038.PARAMETER_2='.')
					), 0) AS Durchsatz,
					'ZU m2' AS BzgGr
			END
			-----------------------------------------------------------------------------------------------------
			-----------------------------------------------------------------------------------------------------
			IF @para1='AOI'
			BEGIN
				INSERT @tblJahrMonatDurchsatz(Jahr, Monat, JahrMonat, MonatJahr, DEPT_CODE, Durchsatz, BzgGr)
				SELECT
					CAST(RIGHT(RTRIM(@MonatJahrDS), 4) AS INT),
					CAST(LEFT(RTRIM(@MonatJahrDS), 2) AS INT),
					RIGHT(RTRIM(@MonatJahrDS), 4) + '.' + LEFT(RTRIM(@MonatJahrDS), 2) AS JahrMonat,
					--@MonatJahr AS MonatJahr,
					DATENAME(month, CAST(('01.' + LEFT(RTRIM(@MonatJahrDS), 2) + '.2000') AS smalldatetime)) + ' ' 
							+ SUBSTRING(RIGHT(RTRIM(@MonatJahrDS), 4), 3,2) AS MonatJahr,
					@para2 AS DEPT_CODE,
					ISNULL((
						SELECT     
							SUM(
								CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT)) 
							AS RES
						FROM         dbo.DATA0006 INNER JOIN
									  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
									  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
									  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
						WHERE    
									YEAR(dbo.DATA0048.TDATE) = CAST(RIGHT(RTRIM(@MonatJahrDS), 4) AS INT)  
									AND MONTH(dbo.DATA0048.TDATE)= CAST(LEFT(RTRIM(@MonatJahrDS), 2) AS INT)
									AND dbo.DATA0034.DEPT_CODE = 'AOI-01-01'
					), 0) AS Durchsatz,
					'Anz. ZU' AS BzgGr
			END
			-----------------------------------------------------------------------------------------------------
			-----------------------------------------------------------------------------------------------------
			IF @para1='Au-Goldbad'
			BEGIN
				INSERT @tblJahrMonatDurchsatz(Jahr, Monat, JahrMonat, MonatJahr, DEPT_CODE, Durchsatz, BzgGr)
				SELECT
					CAST(RIGHT(RTRIM(@MonatJahrDS), 4) AS INT),
					CAST(LEFT(RTRIM(@MonatJahrDS), 2) AS INT),
					RIGHT(RTRIM(@MonatJahrDS), 4) + '.' + LEFT(RTRIM(@MonatJahrDS), 2) AS JahrMonat,
					--@MonatJahr AS MonatJahr,
					DATENAME(month, CAST(('01.' + LEFT(RTRIM(@MonatJahrDS), 2) + '.2000') AS smalldatetime)) + ' ' 
							+ SUBSTRING(RIGHT(RTRIM(@MonatJahrDS), 4), 3,2) AS MonatJahr,
					@para2 AS DEPT_CODE,
					ISNULL((
						SELECT     
							SUM(
								(CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT))*dbo.ARTIKELDATEN.CHAuFl
							) AS RES
						FROM         dbo.DATA0006 INNER JOIN
									  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
									  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
									  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
						WHERE    
									YEAR(dbo.DATA0048.TDATE) = CAST(RIGHT(RTRIM(@MonatJahrDS), 4) AS INT)  
									AND MONTH(dbo.DATA0048.TDATE)= CAST(LEFT(RTRIM(@MonatJahrDS), 2) AS INT)
									AND dbo.DATA0034.DEPT_CODE = 'AOI-01-01'
					), 0) AS Durchsatz,
					'akt. Au-Fl dm2' AS BzgGr
			END
			-----------------------------------------------------------------------------------------------------
			-----------------------------------------------------------------------------------------------------
			IF @para1='Au-Goldbad Rest'
			BEGIN
				INSERT @tblJahrMonatDurchsatz(Jahr, Monat, JahrMonat, MonatJahr, DEPT_CODE, Durchsatz, BzgGr)
				SELECT
					CAST(RIGHT(RTRIM(@MonatJahrDS), 4) AS INT),
					CAST(LEFT(RTRIM(@MonatJahrDS), 2) AS INT),
					RIGHT(RTRIM(@MonatJahrDS), 4) + '.' + LEFT(RTRIM(@MonatJahrDS), 2) AS JahrMonat,
					--@MonatJahr AS MonatJahr,
					DATENAME(month, CAST(('01.' + LEFT(RTRIM(@MonatJahrDS), 2) + '.2000') AS smalldatetime)) + ' ' 
							+ SUBSTRING(RIGHT(RTRIM(@MonatJahrDS), 4), 3,2) AS MonatJahr,
					@para2 AS DEPT_CODE,
					ISNULL((
						SELECT
							SUM(
								(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
								/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000))
							AS RES
						FROM         dbo.DATA0006 INNER JOIN
											  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
											  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
											  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
											  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
											  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
						WHERE     (dbo.DATA0038.TTYPE = 2)
									AND YEAR(dbo.DATA0048.TDATE) = CAST(RIGHT(RTRIM(@MonatJahrDS), 4) AS INT)  
									AND MONTH(dbo.DATA0048.TDATE)= CAST(LEFT(RTRIM(@MonatJahrDS), 2) AS INT)
									AND dbo.DATA0034.DEPT_CODE = 'CGIN-01-01'
					), 0) AS Durchsatz,
					'ZU m2' AS BzgGr
			END
			-----------------------------------------------------------------------------------------------------
			-----------------------------------------------------------------------------------------------------
			IF @para1='Au-Goldbad Vorreinigung'
			BEGIN
				INSERT @tblJahrMonatDurchsatz(Jahr, Monat, JahrMonat, MonatJahr, DEPT_CODE, Durchsatz, BzgGr)
				SELECT
					CAST(RIGHT(RTRIM(@MonatJahrDS), 4) AS INT),
					CAST(LEFT(RTRIM(@MonatJahrDS), 2) AS INT),
					RIGHT(RTRIM(@MonatJahrDS), 4) + '.' + LEFT(RTRIM(@MonatJahrDS), 2) AS JahrMonat,
					--@MonatJahr AS MonatJahr,
					DATENAME(month, CAST(('01.' + LEFT(RTRIM(@MonatJahrDS), 2) + '.2000') AS smalldatetime)) + ' ' 
							+ SUBSTRING(RIGHT(RTRIM(@MonatJahrDS), 4), 3,2) AS MonatJahr,
					@para2 AS DEPT_CODE,
					ISNULL((
						SELECT
							SUM(
								(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
								/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000))
							AS RES
						FROM         dbo.DATA0006 INNER JOIN
											  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
											  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
											  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
											  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
											  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
						WHERE     (dbo.DATA0038.TTYPE = 2)
									AND YEAR(dbo.DATA0048.TDATE) = CAST(RIGHT(RTRIM(@MonatJahrDS), 4) AS INT)  
									AND MONTH(dbo.DATA0048.TDATE)= CAST(LEFT(RTRIM(@MonatJahrDS), 2) AS INT)
									AND LEFT(dbo.DATA0034.DEPT_CODE, 4) = 'CGIN'
					), 0) AS Durchsatz,
					'ZU m2' AS BzgGr
			END
			-----------------------------------------------------------------------------------------------------
			-----------------------------------------------------------------------------------------------------
			IF @para1='1'
			BEGIN
				SELECT 1
			END
			-----------------------------------------------------------------------------------------------------
			-----------------------------------------------------------------------------------------------------
			IF @para1='1'
			BEGIN
				SELECT 1
			END
			-----------------------------------------------------------------------------------------------------
			-----------------------------------------------------------------------------------------------------
			IF @para1='1'
			BEGIN
				SELECT 1
			END
			-----------------------------------------------------------------------------------------------------
			-----------------------------------------------------------------------------------------------------

			SET @JahrDS = CAST(RIGHT(RTRIM(@MonatJahrDS), 4) AS INT)
			SET @MonatDS = CAST(LEFT(RTRIM(@MonatJahrDS), 2) AS INT)
			IF @MonatDS > 11
			BEGIN
				SET @MonatDS = 1
				SET @JahrDS = @JahrDS + 1
			END
			ELSE
			BEGIN
				SET @MonatDS = @MonatDS + 1
			END

			SET @MonatJahrDS = CASE WHEN @MonatDS<10 THEN '0' + CAST(@MonatDS AS varchar(1)) ELSE CAST(@MonatDS AS varchar(2)) END 
							+ '.' + CAST(@JahrDS AS varchar(4))
			SET @iExitLoopDS = @iExitLoopDS + 1
		END

		-----------------------------------------------------------------------------------------------------
		-----------------------------------------------------------------------------------------------------
		IF @para1=''
		BEGIN
			INSERT @tblJahrMonatDurchsatz(Jahr, Monat, JahrMonat, MonatJahr, DEPT_CODE, Durchsatz, BzgGr)
			SELECT
				CAST(RIGHT(RTRIM(@MonatJahrDS), 4) AS INT),
				CAST(LEFT(RTRIM(@MonatJahrDS), 2) AS INT),
				RIGHT(RTRIM(@MonatJahrDS), 4) + '.' + LEFT(RTRIM(@MonatJahrDS), 2) AS JahrMonat,
				@MonatJahrDS AS MonatJahr,
				@para2 AS DEPT_CODE,
				ISNULL((
					SELECT     
						SUM(
							(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
							/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000)) 
						AS RES
					FROM         dbo.DATA0006 INNER JOIN
								  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
								  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
								  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
					WHERE    
								YEAR(dbo.DATA0048.TDATE) = CAST(RIGHT(RTRIM(@MonatJahrDS), 4) AS INT)  
								AND MONTH(dbo.DATA0048.TDATE)= CAST(LEFT(RTRIM(@MonatJahrDS), 2) AS INT)
								AND dbo.DATA0034.DEPT_CODE = @para2
				), 0) AS Durchsatz,
				'ZU m2' AS BzgGr
		END
		-----------------------------------------------------------------------------------------------------
		-----------------------------------------------------------------------------------------------------
		IF @para1='SES Festresist-Stripper'
		BEGIN
			INSERT @tblJahrMonatDurchsatz(Jahr, Monat, JahrMonat, MonatJahr, DEPT_CODE, Durchsatz, BzgGr)
			SELECT
				CAST(RIGHT(RTRIM(@MonatJahrDS), 4) AS INT),
				CAST(LEFT(RTRIM(@MonatJahrDS), 2) AS INT),
				RIGHT(RTRIM(@MonatJahrDS), 4) + '.' + LEFT(RTRIM(@MonatJahrDS), 2) AS JahrMonat,
				--@MonatJahr AS MonatJahr,
				DATENAME(month, CAST(('01.' + LEFT(RTRIM(@MonatJahrDS), 2) + '.2000') AS smalldatetime)) + ' ' 
						+ SUBSTRING(RIGHT(RTRIM(@MonatJahrDS), 4), 3,2) AS MonatJahr,
				@para2 AS DEPT_CODE,
				ISNULL((
					SELECT
						SUM(
							(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
							/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000))
						AS RES
					FROM         dbo.DATA0006 INNER JOIN
										  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
										  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
										  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
										  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
										  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
					WHERE     (dbo.DATA0038.TTYPE = 2)
								AND YEAR(dbo.DATA0048.TDATE) = CAST(RIGHT(RTRIM(@MonatJahrDS), 4) AS INT)  
								AND MONTH(dbo.DATA0048.TDATE)= CAST(LEFT(RTRIM(@MonatJahrDS), 2) AS INT)
								AND LEFT(dbo.DATA0034.DEPT_CODE, 4) IN ('ÄTZA', 'STSN')
								AND (CHARINDEX('F', dbo.DATA0038.PARAMETER_2)>1 OR dbo.DATA0038.PARAMETER_2='' OR dbo.DATA0038.PARAMETER_2='.')
				), 0) AS Durchsatz,
				'ZU m2' AS BzgGr
		END
		-----------------------------------------------------------------------------------------------------
		-----------------------------------------------------------------------------------------------------
		IF @para1='SES Ätzen alkalisch'
		BEGIN
			INSERT @tblJahrMonatDurchsatz(Jahr, Monat, JahrMonat, MonatJahr, DEPT_CODE, Durchsatz, BzgGr)
			SELECT
				CAST(RIGHT(RTRIM(@MonatJahrDS), 4) AS INT),
				CAST(LEFT(RTRIM(@MonatJahrDS), 2) AS INT),
				RIGHT(RTRIM(@MonatJahrDS), 4) + '.' + LEFT(RTRIM(@MonatJahrDS), 2) AS JahrMonat,
				--@MonatJahr AS MonatJahr,
				DATENAME(month, CAST(('01.' + LEFT(RTRIM(@MonatJahrDS), 2) + '.2000') AS smalldatetime)) + ' ' 
						+ SUBSTRING(RIGHT(RTRIM(@MonatJahrDS), 4), 3,2) AS MonatJahr,
				@para2 AS DEPT_CODE,
				ISNULL((
					SELECT
						SUM(
							(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
							/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000))
						AS RES
					FROM         dbo.DATA0006 INNER JOIN
										  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
										  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
										  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
										  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
										  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
					WHERE     (dbo.DATA0038.TTYPE = 2)
								AND YEAR(dbo.DATA0048.TDATE) = CAST(RIGHT(RTRIM(@MonatJahrDS), 4) AS INT)  
								AND MONTH(dbo.DATA0048.TDATE)= CAST(LEFT(RTRIM(@MonatJahrDS), 2) AS INT)
								AND LEFT(dbo.DATA0034.DEPT_CODE, 4) IN ('ÄTZA', 'STSN')
								AND (LEFT(dbo.DATA0038.PARAMETER_2, 3)='1.C' OR dbo.DATA0038.PARAMETER_2='' OR dbo.DATA0038.PARAMETER_2='.')
				), 0) AS Durchsatz,
				'ZU m2' AS BzgGr
		END
		-----------------------------------------------------------------------------------------------------
		-----------------------------------------------------------------------------------------------------
		IF @para1='SES Zinn-Stripper'
		BEGIN
			INSERT @tblJahrMonatDurchsatz(Jahr, Monat, JahrMonat, MonatJahr, DEPT_CODE, Durchsatz, BzgGr)
			SELECT
				CAST(RIGHT(RTRIM(@MonatJahrDS), 4) AS INT),
				CAST(LEFT(RTRIM(@MonatJahrDS), 2) AS INT),
				RIGHT(RTRIM(@MonatJahrDS), 4) + '.' + LEFT(RTRIM(@MonatJahrDS), 2) AS JahrMonat,
				--@MonatJahr AS MonatJahr,
				DATENAME(month, CAST(('01.' + LEFT(RTRIM(@MonatJahrDS), 2) + '.2000') AS smalldatetime)) + ' ' 
						+ SUBSTRING(RIGHT(RTRIM(@MonatJahrDS), 4), 3,2) AS MonatJahr,
				@para2 AS DEPT_CODE,
				ISNULL((
					SELECT
						SUM(
							(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
							/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000))
						AS RES
					FROM         dbo.DATA0006 INNER JOIN
										  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
										  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
										  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
										  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
										  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
					WHERE     (dbo.DATA0038.TTYPE = 2)
								AND YEAR(dbo.DATA0048.TDATE) = CAST(RIGHT(RTRIM(@MonatJahrDS), 4) AS INT)  
								AND MONTH(dbo.DATA0048.TDATE)= CAST(LEFT(RTRIM(@MonatJahrDS), 2) AS INT)
								AND LEFT(dbo.DATA0034.DEPT_CODE, 4) IN ('ÄTZA', 'STSN')
								AND (CHARINDEX('S', dbo.DATA0038.PARAMETER_2)>1 OR dbo.DATA0038.PARAMETER_2='' OR dbo.DATA0038.PARAMETER_2='.')
				), 0) AS Durchsatz,
				'ZU m2' AS BzgGr
		END
		-----------------------------------------------------------------------------------------------------
		-----------------------------------------------------------------------------------------------------
		IF @para1='Ätzen sauer'
		BEGIN
			INSERT @tblJahrMonatDurchsatz(Jahr, Monat, JahrMonat, MonatJahr, DEPT_CODE, Durchsatz, BzgGr)
			SELECT
				CAST(RIGHT(RTRIM(@MonatJahrDS), 4) AS INT),
				CAST(LEFT(RTRIM(@MonatJahrDS), 2) AS INT),
				RIGHT(RTRIM(@MonatJahrDS), 4) + '.' + LEFT(RTRIM(@MonatJahrDS), 2) AS JahrMonat,
				--@MonatJahr AS MonatJahr,
				DATENAME(month, CAST(('01.' + LEFT(RTRIM(@MonatJahrDS), 2) + '.2000') AS smalldatetime)) + ' ' 
						+ SUBSTRING(RIGHT(RTRIM(@MonatJahrDS), 4), 3,2) AS MonatJahr,
				@para2 AS DEPT_CODE,
				ISNULL((
					SELECT
						SUM(
							(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
							/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000))
						AS RES
					FROM         dbo.DATA0006 INNER JOIN
										  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
										  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
										  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
										  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
										  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
					WHERE     (dbo.DATA0038.TTYPE = 2)
								AND YEAR(dbo.DATA0048.TDATE) = CAST(RIGHT(RTRIM(@MonatJahrDS), 4) AS INT)  
								AND MONTH(dbo.DATA0048.TDATE)= CAST(LEFT(RTRIM(@MonatJahrDS), 2) AS INT)
								AND LEFT(dbo.DATA0034.DEPT_CODE, 5) IN ('ÄTZS-', ' ÄS-MA')
								AND (LEFT(dbo.DATA0038.PARAMETER_2, 3)='1.C' OR dbo.DATA0038.PARAMETER_2='' OR dbo.DATA0038.PARAMETER_2='.')
				), 0) AS Durchsatz,
				'ZU m2' AS BzgGr
		END
		-----------------------------------------------------------------------------------------------------
		-----------------------------------------------------------------------------------------------------
		IF @para1='Festresist-Stripper (ÄS)'
		BEGIN
			INSERT @tblJahrMonatDurchsatz(Jahr, Monat, JahrMonat, MonatJahr, DEPT_CODE, Durchsatz, BzgGr)
			SELECT
				CAST(RIGHT(RTRIM(@MonatJahrDS), 4) AS INT),
				CAST(LEFT(RTRIM(@MonatJahrDS), 2) AS INT),
				RIGHT(RTRIM(@MonatJahrDS), 4) + '.' + LEFT(RTRIM(@MonatJahrDS), 2) AS JahrMonat,
				--@MonatJahr AS MonatJahr,
				DATENAME(month, CAST(('01.' + LEFT(RTRIM(@MonatJahrDS), 2) + '.2000') AS smalldatetime)) + ' ' 
						+ SUBSTRING(RIGHT(RTRIM(@MonatJahrDS), 4), 3,2) AS MonatJahr,
				@para2 AS DEPT_CODE,
				ISNULL((
					SELECT
						SUM(
							(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
							/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000))
						AS RES
					FROM         dbo.DATA0006 INNER JOIN
										  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
										  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
										  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
										  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
										  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
					WHERE     (dbo.DATA0038.TTYPE = 2)
								AND YEAR(dbo.DATA0048.TDATE) = CAST(RIGHT(RTRIM(@MonatJahrDS), 4) AS INT)  
								AND MONTH(dbo.DATA0048.TDATE)= CAST(LEFT(RTRIM(@MonatJahrDS), 2) AS INT)
								AND LEFT(dbo.DATA0034.DEPT_CODE, 5) IN ('ÄTZS-', ' ÄS-MA')
								AND (
										(CHARINDEX('F', dbo.DATA0038.PARAMETER_2)>1) --Enthält Strippen Festresist
										OR 
										(dbo.DATA0006.ROOT_PTR=0 AND (dbo.ARTIKELDATEN.GalvAG<>'Ohne' OR dbo.ARTIKELDATEN.GalvAU<>'Ohne')) --Hauptauftrag enthält Gold oder Silber
									)	
				), 0) AS Durchsatz,
				'ZU m2' AS BzgGr
		END
		-----------------------------------------------------------------------------------------------------
		-----------------------------------------------------------------------------------------------------
		IF @para1='FD Entwickler Innenlagen'
		BEGIN
			INSERT @tblJahrMonatDurchsatz(Jahr, Monat, JahrMonat, MonatJahr, DEPT_CODE, Durchsatz, BzgGr)
			SELECT
				CAST(RIGHT(RTRIM(@MonatJahrDS), 4) AS INT),
				CAST(LEFT(RTRIM(@MonatJahrDS), 2) AS INT),
				RIGHT(RTRIM(@MonatJahrDS), 4) + '.' + LEFT(RTRIM(@MonatJahrDS), 2) AS JahrMonat,
				--@MonatJahr AS MonatJahr,
				DATENAME(month, CAST(('01.' + LEFT(RTRIM(@MonatJahrDS), 2) + '.2000') AS smalldatetime)) + ' ' 
						+ SUBSTRING(RIGHT(RTRIM(@MonatJahrDS), 4), 3,2) AS MonatJahr,
				@para2 AS DEPT_CODE,
				ISNULL((
					SELECT
						SUM(
							(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
							/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000))
						AS RES
					FROM         dbo.DATA0006 INNER JOIN
										  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
										  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
										  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
										  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
										  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
					WHERE     (dbo.DATA0038.TTYPE = 2)
								AND YEAR(dbo.DATA0048.TDATE) = CAST(RIGHT(RTRIM(@MonatJahrDS), 4) AS INT)  
								AND MONTH(dbo.DATA0048.TDATE)= CAST(LEFT(RTRIM(@MonatJahrDS), 2) AS INT)
								AND LEFT(dbo.DATA0034.DEPT_CODE, 5) IN ('ÄTZS-', ' ÄS-MA')
								AND (LEFT(dbo.DATA0038.PARAMETER_2, 3)='1.C' OR dbo.DATA0038.PARAMETER_2='' OR dbo.DATA0038.PARAMETER_2='.')
				), 0) AS Durchsatz,
				'ZU m2' AS BzgGr
		END
		-----------------------------------------------------------------------------------------------------
		-----------------------------------------------------------------------------------------------------
		IF @para1='AOI'
		BEGIN
			INSERT @tblJahrMonatDurchsatz(Jahr, Monat, JahrMonat, MonatJahr, DEPT_CODE, Durchsatz, BzgGr)
			SELECT
				CAST(RIGHT(RTRIM(@MonatJahrDS), 4) AS INT),
				CAST(LEFT(RTRIM(@MonatJahrDS), 2) AS INT),
				RIGHT(RTRIM(@MonatJahrDS), 4) + '.' + LEFT(RTRIM(@MonatJahrDS), 2) AS JahrMonat,
				--@MonatJahr AS MonatJahr,
				DATENAME(month, CAST(('01.' + LEFT(RTRIM(@MonatJahrDS), 2) + '.2000') AS smalldatetime)) + ' ' 
						+ SUBSTRING(RIGHT(RTRIM(@MonatJahrDS), 4), 3,2) AS MonatJahr,
				@para2 AS DEPT_CODE,
				ISNULL((
					SELECT     
						SUM(
							CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT)) 
						AS RES
					FROM         dbo.DATA0006 INNER JOIN
								  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
								  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
								  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
					WHERE    
								YEAR(dbo.DATA0048.TDATE) = CAST(RIGHT(RTRIM(@MonatJahrDS), 4) AS INT)  
								AND MONTH(dbo.DATA0048.TDATE)= CAST(LEFT(RTRIM(@MonatJahrDS), 2) AS INT)
								AND dbo.DATA0034.DEPT_CODE = 'AOI-01-01'
				), 0) AS Durchsatz,
				'Anz. ZU' AS BzgGr
		END
		-----------------------------------------------------------------------------------------------------
		-----------------------------------------------------------------------------------------------------
		IF @para1='Au-Goldbad'
		BEGIN
			INSERT @tblJahrMonatDurchsatz(Jahr, Monat, JahrMonat, MonatJahr, DEPT_CODE, Durchsatz, BzgGr)
			SELECT
				CAST(RIGHT(RTRIM(@MonatJahrDS), 4) AS INT),
				CAST(LEFT(RTRIM(@MonatJahrDS), 2) AS INT),
				RIGHT(RTRIM(@MonatJahrDS), 4) + '.' + LEFT(RTRIM(@MonatJahrDS), 2) AS JahrMonat,
				--@MonatJahr AS MonatJahr,
				DATENAME(month, CAST(('01.' + LEFT(RTRIM(@MonatJahrDS), 2) + '.2000') AS smalldatetime)) + ' ' 
						+ SUBSTRING(RIGHT(RTRIM(@MonatJahrDS), 4), 3,2) AS MonatJahr,
				@para2 AS DEPT_CODE,
				ISNULL((
					SELECT     
						SUM(
							(CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT))*dbo.ARTIKELDATEN.CHAuFl
						) AS RES
					FROM         dbo.DATA0006 INNER JOIN
								  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
								  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
								  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
					WHERE    
								YEAR(dbo.DATA0048.TDATE) = CAST(RIGHT(RTRIM(@MonatJahrDS), 4) AS INT)  
								AND MONTH(dbo.DATA0048.TDATE)= CAST(LEFT(RTRIM(@MonatJahrDS), 2) AS INT)
								AND dbo.DATA0034.DEPT_CODE = 'CGIN-01-01'
				), 0) AS Durchsatz,
				'akt. Au-Fl dm2' AS BzgGr
		END
		-----------------------------------------------------------------------------------------------------
		-----------------------------------------------------------------------------------------------------
		IF @para1='Au-Goldbad Rest'
		BEGIN
			INSERT @tblJahrMonatDurchsatz(Jahr, Monat, JahrMonat, MonatJahr, DEPT_CODE, Durchsatz, BzgGr)
			SELECT
				CAST(RIGHT(RTRIM(@MonatJahrDS), 4) AS INT),
				CAST(LEFT(RTRIM(@MonatJahrDS), 2) AS INT),
				RIGHT(RTRIM(@MonatJahrDS), 4) + '.' + LEFT(RTRIM(@MonatJahrDS), 2) AS JahrMonat,
				--@MonatJahr AS MonatJahr,
				DATENAME(month, CAST(('01.' + LEFT(RTRIM(@MonatJahrDS), 2) + '.2000') AS smalldatetime)) + ' ' 
						+ SUBSTRING(RIGHT(RTRIM(@MonatJahrDS), 4), 3,2) AS MonatJahr,
				@para2 AS DEPT_CODE,
				ISNULL((
					SELECT
						SUM(
							(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
							/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000))
						AS RES
					FROM         dbo.DATA0006 INNER JOIN
										  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
										  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
										  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
										  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
										  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
					WHERE     (dbo.DATA0038.TTYPE = 2)
								AND YEAR(dbo.DATA0048.TDATE) = CAST(RIGHT(RTRIM(@MonatJahrDS), 4) AS INT)  
								AND MONTH(dbo.DATA0048.TDATE)= CAST(LEFT(RTRIM(@MonatJahrDS), 2) AS INT)
								AND dbo.DATA0034.DEPT_CODE = 'CGIN-01-01'
				), 0) AS Durchsatz,
				'ZU m2' AS BzgGr
		END
		-----------------------------------------------------------------------------------------------------
		-----------------------------------------------------------------------------------------------------
		IF @para1='Au-Goldbad Vorreinigung'
		BEGIN
			INSERT @tblJahrMonatDurchsatz(Jahr, Monat, JahrMonat, MonatJahr, DEPT_CODE, Durchsatz, BzgGr)
			SELECT
				CAST(RIGHT(RTRIM(@MonatJahrDS), 4) AS INT),
				CAST(LEFT(RTRIM(@MonatJahrDS), 2) AS INT),
				RIGHT(RTRIM(@MonatJahrDS), 4) + '.' + LEFT(RTRIM(@MonatJahrDS), 2) AS JahrMonat,
				--@MonatJahr AS MonatJahr,
				DATENAME(month, CAST(('01.' + LEFT(RTRIM(@MonatJahrDS), 2) + '.2000') AS smalldatetime)) + ' ' 
						+ SUBSTRING(RIGHT(RTRIM(@MonatJahrDS), 4), 3,2) AS MonatJahr,
				@para2 AS DEPT_CODE,
				ISNULL((
					SELECT
						SUM(
							(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
							/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000))
						AS RES
					FROM         dbo.DATA0006 INNER JOIN
										  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
										  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
										  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
										  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
										  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
					WHERE     (dbo.DATA0038.TTYPE = 2)
								AND YEAR(dbo.DATA0048.TDATE) = CAST(RIGHT(RTRIM(@MonatJahrDS), 4) AS INT)  
								AND MONTH(dbo.DATA0048.TDATE)= CAST(LEFT(RTRIM(@MonatJahrDS), 2) AS INT)
								AND LEFT(dbo.DATA0034.DEPT_CODE, 4) = 'CGIN'
				), 0) AS Durchsatz,
				'ZU m2' AS BzgGr
		END
		-----------------------------------------------------------------------------------------------------
		-----------------------------------------------------------------------------------------------------
		IF @para1='1'
		BEGIN
				SELECT 1
		END
		-----------------------------------------------------------------------------------------------------
		-----------------------------------------------------------------------------------------------------
		IF @para1='1'
		BEGIN
				SELECT 1
		END
		-----------------------------------------------------------------------------------------------------
		-----------------------------------------------------------------------------------------------------
		IF @para1='1'
		BEGIN
				SELECT 1
		END
		-----------------------------------------------------------------------------------------------------
		-----------------------------------------------------------------------------------------------------
		IF @para1='1'
		BEGIN
				SELECT 1
		END
		-----------------------------------------------------------------------------------------------------
		-----------------------------------------------------------------------------------------------------



		----------------------------------------------------------------------------------
		----------------------------------------------------------------------------------
		--Gießen
		IF @para1='Gießlinie'
		BEGIN
			WHILE @iExitLoopDS < 60 AND @MonatJahrDS <> @para5 
			BEGIN
				INSERT @tblJahrMonatDurchsatz(Jahr, Monat, JahrMonat, MonatJahr, DEPT_CODE, Durchsatz, BzgGr)
				SELECT
					CAST(RIGHT(RTRIM(@MonatJahrDS), 4) AS INT),
					CAST(LEFT(RTRIM(@MonatJahrDS), 2) AS INT),
					RIGHT(RTRIM(@MonatJahrDS), 4) + '.' + LEFT(RTRIM(@MonatJahrDS), 2) AS JahrMonat,
					--@MonatJahr AS MonatJahr,
					DATENAME(month, CAST(('01.' + LEFT(RTRIM(@MonatJahrDS), 2) + '.2000') AS smalldatetime)) + ' ' 
							+ SUBSTRING(RIGHT(RTRIM(@MonatJahrDS), 4), 3,2) AS MonatJahr,
					@para2 AS DEPT_CODE,
					ISNULL((
						SELECT
							SUM(
								(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
								/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000) * CASE WHEN dbo.ARTIKELDATEN.LE > 1 THEN 2 ELSE 1 END 
								) AS RES
						FROM         dbo.DATA0006 INNER JOIN
											  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
											  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
											  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
											  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
											  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
						WHERE     (dbo.DATA0038.TTYPE = 2)
									AND YEAR(dbo.DATA0048.TDATE) = CAST(RIGHT(RTRIM(@MonatJahrDS), 4) AS INT)  
									AND MONTH(dbo.DATA0048.TDATE)= CAST(LEFT(RTRIM(@MonatJahrDS), 2) AS INT)
									AND dbo.DATA0034.DEPT_CODE = 'GIES-01-01'
					), 0) AS Durchsatz,
					'Obfl. m2' AS BzgGr

				SET @JahrDS = CAST(RIGHT(RTRIM(@MonatJahrDS), 4) AS INT)
				SET @MonatDS = CAST(LEFT(RTRIM(@MonatJahrDS), 2) AS INT)
				IF @MonatDS > 11
				BEGIN
					SET @MonatDS = 1
					SET @JahrDS = @JahrDS + 1
				END
				ELSE
				BEGIN
					SET @MonatDS = @MonatDS + 1
				END

				SET @MonatJahrDS = CASE WHEN @MonatDS<10 THEN '0' + CAST(@MonatDS AS varchar(1)) ELSE CAST(@MonatDS AS varchar(2)) END 
								+ '.' + CAST(@JahrDS AS varchar(4))
				SET @iExitLoopDS = @iExitLoopDS + 1
			END

			INSERT @tblJahrMonatDurchsatz(Jahr, Monat, JahrMonat, MonatJahr, DEPT_CODE, Durchsatz, BzgGr)
			SELECT
				CAST(RIGHT(RTRIM(@MonatJahrDS), 4) AS INT),
				CAST(LEFT(RTRIM(@MonatJahrDS), 2) AS INT),
				RIGHT(RTRIM(@MonatJahrDS), 4) + '.' + LEFT(RTRIM(@MonatJahrDS), 2) AS JahrMonat,
				@MonatJahrDS AS MonatJahr,
				@para2 AS DEPT_CODE,
				ISNULL((
					SELECT
						SUM(
							(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
							/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000) * CASE WHEN dbo.ARTIKELDATEN.LE > 1 THEN 2 ELSE 1 END 
							) AS RES
					FROM         dbo.DATA0006 INNER JOIN
										  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
										  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
										  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
										  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
										  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
					WHERE     (dbo.DATA0038.TTYPE = 2)
								AND YEAR(dbo.DATA0048.TDATE) = CAST(RIGHT(RTRIM(@MonatJahrDS), 4) AS INT)  
								AND MONTH(dbo.DATA0048.TDATE)= CAST(LEFT(RTRIM(@MonatJahrDS), 2) AS INT)
								AND dbo.DATA0034.DEPT_CODE = 'GIES-01-01'
				), 0) AS Durchsatz,
				'Obfl. m2' AS BzgGr
		END
		----------------------------------------------------------------------------------
		----------------------------------------------------------------------------------


		SELECT * FROM @tblJahrMonatDurchsatz AS tblJahrMonatDurchsatz
	END

	IF @Case_ = 'Materialverteilung_groesser100Proz'
	BEGIN
		SELECT
			*
		FROM
		(
			SELECT
				D17_PTR,
				Bezeichnung,
				(
					SELECT     SUM(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent) AS RES
					FROM         dbo.DATA0017 INNER JOIN
										  LIVE2.dbo.NachKalk_MatVerteilung ON dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
					WHERE     (dbo.DATA0017.RKEY = D17_Grp.D17_PTR)
				) AS SummeVerteilung
			FROM
			(
				SELECT
					dbo.DATA0017.RKEY AS D17_PTR,
					dbo.DATA0017.INV_PART_DESCRIPTION AS Bezeichnung
				FROM         dbo.DATA0017 INNER JOIN
									  LIVE2.dbo.NachKalk_MatVerteilung ON dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
				--WHERE     (LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent > 0) AND (LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent < 100)
				WHERE dbo.DATA0017.ACTIVE_FLAG='Y'
				GROUP BY dbo.DATA0017.RKEY, dbo.DATA0017.INV_PART_DESCRIPTION
			) AS D17_Grp
		) AS D17_Grp_End
		--WHERE SummeVerteilung<>100
		WHERE SummeVerteilung>0 AND SummeVerteilung<>100
		ORDER BY SummeVerteilung DESC
	END

	IF @Case_ = 'Materialverteilung'
	BEGIN
		SELECT TOP 1 VerbrauchSOLL, Verteilung_Prozent, KSMaterial
		FROM LIVE2.dbo.NachKalk_MatVerteilung 
		WHERE Anlage_PTR=CAST(@para1 AS INT)  AND D17_PTR=CAST(@para2 AS INT) 
	END

	IF @Case_ = 'MaterialverbrauchProArtikelStandard'
	BEGIN

		DECLARE @tblJahrMonat table(Jahr int, Monat int, JahrMonat varchar(7), MonatJahr varchar(15), Anlage_PTR int, Durchsatz NUMERIC(10, 4))

		DECLARE 
			@MonatJahr varchar(7),
			@iExitLoop INT

		SET @MonatJahr = @para4
		SET @iExitLoop = 1

		WHILE @iExitLoop < 60 AND @MonatJahr <> @para5 
		BEGIN
			INSERT @tblJahrMonat(Jahr, Monat, JahrMonat, MonatJahr, Anlage_PTR, Durchsatz)
			SELECT
				CAST(RIGHT(RTRIM(@MonatJahr), 4) AS INT),
				CAST(LEFT(RTRIM(@MonatJahr), 2) AS INT),
				RIGHT(RTRIM(@MonatJahr), 4) + '.' + LEFT(RTRIM(@MonatJahr), 2) AS JahrMonat,
				--@MonatJahr AS MonatJahr,
				DATENAME(month, CAST(('01.' + LEFT(RTRIM(@MonatJahr), 2) + '.2000') AS smalldatetime)) + ' ' 
						+ SUBSTRING(RIGHT(RTRIM(@MonatJahr), 4), 3,2) AS MonatJahr,
				CAST(@para3 AS INT) AS Anlage_PTR,
				0 AS Durchsatz

			DECLARE
				@Jahr INT,
				@Monat INT
			SET @Jahr = CAST(RIGHT(RTRIM(@MonatJahr), 4) AS INT)
			SET @Monat = CAST(LEFT(RTRIM(@MonatJahr), 2) AS INT)
			IF @Monat > 11
			BEGIN
				SET @Monat = 1
				SET @Jahr = @Jahr + 1
			END
			ELSE
			BEGIN
				SET @Monat = @Monat + 1
			END

			SET @MonatJahr = CASE WHEN @Monat<10 THEN '0' + CAST(@Monat AS varchar(1)) ELSE CAST(@Monat AS varchar(2)) END 
							+ '.' + CAST(@Jahr AS varchar(4))
			SET @iExitLoop = @iExitLoop + 1
		END
		INSERT @tblJahrMonat(Jahr, Monat, JahrMonat, MonatJahr, Anlage_PTR, Durchsatz)
		SELECT
			CAST(RIGHT(RTRIM(@MonatJahr), 4) AS INT),
			CAST(LEFT(RTRIM(@MonatJahr), 2) AS INT),
			RIGHT(RTRIM(@MonatJahr), 4) + '.' + LEFT(RTRIM(@MonatJahr), 2) AS JahrMonat,
			--@MonatJahr AS MonatJahr,
			DATENAME(month, CAST(('01.' + LEFT(RTRIM(@MonatJahr), 2) + '.2000') AS smalldatetime)) + ' ' 
					+ SUBSTRING(RIGHT(RTRIM(@MonatJahr), 4), 3,2) AS MonatJahr,
			CAST(@para3 AS INT) AS Anlage_PTR,
			0 AS Durchsatz

		--SELECT * FROM @tblJahrMonat AS tblJahrMonat

		SELECT
			JahrMonat,
			MonatJahr,
			ISNULL(Zugang, 0) AS Zugang,
			ISNULL(Verbrauch, 0) AS Verbrauch,
			ISNULL(Durchsatz, 0) AS Durchsatz,
			CASE WHEN ISNULL(Durchsatz, 0)>0 THEN ISNULL(Verbrauch, 0)/ISNULL(Durchsatz, 0) ELSE 0 END AS rel_Verbrauch,
			CAST(ISNULL(DMon_Preis_EUR, 0) AS NUMERIC(10, 4)) AS DMon_Preis_EUR,
			CAST(Verrechnungspreis AS NUMERIC(10, 4)) AS Verrechnungspreis,
			ISNULL((CASE
				WHEN ISNULL(Zugang, 0)=0 THEN 0
				ELSE
					 (ISNULL(Zugang, 0)/Umrechnungsfaktor)*(Verrechnungspreis -ISNULL(DMon_Preis_EUR, 0)) 
					--CASE
					--	WHEN ISNULL(DMon_Preis, 0)>0 THEN (ISNULL(Zugang, 0)/Umrechnungsfaktor)*(Verrechnungspreis-(ISNULL(DMon_Preis, 0)*EX_RATE)) 
					--	ELSE 0
					--END
			END), 0) AS Abweichung_EUR,
			CAST(
				CASE
					WHEN ISNULL(Zugang, 0)=0 THEN 0
					ELSE
						CASE
							WHEN ISNULL(DMon_Preis_EUR, 0)>0 THEN 
								(ISNULL(Zugang, 0)/Umrechnungsfaktor)*ISNULL(DMon_Preis_EUR, 0)
							ELSE 
								(ISNULL(Zugang, 0)/Umrechnungsfaktor)*ISNULL(Verrechnungspreis, 0)
						END
				END AS NUMERIC(10, 4)) AS Zugaenge_EUR,
			CASE
				WHEN ISNULL(Umrechnungsfaktor, 0)>0 THEN
					(ISNULL(Verbrauch, 0)/Umrechnungsfaktor)*ISNULL(DMon_Preis_EUR, 0)
				ELSE
					0
			END AS AbsMatKosten_EUR,
			CASE
				WHEN ISNULL(Umrechnungsfaktor, 0)<>0 AND ISNULL(Durchsatz, 0)<>0 THEN	
					ISNULL(((ISNULL(Verbrauch, 0)/ISNULL(Umrechnungsfaktor, 0))*ISNULL(DMon_Preis_EUR, 0))/ISNULL(Durchsatz, 0), 0) 
				ELSE
					0
			END AS Kostensatz, --Rel_Kosten
			ISNULL(Umrechnungsfaktor, 0) AS Umrechnungsfaktor,
			Einkaufseinheit,
			Lagereinheit,
			ISNULL(aktLagerbestand, 0) AS aktLagerbestand,
			ISNULL(aktKonsibestand, 0) AS aktKonsibestand,
			ISNULL(MaterialverbrauchSOLL, 0) AS MaterialverbrauchSOLL
		FROM
		(
			SELECT 
				JahrMonat,
				MonatJahr,
				(
					ISNULL((
						SELECT SUM(RES) AS Zugaenge
						FROM
						(
							--Lieferung
							SELECT 
								ISNULL(dbo.DATA0095.QUANTITY,0) AS RES
							FROM         dbo.DATA0005 INNER JOIN
												  dbo.DATA0095 ON dbo.DATA0005.RKEY = dbo.DATA0095.TRAN_BY INNER JOIN
												  dbo.DATA0017 INNER JOIN
												  dbo.DATA0002 ON dbo.DATA0017.PURCH_UNIT_PTR = dbo.DATA0002.RKEY ON dbo.DATA0095.INVT_PTR = dbo.DATA0017.RKEY INNER JOIN
												  dbo.DATA0022 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0022.RKEY INNER JOIN
												  dbo.DATA0071 ON dbo.DATA0022.SOURCE_PTR = dbo.DATA0071.RKEY INNER JOIN
												  dbo.DATA0070 ON dbo.DATA0071.PO_PTR = dbo.DATA0070.RKEY INNER JOIN
												  dbo.DATA0023 ON dbo.DATA0070.SUPPLIER_POINTER = dbo.DATA0023.RKEY
							WHERE    
									dbo.DATA0017.RKEY=CAST(@para1 AS INT)
									AND  (dbo.DATA0095.TRAN_TP = 5) AND dbo.DATA0070.PURCHASE_ORDER_TYPE=0
									AND YEAR(dbo.DATA0095.ENTERED_DATE)=Jahr
									AND MONTH(dbo.DATA0095.ENTERED_DATE)=Monat
									AND (dbo.DATA0070.STATUS=2 OR dbo.DATA0070.STATUS=6
										OR (dbo.DATA0070.STATUS=1 AND dbo.DATA0071.QUAN_RECD>=dbo.DATA0071.QUAN_ORD))

							UNION ALL

							--Retourniert
							SELECT  
								(-1)*ISNULL(dbo.DATA0095.QUANTITY, 0) AS RES

							FROM         dbo.DATA0005 INNER JOIN
												  dbo.DATA0095 ON dbo.DATA0005.RKEY = dbo.DATA0095.TRAN_BY INNER JOIN
												  dbo.DATA0017 INNER JOIN
												  dbo.DATA0002 ON dbo.DATA0017.PURCH_UNIT_PTR = dbo.DATA0002.RKEY ON dbo.DATA0095.INVT_PTR = dbo.DATA0017.RKEY INNER JOIN
												  dbo.DATA0022 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0022.RKEY INNER JOIN
												  dbo.DATA0071 ON dbo.DATA0022.SOURCE_PTR = dbo.DATA0071.RKEY INNER JOIN
												  dbo.DATA0070 ON dbo.DATA0071.PO_PTR = dbo.DATA0070.RKEY INNER JOIN
												  dbo.DATA0023 ON dbo.DATA0070.SUPPLIER_POINTER = dbo.DATA0023.RKEY
							WHERE    
									dbo.DATA0017.RKEY=CAST(@para1 AS INT)
									AND  (dbo.DATA0095.TRAN_TP = 8 OR dbo.DATA0095.TRAN_TP = 20) AND dbo.DATA0070.PURCHASE_ORDER_TYPE=0
									AND YEAR(dbo.DATA0095.ENTERED_DATE)=Jahr
									AND MONTH(dbo.DATA0095.ENTERED_DATE)=Monat

							UNION ALL 

							--Konsi Bestellungen
							SELECT  
								ISNULL(dbo.DATA0341.QUANTITY, 0) AS RES

							FROM         dbo.DATA0017 INNER JOIN
												  dbo.DATA0341 ON dbo.DATA0017.RKEY = dbo.DATA0341.DATA0017_PTR INNER JOIN
												  dbo.DATA0023 ON dbo.DATA0341.DATA0023_PTR = dbo.DATA0023.RKEY INNER JOIN
												  dbo.DATA0005 ON dbo.DATA0341.DATA0005_PTR = dbo.DATA0005.RKEY INNER JOIN
												  dbo.DATA0002 ON dbo.DATA0017.PURCH_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
												  dbo.DATA0466 ON dbo.DATA0341.DATA0466_PTR = dbo.DATA0466.RKEY INNER JOIN
												  dbo.DATA0467 ON dbo.DATA0341.DATA0467_PTR = dbo.DATA0467.RKEY
							WHERE		dbo.DATA0017.RKEY=CAST(@para1 AS INT)
										AND dbo.DATA0341.TRAN_TP=1
										AND YEAR(dbo.DATA0341.TRAN_DATE)=Jahr
										AND MONTH(dbo.DATA0341.TRAN_DATE)=Monat
										AND (dbo.DATA0466.STATUS=2 OR (dbo.DATA0466.STATUS=1 AND dbo.DATA0467.QUAN_RECD>=dbo.DATA0467.QUAN_ORD))

							UNION ALL 

							--rückgängig Konsi-Bestellungen
							SELECT  
								(-1)*ISNULL(dbo.DATA0341.QUANTITY, 0) AS RES

							FROM         dbo.DATA0017 INNER JOIN
												  dbo.DATA0341 ON dbo.DATA0017.RKEY = dbo.DATA0341.DATA0017_PTR INNER JOIN
												  dbo.DATA0023 ON dbo.DATA0341.DATA0023_PTR = dbo.DATA0023.RKEY INNER JOIN
												  dbo.DATA0005 ON dbo.DATA0341.DATA0005_PTR = dbo.DATA0005.RKEY INNER JOIN
												  dbo.DATA0002 ON dbo.DATA0017.PURCH_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
												  dbo.DATA0466 ON dbo.DATA0341.DATA0466_PTR = dbo.DATA0466.RKEY INNER JOIN
												  dbo.DATA0467 ON dbo.DATA0341.DATA0467_PTR = dbo.DATA0467.RKEY
							WHERE		dbo.DATA0017.RKEY=CAST(@para1 AS INT)
										AND dbo.DATA0341.TRAN_TP=15
										AND YEAR(dbo.DATA0341.TRAN_DATE)=Jahr
										AND MONTH(dbo.DATA0341.TRAN_DATE)=Monat

							UNION ALL --retournierte Konsi-Bestellungen

							SELECT  
								(-1)*ISNULL(dbo.DATA0467.QUAN_RETN, 0) AS RES

							FROM         dbo.DATA0467 INNER JOIN
												  dbo.DATA0017 ON dbo.DATA0467.INVT_PTR = dbo.DATA0017.RKEY INNER JOIN
												  dbo.DATA0466 ON dbo.DATA0467.RO_PTR = dbo.DATA0466.RKEY INNER JOIN
												  dbo.DATA0023 ON dbo.DATA0466.SUPPLIER_POINTER = dbo.DATA0023.RKEY INNER JOIN
												  dbo.DATA0002 ON dbo.DATA0467.PURCHASE_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
												  dbo.DATA0005 ON dbo.DATA0466.EMPLOYEE_POINTER = dbo.DATA0005.RKEY
							WHERE		dbo.DATA0017.RKEY=CAST(@para1 AS INT) 
										AND dbo.DATA0467.QUAN_RETN>0
										AND YEAR(dbo.DATA0467.REQ_DATE)=Jahr
										AND MONTH(dbo.DATA0467.REQ_DATE)=Monat
						) AS tblZugaenge
					), 0) 
					--*
					--ISNULL((
					--	SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
					--	FROM LIVE2.dbo.NachKalk_MatVerteilung
					--	WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = CAST(@para3 AS INT) --(SELECT TOP 1 ID FROM LIVE2.dbo.MatRueck_Anlage WHERE Anlage = @Anlage)
					--			AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = CAST(@para1 AS INT)
					--), 1) 
				) AS Zugang,
				(
					ISNULL((
						SELECT
							SUM(ISNULL(tblDATA0095.QUANTITY, 0)) AS RES
						FROM
						(
							SELECT     LIVE2.dbo.MatRueck_Anlage.ID AS Anlage_PTR, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY AS D17_RKEY, dbo.DATA0017.INV_PART_DESCRIPTION AS ArtBezeichnung,
										dbo.DATA0002.UNIT_CODE AS Lagereinheit, dbo.DATA0017.STOCK_PURCH 
							FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
									  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
									  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
									  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
									  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
									  dbo.DATA0034 ON LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR = dbo.DATA0034.RKEY
							WHERE dbo.DATA0034.DEPT_CODE = @para2
							GROUP BY LIVE2.dbo.MatRueck_Anlage.ID, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY, dbo.DATA0017.INV_PART_DESCRIPTION , dbo.DATA0017.STOCK_PURCH, dbo.DATA0002.UNIT_CODE 
							HAVING LIVE2.dbo.MatRueck_Anlage.ID = CAST(@para3 AS INT)--(LIVE2.dbo.MatRueck_Anlage.Anlage = @Anlage)
						) AS tblAnlageArtikel INNER JOIN --LEFT OUTER JOIN 
						(SELECT QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, MONTH(TRAN_DATE) AS Monat, TRAN_TP 
						--FROM dbo.DATA0095 INNER JOIN  dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY 
						FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
						WHERE dbo.DATA0095.TRAN_TP IN (15, 16) AND dbo.DATA0034.DEPT_CODE = @para2
						AND YEAR(dbo.DATA0095.TRAN_DATE) = Jahr AND MONTH(dbo.DATA0095.TRAN_DATE)=Monat AND dbo.DATA0095.INVT_PTR=CAST(@para1 AS NUMERIC(10, 0))) AS tblDATA0095 
						ON tblAnlageArtikel.D17_RKEY = tblDATA0095.INVT_PTR
						--) AS myTblSub	
					), 0)
					+
					ISNULL((
						SELECT 
							ISNULL((
								(-1)*SUM(QUANTITY) 
								*
								ISNULL((
									SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
									FROM LIVE2.dbo.NachKalk_MatVerteilung
									WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = CAST(@para3 AS INT)
											AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = CAST(@para1 AS NUMERIC(10, 0))
								), 1) 
							), 0) AS RES 

						FROM 
							dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
						WHERE 
							dbo.DATA0095.TRAN_TP = 23
							AND YEAR(dbo.DATA0095.TRAN_DATE) = Jahr AND MONTH(dbo.DATA0095.TRAN_DATE)=Monat 
							AND dbo.DATA0095.INVT_PTR=CAST(@para1 AS NUMERIC(10, 0))
					), 0)
					--*
					--ISNULL((
					--	SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
					--	FROM LIVE2.dbo.NachKalk_MatVerteilung
					--	WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = CAST(@para3 AS INT) --(SELECT TOP 1 ID FROM LIVE2.dbo.MatRueck_Anlage WHERE Anlage = @Anlage)
					--			AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = CAST(@para1 AS INT)
					--), 1) 
				) AS Verbrauch,
				Durchsatz,
				(
					SELECT TOP 1
						SUM(CAST(QUANTITY AS NUMERIC(10, 4)) * CAST(PRICE AS NUMERIC(10, 4)) / CAST(EX_RATE AS NUMERIC(10, 4))) / SUM(CAST(QUANTITY AS NUMERIC(10, 4))) AS DMon_Preis

					FROM
					(
					SELECT     
						CASE 
							WHEN ISNULL(dbo.DATA0108.PRICE, 0)>0 THEN
								ISNULL(dbo.DATA0108.QUANTITY, 0)
							ELSE
								ISNULL(dbo.DATA0071.QUAN_ORD, 0)
						END AS QUANTITY,
						CASE 
							WHEN ISNULL(dbo.DATA0108.PRICE, 0)>0 THEN
								ISNULL(dbo.DATA0108.PRICE, 0)
							ELSE
								ISNULL(dbo.DATA0071.PRICE, 0)
						END AS PRICE,
						CASE 
							WHEN ISNULL(dbo.DATA0108.PRICE, 0)>0 THEN
								ISNULL(dbo.DATA0107.EX_RATE, 0)
							ELSE
								ISNULL(dbo.DATA0070.EXCHANGE_RATE, 0)
						END AS EX_RATE

					FROM         dbo.DATA0070 INNER JOIN
										  dbo.DATA0071 ON dbo.DATA0070.RKEY = dbo.DATA0071.PO_PTR LEFT OUTER JOIN
										  dbo.DATA0108 INNER JOIN
										  dbo.DATA0107 ON dbo.DATA0108.DATA0107_PTR = dbo.DATA0107.RKEY ON dbo.DATA0071.RKEY = dbo.DATA0108.DATA0071_PTR
					WHERE     (dbo.DATA0071.INVT_PTR = CAST(@para1 AS INT)) 
								AND (
										(YEAR(dbo.DATA0107.INV_DATE) = Jahr AND MONTH(dbo.DATA0107.INV_DATE) = Monat) 
										OR
										(YEAR(dbo.DATA0070.PO_DATE) = Jahr AND MONTH(dbo.DATA0070.PO_DATE) = Monat)
									)
					) AS tblPreis
				) AS DMon_Preis_EUR,
				(SELECT TOP 1 STOCK_PURCH FROM dbo.DATA0017 WHERE  RKEY = CAST(@para1 AS INT)) AS Umrechnungsfaktor,
				(SELECT TOP 1 STD_COST FROM dbo.DATA0017 WHERE  RKEY = CAST(@para1 AS INT)) AS Verrechnungspreis,
				(
					SELECT TOP 1 dbo.DATA0002.UNIT_CODE 
					FROM dbo.DATA0017 INNER JOIN dbo.DATA0002 ON dbo.DATA0017.PURCH_UNIT_PTR = dbo.DATA0002.RKEY
					WHERE dbo.DATA0017.RKEY = CAST(@para1 AS INT)
				) AS Einkaufseinheit,
				(
					SELECT TOP 1 dbo.DATA0002.UNIT_CODE 
					FROM dbo.DATA0017 INNER JOIN  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY
					WHERE dbo.DATA0017.RKEY = CAST(@para1 AS INT)
				) AS Lagereinheit,
				(SELECT TOP 1 QUAN_ON_HAND FROM dbo.DATA0017 WHERE  RKEY = CAST(@para1 AS INT)) AS aktLagerbestand,
				(SELECT TOP 1 CONSIGN_ONHAND_QTY FROM dbo.DATA0017 WHERE  RKEY = CAST(@para1 AS INT)) AS aktKonsibestand,
				--(SELECT TOP 1 IES_DIRECT_MATL_COST FROM dbo.DATA0017 WHERE  RKEY = CAST(@para1 AS INT)) AS MaterialverbrauchSOLL,
				ISNULL((
						SELECT TOP 1 VerbrauchSOLL
						FROM LIVE2.dbo.NachKalk_MatVerteilung 
						WHERE Anlage_PTR=tblJahrMonat_.Anlage_PTR  AND D17_PTR=CAST(@para1 AS INT) 
				), 0) AS MaterialverbrauchSOLL,
				(
					SELECT TOP 1 
						CASE 
							WHEN ISNULL(dbo.DATA0108.PRICE, 0)>0 THEN
								ISNULL(dbo.DATA0107.EX_RATE, 0)
							ELSE
								ISNULL(dbo.DATA0070.EXCHANGE_RATE, 0)
						END AS EX_RATE

					FROM         dbo.DATA0070 INNER JOIN
										  dbo.DATA0071 ON dbo.DATA0070.RKEY = dbo.DATA0071.PO_PTR LEFT OUTER JOIN
										  dbo.DATA0108 INNER JOIN
										  dbo.DATA0107 ON dbo.DATA0108.DATA0107_PTR = dbo.DATA0107.RKEY ON dbo.DATA0071.RKEY = dbo.DATA0108.DATA0071_PTR
					WHERE     (dbo.DATA0071.INVT_PTR = CAST(@para1 AS INT)) 
								AND (
										(YEAR(dbo.DATA0107.INV_DATE) = Jahr AND MONTH(dbo.DATA0107.INV_DATE) = Monat) 
										OR
										(YEAR(dbo.DATA0070.PO_DATE) = Jahr AND MONTH(dbo.DATA0070.PO_DATE) = Monat)
									)
				) AS EX_RATE

			FROM @tblJahrMonat AS tblJahrMonat_ 
		) AS tblMaterialverbrauch
		ORDER BY JahrMonat
	END

	IF @Case_ = 'MaterialverbrauchDiverseAnlagen'
	BEGIN
		--DECLARE 
		--@para4 varchar(255),
		--@para5 varchar(255)
		--SET @para4 = '01.01.2015'	--Datum Von
		--SET @para5 = '31.03.2015'	--Datum Bis

		SELECT
			dbo.DATA0017.RKEY AS D17_PTR, 
			INV_PART_NUMBER, 
			INV_PART_DESCRIPTION AS Bezeichnung,
			STD_COST AS VerrPreis,
			ISNULL((
				SELECT
					SUM(ISNULL(dbo.DATA0095.QUANTITY, 0)) AS RES
				FROM dbo.DATA0095
				WHERE 
					dbo.DATA0095.TRAN_TP IN (15, 16)
					AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103)
					AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)
					AND dbo.DATA0095.INVT_PTR = DATA0017.RKEY
			), 0)
			+
			ISNULL((
				SELECT 
					ISNULL((
							(-1)*SUM(QUANTITY)  
							), 0) AS RES 

				FROM 
					dbo.DATA0095
				WHERE 
					dbo.DATA0095.TRAN_TP = 23
					AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
					AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
					AND dbo.DATA0095.INVT_PTR = DATA0017.RKEY
			), 0) AS Verbrauch,
			dbo.DATA0002.UNIT_CODE AS LagerEinheit
		FROM         
			dbo.DATA0002 INNER JOIN
			dbo.DATA0017 ON dbo.DATA0002.RKEY = dbo.DATA0017.STOCK_UNIT_PTR
		WHERE dbo.DATA0017.RKEY IN (
									SELECT
									D17_PTR
									FROM
									(
										SELECT
											--Abteilung,
											--Anlage,
											D17_PTR,
											COUNT(D17_PTR) AS Anz_D17_PTR
										FROM
										(
											SELECT DISTINCT 
												LIVE2.dbo.MatRueck_Abteilung.Abteilung, 
												LIVE2.dbo.MatRueck_Anlage.Anlage, 
												D17.RKEY AS D17_PTR
											FROM         dbo.DATA0017 AS D17 INNER JOIN
																  LIVE2.dbo.MatRueck_Transaktion ON D17.RKEY = LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR INNER JOIN
																  LIVE2.dbo.MatRueck_Abteilung ON LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR = LIVE2.dbo.MatRueck_Abteilung.ID INNER JOIN
																  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID
											WHERE     (LIVE2.dbo.MatRueck_Abteilung.Abteilung NOT IN ('Verwaltung', 'Arbeitsbekleidung', 'Bohrerei', 'Fräserei'))
											GROUP BY
												LIVE2.dbo.MatRueck_Abteilung.Abteilung, 
												LIVE2.dbo.MatRueck_Anlage.Anlage,
												D17.RKEY
										) AS tblD17
										GROUP BY
											--Abteilung,
											--Anlage,
											D17_PTR
									) AS tbld17_End
									WHERE Anz_D17_PTR>1
						)
		ORDER BY INV_PART_DESCRIPTION
	END

	IF @Case_ = 'MaterialverbrauchDiverseAnlagen_mitAnlage'
	BEGIN
		--DECLARE 
		--@para4 varchar(255),
		--@para5 varchar(255)
		--SET @para4 = '01.01.2015'	--Datum Von
		--SET @para5 = '31.03.2015'	--Datum Bis

		SELECT
			Bezeichnung,
			MAX(ID) AS ID,
			Anlage, 
			MAX(D34_Dept_PTR) AS D34_Dept_PTR,
			LagerEinheit,
			D17_PTR,
			SUM(Verbrauch) AS Verbrauch,
			VerrPreis
		FROM
		(
			SELECT DISTINCT 
				--D17.INV_PART_NUMBER, 
				D17.INV_PART_DESCRIPTION AS Bezeichnung,
				--LIVE2.dbo.MatRueck_Abteilung.Abteilung, 
				tblAnlage.ID,
				CASE
					WHEN LEFT(tblAnlage.Anlage, 8)='Abwasser' THEN LEFT(tblAnlage.Anlage, 8)
					ELSE
						CASE
							WHEN LEFT(tblAnlage.Anlage, 9)='Belichter' THEN LEFT(tblAnlage.Anlage, 9)
							ELSE
								CASE
									WHEN LEFT(tblAnlage.Anlage, 12)='Bohrmaschine' THEN LEFT(tblAnlage.Anlage, 12)
									ELSE
										CASE
											WHEN LEFT(tblAnlage.Anlage, 12)='Fräsmaschine' THEN LEFT(tblAnlage.Anlage, 12)
											ELSE
												tblAnlage.Anlage
										END
								END
						END
				END AS Anlage, 
				tblTransaktion.D34_Dept_PTR,
				dbo.DATA0002.UNIT_CODE AS LagerEinheit,
				D17.RKEY AS D17_PTR,
				(

					ISNULL((
						SELECT
							SUM(ISNULL(tblDATA0095.QUANTITY, 0)) AS RES
						FROM
						(
							SELECT     LIVE2.dbo.MatRueck_Anlage.ID AS Anlage_PTR, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY AS D17_RKEY, dbo.DATA0017.INV_PART_DESCRIPTION AS ArtBezeichnung,
										dbo.DATA0002.UNIT_CODE AS Lagereinheit, dbo.DATA0017.STOCK_PURCH, dbo.DATA0034.RKEY AS D34_PTR
							FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
									  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
									  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
									  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
									  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
									  dbo.DATA0034 ON LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR = dbo.DATA0034.RKEY
							--WHERE dbo.DATA0034.RKEY = tblTransaktion.D34_Dept_PTR
							GROUP BY LIVE2.dbo.MatRueck_Anlage.ID, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY, 
									dbo.DATA0017.INV_PART_DESCRIPTION , dbo.DATA0017.STOCK_PURCH, dbo.DATA0002.UNIT_CODE, dbo.DATA0034.RKEY
							--HAVING LIVE2.dbo.MatRueck_Anlage.ID = 1 --tblAnlage.ID
						) AS tblAnlageArtikel INNER JOIN --LEFT OUTER JOIN 
						(SELECT QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, MONTH(TRAN_DATE) AS Monat, TRAN_TP, dbo.DATA0034.RKEY  AS D34_PTR
						--FROM dbo.DATA0095 INNER JOIN  dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY 
						FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
						WHERE dbo.DATA0095.TRAN_TP IN (15, 16) --tblTransaktion.D34_Dept_PTR
						AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
						AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) ) AS tblDATA0095 
						ON tblAnlageArtikel.D17_RKEY = tblDATA0095.INVT_PTR
						WHERE tblDATA0095.INVT_PTR = D17.RKEY AND tblAnlageArtikel.Anlage_PTR = tblAnlage.ID
							AND tblDATA0095.D34_PTR=tblTransaktion.D34_Dept_PTR AND tblAnlageArtikel.D34_PTR=tblTransaktion.D34_Dept_PTR
						--) AS myTblSub	
					), 0)
					+
					ISNULL((
						SELECT 
							ISNULL((
								(-1)*SUM(QUANTITY) 
								*
								ISNULL((
									SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
									FROM LIVE2.dbo.NachKalk_MatVerteilung
									WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = tblAnlage.ID
											AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = D17.RKEY
								), 1) 
							), 0) AS RES 

						FROM 
							dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
						WHERE 
							dbo.DATA0095.TRAN_TP = 23
							AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
							AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
							AND dbo.DATA0095.INVT_PTR = D17.RKEY
					), 0)
				) AS Verbrauch,
				D17.STD_COST AS VerrPreis
			FROM         dbo.DATA0017 AS D17 INNER JOIN
						  LIVE2.dbo.MatRueck_Transaktion AS tblTransaktion ON D17.RKEY = tblTransaktion.D17_Art_PTR INNER JOIN
						  LIVE2.dbo.MatRueck_Abteilung ON tblTransaktion.Abteilung_PTR = LIVE2.dbo.MatRueck_Abteilung.ID INNER JOIN
						  LIVE2.dbo.MatRueck_Anlage AS tblAnlage ON tblTransaktion.Anlage_PTR = tblAnlage.ID INNER JOIN
						  dbo.DATA0002 ON D17.STOCK_UNIT_PTR = dbo.DATA0002.RKEY
			WHERE     (LIVE2.dbo.MatRueck_Abteilung.Abteilung NOT IN ('Verwaltung', 'Arbeitsbekleidung')) --'Bohrerei' 'Fräserei'
				AND D17.RKEY IN (
									SELECT
									D17_PTR
									FROM
									(
										SELECT
											--Abteilung,
											--Anlage,
											D17_PTR,
											COUNT(D17_PTR) AS Anz_D17_PTR
										FROM
										(
											SELECT DISTINCT 
												LIVE2.dbo.MatRueck_Abteilung.Abteilung, 
												LIVE2.dbo.MatRueck_Anlage.Anlage, 
												D17.RKEY AS D17_PTR
											FROM         dbo.DATA0017 AS D17 INNER JOIN
																  LIVE2.dbo.MatRueck_Transaktion ON D17.RKEY = LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR INNER JOIN
																  LIVE2.dbo.MatRueck_Abteilung ON LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR = LIVE2.dbo.MatRueck_Abteilung.ID INNER JOIN
																  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID
											WHERE     (LIVE2.dbo.MatRueck_Abteilung.Abteilung NOT IN ('Verwaltung', 'Arbeitsbekleidung', 'Bohrerei', 'Fräserei'))
											GROUP BY
												LIVE2.dbo.MatRueck_Abteilung.Abteilung, 
												LIVE2.dbo.MatRueck_Anlage.Anlage,
												D17.RKEY
										) AS tblD17
										GROUP BY
											--Abteilung,
											--Anlage,
											D17_PTR
									) AS tbld17_End
									WHERE Anz_D17_PTR>1
								)
					
			GROUP BY
				--LIVE2.dbo.MatRueck_Abteilung.Abteilung, 
				tblAnlage.Anlage,
				tblAnlage.ID,
				tblTransaktion.D34_Dept_PTR,
				dbo.DATA0002.UNIT_CODE,
				--D17.INV_PART_NUMBER, 
				D17.INV_PART_DESCRIPTION,
				D17.STD_COST,
				D17.RKEY
		) AS tblGrpArt
		GROUP BY
			Bezeichnung,
			Anlage, 
			LagerEinheit,
			D17_PTR,
			VerrPreis
		ORDER BY
			Bezeichnung, Anlage
	END

	IF @Case_ = 'Materialverbrauch_je_Anlage_AuReiniger'
	BEGIN

		SET @para4 = '06.08.2014' --Vorgabe JHA

		DECLARE @tblAuReiniger table(
											D17_PTR NUMERIC(10, 0),
											VerbrauchSOLL DECIMAL(20, 7),
											LagerEinheit varchar(5)
											)


		INSERT @tblAuReiniger(D17_PTR, VerbrauchSOLL, LagerEinheit) 
		SELECT  DISTINCT dbo.DATA0017.RKEY AS D17_PTR,
				LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL,
				dbo.DATA0002.UNIT_CODE AS LagerEinheit
		FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
                      LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
                      LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
                      dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
                      dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
                      dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
                      LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
                      dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
		WHERE      dbo.DATA0017.ACTIVE_FLAG='Y' AND (LIVE2.dbo.MatRueck_Anlage.ID = 34) --Au-Reiniger
					AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(1 AS bit)


		DECLARE @tblAuReinigerVerb table(
											D17_PTR NUMERIC(10, 0),
											D95_PTR NUMERIC(10, 0),
											ArtBezeichnung char(40), 
											DatumVon datetime,
											ZeitVon int,
											VerrPreis DECIMAL(20, 7),
											Verbrauch NUMERIC(10, 4),
											VerbrauchSOLL DECIMAL(20, 7),
											LagerEinheit varchar(5),
											Ansatz char(20)
											)
		INSERT @tblAuReinigerVerb(D17_PTR, D95_PTR, ArtBezeichnung, DatumVon, ZeitVon, VerrPreis, Verbrauch, 
										VerbrauchSOLL, LagerEinheit, Ansatz)
		SELECT
			D17_RKEY,
			D95_PTR,
			ArtBezeichnung,
			TRAN_DATE AS DatumVon,
			TTIME AS ZeitVon,
			VerrPreis,
			(
				ISNULL(QUANTITY, 0) 
			) AS Verbrauch,
			(
				SELECT TOP 1 VerbrauchSOLL 
				FROM @tblAuReiniger AS tblRitzenArtikelChrono 
				WHERE tblRitzenArtikelChrono.D17_PTR=tblAnlageArtikel.D17_RKEY
			) AS VerbrauchSOLL,
			(
				SELECT TOP 1 LagerEinheit 
				FROM @tblAuReiniger AS tblRitzenArtikelChrono
				WHERE tblRitzenArtikelChrono.D17_PTR=tblAnlageArtikel.D17_RKEY
			) AS LagerEinheit,
			REFERENCE_NUMBER AS Ansatz
		FROM
		(
			SELECT     LIVE2.dbo.MatRueck_Anlage.ID AS Anlage_PTR, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY AS D17_RKEY, 
						dbo.DATA0017.INV_PART_DESCRIPTION AS ArtBezeichnung,
						dbo.DATA0002.UNIT_CODE AS Lagereinheit, dbo.DATA0017.STOCK_PURCH, dbo.DATA0017.STD_COST AS VerrPreis
			FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
					  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
					  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
					  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
					  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
					  dbo.DATA0034 ON LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR = dbo.DATA0034.RKEY
			WHERE dbo.DATA0034.DEPT_CODE = 'CNG-01-04'
			GROUP BY LIVE2.dbo.MatRueck_Anlage.ID, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY, 
					dbo.DATA0017.INV_PART_DESCRIPTION , dbo.DATA0017.STOCK_PURCH, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STD_COST 
			HAVING LIVE2.dbo.MatRueck_Anlage.ID = 34
		) AS tblAnlageArtikel INNER JOIN --LEFT OUTER JOIN 
		(SELECT dbo.DATA0095.RKEY AS D95_PTR, QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, TTIME, MONTH(TRAN_DATE) AS Monat, TRAN_TP,
				dbo.DATA0095.REFERENCE_NUMBER 
		FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
		WHERE dbo.DATA0095.TRAN_TP IN (15, 16, 23) AND dbo.DATA0034.DEPT_CODE = 'CNG-01-04'
		AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
		AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
		AND dbo.DATA0095.INVT_PTR IN (SELECT D17_PTR FROM @tblAuReiniger AS tblRitzenArtikelChrono) --= tblAnlageArtikel_.D17_PTR 
		) AS tblDATA0095 
		ON tblAnlageArtikel.D17_RKEY = tblDATA0095.INVT_PTR

--SELECT * FROM @tblAuReinigerVerb
		DECLARE 
			@tmpDatum as smalldatetime
			SET @tmpDatum = (SELECT TOP 1 DatumVon FROM @tblAuReinigerVerb WHERE Ansatz='N' ORDER BY DatumVon)
		DELETE FROM @tblAuReinigerVerb WHERE DatumVon<@tmpDatum
--SELECT * FROM @tblAuReinigerVerb

		DECLARE @tblAuReinigerRep table(
											D17_PTR NUMERIC(10, 0),
											D95_PTR NUMERIC(10, 0),
											ArtBezeichnung char(40), 
											DatumVon datetime,
											ZeitVon int,
											VerrPreis DECIMAL(20, 7),
											Verbrauch NUMERIC(10, 4),
											VerbrauchSOLL DECIMAL(20, 7),
											LagerEinheit varchar(5)
											)

		DECLARE
				@p_D17_PTR NUMERIC(10, 0),
				@p_D95_PTR NUMERIC(10, 0),
				@p_ArtBezeichnung char(40), 
				@p_DatumVon smalldatetime,
				@p_ZeitVon int,
				@p_VerrPreis DECIMAL(20, 7),
				@p_Verbrauch NUMERIC(10, 4),
				@p_VerbrauchSOLL DECIMAL(20, 7),
				@p_LagerEinheit varchar(5),
				@p_Ansatz char(20),
				@p_SUM_Verbrauch NUMERIC(10, 4),
				@p_SUM_DatumVon datetime

		SET @p_SUM_Verbrauch = 0
		SET @p_SUM_DatumVon = (SELECT TOP 1 DatumVon FROM @tblAuReinigerVerb ORDER BY DatumVon) --@para4

		DECLARE myCursorSample CURSOR fast_forward FOR (SELECT Ansatz, D17_PTR, DatumVon, ZeitVon, Verbrauch, ArtBezeichnung, 
																VerrPreis, VerbrauchSOLL, LagerEinheit, D95_PTR FROM @tblAuReinigerVerb)

		OPEN myCursorSample
		FETCH NEXT FROM myCursorSample INTO @p_Ansatz, @p_D17_PTR, @p_DatumVon, @p_ZeitVon, @p_Verbrauch, @p_ArtBezeichnung, @p_VerrPreis, @p_VerbrauchSOLL,
											@p_LagerEinheit, @p_D95_PTR

		WHILE @@FETCH_STATUS = 0 
		BEGIN 
			IF @p_Ansatz='N' AND @p_SUM_Verbrauch>0
			BEGIN

				INSERT @tblAuReinigerRep(D17_PTR, ArtBezeichnung, DatumVon, ZeitVon, VerrPreis, Verbrauch, 
											VerbrauchSOLL, LagerEinheit, D95_PTR) --, Ansatz, INVENTUR)
				SELECT @p_D17_PTR, @p_ArtBezeichnung, @p_SUM_DatumVon, @p_ZeitVon, @p_VerrPreis, @p_SUM_Verbrauch, @p_VerbrauchSOLL, @p_LagerEinheit, @p_D95_PTR

				SET @p_SUM_DatumVon = @p_DatumVon
				SET @p_SUM_Verbrauch = @p_Verbrauch
			END
			ELSE
			BEGIN
				SET @p_SUM_Verbrauch = @p_SUM_Verbrauch + @p_Verbrauch
			END

			FETCH NEXT FROM myCursorSample INTO @p_Ansatz, @p_D17_PTR, @p_DatumVon, @p_ZeitVon, @p_Verbrauch, @p_ArtBezeichnung, @p_VerrPreis, @p_VerbrauchSOLL,
												@p_LagerEinheit, @p_D95_PTR
		END

		CLOSE myCursorSample 
		DEALLOCATE myCursorSample

		INSERT @tblAuReinigerRep(D17_PTR, ArtBezeichnung, DatumVon, ZeitVon, VerrPreis, Verbrauch, 
									VerbrauchSOLL, LagerEinheit, D95_PTR) --, Ansatz, INVENTUR)
		SELECT @p_D17_PTR, @p_ArtBezeichnung, @p_SUM_DatumVon, @p_ZeitVon, @p_VerrPreis, @p_SUM_Verbrauch, @p_VerbrauchSOLL, @p_LagerEinheit, @p_D95_PTR

--SELECT * FROM @tblAuReinigerRep


		DECLARE @tblAuReinigerChrono table(
											D17_PTR NUMERIC(10, 0),
											D95_PTR NUMERIC(10, 0),
											ArtBezeichnung char(40), 
											DatumVon smalldatetime,
											ZeitVon int,
											DatumBis smalldatetime,
											ZeitBis int,
											Durchsatz DECIMAL(20, 7),
											VerrPreis DECIMAL(20, 7),
											Verbrauch NUMERIC(10, 4),
											VerbrauchSOLL DECIMAL(20, 7),
											LagerEinheit varchar(5)
											)
		INSERT @tblAuReinigerChrono(D17_PTR, D95_PTR, ArtBezeichnung, DatumVon, ZeitVon, DatumBis, ZeitBis, 
									 Durchsatz, VerrPreis, Verbrauch, VerbrauchSOLL, LagerEinheit)
		SELECT 
			D17_PTR,
			D95_PTR,
			ArtBezeichnung,
			DatumVon,
			ZeitVon,
			ISNULL((
				SELECT TOP 1 DatumVon 
				FROM @tblAuReinigerRep AS tblAuReinigerRepTmp 
				--WHERE tblAuReinigerRep.D95_PTR>tblAuReinigerRep.D95_PTR
				WHERE tblAuReinigerRepTmp.DatumVon>tblAuReinigerRep.DatumVon
				ORDER BY D95_PTR
			), GETDATE()) AS DatumBis,
			ISNULL((
					SELECT TOP 1 ZeitVon 
						FROM @tblAuReinigerRep AS tblAuReinigerRepTmp 
						--WHERE tblAuReinigerRepTmp.D95_PTR>tblAuReinigerRep.D95_PTR
						WHERE tblAuReinigerRepTmp.DatumVon>tblAuReinigerRep.DatumVon
						ORDER BY D95_PTR
					), REPLACE(CONVERT(VARCHAR(8),GETDATE(),108), ':', '')) AS ZeitBis,
			ISNULL((
					SELECT     
						SUM(
							(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
							/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000)
							)
						AS RES
					FROM         dbo.DATA0006 INNER JOIN
								  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
								  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
								  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
					WHERE    
						--dbo.DATA0048.TDATE >= CONVERT(DATETIME, DatumVon, 103) 
						--AND dbo.DATA0048.TDATE <= CONVERT(DATETIME,
						--											(
						--												ISNULL((
						--													SELECT TOP 1 DatumVon 
						--													FROM @tblAuReinigerRep AS tblRitzVerbrauchChrono 
						--													WHERE tblRitzVerbrauchChrono.D95_PTR>tblRitzVerbrauchBasisChrono.D95_PTR
						--													ORDER BY D95_PTR
						--												), @para5)
						--											), 103) 
						dbo.UF_ToDateTime(dbo.DATA0048.TTIME, dbo.DATA0048.TDATE) >= 
								dbo.UF_ToDateTime(ZeitVon, CONVERT(DATETIME, DatumVon, 103)) 
						AND dbo.UF_ToDateTime(dbo.DATA0048.TTIME, dbo.DATA0048.TDATE) <=
							dbo.UF_ToDateTime(
												(
													ISNULL((
														SELECT TOP 1 ZeitVon 
														FROM @tblAuReinigerRep AS tblAuReinigerRepTmp 
														--WHERE tblAuReinigerRep.D95_PTR>tblAuReinigerRep.D95_PTR
														WHERE tblAuReinigerRepTmp.DatumVon>tblAuReinigerRep.DatumVon
														ORDER BY D95_PTR
													), REPLACE(CONVERT(VARCHAR(8),GETDATE(),108), ':', ''))
												) 
												, (
													CONVERT(DATETIME, (
																		ISNULL((
																			SELECT TOP 1 DatumVon 
																			FROM @tblAuReinigerRep AS tblAuReinigerRepTmp 
																			--WHERE tblAuReinigerRep.D95_PTR>tblAuReinigerRep.D95_PTR
																			WHERE tblAuReinigerRepTmp.DatumVon>tblAuReinigerRep.DatumVon
																			ORDER BY D95_PTR
																		), @para5) 
													), 103) 
												))
						AND dbo.DATA0034.DEPT_CODE = 'CGIN-01-01'
				), 0) AS Durchsatz,
			VerrPreis,
			Verbrauch,
			VerbrauchSOLL,
			LagerEinheit
		FROM @tblAuReinigerRep AS tblAuReinigerRep 
		ORDER BY D95_PTR


		SELECT
			D17_PTR,
			ArtBezeichnung AS Bezeichnung,
			--DatumVon,
			--DatumBis,
			dbo.UF_ToDateTime(ZeitVon, DatumVon) AS DatumVon,
			dbo.UF_ToDateTime(ZeitBis, DatumBis) AS DatumBis,
			Durchsatz,
			'Zu-m2' AS BzgGr,
			VerrPreis,
			LagerEinheit,
			Verbrauch AS VerbrauchOhneInventur,
			VerbrauchSOLL,
			ISNULL((
				SELECT 
					ISNULL((
						(-1)*SUM(QUANTITY) 
						*
						ISNULL((
							SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
							FROM LIVE2.dbo.NachKalk_MatVerteilung
							WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = 34 --Au-Reiniger
									AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = tblAuReinigerChrono.D17_PTR
						), 1) 
					), 0) AS RES 

				FROM 
					dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
				WHERE 
					dbo.DATA0095.TRAN_TP = 23
					AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, DatumVon, 103) 
					AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, DatumBis, 103) 
					AND dbo.DATA0095.INVT_PTR = tblAuReinigerChrono.D17_PTR
			), 0) AS INVENTUR,
			(
				ISNULL(Verbrauch, 0)
				+
				ISNULL((
					SELECT 
						ISNULL((
							(-1)*SUM(QUANTITY) 
							*
							ISNULL((
								SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
								FROM LIVE2.dbo.NachKalk_MatVerteilung
								WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = 34 --Au-Reiniger
										AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = tblAuReinigerChrono.D17_PTR
							), 1) 
						), 0) AS RES 

					FROM 
						dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
					WHERE 
						dbo.DATA0095.TRAN_TP = 23
						AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, DatumVon, 103) 
						AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, DatumBis, 103) 
						AND dbo.DATA0095.INVT_PTR = tblAuReinigerChrono.D17_PTR
				), 0)
			) AS Verbrauch,
			ISNULL((
				SELECT
					--CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_QUAN ELSE D71_QUAN END AS QUAN,
					--CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_PRICE ELSE D71_PRICE END AS PRICE,
					--CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_EX_RATE ELSE D71_EX_RATE END AS EX_RATE
					SUM(
						CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_QUAN ELSE D71_QUAN END
						*
						CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_PRICE ELSE D71_PRICE END/CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_EX_RATE ELSE D71_EX_RATE END
						)
						/
					SUM(CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_QUAN ELSE D71_QUAN END) 
					/
					(SELECT TOP 1 STOCK_PURCH FROM dbo.DATA0017 WHERE RKEY=tblAuReinigerChrono.D17_PTR)
					AS EK_Preis

				FROM
					(	
					SELECT     
						dbo.DATA0108.QUANTITY AS D108_QUAN, 
						dbo.DATA0108.PRICE AS D108_PRICE, 
						dbo.DATA0107.EX_RATE AS D108_EX_RATE, 
						dbo.DATA0071.QUAN_ORD AS D71_QUAN, 
						dbo.DATA0071.PRICE AS D71_PRICE, 
						dbo.DATA0070.EXCHANGE_RATE AS D71_EX_RATE, 
						CASE WHEN ISNULL(dbo.DATA0107.INV_DATE, '')<>'' THEN dbo.DATA0107.INV_DATE ELSE dbo.DATA0070.PO_DATE END AS EKDATE
						
					FROM         dbo.DATA0070 INNER JOIN
										  dbo.DATA0071 ON dbo.DATA0070.RKEY = dbo.DATA0071.PO_PTR LEFT OUTER JOIN
										  dbo.DATA0108 INNER JOIN
										  dbo.DATA0107 ON dbo.DATA0108.DATA0107_PTR = dbo.DATA0107.RKEY ON dbo.DATA0071.RKEY = dbo.DATA0108.DATA0071_PTR
					WHERE     (dbo.DATA0071.INVT_PTR = tblAuReinigerChrono.D17_PTR)
				) AS tblEK
				WHERE EKDATE>= dbo.UF_ToDateTime(ZeitVon, DatumVon) AND EKDATE<= dbo.UF_ToDateTime(ZeitBis, DatumBis)
			), 0) AS DEK_Preis,
			ISNULL((
				SELECT
					--CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_QUAN ELSE D71_QUAN END AS QUAN,
					--CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_PRICE ELSE D71_PRICE END AS PRICE,
					--CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_EX_RATE ELSE D71_EX_RATE END AS EX_RATE
					SUM(
						CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_QUAN ELSE D71_QUAN END
						*
						CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_PRICE ELSE D71_PRICE END/CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_EX_RATE ELSE D71_EX_RATE END
						)
						/
					SUM(CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_QUAN ELSE D71_QUAN END) 
					/
					(SELECT TOP 1 STOCK_PURCH FROM dbo.DATA0017 WHERE RKEY=tblAuReinigerChrono.D17_PTR)
					AS EK_Preis

				FROM
					(	
					SELECT     
						dbo.DATA0108.QUANTITY AS D108_QUAN, 
						dbo.DATA0108.PRICE AS D108_PRICE, 
						dbo.DATA0107.EX_RATE AS D108_EX_RATE, 
						dbo.DATA0071.QUAN_ORD AS D71_QUAN, 
						dbo.DATA0071.PRICE AS D71_PRICE, 
						dbo.DATA0070.EXCHANGE_RATE AS D71_EX_RATE, 
						CASE WHEN ISNULL(dbo.DATA0107.INV_DATE, '')<>'' THEN dbo.DATA0107.INV_DATE ELSE dbo.DATA0070.PO_DATE END AS EKDATE
						
					FROM         dbo.DATA0070 INNER JOIN
										  dbo.DATA0071 ON dbo.DATA0070.RKEY = dbo.DATA0071.PO_PTR LEFT OUTER JOIN
										  dbo.DATA0108 INNER JOIN
										  dbo.DATA0107 ON dbo.DATA0108.DATA0107_PTR = dbo.DATA0107.RKEY ON dbo.DATA0071.RKEY = dbo.DATA0108.DATA0071_PTR
					WHERE     (dbo.DATA0071.INVT_PTR = tblAuReinigerChrono.D17_PTR)
				) AS tblEK
				WHERE EKDATE>= CONVERT(DATETIME, @tmpDatum, 103)  AND EKDATE<= CONVERT(DATETIME, @para5, 103) 
			), 0) AS DEK_Preis_Ges

		FROM @tblAuReinigerChrono AS tblAuReinigerChrono

		ORDER BY 
			D95_PTR
	END

	IF @Case_ = 'Materialverbrauch_je_Anlage_AuHarze'
	BEGIN

		--DECLARE 
		----@para1 varchar(255),
		----@para2 varchar(255),
		--@para4 varchar(255),
		--@para5 varchar(255)
		----SET @para1 = '436'	--44474
		----SET @para2 = 'CGIN-CV-01'	--44474
		--SET @para4 = '11.11.2014'	--Datum Von
		--SET @para5 = '31.05.2015'	--Datum Bis

		SET @para4 = '07.03.2014' --Vorgabe JHA

		DECLARE @tblAuHarze table(
											D17_PTR NUMERIC(10, 0),
											VerbrauchSOLL DECIMAL(20, 7),
											LagerEinheit varchar(5)
											)


		INSERT @tblAuHarze(D17_PTR, VerbrauchSOLL, LagerEinheit) 
		SELECT  DISTINCT dbo.DATA0017.RKEY AS D17_PTR,
				LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL,
				dbo.DATA0002.UNIT_CODE AS LagerEinheit
		FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
                      LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
                      LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
                      dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
                      dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
                      dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
                      LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
                      dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
		WHERE      dbo.DATA0017.ACTIVE_FLAG='Y' AND (LIVE2.dbo.MatRueck_Anlage.ID = 144) --Au-Harze
					AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(1 AS bit)


		DECLARE @tblAuHarzeVerb table(
											D17_PTR NUMERIC(10, 0),
											D95_PTR NUMERIC(10, 0),
											ArtBezeichnung char(40), 
											DatumVon datetime,
											ZeitVon int,
											VerrPreis DECIMAL(20, 7),
											Verbrauch NUMERIC(10, 4),
											VerbrauchSOLL DECIMAL(20, 7),
											LagerEinheit varchar(5),
											Ansatz char(20)
											)
		INSERT @tblAuHarzeVerb(D17_PTR, D95_PTR, ArtBezeichnung, DatumVon, ZeitVon, VerrPreis, Verbrauch, 
										VerbrauchSOLL, LagerEinheit, Ansatz)
		SELECT
			D17_RKEY,
			D95_PTR,
			ArtBezeichnung,
			TRAN_DATE AS DatumVon,
			TTIME AS ZeitVon,
			VerrPreis,
			(
				ISNULL(QUANTITY, 0) 
			) AS Verbrauch,
			(
				SELECT TOP 1 VerbrauchSOLL 
				FROM @tblAuHarze AS tblRitzenArtikelChrono 
				WHERE tblRitzenArtikelChrono.D17_PTR=tblAnlageArtikel.D17_RKEY
			) AS VerbrauchSOLL,
			(
				SELECT TOP 1 LagerEinheit 
				FROM @tblAuHarze AS tblRitzenArtikelChrono
				WHERE tblRitzenArtikelChrono.D17_PTR=tblAnlageArtikel.D17_RKEY
			) AS LagerEinheit,
			REFERENCE_NUMBER AS Ansatz
		FROM
		(
			SELECT     LIVE2.dbo.MatRueck_Anlage.ID AS Anlage_PTR, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY AS D17_RKEY, 
						dbo.DATA0017.INV_PART_DESCRIPTION AS ArtBezeichnung,
						dbo.DATA0002.UNIT_CODE AS Lagereinheit, dbo.DATA0017.STOCK_PURCH, dbo.DATA0017.STD_COST AS VerrPreis
			FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
					  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
					  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
					  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
					  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
					  dbo.DATA0034 ON LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR = dbo.DATA0034.RKEY
			WHERE dbo.DATA0034.DEPT_CODE IN ('CNG-01-01', 'CNG-01-06')
			GROUP BY LIVE2.dbo.MatRueck_Anlage.ID, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY, 
					dbo.DATA0017.INV_PART_DESCRIPTION , dbo.DATA0017.STOCK_PURCH, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STD_COST 
			HAVING LIVE2.dbo.MatRueck_Anlage.ID = 144
		) AS tblAnlageArtikel INNER JOIN --LEFT OUTER JOIN 
		(SELECT dbo.DATA0095.RKEY AS D95_PTR, QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, TTIME, MONTH(TRAN_DATE) AS Monat, TRAN_TP,
				dbo.DATA0095.REFERENCE_NUMBER 
		FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
		WHERE dbo.DATA0095.TRAN_TP IN (15, 16, 23) AND dbo.DATA0034.DEPT_CODE IN ('CNG-01-01', 'CNG-01-06')
		AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
		AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
		AND dbo.DATA0095.INVT_PTR IN (SELECT D17_PTR FROM @tblAuHarze) --= tblAnlageArtikel_.D17_PTR 
		) AS tblDATA0095 
		ON tblAnlageArtikel.D17_RKEY = tblDATA0095.INVT_PTR

--SELECT * FROM @tblAuHarzeVerb
		DECLARE 
			@tmpDatum_Harze as smalldatetime
			SET @tmpDatum_Harze = (SELECT TOP 1 DatumVon FROM @tblAuHarzeVerb WHERE Ansatz='N' ORDER BY DatumVon)
--		DELETE FROM @tblAuHarzeVerb WHERE DatumVon<@tmpDatum_Harze
--SELECT * FROM @tblAuHarzeVerb

		DECLARE @tblAuHarzeRep table(
											D17_PTR NUMERIC(10, 0),
											D95_PTR NUMERIC(10, 0),
											ArtBezeichnung char(40), 
											DatumVon datetime,
											ZeitVon int,
											VerrPreis DECIMAL(20, 7),
											Verbrauch NUMERIC(10, 4),
											VerbrauchSOLL DECIMAL(20, 7),
											LagerEinheit varchar(5)
											)

		DECLARE
				@p_D17_PTR_Harze NUMERIC(10, 0),
				@p_D95_PTR_Harze NUMERIC(10, 0),
				@p_ArtBezeichnung_Harze char(40), 
				@p_DatumVon_Harze smalldatetime,
				@p_ZeitVon_Harze int,
				@p_VerrPreis_Harze DECIMAL(20, 7),
				@p_Verbrauch_Harze NUMERIC(10, 4),
				@p_VerbrauchSOLL_Harze DECIMAL(20, 7),
				@p_LagerEinheit_Harze varchar(5),
				@p_Ansatz_Harze char(20),
				@p_SUM_Verbrauch_Harze NUMERIC(10, 4),
				@p_SUM_DatumVon_Harze datetime

		SET @p_SUM_Verbrauch_Harze = 0
		SET @p_SUM_DatumVon_Harze = (SELECT TOP 1 DatumVon FROM @tblAuHarzeVerb ORDER BY DatumVon) --@para4

		DECLARE myCursorSample_Harze CURSOR fast_forward FOR (SELECT Ansatz, D17_PTR, DatumVon, ZeitVon, Verbrauch, ArtBezeichnung, 
																VerrPreis, VerbrauchSOLL, LagerEinheit, D95_PTR FROM @tblAuHarzeVerb)

		OPEN myCursorSample_Harze
		FETCH NEXT FROM myCursorSample_Harze INTO @p_Ansatz_Harze, @p_D17_PTR_Harze, @p_DatumVon_Harze, @p_ZeitVon_Harze, @p_Verbrauch_Harze, 
											@p_ArtBezeichnung_Harze, @p_VerrPreis_Harze, @p_VerbrauchSOLL_Harze,
											@p_LagerEinheit_Harze, @p_D95_PTR_Harze

		WHILE @@FETCH_STATUS = 0 
		BEGIN 
			--IF @p_SUM_Verbrauch_Harze>0
			--BEGIN
			--	INSERT @tblAuHarzeRep(D17_PTR, ArtBezeichnung, DatumVon, ZeitVon, VerrPreis, Verbrauch, 
			--								VerbrauchSOLL, LagerEinheit, D95_PTR) --, Ansatz, INVENTUR)
			--	SELECT @p_D17_PTR_Harze, @p_ArtBezeichnung_Harze, @p_SUM_DatumVon_Harze, @p_ZeitVon_Harze, @p_VerrPreis_Harze, 
			--			@p_Verbrauch_Harze, @p_VerbrauchSOLL_Harze, @p_LagerEinheit_Harze, @p_D95_PTR_Harze
			--	SET @p_SUM_DatumVon_Harze = @p_DatumVon_Harze
			--	SET @p_SUM_Verbrauch_Harze = @p_Verbrauch_Harze
			--END
			--ELSE
			--BEGIN
			--	SET @p_SUM_Verbrauch_Harze = @p_SUM_Verbrauch_Harze + @p_Verbrauch_Harze
			--END
			--IF @p_Ansatz_Harze='N' AND @p_SUM_Verbrauch_Harze>0
			--BEGIN

				INSERT @tblAuHarzeRep(D17_PTR, ArtBezeichnung, DatumVon, ZeitVon, VerrPreis, Verbrauch, 
											VerbrauchSOLL, LagerEinheit, D95_PTR) --, Ansatz, INVENTUR)
				SELECT @p_D17_PTR_Harze, @p_ArtBezeichnung_Harze, @p_DatumVon_Harze, @p_ZeitVon_Harze, @p_VerrPreis_Harze, 
						@p_Verbrauch_Harze, @p_VerbrauchSOLL_Harze, @p_LagerEinheit_Harze, @p_D95_PTR_Harze

				--SET @p_SUM_DatumVon_Harze = @p_DatumVon_Harze
				--SET @p_SUM_Verbrauch_Harze = @p_Verbrauch_Harze
			--END
			--ELSE
			--BEGIN
			--	SET @p_SUM_Verbrauch_Harze = @p_SUM_Verbrauch_Harze + @p_Verbrauch_Harze
			--END

			FETCH NEXT FROM myCursorSample_Harze INTO @p_Ansatz_Harze, @p_D17_PTR_Harze, @p_DatumVon_Harze, @p_ZeitVon_Harze, @p_Verbrauch_Harze, 
											@p_ArtBezeichnung_Harze, @p_VerrPreis_Harze, @p_VerbrauchSOLL_Harze,
											@p_LagerEinheit_Harze, @p_D95_PTR_Harze
		END

		CLOSE myCursorSample_Harze 
		DEALLOCATE myCursorSample_Harze

		--INSERT @tblAuHarzeRep(D17_PTR, ArtBezeichnung, DatumVon, ZeitVon, VerrPreis, Verbrauch, 
		--							VerbrauchSOLL, LagerEinheit, D95_PTR) --, Ansatz, INVENTUR)
		--SELECT @p_D17_PTR_Harze, @p_ArtBezeichnung_Harze, @p_SUM_DatumVon_Harze, @p_ZeitVon_Harze, @p_VerrPreis_Harze, @p_SUM_Verbrauch_Harze, 
		--		@p_VerbrauchSOLL_Harze, @p_LagerEinheit_Harze, @p_D95_PTR_Harze

--SELECT * FROM @tblAuHarzeRep


		DECLARE @tblAuHarzeChrono table(
											D17_PTR NUMERIC(10, 0),
											D95_PTR NUMERIC(10, 0),
											ArtBezeichnung char(40), 
											DatumVon smalldatetime,
											ZeitVon int,
											DatumBis smalldatetime,
											ZeitBis int,
											Durchsatz DECIMAL(20, 7),
											VerrPreis DECIMAL(20, 7),
											Verbrauch NUMERIC(10, 4),
											VerbrauchSOLL DECIMAL(20, 7),
											LagerEinheit varchar(5)
											)
		INSERT @tblAuHarzeChrono(D17_PTR, D95_PTR, ArtBezeichnung, DatumVon, ZeitVon, DatumBis, ZeitBis, 
									 Durchsatz, VerrPreis, Verbrauch, VerbrauchSOLL, LagerEinheit)
		SELECT 
			D17_PTR,
			D95_PTR,
			ArtBezeichnung,
			DatumVon,
			ZeitVon,
			ISNULL((
				SELECT TOP 1 DatumVon 
				FROM @tblAuHarzeRep AS tblAuHarzeRepTmp 
				--WHERE tblAuHarzeRep.D95_PTR>tblAuHarzeRep.D95_PTR
				WHERE tblAuHarzeRepTmp.DatumVon>tblAuHarzeRep.DatumVon
				ORDER BY D95_PTR
			), GETDATE()) AS DatumBis,
			ISNULL((
					SELECT TOP 1 ZeitVon 
						FROM @tblAuHarzeRep AS tblAuHarzeRepTmp 
						--WHERE tblAuHarzeRepTmp.D95_PTR>tblAuHarzeRep.D95_PTR
						WHERE tblAuHarzeRepTmp.DatumVon>tblAuHarzeRep.DatumVon
						ORDER BY D95_PTR
					), REPLACE(CONVERT(VARCHAR(8),GETDATE(),108), ':', '')) AS ZeitBis,
			ISNULL((
					SELECT     
						SUM(
							(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
							/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000)
							)
						AS RES
					FROM         dbo.DATA0006 INNER JOIN
								  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
								  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
								  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
					WHERE    
						--dbo.DATA0048.TDATE >= CONVERT(DATETIME, DatumVon, 103) 
						--AND dbo.DATA0048.TDATE <= CONVERT(DATETIME,
						--											(
						--												ISNULL((
						--													SELECT TOP 1 DatumVon 
						--													FROM @tblAuHarzeRep AS tblRitzVerbrauchChrono 
						--													WHERE tblRitzVerbrauchChrono.D95_PTR>tblRitzVerbrauchBasisChrono.D95_PTR
						--													ORDER BY D95_PTR
						--												), @para5)
						--											), 103) 
						dbo.UF_ToDateTime(dbo.DATA0048.TTIME, dbo.DATA0048.TDATE) >= 
								dbo.UF_ToDateTime(ZeitVon, CONVERT(DATETIME, DatumVon, 103)) 
						AND dbo.UF_ToDateTime(dbo.DATA0048.TTIME, dbo.DATA0048.TDATE) <=
							dbo.UF_ToDateTime(
												(
													ISNULL((
														SELECT TOP 1 ZeitVon 
														FROM @tblAuHarzeRep AS tblAuHarzeRepTmp 
														--WHERE tblAuHarzeRep.D95_PTR>tblAuHarzeRep.D95_PTR
														WHERE tblAuHarzeRepTmp.DatumVon>tblAuHarzeRep.DatumVon
														ORDER BY D95_PTR
													), REPLACE(CONVERT(VARCHAR(8),GETDATE(),108), ':', ''))
												) 
												, (
													CONVERT(DATETIME, (
																		ISNULL((
																			SELECT TOP 1 DatumVon 
																			FROM @tblAuHarzeRep AS tblAuHarzeRepTmp 
																			--WHERE tblAuHarzeRep.D95_PTR>tblAuHarzeRep.D95_PTR
																			WHERE tblAuHarzeRepTmp.DatumVon>tblAuHarzeRep.DatumVon
																			ORDER BY D95_PTR
																		), @para5) 
													), 103) 
												))
						AND dbo.DATA0034.DEPT_CODE = 'CGIN-01-01'
				), 0) AS Durchsatz,
			VerrPreis,
			Verbrauch,
			VerbrauchSOLL,
			LagerEinheit
		FROM @tblAuHarzeRep AS tblAuHarzeRep 
		ORDER BY D95_PTR


		SELECT
			D17_PTR,
			ArtBezeichnung AS Bezeichnung,
			--DatumVon,
			--DatumBis,
			dbo.UF_ToDateTime(ZeitVon, DatumVon) AS DatumVon,
			dbo.UF_ToDateTime(ZeitBis, DatumBis) AS DatumBis,
			Durchsatz,
			'Zu-m2' AS BzgGr,
			VerrPreis,
			LagerEinheit,
			Verbrauch AS VerbrauchOhneInventur,
			VerbrauchSOLL,
			ISNULL((
				SELECT 
					ISNULL((
						(-1)*SUM(QUANTITY) 
						*
						ISNULL((
							SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
							FROM LIVE2.dbo.NachKalk_MatVerteilung
							WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = 34 --Au-Harze
									AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = tblAuHarzeChrono.D17_PTR
						), 1) 
					), 0) AS RES 

				FROM 
					dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
				WHERE 
					dbo.DATA0095.TRAN_TP = 23
					AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, DatumVon, 103) 
					AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, DatumBis, 103) 
					AND dbo.DATA0095.INVT_PTR = tblAuHarzeChrono.D17_PTR
			), 0) AS INVENTUR,
			(
				ISNULL(Verbrauch, 0)
				+
				ISNULL((
					SELECT 
						ISNULL((
							(-1)*SUM(QUANTITY) 
							*
							ISNULL((
								SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
								FROM LIVE2.dbo.NachKalk_MatVerteilung
								WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = 34 --Au-Harze
										AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = tblAuHarzeChrono.D17_PTR
							), 1) 
						), 0) AS RES 

					FROM 
						dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
					WHERE 
						dbo.DATA0095.TRAN_TP = 23
						AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, DatumVon, 103) 
						AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, DatumBis, 103) 
						AND dbo.DATA0095.INVT_PTR = tblAuHarzeChrono.D17_PTR
				), 0)
			) AS Verbrauch,
			ISNULL((
				SELECT
					--CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_QUAN ELSE D71_QUAN END AS QUAN,
					--CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_PRICE ELSE D71_PRICE END AS PRICE,
					--CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_EX_RATE ELSE D71_EX_RATE END AS EX_RATE
					SUM(
						CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_QUAN ELSE D71_QUAN END
						*
						CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_PRICE ELSE D71_PRICE END/CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_EX_RATE ELSE D71_EX_RATE END
						)
						/
					SUM(CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_QUAN ELSE D71_QUAN END) 
					/
					(SELECT TOP 1 STOCK_PURCH FROM dbo.DATA0017 WHERE RKEY=tblAuHarzeChrono.D17_PTR)
					AS EK_Preis

				FROM
					(	
					SELECT     
						dbo.DATA0108.QUANTITY AS D108_QUAN, 
						dbo.DATA0108.PRICE AS D108_PRICE, 
						dbo.DATA0107.EX_RATE AS D108_EX_RATE, 
						dbo.DATA0071.QUAN_ORD AS D71_QUAN, 
						dbo.DATA0071.PRICE AS D71_PRICE, 
						dbo.DATA0070.EXCHANGE_RATE AS D71_EX_RATE, 
						CASE WHEN ISNULL(dbo.DATA0107.INV_DATE, '')<>'' THEN dbo.DATA0107.INV_DATE ELSE dbo.DATA0070.PO_DATE END AS EKDATE
						
					FROM         dbo.DATA0070 INNER JOIN
										  dbo.DATA0071 ON dbo.DATA0070.RKEY = dbo.DATA0071.PO_PTR LEFT OUTER JOIN
										  dbo.DATA0108 INNER JOIN
										  dbo.DATA0107 ON dbo.DATA0108.DATA0107_PTR = dbo.DATA0107.RKEY ON dbo.DATA0071.RKEY = dbo.DATA0108.DATA0071_PTR
					WHERE     (dbo.DATA0071.INVT_PTR = tblAuHarzeChrono.D17_PTR)
				) AS tblEK
				WHERE EKDATE>= dbo.UF_ToDateTime(ZeitVon, DatumVon) AND EKDATE<= dbo.UF_ToDateTime(ZeitBis, DatumBis)
			), 0) AS DEK_Preis,
			ISNULL((
				SELECT
					--CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_QUAN ELSE D71_QUAN END AS QUAN,
					--CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_PRICE ELSE D71_PRICE END AS PRICE,
					--CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_EX_RATE ELSE D71_EX_RATE END AS EX_RATE
					SUM(
						CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_QUAN ELSE D71_QUAN END
						*
						CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_PRICE ELSE D71_PRICE END/CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_EX_RATE ELSE D71_EX_RATE END
						)
						/
					SUM(CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_QUAN ELSE D71_QUAN END) 
					/
					(SELECT TOP 1 STOCK_PURCH FROM dbo.DATA0017 WHERE RKEY=tblAuHarzeChrono.D17_PTR)
					AS EK_Preis

				FROM
					(	
					SELECT     
						dbo.DATA0108.QUANTITY AS D108_QUAN, 
						dbo.DATA0108.PRICE AS D108_PRICE, 
						dbo.DATA0107.EX_RATE AS D108_EX_RATE, 
						dbo.DATA0071.QUAN_ORD AS D71_QUAN, 
						dbo.DATA0071.PRICE AS D71_PRICE, 
						dbo.DATA0070.EXCHANGE_RATE AS D71_EX_RATE, 
						CASE WHEN ISNULL(dbo.DATA0107.INV_DATE, '')<>'' THEN dbo.DATA0107.INV_DATE ELSE dbo.DATA0070.PO_DATE END AS EKDATE
						
					FROM         dbo.DATA0070 INNER JOIN
										  dbo.DATA0071 ON dbo.DATA0070.RKEY = dbo.DATA0071.PO_PTR LEFT OUTER JOIN
										  dbo.DATA0108 INNER JOIN
										  dbo.DATA0107 ON dbo.DATA0108.DATA0107_PTR = dbo.DATA0107.RKEY ON dbo.DATA0071.RKEY = dbo.DATA0108.DATA0071_PTR
					WHERE     (dbo.DATA0071.INVT_PTR = tblAuHarzeChrono.D17_PTR)
				) AS tblEK
				WHERE EKDATE>= CONVERT(DATETIME, @tmpDatum_Harze, 103)  AND EKDATE<= CONVERT(DATETIME, @para5, 103) 
			), 0) AS DEK_Preis_Ges

		FROM @tblAuHarzeChrono AS tblAuHarzeChrono

		ORDER BY 
			D95_PTR
	END

	IF @Case_ = 'Materialverbrauch_je_Anlage_Cupra'
	BEGIN
		--DECLARE 
		----@para1 varchar(255),
		----@para2 varchar(255),
		--@para4 varchar(255),
		--@para5 varchar(255)
		----SET @para1 = '436'	--44474
		----SET @para2 = 'CGIN-CV-01'	--44474
		--SET @para4 = '11.11.2014'	--Datum Von
		--SET @para5 = '31.05.2015'	--Datum Bis

		SET @para4 = '29.09.2014' --Vorgabe JHA

		DECLARE @tblVorreinigungCupra table(
											D17_PTR NUMERIC(10, 0),
											VerbrauchSOLL DECIMAL(20, 7),
											LagerEinheit varchar(5)
											)


		INSERT @tblVorreinigungCupra(D17_PTR, VerbrauchSOLL, LagerEinheit) 
		SELECT  DISTINCT dbo.DATA0017.RKEY AS D17_PTR,
				LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL,
				dbo.DATA0002.UNIT_CODE AS LagerEinheit
		FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
                      LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
                      LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
                      dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
                      dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
                      dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
                      LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
                      dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
		WHERE      dbo.DATA0017.ACTIVE_FLAG='Y' AND (LIVE2.dbo.MatRueck_Anlage.ID = 43) --Au-Reiniger
					AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(1 AS bit)

--SELECT * FROM @tblVorreinigungCupra

		DECLARE 
			@p_ZugabeDatumVon datetime

		SET @p_ZugabeDatumVon = (
									SELECT TOP 1
										dbo.UF_ToDateTime(dbo.DATA0095.TTIME, dbo.DATA0095.TRAN_DATE) AS RES
										--dbo.DATA0095.TRAN_DATE
										--dbo.DATA0095.RKEY AS D95_PTR, QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, TTIME, MONTH(TRAN_DATE) AS Monat, TRAN_TP,
										--				dbo.DATA0095.REFERENCE_NUMBER 
									FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
									WHERE dbo.DATA0095.TRAN_TP IN (15, 16) AND dbo.DATA0034.DEPT_CODE = 'CGIN-CV-01' --'CGIN-CV-01'
									AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
									AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
									AND dbo.DATA0095.INVT_PTR = 44474 --CupraEtch AP 30
									AND dbo.DATA0095.REFERENCE_NUMBER = 'N'
									ORDER BY dbo.DATA0095.RKEY
								)

		DECLARE 
			@p_ZugabeDatumBis datetime
		SET @p_ZugabeDatumBis = (
									SELECT TOP 1
										dbo.UF_ToDateTime(dbo.DATA0095.TTIME, dbo.DATA0095.TRAN_DATE) AS RES
										--dbo.DATA0095.TRAN_DATE
										--dbo.DATA0095.RKEY AS D95_PTR, QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, TTIME, MONTH(TRAN_DATE) AS Monat, TRAN_TP,
										--				dbo.DATA0095.REFERENCE_NUMBER 
									FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
									WHERE dbo.DATA0095.TRAN_TP IN (15, 16) AND dbo.DATA0034.DEPT_CODE = 'CGIN-CV-01' --'CGIN-CV-01'
									AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
									AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
									AND dbo.DATA0095.INVT_PTR = 44474 --CupraEtch AP 30
									AND dbo.DATA0095.REFERENCE_NUMBER = 'N'
									ORDER BY dbo.DATA0095.RKEY DESC
								)

		SELECT
			(SELECT TOP 1 INV_PART_DESCRIPTION FROM dbo.DATA0017 WHERE RKEY=tblVorreinigungCupra.D17_PTR) AS Bezeichnung,
			@p_ZugabeDatumVon AS Zugabedatum,
			@p_ZugabeDatumBis AS AusbauDatum,
			ISNULL((
				ISNULL((
						SELECT  TOP 1   
							SUM(
								(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
								/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000)
								)
							AS RES
						FROM         dbo.DATA0006 INNER JOIN
									  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
									  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
									  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
						WHERE    
							dbo.UF_ToDateTime(dbo.DATA0048.TTIME, dbo.DATA0048.TDATE) >= @p_ZugabeDatumVon
							AND dbo.UF_ToDateTime(dbo.DATA0048.TTIME, dbo.DATA0048.TDATE) <@p_ZugabeDatumBis
							AND dbo.DATA0034.DEPT_CODE='CGIN-01-01' -- IN ('CGIN-01-01', 'CGIN-CV-01')
				), 0) 
				+
				ISNULL((
						SELECT  TOP 1   
							SUM(
								(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
								/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000)
								)
							AS RES
						FROM         dbo.DATA0006 INNER JOIN
									  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
									  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
									  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
						WHERE    
							dbo.UF_ToDateTime(dbo.DATA0048.TTIME, dbo.DATA0048.TDATE) >= @p_ZugabeDatumVon
							--AND dbo.UF_ToDateTime(dbo.DATA0048.TTIME, dbo.DATA0048.TDATE) <@p_ZugabeDatumBis
							AND dbo.DATA0048.TDATE < '26.06.2015'
							AND dbo.DATA0034.DEPT_CODE='CGIN-CV-01' -- IN ('CGIN-01-01', 'CGIN-CV-01')
				), 0) 
				---
				--ISNULL((
				--		SELECT  TOP 1   
				--			SUM(
				--				(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
				--				/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000)
				--				)
				--			AS RES
				--		FROM         dbo.DATA0006 INNER JOIN
				--					  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
				--					  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
				--					  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
				--		WHERE    
				--			dbo.DATA0048.TDATE > CONVERT(DATETIME, '26.06.2015', 103) 
				--			AND dbo.DATA0034.DEPT_CODE = 'CGIN-CV-01'
				--), 0) 
			), 0) AS Durchsatz,
			(
				ISNULL((
					SELECT TOP 1 SUM(ISNULL(QUANTITY, 0)) AS RES
					FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
					WHERE dbo.DATA0095.TRAN_TP IN (15, 16) AND dbo.DATA0034.DEPT_CODE = 'CGIN-CV-01' --'CGIN-CV-01'
					AND dbo.UF_ToDateTime(dbo.DATA0095.TTIME, dbo.DATA0095.TRAN_DATE) >= @p_ZugabeDatumVon --CONVERT(DATETIME, @para4, 103) 
					AND dbo.UF_ToDateTime(dbo.DATA0095.TTIME, dbo.DATA0095.TRAN_DATE) < @p_ZugabeDatumBis --AND dbo.DATA0095.TRAN_DATE < CONVERT(DATETIME, @para5, 103) 
					AND dbo.DATA0095.INVT_PTR = tblVorreinigungCupra.D17_PTR
					--AND dbo.DATA0095.REFERENCE_NUMBER = 'N'
					--ORDER BY dbo.DATA0095.RKEY
				), 0) 
				+
				ISNULL((
					SELECT TOP 1
						ISNULL((
							(-1)*SUM(QUANTITY) 
							*
							ISNULL((
								SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
								FROM LIVE2.dbo.NachKalk_MatVerteilung
								WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = 43
										AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = tblVorreinigungCupra.D17_PTR
							), 1) 
						), 0) AS RES 

					FROM 
						dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
					WHERE 
						dbo.DATA0095.TRAN_TP = 23
						AND dbo.UF_ToDateTime(dbo.DATA0095.TTIME, dbo.DATA0095.TRAN_DATE) >= @p_ZugabeDatumVon --AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @p_ZugabeDatumVon, 103) 
						AND dbo.UF_ToDateTime(dbo.DATA0095.TTIME, dbo.DATA0095.TRAN_DATE) < @p_ZugabeDatumBis --AND dbo.DATA0095.TRAN_DATE < CONVERT(DATETIME, @para5, 103) 
						AND dbo.DATA0095.INVT_PTR = tblVorreinigungCupra.D17_PTR
				), 0)
			) AS Verbrauch,
			(SELECT TOP 1 STD_COST FROM dbo.DATA0017 WHERE RKEY=tblVorreinigungCupra.D17_PTR) AS VerrPreis,
			ISNULL((
				SELECT
					--CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_QUAN ELSE D71_QUAN END AS QUAN,
					--CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_PRICE ELSE D71_PRICE END AS PRICE,
					--CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_EX_RATE ELSE D71_EX_RATE END AS EX_RATE
					SUM(
						CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_QUAN ELSE D71_QUAN END
						*
						CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_PRICE ELSE D71_PRICE END/CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_EX_RATE ELSE D71_EX_RATE END
						)
						/
					SUM(CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_QUAN ELSE D71_QUAN END) 
					/
					(SELECT TOP 1 STOCK_PURCH FROM dbo.DATA0017 WHERE RKEY=tblVorreinigungCupra.D17_PTR)
					AS EK_Preis

				FROM
					(	
					SELECT     
						dbo.DATA0108.QUANTITY AS D108_QUAN, 
						dbo.DATA0108.PRICE AS D108_PRICE, 
						dbo.DATA0107.EX_RATE AS D108_EX_RATE, 
						dbo.DATA0071.QUAN_ORD AS D71_QUAN, 
						dbo.DATA0071.PRICE AS D71_PRICE, 
						dbo.DATA0070.EXCHANGE_RATE AS D71_EX_RATE, 
						CASE WHEN ISNULL(dbo.DATA0107.INV_DATE, '')<>'' THEN dbo.DATA0107.INV_DATE ELSE dbo.DATA0070.PO_DATE END AS EKDATE
						
					FROM         dbo.DATA0070 INNER JOIN
										  dbo.DATA0071 ON dbo.DATA0070.RKEY = dbo.DATA0071.PO_PTR LEFT OUTER JOIN
										  dbo.DATA0108 INNER JOIN
										  dbo.DATA0107 ON dbo.DATA0108.DATA0107_PTR = dbo.DATA0107.RKEY ON dbo.DATA0071.RKEY = dbo.DATA0108.DATA0071_PTR
					WHERE     (dbo.DATA0071.INVT_PTR = tblVorreinigungCupra.D17_PTR)
				) AS tblEK
				WHERE EKDATE>= DATEADD(dd, 0, DATEDIFF(dd, 0, @p_ZugabeDatumVon)) --CONVERT(DATETIME, @p_ZugabeDatumVon, 103) 
						AND EKDATE<= CONVERT(DATETIME, @para5, 103) 
			), 0) AS DEK_Preis

		FROM
			@tblVorreinigungCupra AS tblVorreinigungCupra
		ORDER BY D17_PTR DESC
	END

	IF @Case_ = 'Materialverbrauch_je_Anlage_Cupra2'
	BEGIN

		--DECLARE 
		----@para1 varchar(255),
		----@para2 varchar(255),
		--@para4 varchar(255),
		--@para5 varchar(255)
		----SET @para1 = '436'	--44474
		----SET @para2 = 'CGIN-CV-01'	--44474
		--SET @para4 = '11.11.2014'	--Datum Von
		--SET @para5 = '31.05.2015'	--Datum Bis

		SET @para4 = '29.09.2014' --Vorgabe JHA

		DECLARE @tblVorreinigungCupra2 table(
											D17_PTR NUMERIC(10, 0),
											DatumVon datetime,
											DatumBis datetime
											--VerbrauchSOLL DECIMAL(20, 7),
											--LagerEinheit varchar(5)
											)


		INSERT @tblVorreinigungCupra2(D17_PTR, DatumVon, DatumBis) --VerbrauchSOLL, LagerEinheit) 
		SELECT 
			CAST(@para1 AS NUMERIC(10, 4)) AS D17_PTR,
			dbo.UF_ToDateTime(dbo.DATA0095.TTIME, dbo.DATA0095.TRAN_DATE) AS DatumVon,
			ISNULL((
				SELECT TOP 1
					dbo.UF_ToDateTime(D95.TTIME, D95.TRAN_DATE) AS DatumVon
				FROM dbo.DATA0095 AS D95 LEFT OUTER JOIN dbo.DATA0034 ON D95.SRCE_PTR = dbo.DATA0034.RKEY
				WHERE D95.TRAN_TP IN (15, 16) AND dbo.DATA0034.DEPT_CODE = 'CGIN-CV-01' --'CGIN-CV-01'
				AND D95.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
				AND D95.TRAN_DATE <= CONVERT(DATETIME, GETDATE(), 103) 
				AND D95.INVT_PTR = 44474 --CAST(@para1 AS NUMERIC(10, 4)) --44474
				AND D95.REFERENCE_NUMBER = 'N'
				AND dbo.UF_ToDateTime(D95.TTIME, D95.TRAN_DATE)>dbo.UF_ToDateTime(dbo.DATA0095.TTIME, dbo.DATA0095.TRAN_DATE)
				ORDER BY D95.RKEY
			), GETDATE()) AS DatumBis

		FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
		WHERE dbo.DATA0095.TRAN_TP IN (15, 16) AND dbo.DATA0034.DEPT_CODE = 'CGIN-CV-01' --'CGIN-CV-01'
		AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
		AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, GETDATE(), 103) 
		AND dbo.DATA0095.INVT_PTR = 44474 --CAST(@para1 AS NUMERIC(10, 4)) --44474
		AND dbo.DATA0095.REFERENCE_NUMBER = 'N'
		ORDER BY dbo.DATA0095.RKEY

--SELECT * FROM @tblVorreinigungCupra


		SELECT
			(SELECT TOP 1 INV_PART_DESCRIPTION FROM dbo.DATA0017 WHERE RKEY=tblVorreinigungCupra2.D17_PTR) AS Bezeichnung,
			DatumVon,
			DatumBis,
			ISNULL((
				ISNULL((
					SELECT  TOP 1   
						SUM(
							(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
							/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000)
							)
						AS RES
					FROM         dbo.DATA0006 INNER JOIN
								  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
								  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
								  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
					WHERE    
						dbo.UF_ToDateTime(dbo.DATA0048.TTIME, dbo.DATA0048.TDATE) >= DatumVon
						AND dbo.UF_ToDateTime(dbo.DATA0048.TTIME, dbo.DATA0048.TDATE) <DatumBis
						AND dbo.DATA0034.DEPT_CODE='CGIN-01-01' -- IN ('CGIN-01-01', 'CGIN-CV-01')
					), 0)
					+
				ISNULL((
					SELECT  TOP 1   
						SUM(
							(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
							/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000)
							)
						AS RES
					FROM         dbo.DATA0006 INNER JOIN
								  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
								  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
								  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
					WHERE    
						dbo.UF_ToDateTime(dbo.DATA0048.TTIME, dbo.DATA0048.TDATE) >= DatumVon
						--AND dbo.UF_ToDateTime(dbo.DATA0048.TTIME, dbo.DATA0048.TDATE) <DatumBis
						AND dbo.DATA0048.TDATE < '26.06.2015'
						AND dbo.DATA0034.DEPT_CODE='CGIN-CV-01' -- IN ('CGIN-01-01', 'CGIN-CV-01')
					), 0)
					---
					--ISNULL((
					--	SELECT  TOP 1   
					--		SUM(
					--			(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
					--			/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000)
					--			)
					--		AS RES
					--	FROM         dbo.DATA0006 INNER JOIN
					--				  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
					--				  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
					--				  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
					--	WHERE    
					--		dbo.DATA0048.TDATE > CONVERT(DATETIME, '26.06.2015', 103) 
					--		AND dbo.DATA0034.DEPT_CODE = 'CGIN-CV-01'
					--), 0)
					--CASE
					--	WHEN YEAR(DatumVon)<=2015 AND MONTH(DatumVon)>5 THEN
					--		ISNULL((
					--			SELECT  TOP 1   
					--				SUM(
					--					(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
					--					/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000)
					--					)
					--				AS RES
					--			FROM         dbo.DATA0006 INNER JOIN
					--						  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
					--						  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
					--						  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
					--			WHERE    
					--				dbo.DATA0048.TDATE > CONVERT(DATETIME, '26.06.2015', 103) 
					--				AND dbo.DATA0034.DEPT_CODE = 'CGIN-CV-01'
					--		), 0)
					--	ELSE
					--		0
					--END
			), 0) AS Durchsatz,
			(
				ISNULL((
					SELECT TOP 1 SUM(ISNULL(QUANTITY, 0)) AS RES
					FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
					WHERE dbo.DATA0095.TRAN_TP IN (15, 16) AND dbo.DATA0034.DEPT_CODE = 'CGIN-CV-01' --'CGIN-CV-01'
					AND dbo.UF_ToDateTime(dbo.DATA0095.TTIME, dbo.DATA0095.TRAN_DATE) >= DatumVon --CONVERT(DATETIME, @para4, 103) 
					AND dbo.UF_ToDateTime(dbo.DATA0095.TTIME, dbo.DATA0095.TRAN_DATE) < DatumBis
					AND dbo.DATA0095.INVT_PTR = tblVorreinigungCupra2.D17_PTR
					--AND dbo.DATA0095.REFERENCE_NUMBER = 'N'
					--ORDER BY dbo.DATA0095.RKEY
				), 0) 
				+
				ISNULL((
					SELECT TOP 1
						ISNULL((
							(-1)*SUM(QUANTITY) 
							*
							ISNULL((
								SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
								FROM LIVE2.dbo.NachKalk_MatVerteilung
								WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = 43
										AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = tblVorreinigungCupra2.D17_PTR
							), 1) 
						), 0) AS RES 

					FROM 
						dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
					WHERE 
						dbo.DATA0095.TRAN_TP = 23
						AND dbo.UF_ToDateTime(dbo.DATA0095.TTIME, dbo.DATA0095.TRAN_DATE) >= DatumVon  --AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, DatumVon, 103) 
						AND dbo.UF_ToDateTime(dbo.DATA0095.TTIME, dbo.DATA0095.TRAN_DATE) < DatumBis --AND dbo.DATA0095.TRAN_DATE < CONVERT(DATETIME, DatumBis, 103) 
						AND dbo.DATA0095.INVT_PTR = tblVorreinigungCupra2.D17_PTR
				), 0)
			) AS Verbrauch,
			(SELECT TOP 1 STD_COST FROM dbo.DATA0017 WHERE RKEY=tblVorreinigungCupra2.D17_PTR) AS VerrPreis,
			ISNULL((
				SELECT
					--CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_QUAN ELSE D71_QUAN END AS QUAN,
					--CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_PRICE ELSE D71_PRICE END AS PRICE,
					--CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_EX_RATE ELSE D71_EX_RATE END AS EX_RATE
					SUM(
						CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_QUAN ELSE D71_QUAN END
						*
						CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_PRICE ELSE D71_PRICE END/CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_EX_RATE ELSE D71_EX_RATE END
						)
						/
					SUM(CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_QUAN ELSE D71_QUAN END) 
					/
					(SELECT TOP 1 STOCK_PURCH FROM dbo.DATA0017 WHERE RKEY=tblVorreinigungCupra2.D17_PTR)
					AS EK_Preis

				FROM
					(	
					SELECT     
						dbo.DATA0108.QUANTITY AS D108_QUAN, 
						dbo.DATA0108.PRICE AS D108_PRICE, 
						dbo.DATA0107.EX_RATE AS D108_EX_RATE, 
						dbo.DATA0071.QUAN_ORD AS D71_QUAN, 
						dbo.DATA0071.PRICE AS D71_PRICE, 
						dbo.DATA0070.EXCHANGE_RATE AS D71_EX_RATE, 
						CASE WHEN ISNULL(dbo.DATA0107.INV_DATE, '')<>'' THEN dbo.DATA0107.INV_DATE ELSE dbo.DATA0070.PO_DATE END AS EKDATE
						
					FROM         dbo.DATA0070 INNER JOIN
										  dbo.DATA0071 ON dbo.DATA0070.RKEY = dbo.DATA0071.PO_PTR LEFT OUTER JOIN
										  dbo.DATA0108 INNER JOIN
										  dbo.DATA0107 ON dbo.DATA0108.DATA0107_PTR = dbo.DATA0107.RKEY ON dbo.DATA0071.RKEY = dbo.DATA0108.DATA0071_PTR
					WHERE     (dbo.DATA0071.INVT_PTR = tblVorreinigungCupra2.D17_PTR)
				) AS tblEK
				WHERE EKDATE>= DatumVon AND EKDATE<= DatumBis
			), 0) AS DEK_Preis,
			ISNULL((
				SELECT
					--CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_QUAN ELSE D71_QUAN END AS QUAN,
					--CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_PRICE ELSE D71_PRICE END AS PRICE,
					--CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_EX_RATE ELSE D71_EX_RATE END AS EX_RATE
					SUM(
						CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_QUAN ELSE D71_QUAN END
						*
						CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_PRICE ELSE D71_PRICE END/CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_EX_RATE ELSE D71_EX_RATE END
						)
						/
					SUM(CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_QUAN ELSE D71_QUAN END) 
					/
					(SELECT TOP 1 STOCK_PURCH FROM dbo.DATA0017 WHERE RKEY=tblVorreinigungCupra2.D17_PTR)
					AS EK_Preis

				FROM
					(	
					SELECT     
						dbo.DATA0108.QUANTITY AS D108_QUAN, 
						dbo.DATA0108.PRICE AS D108_PRICE, 
						dbo.DATA0107.EX_RATE AS D108_EX_RATE, 
						dbo.DATA0071.QUAN_ORD AS D71_QUAN, 
						dbo.DATA0071.PRICE AS D71_PRICE, 
						dbo.DATA0070.EXCHANGE_RATE AS D71_EX_RATE, 
						CASE WHEN ISNULL(dbo.DATA0107.INV_DATE, '')<>'' THEN dbo.DATA0107.INV_DATE ELSE dbo.DATA0070.PO_DATE END AS EKDATE
						
					FROM         dbo.DATA0070 INNER JOIN
										  dbo.DATA0071 ON dbo.DATA0070.RKEY = dbo.DATA0071.PO_PTR LEFT OUTER JOIN
										  dbo.DATA0108 INNER JOIN
										  dbo.DATA0107 ON dbo.DATA0108.DATA0107_PTR = dbo.DATA0107.RKEY ON dbo.DATA0071.RKEY = dbo.DATA0108.DATA0071_PTR
					WHERE     (dbo.DATA0071.INVT_PTR = tblVorreinigungCupra2.D17_PTR)
				) AS tblEK
				WHERE EKDATE>= CONVERT(DATETIME, @para4 , 103) AND EKDATE<= CONVERT(DATETIME, @para5, 103) 
			), 0) AS DEK_Preis_Ges

		FROM
			@tblVorreinigungCupra2 AS tblVorreinigungCupra2
		ORDER BY DatumVon 
	END

	IF @Case_ = 'Materialverbrauch_je_Anlage_AuAktivator'
	BEGIN
		--DECLARE 
		----@para1 varchar(255),
		----@para2 varchar(255),
		--@para4 varchar(255),
		--@para5 varchar(255)
		----SET @para1 = '436'	--44474
		----SET @para2 = 'CGIN-CV-01'	--44474
		--SET @para4 = '11.11.2014'	--Datum Von
		--SET @para5 = '31.05.2015'	--Datum Bis

		SET @para4 = '30.06.2014' --Vorgabe JHA


		DECLARE @tblAuAktivator table(
											D17_PTR NUMERIC(10, 0),
											VerbrauchSOLL DECIMAL(20, 7),
											LagerEinheit varchar(5)
											)


		INSERT @tblAuAktivator(D17_PTR, VerbrauchSOLL, LagerEinheit) 
		SELECT  DISTINCT dbo.DATA0017.RKEY AS D17_PTR,
				LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL,
				dbo.DATA0002.UNIT_CODE AS LagerEinheit
		FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
                      LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
                      LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
                      dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
                      dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
                      dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
                      LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
                      dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
		WHERE      dbo.DATA0017.ACTIVE_FLAG='Y' AND (LIVE2.dbo.MatRueck_Anlage.Anlage = 'Au-Aktivator') --Au-Reiniger
					AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(1 AS bit)

--SELECT * FROM @tblVorreinigungCupra

		--DECLARE 
		--	@p_ZugabeDatumVon datetime

		SET @p_ZugabeDatumVon = (
									SELECT TOP 1
										dbo.UF_ToDateTime(dbo.DATA0095.TTIME, dbo.DATA0095.TRAN_DATE) AS RES
										--dbo.DATA0095.TRAN_DATE
										--dbo.DATA0095.RKEY AS D95_PTR, QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, TTIME, MONTH(TRAN_DATE) AS Monat, TRAN_TP,
										--				dbo.DATA0095.REFERENCE_NUMBER 
									FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
									WHERE dbo.DATA0095.TRAN_TP IN (15, 16) AND dbo.DATA0034.DEPT_CODE = 'CNG-01-02' --'CGIN-CV-01'
									AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
									AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, GETDATE(), 103) 
									AND dbo.DATA0095.INVT_PTR = 56246 --Chem.Ni/Au Aktivator 915 Säurekorrektur-
									AND dbo.DATA0095.REFERENCE_NUMBER = 'N'
									ORDER BY dbo.DATA0095.RKEY
								)
		--DECLARE 
		--	@p_ZugabeDatumBis datetime
		SET @p_ZugabeDatumBis = (
									SELECT TOP 1
										dbo.UF_ToDateTime(dbo.DATA0095.TTIME, dbo.DATA0095.TRAN_DATE) AS RES
										--dbo.DATA0095.TRAN_DATE
										--dbo.DATA0095.RKEY AS D95_PTR, QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, TTIME, MONTH(TRAN_DATE) AS Monat, TRAN_TP,
										--				dbo.DATA0095.REFERENCE_NUMBER 
									FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
									WHERE dbo.DATA0095.TRAN_TP IN (15, 16) AND dbo.DATA0034.DEPT_CODE = 'CNG-01-02' --'CGIN-CV-01'
									AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
									AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, GETDATE(), 103) 
									AND dbo.DATA0095.INVT_PTR = 56246 --Chem.Ni/Au Aktivator 915 Säurekorrektur-
									AND dbo.DATA0095.REFERENCE_NUMBER = 'N'
									ORDER BY dbo.DATA0095.RKEY DESC
								)

		SELECT
			(SELECT TOP 1 INV_PART_DESCRIPTION FROM dbo.DATA0017 WHERE RKEY=tblAuAktivator.D17_PTR) AS Bezeichnung,
			@p_ZugabeDatumVon AS Zugabedatum,
			@p_ZugabeDatumBis AS AusbauDatum,
			ISNULL((
					SELECT     
						SUM(
							(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
							/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000)
							)
						AS RES
					FROM         dbo.DATA0006 INNER JOIN
								  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
								  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
								  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
					WHERE    
						dbo.UF_ToDateTime(dbo.DATA0048.TTIME, dbo.DATA0048.TDATE) >= @p_ZugabeDatumVon
						AND dbo.UF_ToDateTime(dbo.DATA0048.TTIME, dbo.DATA0048.TDATE) < @p_ZugabeDatumBis
						AND dbo.DATA0034.DEPT_CODE = 'CGIN-01-01'
			), 0) AS Durchsatz,
			(
				ISNULL((
					SELECT TOP 1 SUM(ISNULL(QUANTITY, 0)) AS RES
					FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
					WHERE dbo.DATA0095.TRAN_TP IN (15, 16) AND dbo.DATA0034.DEPT_CODE = 'CNG-01-02' --'CGIN-CV-01'
					AND dbo.UF_ToDateTime(dbo.DATA0095.TTIME, dbo.DATA0095.TRAN_DATE) >= DATEADD(dd, 0, DATEDIFF(dd, 0, @p_ZugabeDatumVon)) --@p_ZugabeDatumVon --CONVERT(DATETIME, @para4, 103) 
					AND dbo.UF_ToDateTime(dbo.DATA0095.TTIME, dbo.DATA0095.TRAN_DATE) < DATEADD(dd, 0, DATEDIFF(dd, 0, @p_ZugabeDatumBis)) --@p_ZugabeDatumBis --AND dbo.DATA0095.TRAN_DATE < CONVERT(DATETIME, @para5, 103) 
					AND dbo.DATA0095.INVT_PTR = tblAuAktivator.D17_PTR
					--AND dbo.DATA0095.REFERENCE_NUMBER = 'N'
					--ORDER BY dbo.DATA0095.RKEY
				), 0) 
				+
				ISNULL((
					SELECT TOP 1
						ISNULL((
							(-1)*SUM(QUANTITY) 
							*
							ISNULL((
								SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
								FROM LIVE2.dbo.NachKalk_MatVerteilung
								WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = 32
										AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = tblAuAktivator.D17_PTR
							), 1) 
						), 0) AS RES 

					FROM 
						dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
					WHERE 
						dbo.DATA0095.TRAN_TP = 23
						AND dbo.UF_ToDateTime(dbo.DATA0095.TTIME, dbo.DATA0095.TRAN_DATE) >= DATEADD(dd, 0, DATEDIFF(dd, 0, @p_ZugabeDatumVon)) --@p_ZugabeDatumVon --AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @p_ZugabeDatumVon, 103) 
						AND dbo.UF_ToDateTime(dbo.DATA0095.TTIME, dbo.DATA0095.TRAN_DATE) < DATEADD(dd, 0, DATEDIFF(dd, 0, @p_ZugabeDatumBis)) --@p_ZugabeDatumBis --AND dbo.DATA0095.TRAN_DATE < CONVERT(DATETIME, @para5, 103) 
						AND dbo.DATA0095.INVT_PTR = tblAuAktivator.D17_PTR
				), 0)
			) AS Verbrauch,
			(SELECT TOP 1 STD_COST FROM dbo.DATA0017 WHERE RKEY=tblAuAktivator.D17_PTR) AS VerrPreis,
			ISNULL((
				SELECT
					--CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_QUAN ELSE D71_QUAN END AS QUAN,
					--CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_PRICE ELSE D71_PRICE END AS PRICE,
					--CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_EX_RATE ELSE D71_EX_RATE END AS EX_RATE
					SUM(
						CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_QUAN ELSE D71_QUAN END
						*
						CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_PRICE ELSE D71_PRICE END/CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_EX_RATE ELSE D71_EX_RATE END
						)
						/
					SUM(CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_QUAN ELSE D71_QUAN END) 
					/
					(SELECT TOP 1 STOCK_PURCH FROM dbo.DATA0017 WHERE RKEY=tblAuAktivator.D17_PTR)
					AS EK_Preis

				FROM
					(	
					SELECT     
						dbo.DATA0108.QUANTITY AS D108_QUAN, 
						dbo.DATA0108.PRICE AS D108_PRICE, 
						dbo.DATA0107.EX_RATE AS D108_EX_RATE, 
						dbo.DATA0071.QUAN_ORD AS D71_QUAN, 
						dbo.DATA0071.PRICE AS D71_PRICE, 
						dbo.DATA0070.EXCHANGE_RATE AS D71_EX_RATE, 
						CASE WHEN ISNULL(dbo.DATA0107.INV_DATE, '')<>'' THEN dbo.DATA0107.INV_DATE ELSE dbo.DATA0070.PO_DATE END AS EKDATE
						
					FROM         dbo.DATA0070 INNER JOIN
										  dbo.DATA0071 ON dbo.DATA0070.RKEY = dbo.DATA0071.PO_PTR LEFT OUTER JOIN
										  dbo.DATA0108 INNER JOIN
										  dbo.DATA0107 ON dbo.DATA0108.DATA0107_PTR = dbo.DATA0107.RKEY ON dbo.DATA0071.RKEY = dbo.DATA0108.DATA0071_PTR
					WHERE     (dbo.DATA0071.INVT_PTR = tblAuAktivator.D17_PTR)
				) AS tblEK
				WHERE EKDATE>= CONVERT(DATETIME, @para4, 103) AND EKDATE<= CONVERT(DATETIME, GETDATE(), 103) 
			), 0) AS DEK_Preis

		FROM
			@tblAuAktivator AS tblAuAktivator
		ORDER BY D17_PTR
	END

	IF @Case_ = 'Materialverbrauch_je_Anlage_AuAktivator2'
	BEGIN

		--DECLARE 
		--@para1 varchar(255),
		----@para2 varchar(255),
		--@para4 varchar(255),
		--@para5 varchar(255)
		--SET @para1 = '56247'	--56246
		----SET @para2 = 'CGIN-CV-01'	--44474
		--SET @para4 = '01.01.2014'	--Datum Von
		--SET @para5 = '31.03.2015'	--Datum Bis

		SET @para4 = '30.06.2014' --Vorgabe JHA

		DECLARE @tblAuAktivator2 table(
											D17_PTR NUMERIC(10, 0),
											DatumVon datetime,
											DatumBis datetime
											--VerbrauchSOLL DECIMAL(20, 7),
											--LagerEinheit varchar(5)
											)


		INSERT @tblAuAktivator2(D17_PTR, DatumVon, DatumBis) --VerbrauchSOLL, LagerEinheit) 
		SELECT 
			CAST(@para1 AS NUMERIC(10, 4)) AS D17_PTR,
			dbo.UF_ToDateTime(dbo.DATA0095.TTIME, dbo.DATA0095.TRAN_DATE) AS DatumVon,
			ISNULL((
				SELECT TOP 1
					dbo.UF_ToDateTime(D95.TTIME, D95.TRAN_DATE) AS DatumVon
				FROM dbo.DATA0095 AS D95 LEFT OUTER JOIN dbo.DATA0034 ON D95.SRCE_PTR = dbo.DATA0034.RKEY
				WHERE D95.TRAN_TP IN (15, 16) AND dbo.DATA0034.DEPT_CODE = 'CNG-01-02' --'CGIN-CV-01'
				AND D95.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
				AND D95.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
				AND D95.INVT_PTR = 56246 --CAST(@para1 AS NUMERIC(10, 4)) --44474
				AND D95.REFERENCE_NUMBER = 'N'
				AND dbo.UF_ToDateTime(D95.TTIME, D95.TRAN_DATE)>dbo.UF_ToDateTime(dbo.DATA0095.TTIME, dbo.DATA0095.TRAN_DATE)
				ORDER BY D95.RKEY
			), GETDATE()) AS DatumBis

		FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
		WHERE dbo.DATA0095.TRAN_TP IN (15, 16) AND dbo.DATA0034.DEPT_CODE = 'CNG-01-02' --'CGIN-CV-01'
		AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
		AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, GETDATE(), 103) 
		AND dbo.DATA0095.INVT_PTR = 56246 --CAST(@para1 AS NUMERIC(10, 4)) --44474
		AND dbo.DATA0095.REFERENCE_NUMBER = 'N'
		ORDER BY dbo.DATA0095.RKEY

--SELECT * FROM @tblVorreinigungCupra


		SELECT
			tblAuAktivator2.D17_PTR,
			(SELECT TOP 1 INV_PART_DESCRIPTION FROM dbo.DATA0017 WHERE RKEY=tblAuAktivator2.D17_PTR) AS Bezeichnung,
			DatumVon,
			DatumBis,
			ISNULL((
					SELECT     
						SUM(
							(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
							/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000)
							)
						AS RES
					FROM         dbo.DATA0006 INNER JOIN
								  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
								  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
								  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
					WHERE    
						dbo.UF_ToDateTime(dbo.DATA0048.TTIME, dbo.DATA0048.TDATE) >= DatumVon
						AND dbo.UF_ToDateTime(dbo.DATA0048.TTIME, dbo.DATA0048.TDATE) <DatumBis
						AND dbo.DATA0034.DEPT_CODE = 'CGIN-01-01'
			), 0) AS Durchsatz,
			(
				ISNULL((
					SELECT TOP 1 SUM(ISNULL(QUANTITY, 0)) AS RES
					FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
					WHERE dbo.DATA0095.TRAN_TP IN (15, 16) AND dbo.DATA0034.DEPT_CODE = 'CNG-01-02' --'CGIN-CV-01'
					AND dbo.UF_ToDateTime(dbo.DATA0095.TTIME, dbo.DATA0095.TRAN_DATE) >= DATEADD(dd, 0, DATEDIFF(dd, 0, DatumVon)) --DatumVon --CONVERT(DATETIME, @para4, 103) 
					AND dbo.UF_ToDateTime(dbo.DATA0095.TTIME, dbo.DATA0095.TRAN_DATE) < DATEADD(dd, 0, DATEDIFF(dd, 0, DatumBis)) --DatumBis
					AND dbo.DATA0095.INVT_PTR = tblAuAktivator2.D17_PTR
					--AND dbo.DATA0095.REFERENCE_NUMBER = 'N'
					--ORDER BY dbo.DATA0095.RKEY
				), 0) 
				+
				ISNULL((
					SELECT TOP 1
						ISNULL((
							(-1)*SUM(QUANTITY) 
							*
							ISNULL((
								SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
								FROM LIVE2.dbo.NachKalk_MatVerteilung
								WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = 32
										AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = tblAuAktivator2.D17_PTR
							), 1) 
						), 0) AS RES 

					FROM 
						dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
					WHERE 
						dbo.DATA0095.TRAN_TP = 23
						AND dbo.UF_ToDateTime(dbo.DATA0095.TTIME, dbo.DATA0095.TRAN_DATE) >= DATEADD(dd, 0, DATEDIFF(dd, 0, DatumVon)) --DatumVon --AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, DatumVon, 103) 
						AND dbo.UF_ToDateTime(dbo.DATA0095.TTIME, dbo.DATA0095.TRAN_DATE) < DATEADD(dd, 0, DATEDIFF(dd, 0, DatumBis)) --DatumBis --AND dbo.DATA0095.TRAN_DATE < CONVERT(DATETIME, DatumBis, 103) 
						AND dbo.DATA0095.INVT_PTR = tblAuAktivator2.D17_PTR
				), 0)
			) AS Verbrauch,
			(SELECT TOP 1 STD_COST FROM dbo.DATA0017 WHERE RKEY=tblAuAktivator2.D17_PTR) AS VerrPreis,
			ISNULL((
				SELECT
					--CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_QUAN ELSE D71_QUAN END AS QUAN,
					--CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_PRICE ELSE D71_PRICE END AS PRICE,
					--CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_EX_RATE ELSE D71_EX_RATE END AS EX_RATE
					SUM(
						CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_QUAN ELSE D71_QUAN END
						*
						CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_PRICE ELSE D71_PRICE END/CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_EX_RATE ELSE D71_EX_RATE END
						)
						/
					SUM(CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_QUAN ELSE D71_QUAN END) 
					/
					(SELECT TOP 1 STOCK_PURCH FROM dbo.DATA0017 WHERE RKEY=tblAuAktivator2.D17_PTR)
					AS EK_Preis

				FROM
					(	
					SELECT     
						dbo.DATA0108.QUANTITY AS D108_QUAN, 
						dbo.DATA0108.PRICE AS D108_PRICE, 
						dbo.DATA0107.EX_RATE AS D108_EX_RATE, 
						dbo.DATA0071.QUAN_ORD AS D71_QUAN, 
						dbo.DATA0071.PRICE AS D71_PRICE, 
						dbo.DATA0070.EXCHANGE_RATE AS D71_EX_RATE, 
						CASE WHEN ISNULL(dbo.DATA0107.INV_DATE, '')<>'' THEN dbo.DATA0107.INV_DATE ELSE dbo.DATA0070.PO_DATE END AS EKDATE
						
					FROM         dbo.DATA0070 INNER JOIN
										  dbo.DATA0071 ON dbo.DATA0070.RKEY = dbo.DATA0071.PO_PTR LEFT OUTER JOIN
										  dbo.DATA0108 INNER JOIN
										  dbo.DATA0107 ON dbo.DATA0108.DATA0107_PTR = dbo.DATA0107.RKEY ON dbo.DATA0071.RKEY = dbo.DATA0108.DATA0071_PTR
					WHERE     (dbo.DATA0071.INVT_PTR = tblAuAktivator2.D17_PTR)
				) AS tblEK
				WHERE EKDATE>= DatumVon AND EKDATE<= DatumBis
			), 0) AS DEK_Preis,
			ISNULL((
				SELECT
					--CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_QUAN ELSE D71_QUAN END AS QUAN,
					--CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_PRICE ELSE D71_PRICE END AS PRICE,
					--CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_EX_RATE ELSE D71_EX_RATE END AS EX_RATE
					SUM(
						CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_QUAN ELSE D71_QUAN END
						*
						CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_PRICE ELSE D71_PRICE END/CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_EX_RATE ELSE D71_EX_RATE END
						)
						/
					SUM(CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_QUAN ELSE D71_QUAN END) 
					/
					(SELECT TOP 1 STOCK_PURCH FROM dbo.DATA0017 WHERE RKEY=tblAuAktivator2.D17_PTR)
					AS EK_Preis

				FROM
					(	
					SELECT     
						dbo.DATA0108.QUANTITY AS D108_QUAN, 
						dbo.DATA0108.PRICE AS D108_PRICE, 
						dbo.DATA0107.EX_RATE AS D108_EX_RATE, 
						dbo.DATA0071.QUAN_ORD AS D71_QUAN, 
						dbo.DATA0071.PRICE AS D71_PRICE, 
						dbo.DATA0070.EXCHANGE_RATE AS D71_EX_RATE, 
						CASE WHEN ISNULL(dbo.DATA0107.INV_DATE, '')<>'' THEN dbo.DATA0107.INV_DATE ELSE dbo.DATA0070.PO_DATE END AS EKDATE
						
					FROM         dbo.DATA0070 INNER JOIN
										  dbo.DATA0071 ON dbo.DATA0070.RKEY = dbo.DATA0071.PO_PTR LEFT OUTER JOIN
										  dbo.DATA0108 INNER JOIN
										  dbo.DATA0107 ON dbo.DATA0108.DATA0107_PTR = dbo.DATA0107.RKEY ON dbo.DATA0071.RKEY = dbo.DATA0108.DATA0071_PTR
					WHERE     (dbo.DATA0071.INVT_PTR = tblAuAktivator2.D17_PTR)
				) AS tblEK
				WHERE EKDATE>= CONVERT(DATETIME, @para4 , 103) AND EKDATE<= CONVERT(DATETIME, @para5, 103) 
			), 0) AS DEK_Preis_Ges

		FROM
			@tblAuAktivator2 AS tblAuAktivator2
		ORDER BY DatumVon
	END

	IF @Case_ = 'Materialverbrauch_je_Anlage_AuNickelbad'
	BEGIN
		--DECLARE 
		----@para1 varchar(255),
		----@para2 varchar(255),
		--@para4 varchar(255),
		--@para5 varchar(255)
		----SET @para1 = '436'	--44474
		----SET @para2 = 'CGIN-CV-01'	--44474
		--SET @para4 = '11.11.2014'	--Datum Von
		--SET @para5 = '31.05.2015'	--Datum Bis

		SET @para4 = '02.09.2014' --Vorgabe JHA

		DECLARE @tblAuNickelbad table(
											D17_PTR NUMERIC(10, 0),
											VerbrauchSOLL DECIMAL(20, 7),
											LagerEinheit varchar(5)
										)

		INSERT @tblAuNickelbad(D17_PTR, VerbrauchSOLL, LagerEinheit) 
		SELECT  DISTINCT dbo.DATA0017.RKEY AS D17_PTR,
				LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL,
				dbo.DATA0002.UNIT_CODE AS LagerEinheit
		FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
                      LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
                      LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
                      dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
                      dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
                      dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
                      LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
                      dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
		WHERE      dbo.DATA0017.ACTIVE_FLAG='Y' AND (LIVE2.dbo.MatRueck_Anlage.Anlage = 'Au-Nickelbad') --Au-Reiniger
					AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(1 AS bit)

--SELECT * FROM @tblVorreinigungCupra

		--DECLARE 
		--	@p_ZugabeDatumVon datetime

		SET @p_ZugabeDatumVon = (
									SELECT TOP 1
										dbo.UF_ToDateTime(dbo.DATA0095.TTIME, dbo.DATA0095.TRAN_DATE) AS RES
										--dbo.DATA0095.TRAN_DATE
										--dbo.DATA0095.RKEY AS D95_PTR, QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, TTIME, MONTH(TRAN_DATE) AS Monat, TRAN_TP,
										--				dbo.DATA0095.REFERENCE_NUMBER 
									FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
									WHERE dbo.DATA0095.TRAN_TP IN (15, 16) AND dbo.DATA0034.DEPT_CODE = 'CNG-01-03' --'CGIN-CV-01'
									AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
									AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, GETDATE(), 103) 
									AND dbo.DATA0095.INVT_PTR = 45049 --Chem.Ni/Au Nimuden NPR-4-M
									AND dbo.DATA0095.REFERENCE_NUMBER = 'N'
									ORDER BY dbo.DATA0095.RKEY
								)

		SET @p_ZugabeDatumBis = (
									SELECT TOP 1
										dbo.UF_ToDateTime(dbo.DATA0095.TTIME, dbo.DATA0095.TRAN_DATE) AS RES
										--dbo.DATA0095.TRAN_DATE
										--dbo.DATA0095.RKEY AS D95_PTR, QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, TTIME, MONTH(TRAN_DATE) AS Monat, TRAN_TP,
										--				dbo.DATA0095.REFERENCE_NUMBER 
									FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
									WHERE dbo.DATA0095.TRAN_TP IN (15, 16) AND dbo.DATA0034.DEPT_CODE = 'CNG-01-03' --'CGIN-CV-01'
									AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
									AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, GETDATE(), 103) 
									AND dbo.DATA0095.INVT_PTR = 45049 --Chem.Ni/Au Nimuden NPR-4-M
									AND dbo.DATA0095.REFERENCE_NUMBER = 'N'
									ORDER BY dbo.DATA0095.RKEY DESC
								)

		SELECT
			(SELECT TOP 1 INV_PART_DESCRIPTION FROM dbo.DATA0017 WHERE RKEY=tblAuNickelbad.D17_PTR) AS Bezeichnung,
			@p_ZugabeDatumVon AS Zugabedatum,
			@p_ZugabeDatumBis AS AusbauDatum,
			ISNULL((
					SELECT     
						SUM(
							(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
							/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000)
							)
						AS RES
					FROM         dbo.DATA0006 INNER JOIN
								  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
								  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
								  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
					WHERE    
						dbo.UF_ToDateTime(dbo.DATA0048.TTIME, dbo.DATA0048.TDATE) >= @p_ZugabeDatumVon
						AND dbo.UF_ToDateTime(dbo.DATA0048.TTIME, dbo.DATA0048.TDATE) < @p_ZugabeDatumBis --AND dbo.UF_ToDateTime(dbo.DATA0048.TTIME, dbo.DATA0048.TDATE) <@para5
						AND dbo.DATA0034.DEPT_CODE = 'CGIN-01-01'
			), 0) AS Durchsatz,
			ISNULL((
					SELECT     
						SUM(
							(CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT))
							*
							dbo.ARTIKELDATEN.CHAuFl
							/
							100
							)
						AS RES
					FROM         dbo.DATA0006 INNER JOIN
								  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
								  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
								  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
					WHERE    
						dbo.UF_ToDateTime(dbo.DATA0048.TTIME, dbo.DATA0048.TDATE) >= @p_ZugabeDatumVon
						AND dbo.UF_ToDateTime(dbo.DATA0048.TTIME, dbo.DATA0048.TDATE) < @p_ZugabeDatumBis --AND dbo.UF_ToDateTime(dbo.DATA0048.TTIME, dbo.DATA0048.TDATE) <@para5
						AND dbo.DATA0034.DEPT_CODE = 'CGIN-01-01'
			), 0) AS Durchsatz2,
			(
				ISNULL((
					SELECT TOP 1 SUM(ISNULL(QUANTITY, 0)) AS RES
					FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
					WHERE dbo.DATA0095.TRAN_TP IN (15, 16) AND dbo.DATA0034.DEPT_CODE = 'CNG-01-03' --'CGIN-CV-01'
					AND dbo.UF_ToDateTime(dbo.DATA0095.TTIME, dbo.DATA0095.TRAN_DATE) >= DATEADD(dd, 0, DATEDIFF(dd, 0, @p_ZugabeDatumVon)) --@p_ZugabeDatumVon --CONVERT(DATETIME, @para4, 103) 
					AND dbo.UF_ToDateTime(dbo.DATA0095.TTIME, dbo.DATA0095.TRAN_DATE) < DATEADD(dd, 0, DATEDIFF(dd, 0, @p_ZugabeDatumBis)) --@p_ZugabeDatumBis --AND dbo.DATA0095.TRAN_DATE < CONVERT(DATETIME, @para5, 103) 
					AND dbo.DATA0095.INVT_PTR = tblAuNickelbad.D17_PTR
					--AND dbo.DATA0095.REFERENCE_NUMBER = 'N'
					--ORDER BY dbo.DATA0095.RKEY
				), 0) 
				+
				ISNULL((
					SELECT TOP 1
						ISNULL((
							(-1)*SUM(QUANTITY) 
							*
							ISNULL((
								SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
								FROM LIVE2.dbo.NachKalk_MatVerteilung
								WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = 33
										AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = tblAuNickelbad.D17_PTR
							), 1) 
						), 0) AS RES 

					FROM 
						dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
					WHERE 
						dbo.DATA0095.TRAN_TP = 23
						AND dbo.DATA0095.TRAN_DATE >= DATEADD(dd, 0, DATEDIFF(dd, 0, @p_ZugabeDatumVon)) --CONVERT(DATETIME, @p_ZugabeDatumVon, 103) 
						AND dbo.DATA0095.TRAN_DATE < CONVERT(DATETIME, GETDATE(), 103) 
						AND dbo.DATA0095.INVT_PTR = tblAuNickelbad.D17_PTR
				), 0)
			) AS Verbrauch,
			(SELECT TOP 1 STD_COST FROM dbo.DATA0017 WHERE RKEY=tblAuNickelbad.D17_PTR) AS VerrPreis,
			ISNULL((
				SELECT
					--CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_QUAN ELSE D71_QUAN END AS QUAN,
					--CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_PRICE ELSE D71_PRICE END AS PRICE,
					--CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_EX_RATE ELSE D71_EX_RATE END AS EX_RATE
					SUM(
						CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_QUAN ELSE D71_QUAN END
						*
						CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_PRICE ELSE D71_PRICE END/CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_EX_RATE ELSE D71_EX_RATE END
						)
						/
					SUM(CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_QUAN ELSE D71_QUAN END) 
					/
					(SELECT TOP 1 STOCK_PURCH FROM dbo.DATA0017 WHERE RKEY=tblAuNickelbad.D17_PTR)
					AS EK_Preis

				FROM
					(	
					SELECT     
						dbo.DATA0108.QUANTITY AS D108_QUAN, 
						dbo.DATA0108.PRICE AS D108_PRICE, 
						dbo.DATA0107.EX_RATE AS D108_EX_RATE, 
						dbo.DATA0071.QUAN_ORD AS D71_QUAN, 
						dbo.DATA0071.PRICE AS D71_PRICE, 
						dbo.DATA0070.EXCHANGE_RATE AS D71_EX_RATE, 
						CASE WHEN ISNULL(dbo.DATA0107.INV_DATE, '')<>'' THEN dbo.DATA0107.INV_DATE ELSE dbo.DATA0070.PO_DATE END AS EKDATE
						
					FROM         dbo.DATA0070 INNER JOIN
										  dbo.DATA0071 ON dbo.DATA0070.RKEY = dbo.DATA0071.PO_PTR LEFT OUTER JOIN
										  dbo.DATA0108 INNER JOIN
										  dbo.DATA0107 ON dbo.DATA0108.DATA0107_PTR = dbo.DATA0107.RKEY ON dbo.DATA0071.RKEY = dbo.DATA0108.DATA0071_PTR
					WHERE     (dbo.DATA0071.INVT_PTR = tblAuNickelbad.D17_PTR)
				) AS tblEK
				WHERE EKDATE>= CONVERT(DATETIME, @para4, 103) AND EKDATE<= CONVERT(DATETIME, GETDATE(), 103) 
			), 0) AS DEK_Preis

		FROM
			@tblAuNickelbad AS tblAuNickelbad
		ORDER BY (SELECT TOP 1 INV_PART_DESCRIPTION FROM dbo.DATA0017 WHERE RKEY=tblAuNickelbad.D17_PTR) --D17_PTR
	END

	IF @Case_ = 'Materialverbrauch_je_Anlage_AuNickelbad2'
	BEGIN

		--DECLARE 
		--@para1 varchar(255),
		----@para2 varchar(255),
		--@para4 varchar(255),
		--@para5 varchar(255)
		--SET @para1 = '56247'	--56246
		----SET @para2 = 'CGIN-CV-01'	--44474
		--SET @para4 = '01.01.2014'	--Datum Von
		--SET @para5 = '31.03.2015'	--Datum Bis

		SET @para4 = '02.09.2014' --Vorgabe JHA

		DECLARE @tblAuNickelbad2 table(
											D17_PTR NUMERIC(10, 0),
											DatumVon datetime,
											DatumBis datetime
											--VerbrauchSOLL DECIMAL(20, 7),
											--LagerEinheit varchar(5)
											)


		INSERT @tblAuNickelbad2(D17_PTR, DatumVon, DatumBis) --VerbrauchSOLL, LagerEinheit) 
		SELECT 
			CAST(@para1 AS NUMERIC(10, 4)) AS D17_PTR,
			dbo.UF_ToDateTime(dbo.DATA0095.TTIME, dbo.DATA0095.TRAN_DATE) AS DatumVon,
			ISNULL((
				SELECT TOP 1
					dbo.UF_ToDateTime(D95.TTIME, D95.TRAN_DATE) AS DatumVon
				FROM dbo.DATA0095 AS D95 LEFT OUTER JOIN dbo.DATA0034 ON D95.SRCE_PTR = dbo.DATA0034.RKEY
				WHERE D95.TRAN_TP IN (15, 16) AND dbo.DATA0034.DEPT_CODE = 'CNG-01-03' --'CGIN-CV-01'
				AND D95.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
				AND D95.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
				AND D95.INVT_PTR = 45049 --Chem.Ni/Au Nimuden NPR-4-M     CAST(@para1 AS NUMERIC(10, 4)) --44474
				AND D95.REFERENCE_NUMBER = 'N'
				AND dbo.UF_ToDateTime(D95.TTIME, D95.TRAN_DATE)>dbo.UF_ToDateTime(dbo.DATA0095.TTIME, dbo.DATA0095.TRAN_DATE)
				ORDER BY D95.RKEY
			), @para5) AS DatumBis

		FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
		WHERE dbo.DATA0095.TRAN_TP IN (15, 16) AND dbo.DATA0034.DEPT_CODE = 'CNG-01-03' --'CGIN-CV-01'
		AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
		AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
		AND dbo.DATA0095.INVT_PTR = 45049 --Chem.Ni/Au Nimuden NPR-4-M     CAST(@para1 AS NUMERIC(10, 4)) --44474
		AND dbo.DATA0095.REFERENCE_NUMBER = 'N'
		ORDER BY dbo.DATA0095.RKEY

--SELECT * FROM @tblVorreinigungCupra


		SELECT
			tblAuNickelbad2.D17_PTR,
			(SELECT TOP 1 INV_PART_DESCRIPTION FROM dbo.DATA0017 WHERE RKEY=tblAuNickelbad2.D17_PTR) AS Bezeichnung,
			DatumVon,
			DatumBis,
			ISNULL((
					SELECT     
						SUM(
							(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
							/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000)
							)
						AS RES
					FROM         dbo.DATA0006 INNER JOIN
								  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
								  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
								  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
					WHERE    
						dbo.UF_ToDateTime(dbo.DATA0048.TTIME, dbo.DATA0048.TDATE) >= DatumVon
						AND dbo.UF_ToDateTime(dbo.DATA0048.TTIME, dbo.DATA0048.TDATE) <DatumBis
						AND dbo.DATA0034.DEPT_CODE = 'CGIN-01-01'
			), 0) AS Durchsatz,
			ISNULL((
					SELECT     
						SUM(
							(CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT))
							*
							dbo.ARTIKELDATEN.CHAuFl
							/
							100
							)
						AS RES
					FROM         dbo.DATA0006 INNER JOIN
								  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
								  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
								  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
					WHERE    
						dbo.UF_ToDateTime(dbo.DATA0048.TTIME, dbo.DATA0048.TDATE) >= DatumVon
						AND dbo.UF_ToDateTime(dbo.DATA0048.TTIME, dbo.DATA0048.TDATE) <DatumBis
						AND dbo.DATA0034.DEPT_CODE = 'CGIN-01-01'
			), 0) AS Durchsatz2,
			(
				ISNULL((
					SELECT TOP 1 SUM(ISNULL(QUANTITY, 0)) AS RES
					FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
					WHERE dbo.DATA0095.TRAN_TP IN (15, 16) AND dbo.DATA0034.DEPT_CODE = 'CNG-01-03' --'CGIN-CV-01'
					AND dbo.UF_ToDateTime(dbo.DATA0095.TTIME, dbo.DATA0095.TRAN_DATE) >=  DATEADD(dd, 0, DATEDIFF(dd, 0, DatumVon)) --DatumVon --CONVERT(DATETIME, @para4, 103) 
					AND dbo.UF_ToDateTime(dbo.DATA0095.TTIME, dbo.DATA0095.TRAN_DATE) < DATEADD(dd, 0, DATEDIFF(dd, 0, DatumBis)) --DatumBis
					AND dbo.DATA0095.INVT_PTR = tblAuNickelbad2.D17_PTR
					--AND dbo.DATA0095.REFERENCE_NUMBER = 'N'
					--ORDER BY dbo.DATA0095.RKEY
				), 0) 
				+
				ISNULL((
					SELECT TOP 1
						ISNULL((
							(-1)*SUM(QUANTITY) 
							*
							ISNULL((
								SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
								FROM LIVE2.dbo.NachKalk_MatVerteilung
								WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = 33
										AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = tblAuNickelbad2.D17_PTR
							), 1) 
						), 0) AS RES 

					FROM 
						dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
					WHERE 
						dbo.DATA0095.TRAN_TP = 23
						AND dbo.DATA0095.TRAN_DATE >= DATEADD(dd, 0, DATEDIFF(dd, 0, DatumVon)) --CONVERT(DATETIME, DatumVon, 103) 
						AND dbo.DATA0095.TRAN_DATE < DATEADD(dd, 0, DATEDIFF(dd, 0, DatumBis)) --CONVERT(DATETIME, DatumBis, 103) 
						AND dbo.DATA0095.INVT_PTR = tblAuNickelbad2.D17_PTR
				), 0)
			) AS Verbrauch,
			(SELECT TOP 1 STD_COST FROM dbo.DATA0017 WHERE RKEY=tblAuNickelbad2.D17_PTR) AS VerrPreis,
			ISNULL((
				SELECT
					--CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_QUAN ELSE D71_QUAN END AS QUAN,
					--CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_PRICE ELSE D71_PRICE END AS PRICE,
					--CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_EX_RATE ELSE D71_EX_RATE END AS EX_RATE
					SUM(
						CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_QUAN ELSE D71_QUAN END
						*
						CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_PRICE ELSE D71_PRICE END/CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_EX_RATE ELSE D71_EX_RATE END
						)
						/
					SUM(CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_QUAN ELSE D71_QUAN END) 
					/
					(SELECT TOP 1 STOCK_PURCH FROM dbo.DATA0017 WHERE RKEY=tblAuNickelbad2.D17_PTR)
					AS EK_Preis

				FROM
					(	
					SELECT     
						dbo.DATA0108.QUANTITY AS D108_QUAN, 
						dbo.DATA0108.PRICE AS D108_PRICE, 
						dbo.DATA0107.EX_RATE AS D108_EX_RATE, 
						dbo.DATA0071.QUAN_ORD AS D71_QUAN, 
						dbo.DATA0071.PRICE AS D71_PRICE, 
						dbo.DATA0070.EXCHANGE_RATE AS D71_EX_RATE, 
						CASE WHEN ISNULL(dbo.DATA0107.INV_DATE, '')<>'' THEN dbo.DATA0107.INV_DATE ELSE dbo.DATA0070.PO_DATE END AS EKDATE
						
					FROM         dbo.DATA0070 INNER JOIN
										  dbo.DATA0071 ON dbo.DATA0070.RKEY = dbo.DATA0071.PO_PTR LEFT OUTER JOIN
										  dbo.DATA0108 INNER JOIN
										  dbo.DATA0107 ON dbo.DATA0108.DATA0107_PTR = dbo.DATA0107.RKEY ON dbo.DATA0071.RKEY = dbo.DATA0108.DATA0071_PTR
					WHERE     (dbo.DATA0071.INVT_PTR = tblAuNickelbad2.D17_PTR)
				) AS tblEK
				WHERE EKDATE>= DatumVon AND EKDATE<= DatumBis
			), 0) AS DEK_Preis,
			ISNULL((
				SELECT
					--CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_QUAN ELSE D71_QUAN END AS QUAN,
					--CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_PRICE ELSE D71_PRICE END AS PRICE,
					--CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_EX_RATE ELSE D71_EX_RATE END AS EX_RATE
					SUM(
						CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_QUAN ELSE D71_QUAN END
						*
						CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_PRICE ELSE D71_PRICE END/CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_EX_RATE ELSE D71_EX_RATE END
						)
						/
					SUM(CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_QUAN ELSE D71_QUAN END) 
					/
					(SELECT TOP 1 STOCK_PURCH FROM dbo.DATA0017 WHERE RKEY=tblAuNickelbad2.D17_PTR)
					AS EK_Preis

				FROM
					(	
					SELECT     
						dbo.DATA0108.QUANTITY AS D108_QUAN, 
						dbo.DATA0108.PRICE AS D108_PRICE, 
						dbo.DATA0107.EX_RATE AS D108_EX_RATE, 
						dbo.DATA0071.QUAN_ORD AS D71_QUAN, 
						dbo.DATA0071.PRICE AS D71_PRICE, 
						dbo.DATA0070.EXCHANGE_RATE AS D71_EX_RATE, 
						CASE WHEN ISNULL(dbo.DATA0107.INV_DATE, '')<>'' THEN dbo.DATA0107.INV_DATE ELSE dbo.DATA0070.PO_DATE END AS EKDATE
						
					FROM         dbo.DATA0070 INNER JOIN
										  dbo.DATA0071 ON dbo.DATA0070.RKEY = dbo.DATA0071.PO_PTR LEFT OUTER JOIN
										  dbo.DATA0108 INNER JOIN
										  dbo.DATA0107 ON dbo.DATA0108.DATA0107_PTR = dbo.DATA0107.RKEY ON dbo.DATA0071.RKEY = dbo.DATA0108.DATA0071_PTR
					WHERE     (dbo.DATA0071.INVT_PTR = tblAuNickelbad2.D17_PTR)
				) AS tblEK
				WHERE EKDATE>= CONVERT(DATETIME, @para4 , 103) AND EKDATE<= CONVERT(DATETIME, @para5, 103) 
			), 0) AS DEK_Preis_Ges

		FROM
			@tblAuNickelbad2 AS tblAuNickelbad2
		ORDER BY DatumVon
	END

	IF @Case_ = 'Materialverbrauch_je_Anlage_AuBad'
	BEGIN

		--DECLARE 
		--@para1 varchar(255),
		----@para2 varchar(255),
		--@para4 varchar(255),
		--@para5 varchar(255)
		--SET @para1 = '41'	--56246
		----SET @para2 = 'CGIN-CV-01'	--44474
		--SET @para4 = '20.10.2014'	--Datum Von
		--SET @para5 = '31.03.2015'	--Datum Bis

		IF CONVERT(DATETIME, @para4, 103)<>CONVERT(DATETIME, '20.10.2014', 103) 
		BEGIN
			SET @para4 = '20.10.2014'
			SET @para5 = STR(DAY(GETDATE())) + '.' + STR(MONTH(GETDATE())) + '.' + STR(YEAR(GETDATE()))
		END

		DECLARE @tblAuBad table(
											D95_PTR NUMERIC(10, 0),
											D17_PTR NUMERIC(10, 0),
											DatumVon datetime,
											DatumBis datetime,
											QUANTITY NUMERIC(20, 7),
											Goldgehalt NUMERIC(20, 7),
											D95Next_PTR NUMERIC(10, 0),
											N_E CHAR(20)
											--VerbrauchSOLL DECIMAL(20, 7),
											--LagerEinheit varchar(5)
											)


		INSERT @tblAuBad(D95_PTR, D17_PTR, DatumVon, DatumBis, QUANTITY, Goldgehalt, D95Next_PTR, N_E) --VerbrauchSOLL, LagerEinheit) 
		SELECT 
			dbo.DATA0095.RKEY AS D95_PTR,
			CAST(@para1 AS NUMERIC(10, 4)) AS D17_PTR,
			dbo.UF_ToDateTime(dbo.DATA0095.TTIME, dbo.DATA0095.TRAN_DATE) AS DatumVon,
			ISNULL((
				SELECT TOP 1
					dbo.UF_ToDateTime(D95.TTIME, D95.TRAN_DATE) AS DatumVon
				FROM dbo.DATA0095 AS D95 LEFT OUTER JOIN dbo.DATA0034 ON D95.SRCE_PTR = dbo.DATA0034.RKEY
				WHERE D95.TRAN_TP IN (15, 16) AND dbo.DATA0034.DEPT_CODE = 'CNG-01-01' --'CGIN-CV-01'
				AND D95.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
				AND D95.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
				AND D95.INVT_PTR = 41 --Goldkaliumzyanid 68,2 %    CAST(@para1 AS NUMERIC(10, 4)) --44474
				--AND D95.REFERENCE_NUMBER = 'N'
				AND dbo.UF_ToDateTime(D95.TTIME, D95.TRAN_DATE)>dbo.UF_ToDateTime(dbo.DATA0095.TTIME, dbo.DATA0095.TRAN_DATE)
				ORDER BY D95.RKEY
			), @para5) AS DatumBis,
			dbo.DATA0095.QUANTITY,
			ISNULL((
				SELECT TOP 1 Goldgehalt 
				FROM LIVE2.dbo.MatRueck_Transaktion 
				WHERE D17_Art_PTR = CAST(@para1 AS NUMERIC(10, 4)) AND D95_PTR = dbo.DATA0095.RKEY 
			), 0) AS Goldgehalt,
			ISNULL((
				SELECT TOP 1
					D95.RKEY AS RES
				FROM dbo.DATA0095 AS D95 LEFT OUTER JOIN dbo.DATA0034 ON D95.SRCE_PTR = dbo.DATA0034.RKEY
				WHERE D95.TRAN_TP IN (15, 16) AND dbo.DATA0034.DEPT_CODE = 'CNG-01-01' --'CGIN-CV-01'
				AND D95.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
				AND D95.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
				AND D95.INVT_PTR = 41 --Goldkaliumzyanid 68,2 %    CAST(@para1 AS NUMERIC(10, 4)) --44474
				--AND D95.REFERENCE_NUMBER = 'N'
				AND dbo.UF_ToDateTime(D95.TTIME, D95.TRAN_DATE)>dbo.UF_ToDateTime(dbo.DATA0095.TTIME, dbo.DATA0095.TRAN_DATE)
				ORDER BY D95.RKEY
			), 0) AS D95Next_PTR,
			dbo.DATA0095.REFERENCE_NUMBER AS N_E

		FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
		WHERE dbo.DATA0095.TRAN_TP IN (15, 16) AND dbo.DATA0034.DEPT_CODE = 'CNG-01-01' --'CGIN-CV-01'
		AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
		AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
		AND dbo.DATA0095.INVT_PTR = 41 --Goldkaliumzyanid 68,2 %     CAST(@para1 AS NUMERIC(10, 4)) --44474
		--AND dbo.DATA0095.REFERENCE_NUMBER = 'N'
		ORDER BY dbo.DATA0095.RKEY

--SELECT * FROM @tblAuBad


		SELECT
			tblAuBad.D95_PTR,
			tblAuBad.D95Next_PTR,
			tblAuBad.D17_PTR,
			(SELECT TOP 1 INV_PART_DESCRIPTION FROM dbo.DATA0017 WHERE RKEY=tblAuBad.D17_PTR) AS Bezeichnung,
			DatumVon,
			DatumBis,
			ISNULL((
					SELECT     
						SUM(
							(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
							/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000)
							)
						AS RES
					FROM         dbo.DATA0006 INNER JOIN
								  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
								  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
								  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
					WHERE    
						dbo.UF_ToDateTime(dbo.DATA0048.TTIME, dbo.DATA0048.TDATE) >= DatumVon
						AND dbo.UF_ToDateTime(dbo.DATA0048.TTIME, dbo.DATA0048.TDATE) <=DatumBis
						AND dbo.DATA0034.DEPT_CODE = 'CGIN-01-01'
			), 0) AS Durchsatz,
			ISNULL((
					SELECT     
						SUM(
							(CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT))
							*
							dbo.ARTIKELDATEN.CHAuFl
							/
							100
							)
						AS RES
					FROM         dbo.DATA0006 INNER JOIN
								  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
								  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
								  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
					WHERE    
						dbo.UF_ToDateTime(dbo.DATA0048.TTIME, dbo.DATA0048.TDATE) >= DatumVon
						AND dbo.UF_ToDateTime(dbo.DATA0048.TTIME, dbo.DATA0048.TDATE) <=DatumBis
						AND dbo.DATA0034.DEPT_CODE = 'CGIN-01-01'
			), 0) AS Durchsatz2,
			ISNULL((CASE 
				WHEN N_E='N' THEN
					(
						tblAuBad.Goldgehalt
						-
						(SELECT TOP 1 Goldgehalt FROM @tblAuBad AS tblTmp WHERE tblTmp.D95_PTR = tblAuBad.D95Next_PTR) 
					)
					* 310 + 0 * 0.682
					--=(2,14-1,792)*310+0*0,682
				ELSE
					(
						tblAuBad.Goldgehalt
						-
						(SELECT TOP 1 Goldgehalt FROM @tblAuBad AS tblTmp WHERE tblTmp.D95_PTR = tblAuBad.D95Next_PTR) 
					)
					* 310
					+ tblAuBad.QUANTITY * 0.682
					--=(1,792-1,855)*310+146,63*0,682
			END), 0) AS Verbrauch,
			ISNULL((
				SELECT TOP 1 SUM(ISNULL(QUANTITY, 0)) AS RES
				FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
				WHERE dbo.DATA0095.TRAN_TP IN (15, 16) AND dbo.DATA0034.DEPT_CODE = 'CNG-01-01' --'CGIN-CV-01'
				AND dbo.UF_ToDateTime(dbo.DATA0095.TTIME, dbo.DATA0095.TRAN_DATE) >= DATEADD(dd, 0, DATEDIFF(dd, 0, DatumVon)) --DatumVon --CONVERT(DATETIME, @para4, 103) 
				AND dbo.UF_ToDateTime(dbo.DATA0095.TTIME, dbo.DATA0095.TRAN_DATE) < DATEADD(dd, 0, DATEDIFF(dd, 0, DatumBis)) -- DatumBis
				AND dbo.DATA0095.INVT_PTR = tblAuBad.D17_PTR
				--AND dbo.DATA0095.REFERENCE_NUMBER = 'N'
				--ORDER BY dbo.DATA0095.RKEY
			), 0) AS Verbrauch2,
			(SELECT TOP 1 STD_COST FROM dbo.DATA0017 WHERE RKEY=tblAuBad.D17_PTR) AS VerrPreis,
			ISNULL((
				SELECT
					--CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_QUAN ELSE D71_QUAN END AS QUAN,
					--CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_PRICE ELSE D71_PRICE END AS PRICE,
					--CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_EX_RATE ELSE D71_EX_RATE END AS EX_RATE
					SUM(
						CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_QUAN ELSE D71_QUAN END
						*
						CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_PRICE ELSE D71_PRICE END/CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_EX_RATE ELSE D71_EX_RATE END
						)
						/
					SUM(CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_QUAN ELSE D71_QUAN END) 
					/
					(SELECT TOP 1 STOCK_PURCH FROM dbo.DATA0017 WHERE RKEY=tblAuBad.D17_PTR)
					AS EK_Preis

				FROM
					(	
					SELECT     
						dbo.DATA0108.QUANTITY AS D108_QUAN, 
						--dbo.DATA0108.PRICE AS D108_PRICE, 
						CASE
							WHEN dbo.DATA0108.RKEY=47690 THEN 23.81544 ELSE
								CASE 
									WHEN dbo.DATA0108.RKEY=50081 THEN 26.5639 ELSE 
										CASE
											WHEN dbo.DATA0108.RKEY=50528 THEN 27.43686 ELSE 
												CASE
													WHEN dbo.DATA0108.RKEY=50759 THEN 25.94328 ELSE
														CASE
															WHEN dbo.DATA0108.RKEY=51171 THEN 26.30474 ELSE dbo.DATA0108.PRICE 
														END 
												END
										END
								END
						END AS D108_PRICE, 
						dbo.DATA0107.EX_RATE AS D108_EX_RATE, 
						dbo.DATA0071.QUAN_ORD AS D71_QUAN, 
						dbo.DATA0071.PRICE AS D71_PRICE, 
						dbo.DATA0070.EXCHANGE_RATE AS D71_EX_RATE, 
						CASE WHEN ISNULL(dbo.DATA0107.INV_DATE, '')<>'' THEN dbo.DATA0107.INV_DATE ELSE dbo.DATA0070.PO_DATE END AS EKDATE
						
					FROM         dbo.DATA0070 INNER JOIN
										  dbo.DATA0071 ON dbo.DATA0070.RKEY = dbo.DATA0071.PO_PTR LEFT OUTER JOIN
										  dbo.DATA0108 INNER JOIN
										  dbo.DATA0107 ON dbo.DATA0108.DATA0107_PTR = dbo.DATA0107.RKEY ON dbo.DATA0071.RKEY = dbo.DATA0108.DATA0071_PTR
					WHERE     (dbo.DATA0071.INVT_PTR = tblAuBad.D17_PTR)
				) AS tblEK
				WHERE EKDATE>= DatumVon AND EKDATE<= DatumBis
			), 0) AS DEK_Preis,
			ISNULL((
				SELECT
					--CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_QUAN ELSE D71_QUAN END AS QUAN,
					--CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_PRICE ELSE D71_PRICE END AS PRICE,
					--CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_EX_RATE ELSE D71_EX_RATE END AS EX_RATE
					SUM(
						CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_QUAN ELSE D71_QUAN END
						*
						CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_PRICE ELSE D71_PRICE END/CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_EX_RATE ELSE D71_EX_RATE END
						)
						/
					SUM(CASE WHEN ISNULL(D108_QUAN, 0)>0 THEN D108_QUAN ELSE D71_QUAN END) 
					/
					(SELECT TOP 1 STOCK_PURCH FROM dbo.DATA0017 WHERE RKEY=tblAuBad.D17_PTR)
					AS EK_Preis

				FROM
					(	
					SELECT     
						dbo.DATA0108.QUANTITY AS D108_QUAN, 
						--dbo.DATA0108.PRICE AS D108_PRICE, 
						CASE
							WHEN dbo.DATA0108.RKEY=47690 THEN 23.81544 ELSE
								CASE 
									WHEN dbo.DATA0108.RKEY=50081 THEN 26.5639 ELSE 
										CASE
											WHEN dbo.DATA0108.RKEY=50528 THEN 27.43686 ELSE 
												CASE
													WHEN dbo.DATA0108.RKEY=50759 THEN 25.94328 ELSE
														CASE
															WHEN dbo.DATA0108.RKEY=51171 THEN 26.30474 ELSE dbo.DATA0108.PRICE 
														END 
												END
										END
								END
						END AS D108_PRICE, 
						dbo.DATA0107.EX_RATE AS D108_EX_RATE, 
						dbo.DATA0071.QUAN_ORD AS D71_QUAN, 
						dbo.DATA0071.PRICE AS D71_PRICE, 
						dbo.DATA0070.EXCHANGE_RATE AS D71_EX_RATE, 
						CASE WHEN ISNULL(dbo.DATA0107.INV_DATE, '')<>'' THEN dbo.DATA0107.INV_DATE ELSE dbo.DATA0070.PO_DATE END AS EKDATE
						
					FROM         dbo.DATA0070 INNER JOIN
										  dbo.DATA0071 ON dbo.DATA0070.RKEY = dbo.DATA0071.PO_PTR LEFT OUTER JOIN
										  dbo.DATA0108 INNER JOIN
										  dbo.DATA0107 ON dbo.DATA0108.DATA0107_PTR = dbo.DATA0107.RKEY ON dbo.DATA0071.RKEY = dbo.DATA0108.DATA0071_PTR
					WHERE     (dbo.DATA0071.INVT_PTR = tblAuBad.D17_PTR)
				) AS tblEK
				WHERE EKDATE>= CONVERT(DATETIME, '24.10.2014', 103)  AND EKDATE<= CONVERT(DATETIME, @para5, 103) 
			), 0) AS DEK_Preis_Ges

		FROM
			@tblAuBad AS tblAuBad
		ORDER BY DatumVon

	END

	IF @Case_ = 'Uebersicht_Golbad_Ges'
	BEGIN

		--DECLARE 
		--@para4 varchar(255),
		--@para5 varchar(255)
		--SET @para4 = '20.10.2014'	--Datum Von
		--SET @para5 = '26.05.2015'	--Datum Bis
		--Reiniger---------------------------------------------------------------------------
		DECLARE @tblAuReinigerAuGes table(D17_PTR NUMERIC(10, 0))
		INSERT @tblAuReinigerAuGes(D17_PTR)
		SELECT  DISTINCT dbo.DATA0017.RKEY AS D17_PTR
		FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
                      LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
                      LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
                      dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
                      dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
                      dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
                      LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
                      dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
		WHERE      dbo.DATA0017.ACTIVE_FLAG='Y' AND (LIVE2.dbo.MatRueck_Anlage.ID = 34) --Au-Reiniger
					AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(1 AS bit)
		---------------------------------------------------------------------------------------

		--Aktivator---------------------------------------------------------------------------
		DECLARE @tblAuAktivatorAuGes table(D17_PTR NUMERIC(10, 0))
		INSERT @tblAuAktivatorAuGes(D17_PTR)
		SELECT  DISTINCT dbo.DATA0017.RKEY AS D17_PTR
		FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
                      LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
                      LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
                      dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
                      dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
                      dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
                      LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
                      dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
		WHERE      dbo.DATA0017.ACTIVE_FLAG='Y' AND (LIVE2.dbo.MatRueck_Anlage.Anlage = 'Au-Aktivator')
					AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(1 AS bit)
		---------------------------------------------------------------------------------------

		--Nickelbad---------------------------------------------------------------------------
		DECLARE @tblAuNickelbadAuGes table(D17_PTR NUMERIC(10, 0))
		INSERT @tblAuNickelbadAuGes(D17_PTR)
		SELECT  DISTINCT dbo.DATA0017.RKEY AS D17_PTR
		FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
                      LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
                      LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
                      dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
                      dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
                      dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
                      LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
                      dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
		WHERE      dbo.DATA0017.ACTIVE_FLAG='Y' AND (LIVE2.dbo.MatRueck_Anlage.Anlage = 'Au-Nickelbad')
					AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(1 AS bit)
		---------------------------------------------------------------------------------------

		--Cupra Etch---------------------------------------------------------------------------
		DECLARE @tblVorreinigungCupraAuGes table(D17_PTR NUMERIC(10, 0))
		INSERT @tblVorreinigungCupraAuGes(D17_PTR)
		SELECT  DISTINCT dbo.DATA0017.RKEY AS D17_PTR
		FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
                      LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
                      LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
                      dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
                      dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
                      dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
                      LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
                      dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
		WHERE      dbo.DATA0017.ACTIVE_FLAG='Y' AND (LIVE2.dbo.MatRueck_Anlage.ID = 43)
					AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(1 AS bit)
		---------------------------------------------------------------------------------------

		--Harze---------------------------------------------------------------------------
		DECLARE @tblAuHarzeAuGes table(D17_PTR NUMERIC(10, 0))
		INSERT @tblAuHarzeAuGes(D17_PTR)
		SELECT  DISTINCT dbo.DATA0017.RKEY AS D17_PTR
		FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
                      LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
                      LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
                      dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
                      dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
                      dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
                      LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
                      dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
		WHERE      dbo.DATA0017.ACTIVE_FLAG='Y' AND (LIVE2.dbo.MatRueck_Anlage.ID = 144) --Au-Harze
					AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(1 AS bit)
		---------------------------------------------------------------------------------------

		DECLARE @tblVerbrauchGes table(Anlage char(40), IstVerbrauch_EUR NUMERIC(10, 4))

		---------------------------------------------------------------------------------------

		INSERT @tblVerbrauchGes(Anlage, IstVerbrauch_EUR)
		SELECT	
			'Reiniger' AS Anlage,
			(
				(
					ISNULL((
						SELECT TOP 1 SUM(ISNULL(QUANTITY, 0)) AS RES
						FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
						WHERE dbo.DATA0095.TRAN_TP IN (15, 16) AND dbo.DATA0034.DEPT_CODE = 'CNG-01-04'
						AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
						AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
						AND dbo.DATA0095.INVT_PTR = tblAuReinigerAuGes.D17_PTR
					), 0) 
					+
					ISNULL((
						SELECT TOP 1
							ISNULL((
								(-1)*SUM(QUANTITY) 
								*
								ISNULL((
									SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
									FROM LIVE2.dbo.NachKalk_MatVerteilung
									WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = 34
											AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = tblAuReinigerAuGes.D17_PTR
								), 1) 
							), 0) AS RES 

						FROM 
							dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
						WHERE 
							dbo.DATA0095.TRAN_TP = 23
							AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
							AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
							AND dbo.DATA0095.INVT_PTR = tblAuReinigerAuGes.D17_PTR
					), 0)
				)
				*
				ISNULL((SELECT TOP 1 STD_COST FROM dbo.DATA0017 WHERE dbo.DATA0017.RKEY=tblAuReinigerAuGes.D17_PTR), 0) 
			) AS IstVerbrauch_EUR
		FROM @tblAuReinigerAuGes AS tblAuReinigerAuGes
/*
		SELECT
			'Reiniger' AS Anlage,
			VerrPreis * ISNULL(QUANTITY, 0) AS IstVerbrauch_EUR
		FROM
		(
			SELECT     LIVE2.dbo.MatRueck_Anlage.ID AS Anlage_PTR, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY AS D17_RKEY, 
						dbo.DATA0017.INV_PART_DESCRIPTION AS ArtBezeichnung,
						dbo.DATA0002.UNIT_CODE AS Lagereinheit, dbo.DATA0017.STOCK_PURCH, dbo.DATA0017.STD_COST AS VerrPreis
			FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
					  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
					  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
					  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
					  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
					  dbo.DATA0034 ON LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR = dbo.DATA0034.RKEY
			WHERE dbo.DATA0034.DEPT_CODE = 'CNG-01-04'
			GROUP BY LIVE2.dbo.MatRueck_Anlage.ID, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY, 
					dbo.DATA0017.INV_PART_DESCRIPTION , dbo.DATA0017.STOCK_PURCH, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STD_COST 
			HAVING LIVE2.dbo.MatRueck_Anlage.ID = 34
		) AS tblAnlageArtikel INNER JOIN --LEFT OUTER JOIN 
		(SELECT dbo.DATA0095.RKEY AS D95_PTR, QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, TTIME, MONTH(TRAN_DATE) AS Monat, TRAN_TP,
				dbo.DATA0095.REFERENCE_NUMBER 
		FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
		WHERE dbo.DATA0095.TRAN_TP IN (15, 16, 23) AND dbo.DATA0034.DEPT_CODE = 'CNG-01-04'
		AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
		AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
		AND dbo.DATA0095.INVT_PTR IN (SELECT D17_PTR FROM @tblAuReinigerAuGes AS tblRitzenArtikelChrono) 
		) AS tblDATA0095 
		ON tblAnlageArtikel.D17_RKEY = tblDATA0095.INVT_PTR
*/

		UNION ALL

		SELECT	
			'Aktivator' AS Anlage,
			(
				(
					ISNULL((
						SELECT TOP 1 SUM(ISNULL(QUANTITY, 0)) AS RES
						FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
						WHERE dbo.DATA0095.TRAN_TP IN (15, 16) AND dbo.DATA0034.DEPT_CODE = 'CNG-01-02'
						AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
						AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
						AND dbo.DATA0095.INVT_PTR = tblAuAktivatorAuGes.D17_PTR
					), 0) 
					+
					ISNULL((
						SELECT TOP 1
							ISNULL((
								(-1)*SUM(QUANTITY) 
								*
								ISNULL((
									SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
									FROM LIVE2.dbo.NachKalk_MatVerteilung
									WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = 32
											AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = tblAuAktivatorAuGes.D17_PTR
								), 1) 
							), 0) AS RES 

						FROM 
							dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
						WHERE 
							dbo.DATA0095.TRAN_TP = 23
							AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
							AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
							AND dbo.DATA0095.INVT_PTR = tblAuAktivatorAuGes.D17_PTR
					), 0)
				)
				*
				ISNULL((SELECT TOP 1 STD_COST FROM dbo.DATA0017 WHERE dbo.DATA0017.RKEY=tblAuAktivatorAuGes.D17_PTR), 0) 
			) AS IstVerbrauch_EUR
		FROM @tblAuAktivatorAuGes AS tblAuAktivatorAuGes

		UNION ALL

		SELECT	
			'Nickelbad' AS Anlage,
			(
				(
					ISNULL((
						SELECT TOP 1 SUM(ISNULL(QUANTITY, 0)) AS RES
						FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
						WHERE dbo.DATA0095.TRAN_TP IN (15, 16) AND dbo.DATA0034.DEPT_CODE = 'CNG-01-03'
						AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
						AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
						AND dbo.DATA0095.INVT_PTR = tblAuNickelbadAuGes.D17_PTR
					), 0) 
					+
					ISNULL((
						SELECT TOP 1
							ISNULL((
								(-1)*SUM(QUANTITY) 
								*
								ISNULL((
									SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
									FROM LIVE2.dbo.NachKalk_MatVerteilung
									WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = 33
											AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = tblAuNickelbadAuGes.D17_PTR
								), 1) 
							), 0) AS RES 

						FROM 
							dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
						WHERE 
							dbo.DATA0095.TRAN_TP = 23
							AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
							AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
							AND dbo.DATA0095.INVT_PTR = tblAuNickelbadAuGes.D17_PTR
					), 0)
				)
				*
				ISNULL((SELECT TOP 1 STD_COST FROM dbo.DATA0017 WHERE dbo.DATA0017.RKEY=tblAuNickelbadAuGes.D17_PTR), 0) 
			) AS IstVerbrauch_EUR
		FROM @tblAuNickelbadAuGes AS tblAuNickelbadAuGes

		UNION ALL

		SELECT	
			'Cupra Etch' AS Anlage,
			(
				(
					ISNULL((
						SELECT TOP 1 SUM(ISNULL(QUANTITY, 0)) AS RES
						FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
						WHERE dbo.DATA0095.TRAN_TP IN (15, 16) AND dbo.DATA0034.DEPT_CODE = 'CGIN-CV-01'
						AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
						AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
						AND dbo.DATA0095.INVT_PTR = tblVorreinigungCupraAuGes.D17_PTR
					), 0) 
					+
					ISNULL((
						SELECT TOP 1
							ISNULL((
								(-1)*SUM(QUANTITY) 
								*
								ISNULL((
									SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
									FROM LIVE2.dbo.NachKalk_MatVerteilung
									WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = 43
											AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = tblVorreinigungCupraAuGes.D17_PTR
								), 1) 
							), 0) AS RES 

						FROM 
							dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
						WHERE 
							dbo.DATA0095.TRAN_TP = 23
							AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
							AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
							AND dbo.DATA0095.INVT_PTR = tblVorreinigungCupraAuGes.D17_PTR
					), 0)
				)
				*
				ISNULL((SELECT TOP 1 STD_COST FROM dbo.DATA0017 WHERE dbo.DATA0017.RKEY=tblVorreinigungCupraAuGes.D17_PTR), 0) 
			) AS IstVerbrauch_EUR
		FROM @tblVorreinigungCupraAuGes AS tblVorreinigungCupraAuGes

		UNION ALL

		SELECT	
			'Harze' AS Anlage,
			(
				(
					ISNULL((
						SELECT TOP 1 SUM(ISNULL(QUANTITY, 0)) AS RES
						FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
						WHERE dbo.DATA0095.TRAN_TP IN (15, 16) AND dbo.DATA0034.DEPT_CODE IN ('CNG-01-01', 'CNG-01-06')
						AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
						AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
						AND dbo.DATA0095.INVT_PTR = tblAuHarzeAuGes .D17_PTR
					), 0) 
					+
					ISNULL((
						SELECT TOP 1
							ISNULL((
								(-1)*SUM(QUANTITY) 
								*
								ISNULL((
									SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
									FROM LIVE2.dbo.NachKalk_MatVerteilung
									WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = 144
											AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = tblAuHarzeAuGes .D17_PTR
								), 1) 
							), 0) AS RES 

						FROM 
							dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
						WHERE 
							dbo.DATA0095.TRAN_TP = 23
							AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
							AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
							AND dbo.DATA0095.INVT_PTR = tblAuHarzeAuGes .D17_PTR
					), 0)
				)
				*
				ISNULL((SELECT TOP 1 STD_COST FROM dbo.DATA0017 WHERE dbo.DATA0017.RKEY=tblAuHarzeAuGes .D17_PTR), 0) 
			) AS IstVerbrauch_EUR
		FROM @tblAuHarzeAuGes AS tblAuHarzeAuGes 



		SELECT Anlage, SUM(IstVerbrauch_EUR) AS VerbEur FROM @tblVerbrauchGes GROUP BY Anlage

	END

	IF @Case_ = 'Matverbrauch_FraesUnter'
	BEGIN
		--DECLARE 
		--@para4 varchar(255),
		--@para5 varchar(255)
		--SET @para4 = '01.01.2015'	--Datum Von
		--SET @para5 = '31.05.2015'	--Datum Bis


		DECLARE @tblDurchsatzFraesUnter table(
												DEPT_CODE char(10), 
												Durchsatz NUMERIC(10, 4),
												BzgGr varchar(20)
											)


		INSERT @tblDurchsatzFraesUnter(DEPT_CODE, Durchsatz, BzgGr)
		SELECT
			'FRÄS' AS DEPT_CODE,
			ISNULL((
					SELECT TOP 1 
						COUNT(WORK_ORDER_NUMBER) AS RES
					FROM
					(
						SELECT DISTINCT dbo.DATA0006.WORK_ORDER_NUMBER   
							--SUM(
							--	(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
							--	/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000)) 
							--AS RES
						FROM         dbo.DATA0006 INNER JOIN
											  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
											  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
											  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
											  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
											  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
						WHERE     (dbo.DATA0038.TTYPE = 2) AND
									(dbo.DATA0048.TDATE >=CONVERT(DATETIME, @para4, 103)) 
									AND (dbo.DATA0048.TDATE <=CONVERT(DATETIME, @para5, 103)) 
									AND LEFT(dbo.DATA0034.DEPT_CODE, 5) = 'FRÄS-'
					) AS tblAnzFA
			), 0) AS Durchsatz,
			--'Zu-m2' AS BzgGr
			'Fräs FA' AS BzgGr


		DECLARE @tblAnlageArtikelFraesUnter table(
											D17_PTR NUMERIC(10, 0),
											Abteilung varchar(250),
											Anlage varchar(250),
											Artikel char(20), 
											Bezeichnung char(40), 
											VerbrauchSOLL DECIMAL(20, 7),
											VerrPreis DECIMAL(20, 7),
											LagerEinheit varchar(5)
											)

		INSERT @tblAnlageArtikelFraesUnter(D17_PTR, Abteilung, Anlage, Artikel, Bezeichnung, VerbrauchSOLL, VerrPreis, LagerEinheit)
		SELECT  DISTINCT dbo.DATA0017.RKEY AS D17_PTR, LIVE2.dbo.MatRueck_Abteilung.Abteilung, 
				'Fräsunterlagen' AS Anlage, --LIVE2.dbo.MatRueck_Anlage.Anlage, 
				dbo.DATA0017.INV_PART_NUMBER AS Artikel, 
				dbo.DATA0017.INV_PART_DESCRIPTION AS Bezeichnung, 
				LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, 
				dbo.DATA0017.STD_COST AS VerrPreis,
				dbo.DATA0002.UNIT_CODE AS LagerEinheit
		FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
					  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
					  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
					  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
					  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
					  dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
					  LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
					  dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
		GROUP BY dbo.DATA0017.RKEY, LIVE2.dbo.MatRueck_Abteilung.Abteilung, LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID,
				dbo.DATA0017.INV_PART_NUMBER, dbo.DATA0017.INV_PART_DESCRIPTION, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STOCK_PURCH, 
				dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE, dbo.DATA0017.CONSIGN_ONHAND_QTY,
				dbo.DATA0017.ACTIVE_FLAG, dbo.DATA0017.STD_COST, LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial
		HAVING      dbo.DATA0017.ACTIVE_FLAG='Y' --AND (LIVE2.dbo.MatRueck_Anlage.ID IN (57, 58, 59, 60)) --Max 9000
					--AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(0 AS bit)
					AND dbo.DATA0017.INV_PART_NUMBER LIKE 'FRÄS-UNTERLAGEN%'

--SELECT * FROM @tblAnlageArtikelFDgalvAu

		SELECT
			Abteilung, 
			Anlage, 
			Artikel, 
			Bezeichnung, 
			Verbrauch,
			Durchsatz,
			Verbrauch*VerrPreis AS abs_Kosten,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch*VerrPreis)/Durchsatz 
				ELSE
					0
			END AS rel_Kosten,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch*VerrPreis)/Durchsatz*100 
				ELSE
					0
			END AS KS_IstKosten,
			VerrPreis*VerbrauchSOLL*100 AS SollKosten,
			CASE
				WHEN (VerrPreis*VerbrauchSOLL*100)>0 AND Durchsatz>0 THEN
					(((Verbrauch*VerrPreis)/Durchsatz*100)-(VerrPreis*VerbrauchSOLL*100.000000))/(VerrPreis*VerbrauchSOLL*100.000000) 
				ELSE
					0
			END AS Abweichung,
			(Verbrauch*VerrPreis)-(VerrPreis*Durchsatz*VerbrauchSOLL) AS MehrMinderKosten,
			(Verbrauch*VerrPreis) AS IstKosten,
			VerrPreis,
			CAST(VerbrauchSOLL*100.000000 AS DECIMAL(20, 7)) AS SollV_100,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch/Durchsatz)*100.000000 
				ELSE
					0
			END AS IstV_100,
			BzgGr,
			LagerEinheit,
			ISNULL((
					SELECT TOP 1 CASE WHEN LTRIM(RTRIM(ISNULL(ANALYSIS_CODE5, '')))='' THEN '0' ELSE ANALYSIS_CODE5 END
					 FROM dbo.DATA0017 WHERE RKEY = D17_PTR)
			, 0) AS MatFl,
			(
				SELECT TOP 1 CASE WHEN LTRIM(RTRIM(ISNULL(ANALYSIS_CODE1, '')))='' THEN '0' ELSE ANALYSIS_CODE1 END
				FROM dbo.DATA0017 WHERE RKEY = D17_PTR
			) AS AC_01,
			ISNULL((
					SELECT TOP 1
						--SUM(CAST(QUANTITY AS NUMERIC(10, 4)) * CAST(PRICE AS NUMERIC(10, 4)) / CAST(EX_RATE AS NUMERIC(10, 4))) / SUM(CAST(QUANTITY AS NUMERIC(10, 4))) AS DMon_Preis
						(
							SUM(CAST(QUANTITY AS NUMERIC(10, 4)) * CAST(PRICE AS NUMERIC(10, 4)) / CAST(EX_RATE AS NUMERIC(10, 4)))
							-
							SUM(CAST(QUANTITY AS NUMERIC(10, 4)) * CAST(STD_COST AS NUMERIC(10, 4)))
						) AS RES

					FROM
					(
						SELECT     
							CASE 
								WHEN ISNULL(dbo.DATA0108.PRICE, 0)>0 THEN
									ISNULL(dbo.DATA0108.QUANTITY, 0)
								ELSE
									ISNULL(dbo.DATA0071.QUAN_ORD, 0)
							END AS QUANTITY,
							CASE 
								WHEN ISNULL(dbo.DATA0108.PRICE, 0)>0 THEN
									ISNULL(dbo.DATA0108.PRICE, 0)
								ELSE
									ISNULL(dbo.DATA0071.PRICE, 0)
							END AS PRICE,
							CASE 
								WHEN ISNULL(dbo.DATA0108.PRICE, 0)>0 THEN
									ISNULL(dbo.DATA0107.EX_RATE, 0)
								ELSE
									ISNULL(dbo.DATA0070.EXCHANGE_RATE, 0)
							END AS EX_RATE,
							dbo.DATA0017.STD_COST,
							dbo.DATA0107.INV_DATE,
							dbo.DATA0070.PO_DATE,
							dbo.DATA0071.INVT_PTR

						FROM         dbo.DATA0070 INNER JOIN
							  dbo.DATA0071 ON dbo.DATA0070.RKEY = dbo.DATA0071.PO_PTR INNER JOIN
							  dbo.DATA0017 ON dbo.DATA0071.INVT_PTR = dbo.DATA0017.RKEY LEFT OUTER JOIN
							  dbo.DATA0108 INNER JOIN
							  dbo.DATA0107 ON dbo.DATA0108.DATA0107_PTR = dbo.DATA0107.RKEY ON dbo.DATA0071.RKEY = dbo.DATA0108.DATA0071_PTR
						WHERE     --(dbo.DATA0071.INVT_PTR = tblAnlageArtikel_.D17_PTR) 
								(dbo.DATA0107.INV_DATE >= CONVERT(DATETIME, @para4, 103) AND dbo.DATA0107.INV_DATE <= CONVERT(DATETIME, @para5, 103))  --AND MONTH(INV_DATE) = tblPruefSpitz.Monat) 
								OR
								(dbo.DATA0070.PO_DATE >= CONVERT(DATETIME, @para4, 103) AND dbo.DATA0070.PO_DATE <= CONVERT(DATETIME, @para5, 103)) 
					) AS tblPreis
					WHERE
							INVT_PTR = tblJeAnlage.D17_PTR
							--AND
							--	(YEAR(INV_DATE) = YEAR(CONVERT(DATETIME, @para5, 103)))  --AND MONTH(INV_DATE) = tblPruefSpitz.Monat) 
							--	OR
							--	(YEAR(PO_DATE) = YEAR(CONVERT(DATETIME, @para5, 103))) -- AND MONTH(PO_DATE) = tblPruefSpitz.Monat)
			), 0) AS Preisabweichung

		FROM
		(
			SELECT 
				D17_PTR, 
				Abteilung, 
				Anlage, 
				Artikel, 
				Bezeichnung, 
				VerbrauchSOLL,
				(
					ISNULL((
						SELECT 
							SUM(ISNULL(QUANTITY, 0)) AS RES

						FROM 
							dbo.DATA0095 
						WHERE 
							dbo.DATA0095.TRAN_TP IN (15, 16)
							AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
							AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  
							AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR 
					), 0)
					+
					ISNULL((
						SELECT 
							(-1)*SUM(QUANTITY) AS RES
							--ISNULL((
							--	(-1)*SUM(QUANTITY) 
							--	*
							--	ISNULL((
							--		SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
							--		FROM LIVE2.dbo.NachKalk_MatVerteilung
							--		WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = 18
							--				AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = tblAnlageArtikel_.D17_PTR
							--	), 0) 
							--), 0) AS RES 

						FROM 
							dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
						WHERE 
							dbo.DATA0095.TRAN_TP = 23
							AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
							AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
							AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR
					), 0) 
				) AS Verbrauch,
				ISNULL((SELECT TOP 1 Durchsatz FROM @tblDurchsatzFraesUnter), 0) AS Durchsatz,
				ISNULL((SELECT TOP 1 BzgGr FROM @tblDurchsatzFraesUnter), 0) AS BzgGr,
				VerrPreis,
				LagerEinheit

			FROM @tblAnlageArtikelFraesUnter AS tblAnlageArtikel_
		) AS tblJeAnlage
		ORDER BY IstKosten DESC
	END

	IF @Case_ = 'Matverbrauch_EPPlexi'
	BEGIN
		--DECLARE 
		--@para4 varchar(255),
		--@para5 varchar(255)
		--SET @para4 = '01.01.2015'	--Datum Von
		--SET @para5 = '31.05.2015'	--Datum Bis

/*
		DECLARE @tblDurchsatzEPPlexi table(
												DEPT_CODE char(10), 
												Durchsatz NUMERIC(10, 4),
												BzgGr varchar(20)
											)


		INSERT @tblDurchsatzEPPlexi(DEPT_CODE, Durchsatz, BzgGr)
		SELECT
			'FOTO-REST' AS DEPT_CODE,
			ISNULL((
				SELECT TOP 1    
					SUM(
						(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
						/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000)) 
					AS RES
		FROM         dbo.DATA0006 INNER JOIN
							  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
							  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
							  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
							  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
							  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
		WHERE     (dbo.DATA0038.TTYPE = 2) AND
					(dbo.DATA0048.TDATE >=CONVERT(DATETIME, @para4, 103)) 
					AND (dbo.DATA0048.TDATE <=CONVERT(DATETIME, @para5, 103)) 
					AND dbo.DATA0034.DEPT_CODE IN ('FOTO-01-01', 'FOTO-01-02', 'FOTO-02-02')
			), 0) AS Durchsatz,
			'Zu-m2' AS BzgGr
*/

--SELECT * FROM @tblDurchsatz

		DECLARE @tblAnlageArtikelEPPlexi table(
											D17_PTR NUMERIC(10, 0),
											Abteilung varchar(250),
											Anlage varchar(250),
											Artikel char(20), 
											Bezeichnung char(40), 
											VerbrauchSOLL DECIMAL(20, 7),
											VerrPreis DECIMAL(20, 7),
											LagerEinheit varchar(5)
											)

		INSERT @tblAnlageArtikelEPPlexi(D17_PTR, Abteilung, Anlage, Artikel, Bezeichnung, VerbrauchSOLL, VerrPreis, LagerEinheit)
		SELECT  DISTINCT dbo.DATA0017.RKEY AS D17_PTR, LIVE2.dbo.MatRueck_Abteilung.Abteilung, 
				'EP Plexi' AS Anlage, --LIVE2.dbo.MatRueck_Anlage.Anlage, 
				dbo.DATA0017.INV_PART_NUMBER AS Artikel, 
				dbo.DATA0017.INV_PART_DESCRIPTION AS Bezeichnung, 
				LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, 
				dbo.DATA0017.STD_COST AS VerrPreis,
				dbo.DATA0002.UNIT_CODE AS LagerEinheit
		FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
					  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
					  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
					  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
					  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
					  dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
					  LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
					  dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
		GROUP BY dbo.DATA0017.RKEY, LIVE2.dbo.MatRueck_Abteilung.Abteilung, LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID,
				dbo.DATA0017.INV_PART_NUMBER, dbo.DATA0017.INV_PART_DESCRIPTION, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STOCK_PURCH, 
				dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE, dbo.DATA0017.CONSIGN_ONHAND_QTY,
				dbo.DATA0017.ACTIVE_FLAG, dbo.DATA0017.STD_COST, LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial
		HAVING      dbo.DATA0017.ACTIVE_FLAG='Y' --AND (LIVE2.dbo.MatRueck_Anlage.ID IN (57, 58, 59, 60)) --Max 9000
					--AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(0 AS bit)
					AND dbo.DATA0017.INV_PART_NUMBER LIKE 'PLEXIGLAS%'

--SELECT * FROM @tblAnlageArtikelFDgalvAu

		SELECT
			Abteilung, 
			Anlage, 
			Artikel, 
			Bezeichnung, 
			Verbrauch,
			Durchsatz,
			Verbrauch*VerrPreis AS abs_Kosten,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch*VerrPreis)/Durchsatz 
				ELSE
					0
			END AS rel_Kosten,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch*VerrPreis)/Durchsatz*100 
				ELSE
					0
			END AS KS_IstKosten,
			VerrPreis*VerbrauchSOLL*100 AS SollKosten,
			CASE
				WHEN (VerrPreis*VerbrauchSOLL*100)>0 AND Durchsatz>0 THEN
					(((Verbrauch*VerrPreis)/Durchsatz*100)-(VerrPreis*VerbrauchSOLL*100.000000))/(VerrPreis*VerbrauchSOLL*100.000000) 
				ELSE
					0
			END AS Abweichung,
			(Verbrauch*VerrPreis)-(VerrPreis*Durchsatz*VerbrauchSOLL) AS MehrMinderKosten,
			(Verbrauch*VerrPreis) AS IstKosten,
			VerrPreis,
			CAST(VerbrauchSOLL*100.000000 AS DECIMAL(20, 7)) AS SollV_100,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch/Durchsatz)*100.000000 
				ELSE
					0
			END AS IstV_100,
			BzgGr,
			LagerEinheit,
			ISNULL((
					SELECT TOP 1 CASE WHEN LTRIM(RTRIM(ISNULL(ANALYSIS_CODE5, '')))='' THEN '0' ELSE ANALYSIS_CODE5 END
					 FROM dbo.DATA0017 WHERE RKEY = D17_PTR)
			, 0) AS MatFl,
			(
				SELECT TOP 1 CASE WHEN LTRIM(RTRIM(ISNULL(ANALYSIS_CODE1, '')))='' THEN '0' ELSE ANALYSIS_CODE1 END
				FROM dbo.DATA0017 WHERE RKEY = D17_PTR
			) AS AC_01,
			ISNULL((
					SELECT TOP 1
						--SUM(CAST(QUANTITY AS NUMERIC(10, 4)) * CAST(PRICE AS NUMERIC(10, 4)) / CAST(EX_RATE AS NUMERIC(10, 4))) / SUM(CAST(QUANTITY AS NUMERIC(10, 4))) AS DMon_Preis
						(
							SUM(CAST(QUANTITY AS NUMERIC(10, 4)) * CAST(PRICE AS NUMERIC(10, 4)) / CAST(EX_RATE AS NUMERIC(10, 4)))
							-
							SUM(CAST(QUANTITY AS NUMERIC(10, 4)) * CAST(STD_COST AS NUMERIC(10, 4)))
						) AS RES

					FROM
					(
						SELECT     
							CASE 
								WHEN ISNULL(dbo.DATA0108.PRICE, 0)>0 THEN
									ISNULL(dbo.DATA0108.QUANTITY, 0)
								ELSE
									ISNULL(dbo.DATA0071.QUAN_ORD, 0)
							END AS QUANTITY,
							CASE 
								WHEN ISNULL(dbo.DATA0108.PRICE, 0)>0 THEN
									ISNULL(dbo.DATA0108.PRICE, 0)
								ELSE
									ISNULL(dbo.DATA0071.PRICE, 0)
							END AS PRICE,
							CASE 
								WHEN ISNULL(dbo.DATA0108.PRICE, 0)>0 THEN
									ISNULL(dbo.DATA0107.EX_RATE, 0)
								ELSE
									ISNULL(dbo.DATA0070.EXCHANGE_RATE, 0)
							END AS EX_RATE,
							dbo.DATA0017.STD_COST,
							dbo.DATA0107.INV_DATE,
							dbo.DATA0070.PO_DATE,
							dbo.DATA0071.INVT_PTR

						FROM         dbo.DATA0070 INNER JOIN
							  dbo.DATA0071 ON dbo.DATA0070.RKEY = dbo.DATA0071.PO_PTR INNER JOIN
							  dbo.DATA0017 ON dbo.DATA0071.INVT_PTR = dbo.DATA0017.RKEY LEFT OUTER JOIN
							  dbo.DATA0108 INNER JOIN
							  dbo.DATA0107 ON dbo.DATA0108.DATA0107_PTR = dbo.DATA0107.RKEY ON dbo.DATA0071.RKEY = dbo.DATA0108.DATA0071_PTR
						WHERE     --(dbo.DATA0071.INVT_PTR = tblAnlageArtikel_.D17_PTR) 
								(dbo.DATA0107.INV_DATE >= CONVERT(DATETIME, @para4, 103) AND dbo.DATA0107.INV_DATE <= CONVERT(DATETIME, @para5, 103))  --AND MONTH(INV_DATE) = tblPruefSpitz.Monat) 
								OR
								(dbo.DATA0070.PO_DATE >= CONVERT(DATETIME, @para4, 103) AND dbo.DATA0070.PO_DATE <= CONVERT(DATETIME, @para5, 103)) 
					) AS tblPreis
					WHERE
							INVT_PTR = tblJeAnlage.D17_PTR
							--AND
							--	(YEAR(INV_DATE) = YEAR(CONVERT(DATETIME, @para5, 103)))  --AND MONTH(INV_DATE) = tblPruefSpitz.Monat) 
							--	OR
							--	(YEAR(PO_DATE) = YEAR(CONVERT(DATETIME, @para5, 103))) -- AND MONTH(PO_DATE) = tblPruefSpitz.Monat)
			), 0) AS Preisabweichung

		FROM
		(
			SELECT 
				D17_PTR, 
				Abteilung, 
				Anlage, 
				Artikel, 
				Bezeichnung, 
				VerbrauchSOLL,
				(
					ISNULL((
/*
						SELECT
							SUM(ISNULL(tblDATA0095.QUANTITY, 0)) AS RES
						FROM
						(
							SELECT     LIVE2.dbo.MatRueck_Anlage.ID AS Anlage_PTR, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY AS D17_RKEY, dbo.DATA0017.INV_PART_DESCRIPTION AS ArtBezeichnung,
										dbo.DATA0002.UNIT_CODE AS Lagereinheit, dbo.DATA0017.STOCK_PURCH 
							FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
									  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
									  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
									  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
									  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
									  dbo.DATA0034 ON LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR = dbo.DATA0034.RKEY
							WHERE dbo.DATA0017.INV_PART_NUMBER LIKE 'PLEXIGLAS%' --dbo.DATA0034.DEPT_CODE IN ('FOTO-01-01', 'FOTO-01-02', 'FOTO-01-03') --@para2
							GROUP BY LIVE2.dbo.MatRueck_Anlage.ID, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY, dbo.DATA0017.INV_PART_DESCRIPTION , dbo.DATA0017.STOCK_PURCH, dbo.DATA0002.UNIT_CODE 
							--HAVING LIVE2.dbo.MatRueck_Anlage.ID IN (58, 59, 60)--(LIVE2.dbo.MatRueck_Anlage.Anlage = @Anlage)
						) AS tblAnlageArtikel INNER JOIN --LEFT OUTER JOIN 
						(SELECT QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, MONTH(TRAN_DATE) AS Monat, TRAN_TP 
						--FROM dbo.DATA0095 INNER JOIN  dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY 
						FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
						WHERE dbo.DATA0095.TRAN_TP IN (15, 16) AND dbo.DATA0095.INVT_PTR IN (SELECT D17_PTR FROM @tblAnlageArtikelEPPlexi)
						AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
						AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR ) AS tblDATA0095 
						ON tblAnlageArtikel.D17_RKEY = tblDATA0095.INVT_PTR
*/
						SELECT 
							SUM(ISNULL(QUANTITY, 0)) AS RES

						FROM 
							dbo.DATA0095 
						WHERE 
							dbo.DATA0095.TRAN_TP IN (15, 16)
							AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
							AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  
							AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR 
					), 0)
					+
					ISNULL((
						SELECT 
							(-1)*SUM(QUANTITY) AS RES
							--ISNULL((
							--	(-1)*SUM(QUANTITY) 
							--	*
							--	ISNULL((
							--		SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
							--		FROM LIVE2.dbo.NachKalk_MatVerteilung
							--		WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = 18
							--				AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = tblAnlageArtikel_.D17_PTR
							--	), 0) 
							--), 0) AS RES 

						FROM 
							dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
						WHERE 
							dbo.DATA0095.TRAN_TP = 23
							AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
							AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
							AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR
					), 0) 
				) AS Verbrauch,
				--ISNULL((SELECT TOP 1 Durchsatz FROM @tblDurchsatzFDRest), 0) AS Durchsatz,
				--ISNULL((SELECT TOP 1 BzgGr FROM @tblDurchsatzFDRest), 0) AS BzgGr,
				0 AS Durchsatz,
				0 AS BzgGr,
				VerrPreis,
				LagerEinheit

			FROM @tblAnlageArtikelEPPlexi AS tblAnlageArtikel_
		) AS tblJeAnlage
		ORDER BY IstKosten DESC
	END

	IF @Case_ = 'Matverbrauch_Inst'
	BEGIN
		--DECLARE 
		--@para4 varchar(255),
		--@para5 varchar(255)
		--SET @para4 = '01.01.2015' 
		--SET @para5 = '30.04.2015' 

		DECLARE @tblAnlageArtikelInstandhaltung table(
											D17_PTR NUMERIC(10, 0),
											Abteilung varchar(250),
											Anlage varchar(250),
											Artikel char(20), 
											Bezeichnung char(40), 
											VerbrauchSOLL DECIMAL(20, 7),
											VerrPreis DECIMAL(20, 7),
											LagerEinheit varchar(5)
											)

		INSERT @tblAnlageArtikelInstandhaltung(D17_PTR, Abteilung, Anlage, Artikel, Bezeichnung, VerbrauchSOLL, VerrPreis, LagerEinheit)
		SELECT  DISTINCT dbo.DATA0017.RKEY AS D17_PTR, LIVE2.dbo.MatRueck_Abteilung.Abteilung, 
				'Instandhaltung' AS Anlage, --LIVE2.dbo.MatRueck_Anlage.Anlage, 
				dbo.DATA0017.INV_PART_NUMBER AS Artikel, 
				dbo.DATA0017.INV_PART_DESCRIPTION AS Bezeichnung, 
				LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, 
				dbo.DATA0017.STD_COST AS VerrPreis,
				dbo.DATA0002.UNIT_CODE AS LagerEinheit
		FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
					  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
					  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
					  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
					  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
					  dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
					  LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
					  dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
		GROUP BY dbo.DATA0017.RKEY, LIVE2.dbo.MatRueck_Abteilung.Abteilung, LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID,
				dbo.DATA0017.INV_PART_NUMBER, dbo.DATA0017.INV_PART_DESCRIPTION, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STOCK_PURCH, 
				dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE, dbo.DATA0017.CONSIGN_ONHAND_QTY,
				dbo.DATA0017.ACTIVE_FLAG, dbo.DATA0017.STD_COST, LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial
		HAVING      dbo.DATA0017.ACTIVE_FLAG='Y' AND (LIVE2.dbo.MatRueck_Anlage.ID = 109)
					--AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(1 AS bit)


		SELECT
			*
		FROM
		(
			SELECT
				tblAnlageArtikel_.Bezeichnung,
				(
					ISNULL((
						SELECT
							SUM(ISNULL(tblDATA0095.QUANTITY, 0)) AS RES
						FROM
						(
							SELECT     LIVE2.dbo.MatRueck_Anlage.ID AS Anlage_PTR, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY AS D17_RKEY, dbo.DATA0017.INV_PART_DESCRIPTION AS ArtBezeichnung,
										dbo.DATA0002.UNIT_CODE AS Lagereinheit, dbo.DATA0017.STOCK_PURCH 
							FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
									  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
									  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
									  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
									  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
									  dbo.DATA0034 ON LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR = dbo.DATA0034.RKEY
							--WHERE dbo.DATA0034.DEPT_CODE = 'INST-01-01'
							GROUP BY LIVE2.dbo.MatRueck_Anlage.ID, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY, dbo.DATA0017.INV_PART_DESCRIPTION , dbo.DATA0017.STOCK_PURCH, dbo.DATA0002.UNIT_CODE 
							HAVING LIVE2.dbo.MatRueck_Anlage.ID = 109--(LIVE2.dbo.MatRueck_Anlage.Anlage = @Anlage)
						) AS tblAnlageArtikel INNER JOIN --LEFT OUTER JOIN 
						(SELECT QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, MONTH(TRAN_DATE) AS Monat, TRAN_TP 
						--FROM dbo.DATA0095 INNER JOIN  dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY 
						FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
						WHERE dbo.DATA0095.TRAN_TP IN (15, 16) --AND dbo.DATA0034.DEPT_CODE = 'INST-01-01'
						AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
						AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  
						AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR ) AS tblDATA0095 
						ON tblAnlageArtikel.D17_RKEY = tblDATA0095.INVT_PTR
						--) AS myTblSub	
					), 0)
					+
					ISNULL((
						SELECT 
							ISNULL((
								(-1)*SUM(QUANTITY) 
								*
								ISNULL((
									SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
									FROM LIVE2.dbo.NachKalk_MatVerteilung
									WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = 109
											AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = tblAnlageArtikel_.D17_PTR
								), 0) 
							), 0) AS RES 
						FROM 
								dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
							WHERE 
								dbo.DATA0095.TRAN_TP = 23
								AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
								AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
								AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR
					), 0)
				) AS Verbrauch,
				tblAnlageArtikel_.VerrPreis,
				tblAnlageArtikel_.Lagereinheit,
				(
					SELECT TOP 1 RES 
					FROM
					(
						SELECT TOP 1
							(
								SELECT TOP 1 COUNT(DISTINCT Anlage) AS RES
								FROM         LIVE2.dbo.MatRueck_Anlage INNER JOIN
													  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR
								WHERE     (D17_Art_PTR = tblAnlageArtikel_.D17_PTR)
							) AS Anz,
							(
								SELECT DISTINCT TOP 1 Anlage
								FROM         LIVE2.dbo.MatRueck_Anlage INNER JOIN
													  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR
								WHERE     (D17_Art_PTR = tblAnlageArtikel_.D17_PTR)
								ORDER BY Anlage
							) 
							+
							CASE
								WHEN
									(
										SELECT TOP 1 COUNT(DISTINCT Anlage) AS RES
										FROM         LIVE2.dbo.MatRueck_Anlage INNER JOIN
															  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR
										WHERE     (D17_Art_PTR = tblAnlageArtikel_.D17_PTR)
									)>1 THEN
									', '
									+
									(
										SELECT TOP 1 Anlage
										FROM
										(
											SELECT DISTINCT TOP 2 Anlage
											FROM         LIVE2.dbo.MatRueck_Anlage INNER JOIN
																  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR
											WHERE     (D17_Art_PTR = tblAnlageArtikel_.D17_PTR)
											ORDER BY Anlage 
										) AS tblTop2
										ORDER BY Anlage DESC
									)
								ELSE
									''
							END
							+
							CASE
								WHEN
									(
										SELECT TOP 1 COUNT(DISTINCT Anlage) AS RES
										FROM         LIVE2.dbo.MatRueck_Anlage INNER JOIN
															  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR
										WHERE     (D17_Art_PTR = tblAnlageArtikel_.D17_PTR)
									)>2 THEN
									', '
									+
									(
										SELECT TOP 1 Anlage
										FROM
										(
											SELECT DISTINCT TOP 3 Anlage
											FROM         LIVE2.dbo.MatRueck_Anlage INNER JOIN
																  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR
											WHERE     (D17_Art_PTR = tblAnlageArtikel_.D17_PTR)
											ORDER BY Anlage 
										) AS tblTop3
										ORDER BY Anlage DESC
									)
								ELSE
									''
							END
							+
							CASE
								WHEN
									(
										SELECT TOP 1 COUNT(DISTINCT Anlage) AS RES
										FROM         LIVE2.dbo.MatRueck_Anlage INNER JOIN
															  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR
										WHERE     (D17_Art_PTR = tblAnlageArtikel_.D17_PTR)
									)>3 THEN
									', '
									+
									(
										SELECT TOP 1 Anlage
										FROM
										(
											SELECT DISTINCT TOP 4 Anlage
											FROM         LIVE2.dbo.MatRueck_Anlage INNER JOIN
																  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR
											WHERE     (D17_Art_PTR = tblAnlageArtikel_.D17_PTR)
											ORDER BY Anlage 
										) AS tblTop4
										ORDER BY Anlage DESC
									)
								ELSE
									''
							END
							+
							CASE
								WHEN
									(
										SELECT TOP 1 COUNT(DISTINCT Anlage) AS RES
										FROM         LIVE2.dbo.MatRueck_Anlage INNER JOIN
															  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR
										WHERE     (D17_Art_PTR = tblAnlageArtikel_.D17_PTR)
									)>4 THEN
									', '
									+
									(
										SELECT TOP 1 Anlage
										FROM
										(
											SELECT DISTINCT TOP 5 Anlage
											FROM         LIVE2.dbo.MatRueck_Anlage INNER JOIN
																  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR
											WHERE     (D17_Art_PTR = tblAnlageArtikel_.D17_PTR)
											ORDER BY Anlage 
										) AS tblTop5
										ORDER BY Anlage DESC
									)
								ELSE
									''
							END AS RES
					) AS tblInAnlagen
				) AS InAnlagen

			FROM 
				@tblAnlageArtikelInstandhaltung AS tblAnlageArtikel_
			--ORDER BY
			--	tblAnlageArtikel_.Bezeichnung
		) AS tblInst
		ORDER BY (Verbrauch * VerrPreis) DESC
	END

	IF @Case_ = 'Matverbrauch_FDLamiLB'
	BEGIN
		--DECLARE 
		--@para4 varchar(255),
		--@para5 varchar(255)
		--SET @para4 = '01.01.2015'	--Datum Von
		--SET @para5 = '31.01.2015'	--Datum Bis

		DECLARE @tblDurchsatzFDLamiLB table(
												DEPT_CODE char(10), 
												Durchsatz NUMERIC(10, 4),
												BzgGr varchar(20)
											)


		INSERT @tblDurchsatzFDLamiLB(DEPT_CODE, Durchsatz, BzgGr)
		SELECT
			'LAMI-01-01' AS DEPT_CODE,
			ISNULL((
				SELECT TOP 1    
					SUM(
						(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
						/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000)) 
					AS RES
		FROM         dbo.DATA0006 INNER JOIN
							  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
							  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
							  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
							  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
							  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
		WHERE     (dbo.DATA0038.TTYPE = 2) AND
					(dbo.DATA0048.TDATE >=CONVERT(DATETIME, @para4, 103)) 
					AND (dbo.DATA0048.TDATE <=CONVERT(DATETIME, @para5, 103)) 
					AND LEFT(dbo.DATA0034.DEPT_CODE, 4) = 'LAMI'
					AND (
							(dbo.DATA0038.PARAMETER_2 = '1.Laminat.AL;' OR dbo.DATA0038.PARAMETER_2 = '2.Laminat.AL;')
							OR 
							((dbo.DATA0038.PARAMETER_2 = '' OR dbo.DATA0038.PARAMETER_2 = '.') AND dbo.DATA0006.ROOT_PTR=0)
						)
			), 0) AS Durchsatz,
			'Zu-m2' AS BzgGr

--SELECT * FROM @tblDurchsatz

		DECLARE @tblAnlageArtikelFDLamiLB table(
											D17_PTR NUMERIC(10, 0),
											Abteilung varchar(250),
											Anlage varchar(250),
											Artikel char(20), 
											Bezeichnung char(40), 
											VerbrauchSOLL DECIMAL(20, 7),
											VerrPreis DECIMAL(20, 7),
											LagerEinheit varchar(5)
											)

		INSERT @tblAnlageArtikelFDLamiLB(D17_PTR, Abteilung, Anlage, Artikel, Bezeichnung, VerbrauchSOLL, VerrPreis, LagerEinheit)
		SELECT  DISTINCT dbo.DATA0017.RKEY AS D17_PTR, LIVE2.dbo.MatRueck_Abteilung.Abteilung, 
				'Laminieren LB' AS Anlage, --LIVE2.dbo.MatRueck_Anlage.Anlage, 
				dbo.DATA0017.INV_PART_NUMBER AS Artikel, 
				dbo.DATA0017.INV_PART_DESCRIPTION AS Bezeichnung, 
				LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, 
				dbo.DATA0017.STD_COST AS VerrPreis,
				dbo.DATA0002.UNIT_CODE AS LagerEinheit
		FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
					  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
					  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
					  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
					  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
					  dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
					  LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
					  dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
		GROUP BY dbo.DATA0017.RKEY, LIVE2.dbo.MatRueck_Abteilung.Abteilung, LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID,
				dbo.DATA0017.INV_PART_NUMBER, dbo.DATA0017.INV_PART_DESCRIPTION, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STOCK_PURCH, 
				dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE, dbo.DATA0017.CONSIGN_ONHAND_QTY,
				dbo.DATA0017.ACTIVE_FLAG, dbo.DATA0017.STD_COST, LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial
		HAVING      --dbo.DATA0017.ACTIVE_FLAG='Y' AND 
					(LIVE2.dbo.MatRueck_Anlage.ID = 28) --Laminieren  LB
					AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(1 AS bit)

--SELECT * FROM @tblAnlageArtikelFDgalvAu

		SELECT
			Abteilung, 
			Anlage, 
			Artikel, 
			Bezeichnung, 
			Verbrauch,
			Durchsatz,
			Verbrauch*VerrPreis AS abs_Kosten,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch*VerrPreis)/Durchsatz 
				ELSE
					0
			END AS rel_Kosten,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch*VerrPreis)/Durchsatz*100 
				ELSE
					0
			END AS KS_IstKosten,
			VerrPreis*VerbrauchSOLL*100 AS SollKosten,
			CASE
				WHEN (VerrPreis*VerbrauchSOLL*100)>0 AND Durchsatz>0 THEN
					(((Verbrauch*VerrPreis)/Durchsatz*100)-(VerrPreis*VerbrauchSOLL*100.000000))/(VerrPreis*VerbrauchSOLL*100.000000) 
				ELSE
					0
			END AS Abweichung,
			(Verbrauch*VerrPreis)-(VerrPreis*Durchsatz*VerbrauchSOLL) AS MehrMinderKosten,
			(Verbrauch*VerrPreis) AS IstKosten,
			VerrPreis,
			CAST(VerbrauchSOLL*100.000000 AS DECIMAL(20, 7)) AS SollV_100,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch/Durchsatz)*100.000000 
				ELSE
					0
			END AS IstV_100,
			BzgGr,
			LagerEinheit,
			ISNULL((
					SELECT TOP 1 CASE WHEN LTRIM(RTRIM(ISNULL(ANALYSIS_CODE5, '')))='' THEN '0' ELSE ANALYSIS_CODE5 END
					 FROM dbo.DATA0017 WHERE RKEY = D17_PTR)
			, 0) AS MatFl,
			(
				SELECT TOP 1 CASE WHEN LTRIM(RTRIM(ISNULL(ANALYSIS_CODE1, '')))='' THEN '0' ELSE ANALYSIS_CODE1 END
				FROM dbo.DATA0017 WHERE RKEY = D17_PTR
			) AS AC_01

		FROM
		(
			SELECT 
				D17_PTR, 
				Abteilung, 
				Anlage, 
				Artikel, 
				Bezeichnung, 
				VerbrauchSOLL,
				(
					ISNULL((
						SELECT
							SUM(ISNULL(tblDATA0095.QUANTITY, 0)) AS RES
						FROM
						(
							SELECT     LIVE2.dbo.MatRueck_Anlage.ID AS Anlage_PTR, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY AS D17_RKEY, dbo.DATA0017.INV_PART_DESCRIPTION AS ArtBezeichnung,
										dbo.DATA0002.UNIT_CODE AS Lagereinheit, dbo.DATA0017.STOCK_PURCH 
							FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
									  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
									  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
									  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
									  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
									  dbo.DATA0034 ON LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR = dbo.DATA0034.RKEY
							WHERE dbo.DATA0034.DEPT_CODE = 'LAMI-01-01' --@para2
							GROUP BY LIVE2.dbo.MatRueck_Anlage.ID, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY, dbo.DATA0017.INV_PART_DESCRIPTION , dbo.DATA0017.STOCK_PURCH, dbo.DATA0002.UNIT_CODE 
							HAVING LIVE2.dbo.MatRueck_Anlage.ID = 28--(LIVE2.dbo.MatRueck_Anlage.Anlage = @Anlage)
						) AS tblAnlageArtikel INNER JOIN --LEFT OUTER JOIN 
						(SELECT QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, MONTH(TRAN_DATE) AS Monat, TRAN_TP 
						--FROM dbo.DATA0095 INNER JOIN  dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY 
						FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
						WHERE dbo.DATA0095.TRAN_TP IN (15, 16) AND dbo.DATA0034.DEPT_CODE = 'LAMI-01-01'
						AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
						AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR ) AS tblDATA0095 
						ON tblAnlageArtikel.D17_RKEY = tblDATA0095.INVT_PTR
						--) AS myTblSub	
					), 0)
					+
					ISNULL((
						SELECT 
							ISNULL((
								(-1)*SUM(QUANTITY) 
								*
								ISNULL((
									SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
									FROM LIVE2.dbo.NachKalk_MatVerteilung
									WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = 28
											AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = tblAnlageArtikel_.D17_PTR
								), 0) 
							), 0) AS RES 

						FROM 
							dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
						WHERE 
							dbo.DATA0095.TRAN_TP = 23
							AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
							AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
							AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR
					), 0) 
				) AS Verbrauch,
				ISNULL((SELECT TOP 1 Durchsatz FROM @tblDurchsatzFDLamiLB), 0) AS Durchsatz,
				ISNULL((SELECT TOP 1 BzgGr FROM @tblDurchsatzFDLamiLB), 0) AS BzgGr,
				VerrPreis,
				LagerEinheit

			FROM @tblAnlageArtikelFDLamiLB AS tblAnlageArtikel_
		) AS tblJeAnlage
		ORDER BY IstKosten DESC
	END

	IF @Case_ = 'Matverbrauch_FDLDI'
	BEGIN
		--DECLARE 
		--@para4 varchar(255),
		--@para5 varchar(255)
		--SET @para4 = '01.01.2015'	--Datum Von
		--SET @para5 = '31.05.2015'	--Datum Bis

		DECLARE @tblDurchsatzFDLDI table(
												DEPT_CODE char(10), 
												Durchsatz NUMERIC(10, 4),
												BzgGr varchar(20)
											)


		INSERT @tblDurchsatzFDLDI(DEPT_CODE, Durchsatz, BzgGr)
		SELECT
			'FOTO-01-02' AS DEPT_CODE,
			ISNULL((
				SELECT TOP 1    
					SUM(
						(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
						/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000)) 
					AS RES
		FROM         dbo.DATA0006 INNER JOIN
							  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
							  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
							  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
							  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
							  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
		WHERE     (dbo.DATA0038.TTYPE = 2) AND
					(dbo.DATA0048.TDATE >=CONVERT(DATETIME, @para4, 103)) 
					AND (dbo.DATA0048.TDATE <=CONVERT(DATETIME, @para5, 103)) 
					AND dbo.DATA0034.DEPT_CODE = 'FOTO-01-02'
			), 0) AS Durchsatz,
			'Zu-m2' AS BzgGr

--SELECT * FROM @tblDurchsatz

		DECLARE @tblAnlageArtikelFDLDI table(
											D17_PTR NUMERIC(10, 0),
											Abteilung varchar(250),
											Anlage varchar(250),
											Artikel char(20), 
											Bezeichnung char(40), 
											VerbrauchSOLL DECIMAL(20, 7),
											VerrPreis DECIMAL(20, 7),
											LagerEinheit varchar(5)
											)

		INSERT @tblAnlageArtikelFDLDI(D17_PTR, Abteilung, Anlage, Artikel, Bezeichnung, VerbrauchSOLL, VerrPreis, LagerEinheit)
		SELECT  DISTINCT dbo.DATA0017.RKEY AS D17_PTR, LIVE2.dbo.MatRueck_Abteilung.Abteilung, 
				'FD Belichter LDI' AS Anlage, --LIVE2.dbo.MatRueck_Anlage.Anlage, 
				dbo.DATA0017.INV_PART_NUMBER AS Artikel, 
				dbo.DATA0017.INV_PART_DESCRIPTION AS Bezeichnung, 
				LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, 
				dbo.DATA0017.STD_COST AS VerrPreis,
				dbo.DATA0002.UNIT_CODE AS LagerEinheit
		FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
					  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
					  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
					  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
					  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
					  dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
					  LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
					  dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
		GROUP BY dbo.DATA0017.RKEY, LIVE2.dbo.MatRueck_Abteilung.Abteilung, LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID,
				dbo.DATA0017.INV_PART_NUMBER, dbo.DATA0017.INV_PART_DESCRIPTION, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STOCK_PURCH, 
				dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE, dbo.DATA0017.CONSIGN_ONHAND_QTY,
				dbo.DATA0017.ACTIVE_FLAG, dbo.DATA0017.STD_COST, LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial
		HAVING      --dbo.DATA0017.ACTIVE_FLAG='Y' AND 
					(LIVE2.dbo.MatRueck_Anlage.ID = 59) --Laminieren  LB IL
					AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(1 AS bit)

--SELECT * FROM @tblAnlageArtikelFDgalvAu

		SELECT
			Abteilung, 
			Anlage, 
			Artikel, 
			Bezeichnung, 
			Verbrauch,
			Durchsatz,
			Verbrauch*VerrPreis AS abs_Kosten,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch*VerrPreis)/Durchsatz 
				ELSE
					0
			END AS rel_Kosten,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch*VerrPreis)/Durchsatz*100 
				ELSE
					0
			END AS KS_IstKosten,
			VerrPreis*VerbrauchSOLL*100 AS SollKosten,
			CASE
				WHEN (VerrPreis*VerbrauchSOLL*100)>0 AND Durchsatz>0 THEN
					(((Verbrauch*VerrPreis)/Durchsatz*100)-(VerrPreis*VerbrauchSOLL*100.000000))/(VerrPreis*VerbrauchSOLL*100.000000) 
				ELSE
					0
			END AS Abweichung,
			(Verbrauch*VerrPreis)-(VerrPreis*Durchsatz*VerbrauchSOLL) AS MehrMinderKosten,
			(Verbrauch*VerrPreis) AS IstKosten,
			VerrPreis,
			CAST(VerbrauchSOLL*100.000000 AS DECIMAL(20, 7)) AS SollV_100,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch/Durchsatz)*100.000000 
				ELSE
					0
			END AS IstV_100,
			BzgGr,
			LagerEinheit,
			ISNULL((
					SELECT TOP 1 CASE WHEN LTRIM(RTRIM(ISNULL(ANALYSIS_CODE5, '')))='' THEN '0' ELSE ANALYSIS_CODE5 END
					 FROM dbo.DATA0017 WHERE RKEY = D17_PTR)
			, 0) AS MatFl,
			(
				SELECT TOP 1 CASE WHEN LTRIM(RTRIM(ISNULL(ANALYSIS_CODE1, '')))='' THEN '0' ELSE ANALYSIS_CODE1 END
				FROM dbo.DATA0017 WHERE RKEY = D17_PTR
			) AS AC_01

		FROM
		(
			SELECT 
				D17_PTR, 
				Abteilung, 
				Anlage, 
				Artikel, 
				Bezeichnung, 
				VerbrauchSOLL,
				(
					ISNULL((
						SELECT
							SUM(ISNULL(tblDATA0095.QUANTITY, 0)) AS RES
						FROM
						(
							SELECT     LIVE2.dbo.MatRueck_Anlage.ID AS Anlage_PTR, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY AS D17_RKEY, dbo.DATA0017.INV_PART_DESCRIPTION AS ArtBezeichnung,
										dbo.DATA0002.UNIT_CODE AS Lagereinheit, dbo.DATA0017.STOCK_PURCH 
							FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
									  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
									  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
									  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
									  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
									  dbo.DATA0034 ON LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR = dbo.DATA0034.RKEY
							WHERE dbo.DATA0034.DEPT_CODE = 'FOTO-01-02' --@para2
							GROUP BY LIVE2.dbo.MatRueck_Anlage.ID, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY, dbo.DATA0017.INV_PART_DESCRIPTION , dbo.DATA0017.STOCK_PURCH, dbo.DATA0002.UNIT_CODE 
							HAVING LIVE2.dbo.MatRueck_Anlage.ID = 59--(LIVE2.dbo.MatRueck_Anlage.Anlage = @Anlage)
						) AS tblAnlageArtikel INNER JOIN --LEFT OUTER JOIN 
						(SELECT QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, MONTH(TRAN_DATE) AS Monat, TRAN_TP 
						--FROM dbo.DATA0095 INNER JOIN  dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY 
						FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
						WHERE dbo.DATA0095.TRAN_TP IN (15, 16) AND dbo.DATA0034.DEPT_CODE = 'FOTO-01-02'
						AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
						AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR ) AS tblDATA0095 
						ON tblAnlageArtikel.D17_RKEY = tblDATA0095.INVT_PTR
						--) AS myTblSub	
					), 0)
					+
					ISNULL((
						SELECT 
							ISNULL((
								(-1)*SUM(QUANTITY) 
								*
								ISNULL((
									SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
									FROM LIVE2.dbo.NachKalk_MatVerteilung
									WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = 59
											AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = tblAnlageArtikel_.D17_PTR
								), 0) 
							), 0) AS RES 

						FROM 
							dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
						WHERE 
							dbo.DATA0095.TRAN_TP = 23
							AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
							AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
							AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR
					), 0) 
				) AS Verbrauch,
				ISNULL((SELECT TOP 1 Durchsatz FROM @tblDurchsatzFDLDI), 0) AS Durchsatz,
				ISNULL((SELECT TOP 1 BzgGr FROM @tblDurchsatzFDLDI), 0) AS BzgGr,
				VerrPreis,
				LagerEinheit

			FROM @tblAnlageArtikelFDLDI AS tblAnlageArtikel_
		) AS tblJeAnlage
		ORDER BY IstKosten DESC
	END

	IF @Case_ = 'Matverbrauch_FDManu'
	BEGIN
		--DECLARE 
		--@para4 varchar(255),
		--@para5 varchar(255)
		--SET @para4 = '01.01.2015'	--Datum Von
		--SET @para5 = '31.05.2015'	--Datum Bis

		DECLARE @tblDurchsatzFDManu table(
												DEPT_CODE char(10), 
												Durchsatz NUMERIC(10, 4),
												BzgGr varchar(20)
											)


		INSERT @tblDurchsatzFDManu(DEPT_CODE, Durchsatz, BzgGr)
		SELECT
			'FOTO-01-03' AS DEPT_CODE,
			ISNULL((
				SELECT TOP 1    
					SUM(
						(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
						/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000)) 
					AS RES
		FROM         dbo.DATA0006 INNER JOIN
							  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
							  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
							  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
							  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
							  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
		WHERE     (dbo.DATA0038.TTYPE = 2) AND
					(dbo.DATA0048.TDATE >=CONVERT(DATETIME, @para4, 103)) 
					AND (dbo.DATA0048.TDATE <=CONVERT(DATETIME, @para5, 103)) 
					AND dbo.DATA0034.DEPT_CODE = 'FOTO-02-02'
			), 0) AS Durchsatz,
			'Zu-m2' AS BzgGr

--SELECT * FROM @tblDurchsatz

		DECLARE @tblAnlageArtikelFDManu table(
											D17_PTR NUMERIC(10, 0),
											Abteilung varchar(250),
											Anlage varchar(250),
											Artikel char(20), 
											Bezeichnung char(40), 
											VerbrauchSOLL DECIMAL(20, 7),
											VerrPreis DECIMAL(20, 7),
											LagerEinheit varchar(5)
											)

		INSERT @tblAnlageArtikelFDManu(D17_PTR, Abteilung, Anlage, Artikel, Bezeichnung, VerbrauchSOLL, VerrPreis, LagerEinheit)
		SELECT  DISTINCT dbo.DATA0017.RKEY AS D17_PTR, LIVE2.dbo.MatRueck_Abteilung.Abteilung, 
				'FD manueller Belichter' AS Anlage, --LIVE2.dbo.MatRueck_Anlage.Anlage, 
				dbo.DATA0017.INV_PART_NUMBER AS Artikel, 
				dbo.DATA0017.INV_PART_DESCRIPTION AS Bezeichnung, 
				LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, 
				dbo.DATA0017.STD_COST AS VerrPreis,
				dbo.DATA0002.UNIT_CODE AS LagerEinheit
		FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
					  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
					  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
					  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
					  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
					  dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
					  LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
					  dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
		GROUP BY dbo.DATA0017.RKEY, LIVE2.dbo.MatRueck_Abteilung.Abteilung, LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID,
				dbo.DATA0017.INV_PART_NUMBER, dbo.DATA0017.INV_PART_DESCRIPTION, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STOCK_PURCH, 
				dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE, dbo.DATA0017.CONSIGN_ONHAND_QTY,
				dbo.DATA0017.ACTIVE_FLAG, dbo.DATA0017.STD_COST, LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial
		HAVING      --dbo.DATA0017.ACTIVE_FLAG='Y' AND 
					(LIVE2.dbo.MatRueck_Anlage.ID = 60) --Max 9000
					AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(1 AS bit)

--SELECT * FROM @tblAnlageArtikelFDgalvAu

		SELECT
			Abteilung, 
			Anlage, 
			Artikel, 
			Bezeichnung, 
			Verbrauch,
			Durchsatz,
			Verbrauch*VerrPreis AS abs_Kosten,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch*VerrPreis)/Durchsatz 
				ELSE
					0
			END AS rel_Kosten,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch*VerrPreis)/Durchsatz*100 
				ELSE
					0
			END AS KS_IstKosten,
			VerrPreis*VerbrauchSOLL*100 AS SollKosten,
			CASE
				WHEN (VerrPreis*VerbrauchSOLL*100)>0 AND Durchsatz>0 THEN
					(((Verbrauch*VerrPreis)/Durchsatz*100)-(VerrPreis*VerbrauchSOLL*100.000000))/(VerrPreis*VerbrauchSOLL*100.000000) 
				ELSE
					0
			END AS Abweichung,
			(Verbrauch*VerrPreis)-(VerrPreis*Durchsatz*VerbrauchSOLL) AS MehrMinderKosten,
			(Verbrauch*VerrPreis) AS IstKosten,
			VerrPreis,
			CAST(VerbrauchSOLL*100.000000 AS DECIMAL(20, 7)) AS SollV_100,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch/Durchsatz)*100.000000 
				ELSE
					0
			END AS IstV_100,
			BzgGr,
			LagerEinheit,
			ISNULL((
					SELECT TOP 1 CASE WHEN LTRIM(RTRIM(ISNULL(ANALYSIS_CODE5, '')))='' THEN '0' ELSE ANALYSIS_CODE5 END
					 FROM dbo.DATA0017 WHERE RKEY = D17_PTR)
			, 0) AS MatFl,
			(
				SELECT TOP 1 CASE WHEN LTRIM(RTRIM(ISNULL(ANALYSIS_CODE1, '')))='' THEN '0' ELSE ANALYSIS_CODE1 END
				FROM dbo.DATA0017 WHERE RKEY = D17_PTR
			) AS AC_01

		FROM
		(
			SELECT 
				D17_PTR, 
				Abteilung, 
				Anlage, 
				Artikel, 
				Bezeichnung, 
				VerbrauchSOLL,
				(
					ISNULL((
						SELECT
							SUM(ISNULL(tblDATA0095.QUANTITY, 0)) AS RES
						FROM
						(
							SELECT     LIVE2.dbo.MatRueck_Anlage.ID AS Anlage_PTR, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY AS D17_RKEY, dbo.DATA0017.INV_PART_DESCRIPTION AS ArtBezeichnung,
										dbo.DATA0002.UNIT_CODE AS Lagereinheit, dbo.DATA0017.STOCK_PURCH 
							FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
									  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
									  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
									  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
									  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
									  dbo.DATA0034 ON LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR = dbo.DATA0034.RKEY
							WHERE dbo.DATA0034.DEPT_CODE = 'FOTO-01-03' --@para2
							GROUP BY LIVE2.dbo.MatRueck_Anlage.ID, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY, dbo.DATA0017.INV_PART_DESCRIPTION , dbo.DATA0017.STOCK_PURCH, dbo.DATA0002.UNIT_CODE 
							HAVING LIVE2.dbo.MatRueck_Anlage.ID = 60--(LIVE2.dbo.MatRueck_Anlage.Anlage = @Anlage)
						) AS tblAnlageArtikel INNER JOIN --LEFT OUTER JOIN 
						(SELECT QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, MONTH(TRAN_DATE) AS Monat, TRAN_TP 
						--FROM dbo.DATA0095 INNER JOIN  dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY 
						FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
						WHERE dbo.DATA0095.TRAN_TP IN (15, 16) AND dbo.DATA0034.DEPT_CODE = 'FOTO-01-03'
						AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
						AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR ) AS tblDATA0095 
						ON tblAnlageArtikel.D17_RKEY = tblDATA0095.INVT_PTR
						--) AS myTblSub	
					), 0)
					+
					ISNULL((
						SELECT 
							ISNULL((
								(-1)*SUM(QUANTITY) 
								*
								ISNULL((
									SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
									FROM LIVE2.dbo.NachKalk_MatVerteilung
									WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = 60
											AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = tblAnlageArtikel_.D17_PTR
								), 0) 
							), 0) AS RES 

						FROM 
							dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
						WHERE 
							dbo.DATA0095.TRAN_TP = 23
							AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
							AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
							AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR
					), 0) 
				) AS Verbrauch,
				ISNULL((SELECT TOP 1 Durchsatz FROM @tblDurchsatzFDManu), 0) AS Durchsatz,
				ISNULL((SELECT TOP 1 BzgGr FROM @tblDurchsatzFDManu), 0) AS BzgGr,
				VerrPreis,
				LagerEinheit

			FROM @tblAnlageArtikelFDManu AS tblAnlageArtikel_
		) AS tblJeAnlage
		ORDER BY IstKosten DESC
	END

	IF @Case_ = 'Matverbrauch_FDAllg'
	BEGIN
		--DECLARE 
		--@para4 varchar(255),
		--@para5 varchar(255)
		--SET @para4 = '01.01.2015'	--Datum Von
		--SET @para5 = '31.05.2015'	--Datum Bis

		DECLARE @tblDurchsatzFDAllg table(
												DEPT_CODE char(10), 
												Durchsatz NUMERIC(10, 4),
												BzgGr varchar(20)
											)


		INSERT @tblDurchsatzFDAllg(DEPT_CODE, Durchsatz, BzgGr)
		SELECT
			'LAMI-01-04' AS DEPT_CODE,
			ISNULL((
				SELECT TOP 1    
					SUM(
						(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
						/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000)) 
					AS RES
		FROM         dbo.DATA0006 INNER JOIN
							  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
							  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
							  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
							  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
							  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
		WHERE     (dbo.DATA0038.TTYPE = 2) AND
					(dbo.DATA0048.TDATE >=CONVERT(DATETIME, @para4, 103)) 
					AND (dbo.DATA0048.TDATE <=CONVERT(DATETIME, @para5, 103)) 
					AND dbo.DATA0034.DEPT_CODE IN ('FOTO-01-01', 'FOTO-01-02', 'FOTO-02-02')
			), 0) AS Durchsatz,
			'Zu-m2' AS BzgGr

--SELECT * FROM @tblDurchsatz

		DECLARE @tblAnlageArtikelFDAllg table(
											D17_PTR NUMERIC(10, 0),
											Abteilung varchar(250),
											Anlage varchar(250),
											Artikel char(20), 
											Bezeichnung char(40), 
											VerbrauchSOLL DECIMAL(20, 7),
											VerrPreis DECIMAL(20, 7),
											LagerEinheit varchar(5)
											)

		INSERT @tblAnlageArtikelFDAllg(D17_PTR, Abteilung, Anlage, Artikel, Bezeichnung, VerbrauchSOLL, VerrPreis, LagerEinheit)
		SELECT  DISTINCT dbo.DATA0017.RKEY AS D17_PTR, LIVE2.dbo.MatRueck_Abteilung.Abteilung, 
				'Fotodruck allgemein' AS Anlage, --LIVE2.dbo.MatRueck_Anlage.Anlage, 
				dbo.DATA0017.INV_PART_NUMBER AS Artikel, 
				dbo.DATA0017.INV_PART_DESCRIPTION AS Bezeichnung, 
				LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, 
				dbo.DATA0017.STD_COST AS VerrPreis,
				dbo.DATA0002.UNIT_CODE AS LagerEinheit
		FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
					  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
					  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
					  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
					  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
					  dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
					  LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
					  dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
		GROUP BY dbo.DATA0017.RKEY, LIVE2.dbo.MatRueck_Abteilung.Abteilung, LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID,
				dbo.DATA0017.INV_PART_NUMBER, dbo.DATA0017.INV_PART_DESCRIPTION, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STOCK_PURCH, 
				dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE, dbo.DATA0017.CONSIGN_ONHAND_QTY,
				dbo.DATA0017.ACTIVE_FLAG, dbo.DATA0017.STD_COST, LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial
		HAVING      --dbo.DATA0017.ACTIVE_FLAG='Y' AND 
					(LIVE2.dbo.MatRueck_Anlage.ID = 147) --Max 9000
					AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(1 AS bit)

--SELECT * FROM @tblAnlageArtikelFDgalvAu

		SELECT
			Abteilung, 
			Anlage, 
			Artikel, 
			Bezeichnung, 
			Verbrauch,
			Durchsatz,
			Verbrauch*VerrPreis AS abs_Kosten,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch*VerrPreis)/Durchsatz 
				ELSE
					0
			END AS rel_Kosten,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch*VerrPreis)/Durchsatz*100 
				ELSE
					0
			END AS KS_IstKosten,
			VerrPreis*VerbrauchSOLL*100 AS SollKosten,
			CASE
				WHEN (VerrPreis*VerbrauchSOLL*100)>0 AND Durchsatz>0 THEN
					(((Verbrauch*VerrPreis)/Durchsatz*100)-(VerrPreis*VerbrauchSOLL*100.000000))/(VerrPreis*VerbrauchSOLL*100.000000) 
				ELSE
					0
			END AS Abweichung,
			(Verbrauch*VerrPreis)-(VerrPreis*Durchsatz*VerbrauchSOLL) AS MehrMinderKosten,
			(Verbrauch*VerrPreis) AS IstKosten,
			VerrPreis,
			CAST(VerbrauchSOLL*100.000000 AS DECIMAL(20, 7)) AS SollV_100,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch/Durchsatz)*100.000000 
				ELSE
					0
			END AS IstV_100,
			BzgGr,
			LagerEinheit,
			ISNULL((
					SELECT TOP 1 CASE WHEN LTRIM(RTRIM(ISNULL(ANALYSIS_CODE5, '')))='' THEN '0' ELSE ANALYSIS_CODE5 END
					 FROM dbo.DATA0017 WHERE RKEY = D17_PTR)
			, 0) AS MatFl,
			(
				SELECT TOP 1 CASE WHEN LTRIM(RTRIM(ISNULL(ANALYSIS_CODE1, '')))='' THEN '0' ELSE ANALYSIS_CODE1 END
				FROM dbo.DATA0017 WHERE RKEY = D17_PTR
			) AS AC_01

		FROM
		(
			SELECT 
				D17_PTR, 
				Abteilung, 
				Anlage, 
				Artikel, 
				Bezeichnung, 
				VerbrauchSOLL,
				(
					ISNULL((
						SELECT
							SUM(ISNULL(tblDATA0095.QUANTITY, 0)) AS RES
						FROM
						(
							SELECT     LIVE2.dbo.MatRueck_Anlage.ID AS Anlage_PTR, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY AS D17_RKEY, dbo.DATA0017.INV_PART_DESCRIPTION AS ArtBezeichnung,
										dbo.DATA0002.UNIT_CODE AS Lagereinheit, dbo.DATA0017.STOCK_PURCH 
							FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
									  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
									  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
									  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
									  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
									  dbo.DATA0034 ON LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR = dbo.DATA0034.RKEY
							WHERE dbo.DATA0034.DEPT_CODE = 'LAMI-01-04' --@para2
							GROUP BY LIVE2.dbo.MatRueck_Anlage.ID, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY, dbo.DATA0017.INV_PART_DESCRIPTION , dbo.DATA0017.STOCK_PURCH, dbo.DATA0002.UNIT_CODE 
							HAVING LIVE2.dbo.MatRueck_Anlage.ID = 147--(LIVE2.dbo.MatRueck_Anlage.Anlage = @Anlage)
						) AS tblAnlageArtikel INNER JOIN --LEFT OUTER JOIN 
						(SELECT QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, MONTH(TRAN_DATE) AS Monat, TRAN_TP 
						--FROM dbo.DATA0095 INNER JOIN  dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY 
						FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
						WHERE dbo.DATA0095.TRAN_TP IN (15, 16) AND dbo.DATA0034.DEPT_CODE = 'LAMI-01-04'
						AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
						AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR ) AS tblDATA0095 
						ON tblAnlageArtikel.D17_RKEY = tblDATA0095.INVT_PTR
						--) AS myTblSub	
					), 0)
					+
					ISNULL((
						SELECT 
							ISNULL((
								(-1)*SUM(QUANTITY) 
								*
								ISNULL((
									SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
									FROM LIVE2.dbo.NachKalk_MatVerteilung
									WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = 147
											AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = tblAnlageArtikel_.D17_PTR
								), 0) 
							), 0) AS RES 

						FROM 
							dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
						WHERE 
							dbo.DATA0095.TRAN_TP = 23
							AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
							AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
							AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR
					), 0) 
				) AS Verbrauch,
				ISNULL((SELECT TOP 1 Durchsatz FROM @tblDurchsatzFDAllg), 0) AS Durchsatz,
				ISNULL((SELECT TOP 1 BzgGr FROM @tblDurchsatzFDAllg), 0) AS BzgGr,
				VerrPreis,
				LagerEinheit

			FROM @tblAnlageArtikelFDAllg AS tblAnlageArtikel_
		) AS tblJeAnlage
		ORDER BY IstKosten DESC
	END

	IF @Case_ = 'Matverbrauch_FDMax'
	BEGIN
		--DECLARE 
		--@para4 varchar(255),
		--@para5 varchar(255)
		--SET @para4 = '01.01.2015'	--Datum Von
		--SET @para5 = '31.05.2015'	--Datum Bis

		DECLARE @tblDurchsatzFDMax table(
												DEPT_CODE char(10), 
												Durchsatz NUMERIC(10, 4),
												BzgGr varchar(20)
											)


		INSERT @tblDurchsatzFDMax(DEPT_CODE, Durchsatz, BzgGr)
		SELECT
			'FOTO-01-01' AS DEPT_CODE,
			ISNULL((
				SELECT TOP 1    
					SUM(
						(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
						/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000)) 
					AS RES
		FROM         dbo.DATA0006 INNER JOIN
							  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
							  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
							  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
							  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
							  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
		WHERE     (dbo.DATA0038.TTYPE = 2) AND
					(dbo.DATA0048.TDATE >=CONVERT(DATETIME, @para4, 103)) 
					AND (dbo.DATA0048.TDATE <=CONVERT(DATETIME, @para5, 103)) 
					AND dbo.DATA0034.DEPT_CODE = 'FOTO-01-01'
			), 0) AS Durchsatz,
			'Zu-m2' AS BzgGr

--SELECT * FROM @tblDurchsatz

		DECLARE @tblAnlageArtikelFDMax table(
											D17_PTR NUMERIC(10, 0),
											Abteilung varchar(250),
											Anlage varchar(250),
											Artikel char(20), 
											Bezeichnung char(40), 
											VerbrauchSOLL DECIMAL(20, 7),
											VerrPreis DECIMAL(20, 7),
											LagerEinheit varchar(5)
											)

		INSERT @tblAnlageArtikelFDMax(D17_PTR, Abteilung, Anlage, Artikel, Bezeichnung, VerbrauchSOLL, VerrPreis, LagerEinheit)
		SELECT  DISTINCT dbo.DATA0017.RKEY AS D17_PTR, LIVE2.dbo.MatRueck_Abteilung.Abteilung, 
				'FD Belichter Max 9000' AS Anlage, --LIVE2.dbo.MatRueck_Anlage.Anlage, 
				dbo.DATA0017.INV_PART_NUMBER AS Artikel, 
				dbo.DATA0017.INV_PART_DESCRIPTION AS Bezeichnung, 
				LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, 
				dbo.DATA0017.STD_COST AS VerrPreis,
				dbo.DATA0002.UNIT_CODE AS LagerEinheit
		FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
					  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
					  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
					  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
					  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
					  dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
					  LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
					  dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
		GROUP BY dbo.DATA0017.RKEY, LIVE2.dbo.MatRueck_Abteilung.Abteilung, LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID,
				dbo.DATA0017.INV_PART_NUMBER, dbo.DATA0017.INV_PART_DESCRIPTION, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STOCK_PURCH, 
				dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE, dbo.DATA0017.CONSIGN_ONHAND_QTY,
				dbo.DATA0017.ACTIVE_FLAG, dbo.DATA0017.STD_COST, LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial
		HAVING      --dbo.DATA0017.ACTIVE_FLAG='Y' AND 
					(LIVE2.dbo.MatRueck_Anlage.ID = 58) --Max 9000
					AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(1 AS bit)

--SELECT * FROM @tblAnlageArtikelFDgalvAu

		SELECT
			Abteilung, 
			Anlage, 
			Artikel, 
			Bezeichnung, 
			Verbrauch,
			Durchsatz,
			Verbrauch*VerrPreis AS abs_Kosten,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch*VerrPreis)/Durchsatz 
				ELSE
					0
			END AS rel_Kosten,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch*VerrPreis)/Durchsatz*100 
				ELSE
					0
			END AS KS_IstKosten,
			VerrPreis*VerbrauchSOLL*100 AS SollKosten,
			CASE
				WHEN (VerrPreis*VerbrauchSOLL*100)>0 AND Durchsatz>0 THEN
					(((Verbrauch*VerrPreis)/Durchsatz*100)-(VerrPreis*VerbrauchSOLL*100.000000))/(VerrPreis*VerbrauchSOLL*100.000000) 
				ELSE
					0
			END AS Abweichung,
			(Verbrauch*VerrPreis)-(VerrPreis*Durchsatz*VerbrauchSOLL) AS MehrMinderKosten,
			(Verbrauch*VerrPreis) AS IstKosten,
			VerrPreis,
			CAST(VerbrauchSOLL*100.000000 AS DECIMAL(20, 7)) AS SollV_100,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch/Durchsatz)*100.000000 
				ELSE
					0
			END AS IstV_100,
			BzgGr,
			LagerEinheit,
			ISNULL((
					SELECT TOP 1 CASE WHEN LTRIM(RTRIM(ISNULL(ANALYSIS_CODE5, '')))='' THEN '0' ELSE ANALYSIS_CODE5 END
					 FROM dbo.DATA0017 WHERE RKEY = D17_PTR)
			, 0) AS MatFl,
			(
				SELECT TOP 1 CASE WHEN LTRIM(RTRIM(ISNULL(ANALYSIS_CODE1, '')))='' THEN '0' ELSE ANALYSIS_CODE1 END
				FROM dbo.DATA0017 WHERE RKEY = D17_PTR
			) AS AC_01

		FROM
		(
			SELECT 
				D17_PTR, 
				Abteilung, 
				Anlage, 
				Artikel, 
				Bezeichnung, 
				VerbrauchSOLL,
				(
					ISNULL((
						SELECT
							SUM(ISNULL(tblDATA0095.QUANTITY, 0)) AS RES
						FROM
						(
							SELECT     LIVE2.dbo.MatRueck_Anlage.ID AS Anlage_PTR, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY AS D17_RKEY, dbo.DATA0017.INV_PART_DESCRIPTION AS ArtBezeichnung,
										dbo.DATA0002.UNIT_CODE AS Lagereinheit, dbo.DATA0017.STOCK_PURCH 
							FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
									  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
									  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
									  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
									  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
									  dbo.DATA0034 ON LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR = dbo.DATA0034.RKEY
							WHERE dbo.DATA0034.DEPT_CODE = 'FOTO-01-01' --@para2
							GROUP BY LIVE2.dbo.MatRueck_Anlage.ID, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY, dbo.DATA0017.INV_PART_DESCRIPTION , dbo.DATA0017.STOCK_PURCH, dbo.DATA0002.UNIT_CODE 
							HAVING LIVE2.dbo.MatRueck_Anlage.ID = 58--(LIVE2.dbo.MatRueck_Anlage.Anlage = @Anlage)
						) AS tblAnlageArtikel INNER JOIN --LEFT OUTER JOIN 
						(SELECT QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, MONTH(TRAN_DATE) AS Monat, TRAN_TP 
						--FROM dbo.DATA0095 INNER JOIN  dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY 
						FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
						WHERE dbo.DATA0095.TRAN_TP IN (15, 16) AND dbo.DATA0034.DEPT_CODE = 'FOTO-01-01'
						AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
						AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR ) AS tblDATA0095 
						ON tblAnlageArtikel.D17_RKEY = tblDATA0095.INVT_PTR
						--) AS myTblSub	
					), 0)
					+
					ISNULL((
						SELECT 
							ISNULL((
								(-1)*SUM(QUANTITY) 
								*
								ISNULL((
									SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
									FROM LIVE2.dbo.NachKalk_MatVerteilung
									WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = 58
											AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = tblAnlageArtikel_.D17_PTR
								), 0) 
							), 0) AS RES 

						FROM 
							dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
						WHERE 
							dbo.DATA0095.TRAN_TP = 23
							AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
							AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
							AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR
					), 0) 
				) AS Verbrauch,
				ISNULL((SELECT TOP 1 Durchsatz FROM @tblDurchsatzFDMax), 0) AS Durchsatz,
				ISNULL((SELECT TOP 1 BzgGr FROM @tblDurchsatzFDMax), 0) AS BzgGr,
				VerrPreis,
				LagerEinheit

			FROM @tblAnlageArtikelFDMax AS tblAnlageArtikel_
		) AS tblJeAnlage
		ORDER BY IstKosten DESC
	END

	IF @Case_ = 'Matverbrauch_FDRest'
	BEGIN
		--DECLARE 
		--@para4 varchar(255),
		--@para5 varchar(255)
		--SET @para4 = '01.01.2015'	--Datum Von
		--SET @para5 = '31.05.2015'	--Datum Bis

		DECLARE @tblDurchsatzFDRest table(
												DEPT_CODE char(10), 
												Durchsatz NUMERIC(10, 4),
												BzgGr varchar(20)
											)


		INSERT @tblDurchsatzFDRest(DEPT_CODE, Durchsatz, BzgGr)
		SELECT
			'FOTO-REST' AS DEPT_CODE,
			ISNULL((
				SELECT TOP 1    
					SUM(
						(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
						/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000)) 
					AS RES
		FROM         dbo.DATA0006 INNER JOIN
							  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
							  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
							  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
							  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
							  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
		WHERE     (dbo.DATA0038.TTYPE = 2) AND
					(dbo.DATA0048.TDATE >=CONVERT(DATETIME, @para4, 103)) 
					AND (dbo.DATA0048.TDATE <=CONVERT(DATETIME, @para5, 103)) 
					AND dbo.DATA0034.DEPT_CODE IN ('FOTO-01-01', 'FOTO-01-02', 'FOTO-02-02')
			), 0) AS Durchsatz,
			'Zu-m2' AS BzgGr

--SELECT * FROM @tblDurchsatz

		DECLARE @tblAnlageArtikelFDRest table(
											D17_PTR NUMERIC(10, 0),
											Abteilung varchar(250),
											Anlage varchar(250),
											Artikel char(20), 
											Bezeichnung char(40), 
											VerbrauchSOLL DECIMAL(20, 7),
											VerrPreis DECIMAL(20, 7),
											LagerEinheit varchar(5)
											)

		INSERT @tblAnlageArtikelFDRest(D17_PTR, Abteilung, Anlage, Artikel, Bezeichnung, VerbrauchSOLL, VerrPreis, LagerEinheit)
		SELECT  DISTINCT dbo.DATA0017.RKEY AS D17_PTR, LIVE2.dbo.MatRueck_Abteilung.Abteilung, 
				'Fotodruck Rest' AS Anlage, --LIVE2.dbo.MatRueck_Anlage.Anlage, 
				dbo.DATA0017.INV_PART_NUMBER AS Artikel, 
				dbo.DATA0017.INV_PART_DESCRIPTION AS Bezeichnung, 
				LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, 
				dbo.DATA0017.STD_COST AS VerrPreis,
				dbo.DATA0002.UNIT_CODE AS LagerEinheit
		FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
					  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
					  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
					  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
					  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
					  dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
					  LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
					  dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
		GROUP BY dbo.DATA0017.RKEY, LIVE2.dbo.MatRueck_Abteilung.Abteilung, LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID,
				dbo.DATA0017.INV_PART_NUMBER, dbo.DATA0017.INV_PART_DESCRIPTION, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STOCK_PURCH, 
				dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE, dbo.DATA0017.CONSIGN_ONHAND_QTY,
				dbo.DATA0017.ACTIVE_FLAG, dbo.DATA0017.STD_COST, LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial
		HAVING      dbo.DATA0017.ACTIVE_FLAG='Y' AND (LIVE2.dbo.MatRueck_Anlage.ID IN (57, 58, 59, 60)) --Max 9000
					AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(0 AS bit)

--SELECT * FROM @tblAnlageArtikelFDgalvAu

		SELECT
			Abteilung, 
			Anlage, 
			Artikel, 
			Bezeichnung, 
			Verbrauch,
			Durchsatz,
			Verbrauch*VerrPreis AS abs_Kosten,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch*VerrPreis)/Durchsatz 
				ELSE
					0
			END AS rel_Kosten,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch*VerrPreis)/Durchsatz*100 
				ELSE
					0
			END AS KS_IstKosten,
			VerrPreis*VerbrauchSOLL*100 AS SollKosten,
			CASE
				WHEN (VerrPreis*VerbrauchSOLL*100)>0 AND Durchsatz>0 THEN
					(((Verbrauch*VerrPreis)/Durchsatz*100)-(VerrPreis*VerbrauchSOLL*100.000000))/(VerrPreis*VerbrauchSOLL*100.000000) 
				ELSE
					0
			END AS Abweichung,
			(Verbrauch*VerrPreis)-(VerrPreis*Durchsatz*VerbrauchSOLL) AS MehrMinderKosten,
			(Verbrauch*VerrPreis) AS IstKosten,
			VerrPreis,
			CAST(VerbrauchSOLL*100.000000 AS DECIMAL(20, 7)) AS SollV_100,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch/Durchsatz)*100.000000 
				ELSE
					0
			END AS IstV_100,
			BzgGr,
			LagerEinheit,
			ISNULL((
					SELECT TOP 1 CASE WHEN LTRIM(RTRIM(ISNULL(ANALYSIS_CODE5, '')))='' THEN '0' ELSE ANALYSIS_CODE5 END
					 FROM dbo.DATA0017 WHERE RKEY = D17_PTR)
			, 0) AS MatFl,
			(
				SELECT TOP 1 CASE WHEN LTRIM(RTRIM(ISNULL(ANALYSIS_CODE1, '')))='' THEN '0' ELSE ANALYSIS_CODE1 END
				FROM dbo.DATA0017 WHERE RKEY = D17_PTR
			) AS AC_01

		FROM
		(
			SELECT 
				D17_PTR, 
				Abteilung, 
				Anlage, 
				Artikel, 
				Bezeichnung, 
				0 AS VerbrauchSOLL,
				(
					ISNULL((
						SELECT
							SUM(ISNULL(tblDATA0095.QUANTITY, 0)) AS RES
						FROM
						(
							SELECT     LIVE2.dbo.MatRueck_Anlage.ID AS Anlage_PTR, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY AS D17_RKEY, dbo.DATA0017.INV_PART_DESCRIPTION AS ArtBezeichnung,
										dbo.DATA0002.UNIT_CODE AS Lagereinheit, dbo.DATA0017.STOCK_PURCH 
							FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
									  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
									  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
									  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
									  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
									  dbo.DATA0034 ON LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR = dbo.DATA0034.RKEY
							WHERE dbo.DATA0034.DEPT_CODE IN ('FOTO-01-01', 'FOTO-01-02', 'FOTO-01-03') --@para2
							GROUP BY LIVE2.dbo.MatRueck_Anlage.ID, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY, dbo.DATA0017.INV_PART_DESCRIPTION , dbo.DATA0017.STOCK_PURCH, dbo.DATA0002.UNIT_CODE 
							HAVING LIVE2.dbo.MatRueck_Anlage.ID IN (57, 58, 59, 60)--(LIVE2.dbo.MatRueck_Anlage.Anlage = @Anlage)
						) AS tblAnlageArtikel INNER JOIN --LEFT OUTER JOIN 
						(SELECT QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, MONTH(TRAN_DATE) AS Monat, TRAN_TP 
						--FROM dbo.DATA0095 INNER JOIN  dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY 
						FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
						WHERE dbo.DATA0095.TRAN_TP IN (15, 16) AND dbo.DATA0034.DEPT_CODE IN ('FOTO-01-01', 'FOTO-01-02', 'FOTO-01-03')
						AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
						AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR ) AS tblDATA0095 
						ON tblAnlageArtikel.D17_RKEY = tblDATA0095.INVT_PTR
						--) AS myTblSub	
					), 0)
					+
					ISNULL((
						SELECT 
							ISNULL((
								(-1)*SUM(QUANTITY) 
								*
								ISNULL((
									SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
									FROM LIVE2.dbo.NachKalk_MatVerteilung
									WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR IN (57, 58, 59, 60)
											AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = tblAnlageArtikel_.D17_PTR
								), 0) 
							), 0) AS RES 

						FROM 
							dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
						WHERE 
							dbo.DATA0095.TRAN_TP = 23
							AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
							AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
							AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR
					), 0) 
				) AS Verbrauch,
				ISNULL((SELECT TOP 1 Durchsatz FROM @tblDurchsatzFDRest), 0) AS Durchsatz,
				ISNULL((SELECT TOP 1 BzgGr FROM @tblDurchsatzFDRest), 0) AS BzgGr,
				VerrPreis,
				LagerEinheit

			FROM @tblAnlageArtikelFDRest AS tblAnlageArtikel_
		) AS tblJeAnlage
		ORDER BY IstKosten DESC
	END

	IF @Case_ = 'Matverbrauch_FDEntw'
	BEGIN
		--DECLARE 
		--@para4 varchar(255),
		--@para5 varchar(255)
		--SET @para4 = '01.01.2015'	--Datum Von
		--SET @para5 = '31.05.2015'	--Datum Bis


		DECLARE @tblDurchsatzFDEntw table(
												DEPT_CODE char(10), 
												Durchsatz NUMERIC(10, 4),
												BzgGr varchar(20)
											)


		INSERT @tblDurchsatzFDEntw(DEPT_CODE, Durchsatz, BzgGr)
		SELECT
			'FOTO-03-02' AS DEPT_CODE,
			ISNULL((
				SELECT TOP 1    
					SUM(
						(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
						/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000)) 
					AS RES
		FROM         dbo.DATA0006 INNER JOIN
							  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
							  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
							  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
							  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
							  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
		WHERE     (dbo.DATA0038.TTYPE = 2) AND
					(dbo.DATA0048.TDATE >=CONVERT(DATETIME, @para4, 103)) 
					AND (dbo.DATA0048.TDATE <=CONVERT(DATETIME, @para5, 103)) 
					AND dbo.DATA0034.DEPT_CODE = 'PR_1-01-01' --('FOTO-01-01', 'FOTO-01-02', 'FOTO-02-02')
			), 0) AS Durchsatz,
			'Zu-m2' AS BzgGr

--SELECT * FROM @tblDurchsatz

		DECLARE @tblAnlageArtikelFDEntw table(
											D17_PTR NUMERIC(10, 0),
											Abteilung varchar(250),
											Anlage varchar(250),
											Artikel char(20), 
											Bezeichnung char(40), 
											VerbrauchSOLL DECIMAL(20, 7),
											VerrPreis DECIMAL(20, 7),
											LagerEinheit varchar(5)
											)

		INSERT @tblAnlageArtikelFDEntw(D17_PTR, Abteilung, Anlage, Artikel, Bezeichnung, VerbrauchSOLL, VerrPreis, LagerEinheit)
		SELECT  DISTINCT dbo.DATA0017.RKEY AS D17_PTR, LIVE2.dbo.MatRueck_Abteilung.Abteilung, 
				'FD Entwickler Aussenlagen' AS Anlage, --LIVE2.dbo.MatRueck_Anlage.Anlage, 
				dbo.DATA0017.INV_PART_NUMBER AS Artikel, 
				dbo.DATA0017.INV_PART_DESCRIPTION AS Bezeichnung, 
				LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, 
				dbo.DATA0017.STD_COST AS VerrPreis,
				dbo.DATA0002.UNIT_CODE AS LagerEinheit
		FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
					  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
					  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
					  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
					  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
					  dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
					  LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
					  dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
		GROUP BY dbo.DATA0017.RKEY, LIVE2.dbo.MatRueck_Abteilung.Abteilung, LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID,
				dbo.DATA0017.INV_PART_NUMBER, dbo.DATA0017.INV_PART_DESCRIPTION, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STOCK_PURCH, 
				dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE, dbo.DATA0017.CONSIGN_ONHAND_QTY,
				dbo.DATA0017.ACTIVE_FLAG, dbo.DATA0017.STD_COST, LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial
		HAVING      dbo.DATA0017.ACTIVE_FLAG='Y' AND (LIVE2.dbo.MatRueck_Anlage.ID = 57) --Max 9000
					AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(1 AS bit)

--SELECT * FROM @tblAnlageArtikelFDgalvAu

		SELECT
			Abteilung, 
			Anlage, 
			Artikel, 
			Bezeichnung, 
			Verbrauch,
			Durchsatz,
			Verbrauch*VerrPreis AS abs_Kosten,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch*VerrPreis)/Durchsatz 
				ELSE
					0
			END AS rel_Kosten,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch*VerrPreis)/Durchsatz*100 
				ELSE
					0
			END AS KS_IstKosten,
			VerrPreis*VerbrauchSOLL*100 AS SollKosten,
			CASE
				WHEN (VerrPreis*VerbrauchSOLL*100)>0 AND Durchsatz>0 THEN
					(((Verbrauch*VerrPreis)/Durchsatz*100)-(VerrPreis*VerbrauchSOLL*100.000000))/(VerrPreis*VerbrauchSOLL*100.000000) 
				ELSE
					0
			END AS Abweichung,
			(Verbrauch*VerrPreis)-(VerrPreis*Durchsatz*VerbrauchSOLL) AS MehrMinderKosten,
			(Verbrauch*VerrPreis) AS IstKosten,
			VerrPreis,
			CAST(VerbrauchSOLL*100.000000 AS DECIMAL(20, 7)) AS SollV_100,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch/Durchsatz)*100.000000 
				ELSE
					0
			END AS IstV_100,
			BzgGr,
			LagerEinheit,
			ISNULL((
					SELECT TOP 1 CASE WHEN LTRIM(RTRIM(ISNULL(ANALYSIS_CODE5, '')))='' THEN '0' ELSE ANALYSIS_CODE5 END
					 FROM dbo.DATA0017 WHERE RKEY = D17_PTR)
			, 0) AS MatFl,
			(
				SELECT TOP 1 CASE WHEN LTRIM(RTRIM(ISNULL(ANALYSIS_CODE1, '')))='' THEN '0' ELSE ANALYSIS_CODE1 END
				FROM dbo.DATA0017 WHERE RKEY = D17_PTR
			) AS AC_01

		FROM
		(
			SELECT 
				D17_PTR, 
				Abteilung, 
				Anlage, 
				Artikel, 
				Bezeichnung, 
				VerbrauchSOLL,
				(
					ISNULL((
						SELECT
							SUM(ISNULL(tblDATA0095.QUANTITY, 0)) AS RES
						FROM
						(
							SELECT     LIVE2.dbo.MatRueck_Anlage.ID AS Anlage_PTR, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY AS D17_RKEY, dbo.DATA0017.INV_PART_DESCRIPTION AS ArtBezeichnung,
										dbo.DATA0002.UNIT_CODE AS Lagereinheit, dbo.DATA0017.STOCK_PURCH 
							FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
									  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
									  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
									  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
									  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
									  dbo.DATA0034 ON LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR = dbo.DATA0034.RKEY
							WHERE dbo.DATA0034.DEPT_CODE = 'FOTO-03-02' --@para2
							GROUP BY LIVE2.dbo.MatRueck_Anlage.ID, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY, dbo.DATA0017.INV_PART_DESCRIPTION , dbo.DATA0017.STOCK_PURCH, dbo.DATA0002.UNIT_CODE 
							HAVING LIVE2.dbo.MatRueck_Anlage.ID = 57--(LIVE2.dbo.MatRueck_Anlage.Anlage = @Anlage)
						) AS tblAnlageArtikel INNER JOIN --LEFT OUTER JOIN 
						(SELECT QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, MONTH(TRAN_DATE) AS Monat, TRAN_TP 
						--FROM dbo.DATA0095 INNER JOIN  dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY 
						FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
						WHERE dbo.DATA0095.TRAN_TP IN (15, 16) AND dbo.DATA0034.DEPT_CODE = 'FOTO-03-02'
						AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
						AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR ) AS tblDATA0095 
						ON tblAnlageArtikel.D17_RKEY = tblDATA0095.INVT_PTR
						--) AS myTblSub	
					), 0)
					+
					ISNULL((
						SELECT 
							ISNULL((
								(-1)*SUM(QUANTITY) 
								*
								ISNULL((
									SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
									FROM LIVE2.dbo.NachKalk_MatVerteilung
									WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = 57
											AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = tblAnlageArtikel_.D17_PTR
								), 0) 
							), 0) AS RES 

						FROM 
							dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
						WHERE 
							dbo.DATA0095.TRAN_TP = 23
							AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
							AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
							AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR
					), 0) 
				) AS Verbrauch,
				ISNULL((SELECT TOP 1 Durchsatz FROM @tblDurchsatzFDEntw), 0) AS Durchsatz,
				ISNULL((SELECT TOP 1 BzgGr FROM @tblDurchsatzFDEntw), 0) AS BzgGr,
				VerrPreis,
				LagerEinheit

			FROM @tblAnlageArtikelFDEntw AS tblAnlageArtikel_
		) AS tblJeAnlage
		ORDER BY IstKosten DESC
	END

	IF @Case_ = 'Matverbrauch_FDLamiIL'
	BEGIN
		--DECLARE 
		--@para4 varchar(255),
		--@para5 varchar(255)
		--SET @para4 = '01.01.2015'	--Datum Von
		--SET @para5 = '31.01.2015'	--Datum Bis

		DECLARE @tblDurchsatzFDLamiLBIL table(
												DEPT_CODE char(10), 
												Durchsatz NUMERIC(10, 4),
												BzgGr varchar(20)
											)


		INSERT @tblDurchsatzFDLamiLBIL(DEPT_CODE, Durchsatz, BzgGr)
		SELECT
			'LAMI-01-03' AS DEPT_CODE,
			ISNULL((
				SELECT TOP 1    
					SUM(
						(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
						/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000)) 
					AS RES
		FROM         dbo.DATA0006 INNER JOIN
							  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
							  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
							  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
							  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
							  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
		WHERE     (dbo.DATA0038.TTYPE = 2) AND
					(dbo.DATA0048.TDATE >=CONVERT(DATETIME, @para4, 103)) 
					AND (dbo.DATA0048.TDATE <=CONVERT(DATETIME, @para5, 103)) 
					AND LEFT(dbo.DATA0034.DEPT_CODE, 4) = 'LAMI'
					AND (
							(dbo.DATA0038.PARAMETER_2 = '1.Laminat.IL;' OR dbo.DATA0038.PARAMETER_2 = '2.Laminat.IL;')
							OR 
							((dbo.DATA0038.PARAMETER_2 = '' OR dbo.DATA0038.PARAMETER_2 = '.') AND dbo.DATA0006.ROOT_PTR>0)
						)
			), 0) AS Durchsatz,
			'Zu-m2' AS BzgGr

--SELECT * FROM @tblDurchsatz

		DECLARE @tblAnlageArtikelFDLamiLBIL table(
											D17_PTR NUMERIC(10, 0),
											Abteilung varchar(250),
											Anlage varchar(250),
											Artikel char(20), 
											Bezeichnung char(40), 
											VerbrauchSOLL DECIMAL(20, 7),
											VerrPreis DECIMAL(20, 7),
											LagerEinheit varchar(5)
											)

		INSERT @tblAnlageArtikelFDLamiLBIL(D17_PTR, Abteilung, Anlage, Artikel, Bezeichnung, VerbrauchSOLL, VerrPreis, LagerEinheit)
		SELECT  DISTINCT dbo.DATA0017.RKEY AS D17_PTR, LIVE2.dbo.MatRueck_Abteilung.Abteilung, 
				'Laminieren LB IL' AS Anlage, --LIVE2.dbo.MatRueck_Anlage.Anlage, 
				dbo.DATA0017.INV_PART_NUMBER AS Artikel, 
				dbo.DATA0017.INV_PART_DESCRIPTION AS Bezeichnung, 
				LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, 
				dbo.DATA0017.STD_COST AS VerrPreis,
				dbo.DATA0002.UNIT_CODE AS LagerEinheit
		FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
					  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
					  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
					  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
					  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
					  dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
					  LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
					  dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
		GROUP BY dbo.DATA0017.RKEY, LIVE2.dbo.MatRueck_Abteilung.Abteilung, LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID,
				dbo.DATA0017.INV_PART_NUMBER, dbo.DATA0017.INV_PART_DESCRIPTION, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STOCK_PURCH, 
				dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE, dbo.DATA0017.CONSIGN_ONHAND_QTY,
				dbo.DATA0017.ACTIVE_FLAG, dbo.DATA0017.STD_COST, LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial
		HAVING      --dbo.DATA0017.ACTIVE_FLAG='Y' AND 
					(LIVE2.dbo.MatRueck_Anlage.ID = 146) --Laminieren  LB IL
					AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(1 AS bit)

--SELECT * FROM @tblAnlageArtikelFDgalvAu

		SELECT
			Abteilung, 
			Anlage, 
			Artikel, 
			Bezeichnung, 
			Verbrauch,
			Durchsatz,
			Verbrauch*VerrPreis AS abs_Kosten,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch*VerrPreis)/Durchsatz 
				ELSE
					0
			END AS rel_Kosten,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch*VerrPreis)/Durchsatz*100 
				ELSE
					0
			END AS KS_IstKosten,
			VerrPreis*VerbrauchSOLL*100 AS SollKosten,
			CASE
				WHEN (VerrPreis*VerbrauchSOLL*100)>0 AND Durchsatz>0 THEN
					(((Verbrauch*VerrPreis)/Durchsatz*100)-(VerrPreis*VerbrauchSOLL*100.000000))/(VerrPreis*VerbrauchSOLL*100.000000) 
				ELSE
					0
			END AS Abweichung,
			(Verbrauch*VerrPreis)-(VerrPreis*Durchsatz*VerbrauchSOLL) AS MehrMinderKosten,
			(Verbrauch*VerrPreis) AS IstKosten,
			VerrPreis,
			CAST(VerbrauchSOLL*100.000000 AS DECIMAL(20, 7)) AS SollV_100,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch/Durchsatz)*100.000000 
				ELSE
					0
			END AS IstV_100,
			BzgGr,
			LagerEinheit,
			ISNULL((
					SELECT TOP 1 CASE WHEN LTRIM(RTRIM(ISNULL(ANALYSIS_CODE5, '')))='' THEN '0' ELSE ANALYSIS_CODE5 END
					 FROM dbo.DATA0017 WHERE RKEY = D17_PTR)
			, 0) AS MatFl,
			(
				SELECT TOP 1 CASE WHEN LTRIM(RTRIM(ISNULL(ANALYSIS_CODE1, '')))='' THEN '0' ELSE ANALYSIS_CODE1 END
				FROM dbo.DATA0017 WHERE RKEY = D17_PTR
			) AS AC_01

		FROM
		(
			SELECT 
				D17_PTR, 
				Abteilung, 
				Anlage, 
				Artikel, 
				Bezeichnung, 
				0 AS VerbrauchSOLL,
				(
					ISNULL((
						SELECT
							SUM(ISNULL(tblDATA0095.QUANTITY, 0)) AS RES
						FROM
						(
							SELECT     LIVE2.dbo.MatRueck_Anlage.ID AS Anlage_PTR, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY AS D17_RKEY, dbo.DATA0017.INV_PART_DESCRIPTION AS ArtBezeichnung,
										dbo.DATA0002.UNIT_CODE AS Lagereinheit, dbo.DATA0017.STOCK_PURCH 
							FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
									  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
									  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
									  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
									  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
									  dbo.DATA0034 ON LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR = dbo.DATA0034.RKEY
							WHERE dbo.DATA0034.DEPT_CODE IN ('LAMI-01-01', 'LAMI-01-03') --@para2
							GROUP BY LIVE2.dbo.MatRueck_Anlage.ID, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY, dbo.DATA0017.INV_PART_DESCRIPTION , dbo.DATA0017.STOCK_PURCH, dbo.DATA0002.UNIT_CODE 
							HAVING LIVE2.dbo.MatRueck_Anlage.ID = 146--(LIVE2.dbo.MatRueck_Anlage.Anlage = @Anlage)
						) AS tblAnlageArtikel INNER JOIN --LEFT OUTER JOIN 
						(SELECT QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, MONTH(TRAN_DATE) AS Monat, TRAN_TP 
						--FROM dbo.DATA0095 INNER JOIN  dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY 
						FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
						WHERE dbo.DATA0095.TRAN_TP IN (15, 16) AND dbo.DATA0034.DEPT_CODE IN ('LAMI-01-01', 'LAMI-01-03') 
						AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
						AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR ) AS tblDATA0095 
						ON tblAnlageArtikel.D17_RKEY = tblDATA0095.INVT_PTR
						--) AS myTblSub	
					), 0)
					+
					ISNULL((
						SELECT 
							ISNULL((
								(-1)*SUM(QUANTITY) 
								*
								ISNULL((
									SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
									FROM LIVE2.dbo.NachKalk_MatVerteilung
									WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = 146
											AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = tblAnlageArtikel_.D17_PTR
								), 0) 
							), 0) AS RES 

						FROM 
							dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
						WHERE 
							dbo.DATA0095.TRAN_TP = 23
							AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
							AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
							AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR
					), 0) 
				) AS Verbrauch,
				ISNULL((SELECT TOP 1 Durchsatz FROM @tblDurchsatzFDLamiLBIL), 0) AS Durchsatz,
				ISNULL((SELECT TOP 1 BzgGr FROM @tblDurchsatzFDLamiLBIL), 0) AS BzgGr,
				VerrPreis,
				LagerEinheit

			FROM @tblAnlageArtikelFDLamiLBIL AS tblAnlageArtikel_
		) AS tblJeAnlage
		ORDER BY IstKosten DESC
	END

	IF @Case_ = 'Matverbrauch_BMDickeCuLief'
	BEGIN
		--DECLARE 
		--@para4 varchar(255),
		--@para5 varchar(255)
		--SET @para4 = '01.09.2015' 
		--SET @para5 = '07.09.2015' 


		DECLARE @tblAlt table(
											D17_PTR_ALT NUMERIC(10, 0),
											QUAN_ALT_ISSUED NUMERIC(20, 7)
											)


		INSERT @tblAlt(D17_PTR_ALT, QUAN_ALT_ISSUED) 
		SELECT 
			ISNULL((SELECT TOP 1 ISNULL(RKEY, 0) FROM DATA0017 WHERE RKEY=dbo.DATA0067.INVT_ALT1_PTR), 0) AS D17_PTR_ALT,
			dbo.DATA0067.QUAN_ALT1_ISSUED AS QUAN_ALT_ISSUED

		FROM         dbo.DATA0006 AS D0006 INNER JOIN
							  dbo.DATA0048 ON D0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
							  dbo.DATA0050 ON D0006.CUST_PART_PTR = dbo.DATA0050.RKEY INNER JOIN
							  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
							  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY INNER JOIN
							  dbo.ARTIKELDATEN ON dbo.DATA0050.RKEY = dbo.ARTIKELDATEN.CUST_PART_PTR INNER JOIN
							  dbo.DATA0067 ON D0006.RKEY = dbo.DATA0067.WO_PTR INNER JOIN
							  dbo.DATA0017 AS D17 ON dbo.DATA0067.INVT_PTR = D17.RKEY
		WHERE     
			dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103)
			AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103)
			AND dbo.DATA0034.DEPT_CODE='ZU-01-01'
			AND ISNULL(D17.LONG_INVENTORY_PART_NUMBER, '')  NOT IN ('', 'Zur besonderen Verfügung')
		UNION ALL
		SELECT 
			ISNULL((SELECT TOP 1 ISNULL(RKEY, 0) FROM DATA0017 WHERE RKEY=dbo.DATA0067.INVT_ALT2_PTR), 0) AS D17_PTR_ALT,
			dbo.DATA0067.QUAN_ALT2_ISSUED AS QUAN_ALT_ISSUED

		FROM         dbo.DATA0006 AS D0006 INNER JOIN
							  dbo.DATA0048 ON D0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
							  dbo.DATA0050 ON D0006.CUST_PART_PTR = dbo.DATA0050.RKEY INNER JOIN
							  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
							  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY INNER JOIN
							  dbo.ARTIKELDATEN ON dbo.DATA0050.RKEY = dbo.ARTIKELDATEN.CUST_PART_PTR INNER JOIN
							  dbo.DATA0067 ON D0006.RKEY = dbo.DATA0067.WO_PTR INNER JOIN
							  dbo.DATA0017 AS D17 ON dbo.DATA0067.INVT_PTR = D17.RKEY
		WHERE     
			dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103)
			AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103)
			AND dbo.DATA0034.DEPT_CODE='ZU-01-01'
			AND ISNULL(D17.LONG_INVENTORY_PART_NUMBER, '')  NOT IN ('', 'Zur besonderen Verfügung')
		UNION ALL
		SELECT 
			ISNULL((SELECT TOP 1 ISNULL(RKEY, 0) FROM DATA0017 WHERE RKEY=dbo.DATA0067.INVT_ALT3_PTR), 0) AS D17_PTR_ALT,
			dbo.DATA0067.QUAN_ALT3_ISSUED AS QUAN_ALT_ISSUED

		FROM         dbo.DATA0006 AS D0006 INNER JOIN
							  dbo.DATA0048 ON D0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
							  dbo.DATA0050 ON D0006.CUST_PART_PTR = dbo.DATA0050.RKEY INNER JOIN
							  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
							  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY INNER JOIN
							  dbo.ARTIKELDATEN ON dbo.DATA0050.RKEY = dbo.ARTIKELDATEN.CUST_PART_PTR INNER JOIN
							  dbo.DATA0067 ON D0006.RKEY = dbo.DATA0067.WO_PTR INNER JOIN
							  dbo.DATA0017 AS D17 ON dbo.DATA0067.INVT_PTR = D17.RKEY
		WHERE     
			dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103)
			AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103)
			AND dbo.DATA0034.DEPT_CODE='ZU-01-01'
			AND ISNULL(D17.LONG_INVENTORY_PART_NUMBER, '')  NOT IN ('', 'Zur besonderen Verfügung')
		UNION ALL
		SELECT 
			ISNULL((SELECT TOP 1 ISNULL(RKEY, 0) FROM DATA0017 WHERE RKEY=dbo.DATA0067.INVT_ALT4_PTR), 0) AS D17_PTR_ALT,
			dbo.DATA0067.QUAN_ALT4_ISSUED AS QUAN_ALT_ISSUED

		FROM         dbo.DATA0006 AS D0006 INNER JOIN
							  dbo.DATA0048 ON D0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
							  dbo.DATA0050 ON D0006.CUST_PART_PTR = dbo.DATA0050.RKEY INNER JOIN
							  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
							  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY INNER JOIN
							  dbo.ARTIKELDATEN ON dbo.DATA0050.RKEY = dbo.ARTIKELDATEN.CUST_PART_PTR INNER JOIN
							  dbo.DATA0067 ON D0006.RKEY = dbo.DATA0067.WO_PTR INNER JOIN
							  dbo.DATA0017 AS D17 ON dbo.DATA0067.INVT_PTR = D17.RKEY
		WHERE     
			dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103)
			AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103)
			AND dbo.DATA0034.DEPT_CODE='ZU-01-01'
			AND ISNULL(D17.LONG_INVENTORY_PART_NUMBER, '')  NOT IN ('', 'Zur besonderen Verfügung')
		UNION ALL
		SELECT 
			ISNULL((SELECT TOP 1 ISNULL(RKEY, 0) FROM DATA0017 WHERE RKEY=dbo.DATA0067.INVT_ALT5_PTR), 0) AS D17_PTR_ALT,
			dbo.DATA0067.QUAN_ALT5_ISSUED AS QUAN_ALT_ISSUED

		FROM         dbo.DATA0006 AS D0006 INNER JOIN
							  dbo.DATA0048 ON D0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
							  dbo.DATA0050 ON D0006.CUST_PART_PTR = dbo.DATA0050.RKEY INNER JOIN
							  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
							  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY INNER JOIN
							  dbo.ARTIKELDATEN ON dbo.DATA0050.RKEY = dbo.ARTIKELDATEN.CUST_PART_PTR INNER JOIN
							  dbo.DATA0067 ON D0006.RKEY = dbo.DATA0067.WO_PTR INNER JOIN
							  dbo.DATA0017 AS D17 ON dbo.DATA0067.INVT_PTR = D17.RKEY
		WHERE     
			dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103)
			AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103)
			AND dbo.DATA0034.DEPT_CODE='ZU-01-01'
			AND ISNULL(D17.LONG_INVENTORY_PART_NUMBER, '')  NOT IN ('', 'Zur besonderen Verfügung')




		SELECT
			--D17_PTR,
			ALT_Material_PTR,
			Bezeichnung,
			VerrPreis,
			SUM(Menge_pro_ZU * Anz_ZU) AS SollMengeStk,
			ISNULL(
					(
						SELECT  TOP 1 SUM(QUAN_ALT_ISSUED) AS SumIstMenge 
						FROM @tblAlt WHERE D17_PTR_ALT=tblAltArt.ALT_Material_PTR 
						GROUP BY D17_PTR_ALT
					)
			, 0) AS IstMengeStk,
			m2
		FROM
		(

				SELECT
					ISNULL((SELECT ISNULL(LONG_INVENTORY_PART_NUMBER, '') AS RES FROM dbo.DATA0017 WHERE RKEY=ALT_Material_PTR), '') AS Bezeichnung,
					ISNULL((SELECT ISNULL(STD_COST, 0) AS RES FROM dbo.DATA0017 WHERE RKEY=ALT_Material_PTR), 0) AS VerrPreis,
					ISNULL((SELECT CASE WHEN ISNUMERIC(REPLACE(ANALYSIS_CODE5, ',', '.'))>0 THEN CAST(REPLACE(ANALYSIS_CODE5, ',', '.') AS NUMERIC(10, 4)) ELSE 0 END AS RES FROM dbo.DATA0017 WHERE RKEY=ALT_Material_PTR), 0) AS m2,
					*
				FROM
				(

					SELECT 
						(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
							/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000) AS ZU_m2,
						CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) AS Anz_ZU,
						D17.RKEY AS D17_PTR,
						D17.STD_COST,
						dbo.DATA0067.QUAN_BOM AS Menge_pro_ZU,
						CASE
							WHEN LEFT(INV_PART_DESCRIPTION, 4) = 'POOL' THEN 
								(
									SELECT TOP 1
										(SELECT TOP 1 RKEY FROM DATA0017 WHERE INV_PART_DESCRIPTION LIKE SuchMuster ORDER BY ACTUAL_COST) AS RES
									FROM
									(
										SELECT TOP 1
											CASE 
												WHEN SUBSTRING(RTRIM(LTRIM(REPLACE(D17.INV_PART_DESCRIPTION, 'POOL ', ''))), 1, 1) <> 'K' THEN
													CASE 
														WHEN FF='' THEN
															LTRIM(RTRIM(REPLACE(D17.INV_PART_DESCRIPTION, 'POOL ', ''))) + REPLACE(SUBSTRING(BMParams, 1, 10), '_', '%') + '%' + REPLACE(SUBSTRING(BMParams, 13, 8), '_', '%') + '%' + REPLACE(SUBSTRING(BMParams, 25, 3), '_', '%')
														ELSE
															LTRIM(RTRIM(REPLACE(D17.INV_PART_DESCRIPTION, 'POOL ', ''))) + REPLACE(SUBSTRING(BMParams, 1, 10), '_', '%') + '%' + REPLACE(SUBSTRING(BMParams, 13, 8), '_', '%') + FF + '%' + REPLACE(SUBSTRING(BMParams, 25, 3), '_', '%')
													END
													--LTRIM(RTRIM(REPLACE(D17.INV_PART_DESCRIPTION, 'POOL ', ''))) + REPLACE(RTRIM(BMParams), '_', '%') + FF + '%'
												ELSE
													LTRIM(RTRIM(REPLACE(D17.INV_PART_DESCRIPTION, 'POOL ', ''))) + '%' + FF + '%'
											END AS SuchMuster
										FROM
										(
											SELECT     
												D6.RKEY AS RK0006, 
												dbo.DATA0038.STEP_NUMBER AS Step, 
												dbo.DATA0038.PARAMETER_5 AS BMParams, 
												D6.WORK_ORDER_NUMBER,
												CASE 
													WHEN dbo.ARTIKELDATEN.ZUX * dbo.ARTIKELDATEN.ZUY <= 140300 THEN 'F02'
													ELSE 
														CASE
															WHEN dbo.ARTIKELDATEN.ZUX * dbo.ARTIKELDATEN.ZUY > 188860 AND dbo.ARTIKELDATEN.ZUX * dbo.ARTIKELDATEN.ZUY <= 215992 THEN 'F05'
															ELSE 
																CASE
																	WHEN dbo.ARTIKELDATEN.ZUX * dbo.ARTIKELDATEN.ZUY > 216550 AND dbo.ARTIKELDATEN.ZUX * dbo.ARTIKELDATEN.ZUY <= 280600 THEN 'F06'
																	ELSE 
																		CASE
																			WHEN dbo.ARTIKELDATEN.ZUX * dbo.ARTIKELDATEN.ZUY > 280600 THEN 'F08' --dbo.ARTIKELDATEN.ZUX * dbo.ARTIKELDATEN.ZUY = 324520 THEN 'F08'
																			ELSE 
																				CASE
																					WHEN dbo.ARTIKELDATEN.ZUX * dbo.ARTIKELDATEN.ZUY > 215992 AND dbo.ARTIKELDATEN.ZUX * dbo.ARTIKELDATEN.ZUY <= 216550 THEN 'F09'
																					ELSE 
																						CASE
																							WHEN dbo.ARTIKELDATEN.ZUX * dbo.ARTIKELDATEN.ZUY > 140300 AND dbo.ARTIKELDATEN.ZUX * dbo.ARTIKELDATEN.ZUY <= 188860 THEN 'F17'
																							ELSE 
																								'???'
																						END
																				END
																		END
																END
														END
												END AS FF

											FROM         dbo.DATA0038 INNER JOIN
																  dbo.DATA0006 AS D6 ON dbo.DATA0038.SOURCE_PTR = D6.RKEY INNER JOIN
																  dbo.ARTIKELDATEN ON D6.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
											WHERE     
													(dbo.DATA0038.TTYPE = 2) AND (dbo.ARTIKELDATEN.BMVersion = 2) AND (dbo.DATA0038.PARAMETER_5 IS NOT NULL)  
													AND (LTRIM(RTRIM(dbo.DATA0038.PARAMETER_5)) <> '.') AND (LTRIM(RTRIM(dbo.DATA0038.PARAMETER_5)) <> '')  
													AND	(D6.RKEY = D0006.RKEY) --'  -092660-01-000') --'  -092660-01-000')
										) AS tblFF
									) AS tblSuchMuster
								)
							ELSE
								D17.RKEY
						END AS ALT_Material_PTR

					--FROM         dbo.DATA0006 AS D0006 INNER JOIN
					--					  dbo.DATA0048 ON D0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
					--					  dbo.DATA0050 ON D0006.CUST_PART_PTR = dbo.DATA0050.RKEY INNER JOIN
					--					  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
					--					  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY INNER JOIN
					--					  dbo.ARTIKELDATEN ON dbo.DATA0050.RKEY = dbo.ARTIKELDATEN.CUST_PART_PTR INNER JOIN
					--					  dbo.DATA0067 ON D0006.RKEY = dbo.DATA0067.WO_PTR INNER JOIN
					--					  dbo.DATA0017 AS D17 ON dbo.DATA0067.INVT_PTR = D17.RKEY
					FROM         dbo.DATA0006 AS D0006 INNER JOIN
						  dbo.DATA0048 ON D0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
						  dbo.DATA0050 ON D0006.CUST_PART_PTR = dbo.DATA0050.RKEY INNER JOIN
						  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
						  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY INNER JOIN
						  dbo.ARTIKELDATEN ON dbo.DATA0050.RKEY = dbo.ARTIKELDATEN.CUST_PART_PTR INNER JOIN
						  dbo.DATA0067 ON D0006.RKEY = dbo.DATA0067.WO_PTR INNER JOIN
						  dbo.DATA0017 AS D17 ON dbo.DATA0067.INVT_PTR = D17.RKEY INNER JOIN
						  dbo.DATA0008 ON D17.PROD_CODE_SELL_PTR = dbo.DATA0008.RKEY INNER JOIN
						  dbo.DATA0007 ON dbo.DATA0008.PR_GRP_POINTER = dbo.DATA0007.RKEY
					WHERE     
						ISNULL(D17.LONG_INVENTORY_PART_NUMBER, '') <>''
						AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103)
						AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103)
						AND dbo.DATA0034.DEPT_CODE='ZU-01-01'
						AND dbo.DATA0007.PR_GRP_CODE LIKE '%-BM'
				) AS tblStkListe
		) AS tblAltArt
		WHERE Bezeichnung  <> 'Zur besonderen Verfügung'
		GROUP BY
			--D17_PTR,
			ALT_Material_PTR,
			Bezeichnung,
			VerrPreis,
			m2
	END

	IF @Case_ = 'Matverbrauch_CUDickeLief'
	BEGIN
		--DECLARE 
		--@para4 varchar(255),
		--@para5 varchar(255)
		--SET @para4 = '01.09.2015' 
		--SET @para5 = '07.09.2015' 


		DECLARE @tblAltCu table(
											D17_PTR_ALT NUMERIC(10, 0),
											QUAN_ALT_ISSUED NUMERIC(20, 7)
											)


		INSERT @tblAltCu(D17_PTR_ALT, QUAN_ALT_ISSUED) 
		SELECT 
			ISNULL((SELECT TOP 1 ISNULL(RKEY, 0) FROM DATA0017 WHERE RKEY=dbo.DATA0067.INVT_ALT1_PTR), 0) AS D17_PTR_ALT,
			dbo.DATA0067.QUAN_ALT1_ISSUED AS QUAN_ALT_ISSUED
		FROM         dbo.DATA0008 INNER JOIN
                      dbo.DATA0007 ON dbo.DATA0008.PR_GRP_POINTER = dbo.DATA0007.RKEY INNER JOIN
                      dbo.DATA0006 AS D0006 INNER JOIN
                      dbo.DATA0048 ON D0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
                      dbo.DATA0050 ON D0006.CUST_PART_PTR = dbo.DATA0050.RKEY INNER JOIN
                      dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
                      dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY INNER JOIN
                      dbo.ARTIKELDATEN ON dbo.DATA0050.RKEY = dbo.ARTIKELDATEN.CUST_PART_PTR INNER JOIN
                      dbo.DATA0067 ON D0006.RKEY = dbo.DATA0067.WO_PTR INNER JOIN
                      dbo.DATA0017 AS D17 ON dbo.DATA0067.INVT_PTR = D17.RKEY ON dbo.DATA0008.RKEY = D17.PROD_CODE_SELL_PTR
		WHERE     
			dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103)
			AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103)
			AND LEFT(dbo.DATA0034.DEPT_CODE, 4)='MLPR'
			AND D17.TTYPE='R'
			AND dbo.DATA0007.PR_GRP_CODE LIKE '%FOL'
		UNION ALL
		SELECT 
			ISNULL((SELECT TOP 1 ISNULL(RKEY, 0) FROM DATA0017 WHERE RKEY=dbo.DATA0067.INVT_ALT2_PTR), 0) AS D17_PTR_ALT,
			dbo.DATA0067.QUAN_ALT2_ISSUED AS QUAN_ALT_ISSUED
		FROM         dbo.DATA0008 INNER JOIN
                      dbo.DATA0007 ON dbo.DATA0008.PR_GRP_POINTER = dbo.DATA0007.RKEY INNER JOIN
                      dbo.DATA0006 AS D0006 INNER JOIN
                      dbo.DATA0048 ON D0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
                      dbo.DATA0050 ON D0006.CUST_PART_PTR = dbo.DATA0050.RKEY INNER JOIN
                      dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
                      dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY INNER JOIN
                      dbo.ARTIKELDATEN ON dbo.DATA0050.RKEY = dbo.ARTIKELDATEN.CUST_PART_PTR INNER JOIN
                      dbo.DATA0067 ON D0006.RKEY = dbo.DATA0067.WO_PTR INNER JOIN
                      dbo.DATA0017 AS D17 ON dbo.DATA0067.INVT_PTR = D17.RKEY ON dbo.DATA0008.RKEY = D17.PROD_CODE_SELL_PTR
		WHERE     
			dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103)
			AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103)
			AND LEFT(dbo.DATA0034.DEPT_CODE, 4)='MLPR'
			AND D17.TTYPE='R'
			AND dbo.DATA0007.PR_GRP_CODE LIKE '%FOL'
		UNION ALL
		SELECT 
			ISNULL((SELECT TOP 1 ISNULL(RKEY, 0) FROM DATA0017 WHERE RKEY=dbo.DATA0067.INVT_ALT3_PTR), 0) AS D17_PTR_ALT,
			dbo.DATA0067.QUAN_ALT3_ISSUED AS QUAN_ALT_ISSUED
		FROM         dbo.DATA0008 INNER JOIN
                      dbo.DATA0007 ON dbo.DATA0008.PR_GRP_POINTER = dbo.DATA0007.RKEY INNER JOIN
                      dbo.DATA0006 AS D0006 INNER JOIN
                      dbo.DATA0048 ON D0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
                      dbo.DATA0050 ON D0006.CUST_PART_PTR = dbo.DATA0050.RKEY INNER JOIN
                      dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
                      dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY INNER JOIN
                      dbo.ARTIKELDATEN ON dbo.DATA0050.RKEY = dbo.ARTIKELDATEN.CUST_PART_PTR INNER JOIN
                      dbo.DATA0067 ON D0006.RKEY = dbo.DATA0067.WO_PTR INNER JOIN
                      dbo.DATA0017 AS D17 ON dbo.DATA0067.INVT_PTR = D17.RKEY ON dbo.DATA0008.RKEY = D17.PROD_CODE_SELL_PTR
		WHERE     
			dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103)
			AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103)
			AND LEFT(dbo.DATA0034.DEPT_CODE, 4)='MLPR'
			AND D17.TTYPE='R'
			AND dbo.DATA0007.PR_GRP_CODE LIKE '%FOL'
		UNION ALL
		SELECT 
			ISNULL((SELECT TOP 1 ISNULL(RKEY, 0) FROM DATA0017 WHERE RKEY=dbo.DATA0067.INVT_ALT4_PTR), 0) AS D17_PTR_ALT,
			dbo.DATA0067.QUAN_ALT4_ISSUED AS QUAN_ALT_ISSUED
		FROM         dbo.DATA0008 INNER JOIN
                      dbo.DATA0007 ON dbo.DATA0008.PR_GRP_POINTER = dbo.DATA0007.RKEY INNER JOIN
                      dbo.DATA0006 AS D0006 INNER JOIN
                      dbo.DATA0048 ON D0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
                      dbo.DATA0050 ON D0006.CUST_PART_PTR = dbo.DATA0050.RKEY INNER JOIN
                      dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
                      dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY INNER JOIN
                      dbo.ARTIKELDATEN ON dbo.DATA0050.RKEY = dbo.ARTIKELDATEN.CUST_PART_PTR INNER JOIN
                      dbo.DATA0067 ON D0006.RKEY = dbo.DATA0067.WO_PTR INNER JOIN
                      dbo.DATA0017 AS D17 ON dbo.DATA0067.INVT_PTR = D17.RKEY ON dbo.DATA0008.RKEY = D17.PROD_CODE_SELL_PTR
		WHERE     
			dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103)
			AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103)
			AND LEFT(dbo.DATA0034.DEPT_CODE, 4)='MLPR'
			AND D17.TTYPE='R'
			AND dbo.DATA0007.PR_GRP_CODE LIKE '%FOL'
		UNION ALL
		SELECT 
			ISNULL((SELECT TOP 1 ISNULL(RKEY, 0) FROM DATA0017 WHERE RKEY=dbo.DATA0067.INVT_ALT5_PTR), 0) AS D17_PTR_ALT,
			dbo.DATA0067.QUAN_ALT5_ISSUED AS QUAN_ALT_ISSUED
		FROM         dbo.DATA0008 INNER JOIN
                      dbo.DATA0007 ON dbo.DATA0008.PR_GRP_POINTER = dbo.DATA0007.RKEY INNER JOIN
                      dbo.DATA0006 AS D0006 INNER JOIN
                      dbo.DATA0048 ON D0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
                      dbo.DATA0050 ON D0006.CUST_PART_PTR = dbo.DATA0050.RKEY INNER JOIN
                      dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
                      dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY INNER JOIN
                      dbo.ARTIKELDATEN ON dbo.DATA0050.RKEY = dbo.ARTIKELDATEN.CUST_PART_PTR INNER JOIN
                      dbo.DATA0067 ON D0006.RKEY = dbo.DATA0067.WO_PTR INNER JOIN
                      dbo.DATA0017 AS D17 ON dbo.DATA0067.INVT_PTR = D17.RKEY ON dbo.DATA0008.RKEY = D17.PROD_CODE_SELL_PTR
		WHERE     
			dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103)
			AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103)
			AND LEFT(dbo.DATA0034.DEPT_CODE, 4)='MLPR'
			AND D17.TTYPE='R'
			AND dbo.DATA0007.PR_GRP_CODE LIKE '%FOL'




		SELECT
			--D17_PTR,
			ALT_Material_PTR,
			Bezeichnung,
			VerrPreis,
			SUM(Menge_pro_ZU * Anz_ZU) AS SollMengeStk,
			ISNULL(
					(
						SELECT  TOP 1 SUM(QUAN_ALT_ISSUED) AS SumIstMenge 
						FROM @tblAltCu WHERE D17_PTR_ALT=tblAltArt.ALT_Material_PTR 
						GROUP BY D17_PTR_ALT
					)
			, 0) AS IstMengeStk,
			m2
		FROM
		(

				SELECT
					ISNULL((SELECT ISNULL(LONG_INVENTORY_PART_NUMBER, '') AS RES FROM dbo.DATA0017 WHERE RKEY=ALT_Material_PTR), '') AS Bezeichnung,
					ISNULL((SELECT ISNULL(STD_COST, 0) AS RES FROM dbo.DATA0017 WHERE RKEY=ALT_Material_PTR), 0) AS VerrPreis,
					ISNULL((SELECT CASE WHEN ISNUMERIC(REPLACE(ANALYSIS_CODE5, ',', '.'))>0 THEN CAST(REPLACE(ANALYSIS_CODE5, ',', '.') AS NUMERIC(10, 4)) ELSE 0 END AS RES FROM dbo.DATA0017 WHERE RKEY=ALT_Material_PTR), 0) AS m2,
					*
				FROM
				(

					SELECT 
						(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
							/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000) AS ZU_m2,
						CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) AS Anz_ZU,
						D17.RKEY AS D17_PTR,
						D17.STD_COST,
						dbo.DATA0067.QUAN_BOM AS Menge_pro_ZU,
						CASE
							WHEN LEFT(INV_PART_DESCRIPTION, 4) = 'POOL' THEN 
								(
									SELECT TOP 1
										(SELECT TOP 1 RKEY FROM DATA0017 WHERE INV_PART_DESCRIPTION LIKE SuchMuster ORDER BY ACTUAL_COST) AS RES
									FROM
									(
										SELECT TOP 1
											--CASE 
											--	WHEN SUBSTRING(RTRIM(LTRIM(REPLACE(D17.INV_PART_DESCRIPTION, 'POOL ', ''))), 1, 1) <> 'K' THEN
											--		CASE 
											--			WHEN FF='' THEN
											--				LTRIM(RTRIM(REPLACE(D17.INV_PART_DESCRIPTION, 'POOL ', ''))) + REPLACE(SUBSTRING(BMParams, 1, 20), '_', '%') + '%' + REPLACE(SUBSTRING(BMParams, 25, 3), '_', '%')
											--			ELSE
											--				LTRIM(RTRIM(REPLACE(D17.INV_PART_DESCRIPTION, 'POOL ', ''))) + REPLACE(SUBSTRING(BMParams, 1, 20), '_', '%') + '%' + FF + '%' + REPLACE(SUBSTRING(BMParams, 25, 3), '_', '%')
											--		END
											--		--LTRIM(RTRIM(REPLACE(D17.INV_PART_DESCRIPTION, 'POOL ', ''))) + REPLACE(RTRIM(BMParams), '_', '%') + FF + '%'
											--	ELSE
											--		LTRIM(RTRIM(REPLACE(D17.INV_PART_DESCRIPTION, 'POOL ', ''))) + '%' + FF + '%'
											--END AS SuchMuster
											(LTRIM(RTRIM(REPLACE(D17.INV_PART_DESCRIPTION, 'POOL ', ''))) + '%' + FF + '%') AS SuchMuster
										FROM
										(
											SELECT     
												D6.RKEY AS RK0006, 
												dbo.DATA0038.STEP_NUMBER AS Step, 
												dbo.DATA0038.PARAMETER_5 AS BMParams, 
												D6.WORK_ORDER_NUMBER,
												CASE 
													WHEN dbo.ARTIKELDATEN.ZUX * dbo.ARTIKELDATEN.ZUY <= 140300 THEN 'F02'
													ELSE 
														CASE
															WHEN dbo.ARTIKELDATEN.ZUX * dbo.ARTIKELDATEN.ZUY > 188860 AND dbo.ARTIKELDATEN.ZUX * dbo.ARTIKELDATEN.ZUY <= 215992 THEN 'F05'
															ELSE 
																CASE
																	WHEN dbo.ARTIKELDATEN.ZUX * dbo.ARTIKELDATEN.ZUY > 216550 AND dbo.ARTIKELDATEN.ZUX * dbo.ARTIKELDATEN.ZUY <= 280600 THEN 'F06'
																	ELSE 
																		CASE
																			WHEN dbo.ARTIKELDATEN.ZUX * dbo.ARTIKELDATEN.ZUY > 280600 THEN 'F08' --dbo.ARTIKELDATEN.ZUX * dbo.ARTIKELDATEN.ZUY = 324520 THEN 'F08'
																			ELSE 
																				CASE
																					WHEN dbo.ARTIKELDATEN.ZUX * dbo.ARTIKELDATEN.ZUY > 215992 AND dbo.ARTIKELDATEN.ZUX * dbo.ARTIKELDATEN.ZUY <= 216550 THEN 'F09'
																					ELSE 
																						CASE
																							WHEN dbo.ARTIKELDATEN.ZUX * dbo.ARTIKELDATEN.ZUY > 140300 AND dbo.ARTIKELDATEN.ZUX * dbo.ARTIKELDATEN.ZUY <= 188860 THEN 'F17'
																							ELSE 
																								'???'
																						END
																				END
																		END
																END
														END
												END AS FF

											FROM         dbo.DATA0038 INNER JOIN
																  dbo.DATA0006 AS D6 ON dbo.DATA0038.SOURCE_PTR = D6.RKEY INNER JOIN
																  dbo.ARTIKELDATEN ON D6.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
											WHERE     
													(dbo.DATA0038.TTYPE = 2) AND (dbo.ARTIKELDATEN.BMVersion = 2) AND (dbo.DATA0038.PARAMETER_5 IS NOT NULL)  
													AND (LTRIM(RTRIM(dbo.DATA0038.PARAMETER_5)) <> '.') AND (LTRIM(RTRIM(dbo.DATA0038.PARAMETER_5)) <> '')  
													AND	(D6.RKEY = D0006.RKEY) --'  -092660-01-000') --'  -092660-01-000')
										) AS tblFF
									) AS tblSuchMuster
								)
							ELSE
								D17.RKEY
						END AS ALT_Material_PTR

					--FROM         dbo.DATA0006 AS D0006 INNER JOIN
					--					  dbo.DATA0048 ON D0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
					--					  dbo.DATA0050 ON D0006.CUST_PART_PTR = dbo.DATA0050.RKEY INNER JOIN
					--					  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
					--					  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY INNER JOIN
					--					  dbo.ARTIKELDATEN ON dbo.DATA0050.RKEY = dbo.ARTIKELDATEN.CUST_PART_PTR INNER JOIN
					--					  dbo.DATA0067 ON D0006.RKEY = dbo.DATA0067.WO_PTR INNER JOIN
					--					  dbo.DATA0017 AS D17 ON dbo.DATA0067.INVT_PTR = D17.RKEY
					FROM         dbo.DATA0006 AS D0006 INNER JOIN
						  dbo.DATA0048 ON D0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
						  dbo.DATA0050 ON D0006.CUST_PART_PTR = dbo.DATA0050.RKEY INNER JOIN
						  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
						  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY INNER JOIN
						  dbo.ARTIKELDATEN ON dbo.DATA0050.RKEY = dbo.ARTIKELDATEN.CUST_PART_PTR INNER JOIN
						  dbo.DATA0067 ON D0006.RKEY = dbo.DATA0067.WO_PTR INNER JOIN
						  dbo.DATA0017 AS D17 ON dbo.DATA0067.INVT_PTR = D17.RKEY INNER JOIN
						  dbo.DATA0008 ON D17.PROD_CODE_SELL_PTR = dbo.DATA0008.RKEY INNER JOIN
						  dbo.DATA0007 ON dbo.DATA0008.PR_GRP_POINTER = dbo.DATA0007.RKEY
					WHERE     
						ISNULL(D17.LONG_INVENTORY_PART_NUMBER, '') <>''
						AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103)
						AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103)
						AND LEFT(dbo.DATA0034.DEPT_CODE, 4)='MLPR'
						AND dbo.DATA0007.PR_GRP_CODE LIKE '%-FOL'
				) AS tblStkListe
		) AS tblAltArt
		--WHERE Bezeichnung  <> 'Zur besonderen Verfügung'
		GROUP BY
			--D17_PTR,
			ALT_Material_PTR,
			Bezeichnung,
			VerrPreis,
			m2
	END

	IF @Case_ = 'Matverbrauch_PPDickeLief'
	BEGIN
		--DECLARE 
		--@para4 varchar(255),
		--@para5 varchar(255)
		--SET @para4 = '01.09.2015' 
		--SET @para5 = '07.09.2015' 


		DECLARE @tblAltPP table(
											D17_PTR_ALT NUMERIC(10, 0),
											QUAN_ALT_ISSUED NUMERIC(20, 7)
											)


		INSERT @tblAltPP(D17_PTR_ALT, QUAN_ALT_ISSUED) 
		SELECT 
			ISNULL((SELECT TOP 1 ISNULL(RKEY, 0) FROM DATA0017 WHERE RKEY=dbo.DATA0067.INVT_ALT1_PTR), 0) AS D17_PTR_ALT,
			dbo.DATA0067.QUAN_ALT1_ISSUED AS QUAN_ALT_ISSUED
		FROM         dbo.DATA0008 INNER JOIN
                      dbo.DATA0007 ON dbo.DATA0008.PR_GRP_POINTER = dbo.DATA0007.RKEY INNER JOIN
                      dbo.DATA0006 AS D0006 INNER JOIN
                      dbo.DATA0048 ON D0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
                      dbo.DATA0050 ON D0006.CUST_PART_PTR = dbo.DATA0050.RKEY INNER JOIN
                      dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
                      dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY INNER JOIN
                      dbo.ARTIKELDATEN ON dbo.DATA0050.RKEY = dbo.ARTIKELDATEN.CUST_PART_PTR INNER JOIN
                      dbo.DATA0067 ON D0006.RKEY = dbo.DATA0067.WO_PTR INNER JOIN
                      dbo.DATA0017 AS D17 ON dbo.DATA0067.INVT_PTR = D17.RKEY ON dbo.DATA0008.RKEY = D17.PROD_CODE_SELL_PTR
		WHERE     
			dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103)
			AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103)
			AND LEFT(dbo.DATA0034.DEPT_CODE, 4)='MLPR'
			AND D17.TTYPE='R'
			AND dbo.DATA0007.PR_GRP_CODE LIKE '%PRE'
		UNION ALL
		SELECT 
			ISNULL((SELECT TOP 1 ISNULL(RKEY, 0) FROM DATA0017 WHERE RKEY=dbo.DATA0067.INVT_ALT2_PTR), 0) AS D17_PTR_ALT,
			dbo.DATA0067.QUAN_ALT2_ISSUED AS QUAN_ALT_ISSUED
		FROM         dbo.DATA0008 INNER JOIN
                      dbo.DATA0007 ON dbo.DATA0008.PR_GRP_POINTER = dbo.DATA0007.RKEY INNER JOIN
                      dbo.DATA0006 AS D0006 INNER JOIN
                      dbo.DATA0048 ON D0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
                      dbo.DATA0050 ON D0006.CUST_PART_PTR = dbo.DATA0050.RKEY INNER JOIN
                      dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
                      dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY INNER JOIN
                      dbo.ARTIKELDATEN ON dbo.DATA0050.RKEY = dbo.ARTIKELDATEN.CUST_PART_PTR INNER JOIN
                      dbo.DATA0067 ON D0006.RKEY = dbo.DATA0067.WO_PTR INNER JOIN
                      dbo.DATA0017 AS D17 ON dbo.DATA0067.INVT_PTR = D17.RKEY ON dbo.DATA0008.RKEY = D17.PROD_CODE_SELL_PTR
		WHERE     
			dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103)
			AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103)
			AND LEFT(dbo.DATA0034.DEPT_CODE, 4)='MLPR'
			AND D17.TTYPE='R'
			AND dbo.DATA0007.PR_GRP_CODE LIKE '%PRE'
		UNION ALL
		SELECT 
			ISNULL((SELECT TOP 1 ISNULL(RKEY, 0) FROM DATA0017 WHERE RKEY=dbo.DATA0067.INVT_ALT3_PTR), 0) AS D17_PTR_ALT,
			dbo.DATA0067.QUAN_ALT3_ISSUED AS QUAN_ALT_ISSUED
		FROM         dbo.DATA0008 INNER JOIN
                      dbo.DATA0007 ON dbo.DATA0008.PR_GRP_POINTER = dbo.DATA0007.RKEY INNER JOIN
                      dbo.DATA0006 AS D0006 INNER JOIN
                      dbo.DATA0048 ON D0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
                      dbo.DATA0050 ON D0006.CUST_PART_PTR = dbo.DATA0050.RKEY INNER JOIN
                      dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
                      dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY INNER JOIN
                      dbo.ARTIKELDATEN ON dbo.DATA0050.RKEY = dbo.ARTIKELDATEN.CUST_PART_PTR INNER JOIN
                      dbo.DATA0067 ON D0006.RKEY = dbo.DATA0067.WO_PTR INNER JOIN
                      dbo.DATA0017 AS D17 ON dbo.DATA0067.INVT_PTR = D17.RKEY ON dbo.DATA0008.RKEY = D17.PROD_CODE_SELL_PTR
		WHERE     
			dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103)
			AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103)
			AND LEFT(dbo.DATA0034.DEPT_CODE, 4)='MLPR'
			AND D17.TTYPE='R'
			AND dbo.DATA0007.PR_GRP_CODE LIKE '%PRE'
		UNION ALL
		SELECT 
			ISNULL((SELECT TOP 1 ISNULL(RKEY, 0) FROM DATA0017 WHERE RKEY=dbo.DATA0067.INVT_ALT4_PTR), 0) AS D17_PTR_ALT,
			dbo.DATA0067.QUAN_ALT4_ISSUED AS QUAN_ALT_ISSUED
		FROM         dbo.DATA0008 INNER JOIN
                      dbo.DATA0007 ON dbo.DATA0008.PR_GRP_POINTER = dbo.DATA0007.RKEY INNER JOIN
                      dbo.DATA0006 AS D0006 INNER JOIN
                      dbo.DATA0048 ON D0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
                      dbo.DATA0050 ON D0006.CUST_PART_PTR = dbo.DATA0050.RKEY INNER JOIN
                      dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
                      dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY INNER JOIN
                      dbo.ARTIKELDATEN ON dbo.DATA0050.RKEY = dbo.ARTIKELDATEN.CUST_PART_PTR INNER JOIN
                      dbo.DATA0067 ON D0006.RKEY = dbo.DATA0067.WO_PTR INNER JOIN
                      dbo.DATA0017 AS D17 ON dbo.DATA0067.INVT_PTR = D17.RKEY ON dbo.DATA0008.RKEY = D17.PROD_CODE_SELL_PTR
		WHERE     
			dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103)
			AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103)
			AND LEFT(dbo.DATA0034.DEPT_CODE, 4)='MLPR'
			AND D17.TTYPE='R'
			AND dbo.DATA0007.PR_GRP_CODE LIKE '%PRE'
		UNION ALL
		SELECT 
			ISNULL((SELECT TOP 1 ISNULL(RKEY, 0) FROM DATA0017 WHERE RKEY=dbo.DATA0067.INVT_ALT5_PTR), 0) AS D17_PTR_ALT,
			dbo.DATA0067.QUAN_ALT5_ISSUED AS QUAN_ALT_ISSUED
		FROM         dbo.DATA0008 INNER JOIN
                      dbo.DATA0007 ON dbo.DATA0008.PR_GRP_POINTER = dbo.DATA0007.RKEY INNER JOIN
                      dbo.DATA0006 AS D0006 INNER JOIN
                      dbo.DATA0048 ON D0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
                      dbo.DATA0050 ON D0006.CUST_PART_PTR = dbo.DATA0050.RKEY INNER JOIN
                      dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
                      dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY INNER JOIN
                      dbo.ARTIKELDATEN ON dbo.DATA0050.RKEY = dbo.ARTIKELDATEN.CUST_PART_PTR INNER JOIN
                      dbo.DATA0067 ON D0006.RKEY = dbo.DATA0067.WO_PTR INNER JOIN
                      dbo.DATA0017 AS D17 ON dbo.DATA0067.INVT_PTR = D17.RKEY ON dbo.DATA0008.RKEY = D17.PROD_CODE_SELL_PTR
		WHERE     
			dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103)
			AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103)
			AND LEFT(dbo.DATA0034.DEPT_CODE, 4)='MLPR'
			AND D17.TTYPE='R'
			AND dbo.DATA0007.PR_GRP_CODE LIKE '%PRE'




		SELECT
			--D17_PTR,
			ALT_Material_PTR,
			Bezeichnung,
			VerrPreis,
			SUM(Menge_pro_ZU * Anz_ZU) AS SollMengeStk,
			ISNULL(
					(
						SELECT  TOP 1 SUM(QUAN_ALT_ISSUED) AS SumIstMenge 
						FROM @tblAltPP WHERE D17_PTR_ALT=tblAltArt.ALT_Material_PTR 
						GROUP BY D17_PTR_ALT
					)
			, 0) AS IstMengeStk,
			m2
		FROM
		(

				SELECT
					ISNULL((SELECT ISNULL(LONG_INVENTORY_PART_NUMBER, '') AS RES FROM dbo.DATA0017 WHERE RKEY=ALT_Material_PTR), '') AS Bezeichnung,
					ISNULL((SELECT ISNULL(STD_COST, 0) AS RES FROM dbo.DATA0017 WHERE RKEY=ALT_Material_PTR), 0) AS VerrPreis,
					ISNULL((SELECT CASE WHEN ISNUMERIC(REPLACE(ANALYSIS_CODE5, ',', '.'))>0 THEN CAST(REPLACE(ANALYSIS_CODE5, ',', '.') AS NUMERIC(10, 4)) ELSE 0 END AS RES FROM dbo.DATA0017 WHERE RKEY=ALT_Material_PTR), 0) AS m2,
					*
				FROM
				(

					SELECT 
						(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
							/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000) AS ZU_m2,
						CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) AS Anz_ZU,
						D17.RKEY AS D17_PTR,
						D17.STD_COST,
						dbo.DATA0067.QUAN_BOM AS Menge_pro_ZU,
						CASE
							WHEN LEFT(INV_PART_DESCRIPTION, 4) = 'POOL' THEN 
								(
									SELECT TOP 1
										(SELECT TOP 1 RKEY FROM DATA0017 WHERE INV_PART_DESCRIPTION LIKE SuchMuster ORDER BY ACTUAL_COST) AS RES
									FROM
									(
										SELECT TOP 1
											CASE 
												WHEN SUBSTRING(RTRIM(LTRIM(REPLACE(D17.INV_PART_DESCRIPTION, 'POOL ', ''))), 1, 1) <> 'K' THEN
													CASE 
														WHEN FF='' THEN
															LTRIM(RTRIM(REPLACE(D17.INV_PART_DESCRIPTION, 'POOL ', ''))) + REPLACE(SUBSTRING(BMParams, 1, 20), '_', '%') + '%' + REPLACE(SUBSTRING(BMParams, 25, 3), '_', '%')
														ELSE
															LTRIM(RTRIM(REPLACE(D17.INV_PART_DESCRIPTION, 'POOL ', ''))) + REPLACE(SUBSTRING(BMParams, 1, 20), '_', '%') + '%' + FF + '%' + REPLACE(SUBSTRING(BMParams, 25, 3), '_', '%')
													END
													--LTRIM(RTRIM(REPLACE(D17.INV_PART_DESCRIPTION, 'POOL ', ''))) + REPLACE(RTRIM(BMParams), '_', '%') + FF + '%'
												ELSE
													LTRIM(RTRIM(REPLACE(D17.INV_PART_DESCRIPTION, 'POOL ', ''))) + '%' + FF + '%'
											END AS SuchMuster
										FROM
										(
											SELECT     
												D6.RKEY AS RK0006, 
												dbo.DATA0038.STEP_NUMBER AS Step, 
												dbo.DATA0038.PARAMETER_5 AS BMParams, 
												D6.WORK_ORDER_NUMBER,
												CASE 
													WHEN dbo.ARTIKELDATEN.ZUX * dbo.ARTIKELDATEN.ZUY <= 140300 THEN 'F02'
													ELSE 
														CASE
															WHEN dbo.ARTIKELDATEN.ZUX * dbo.ARTIKELDATEN.ZUY > 188860 AND dbo.ARTIKELDATEN.ZUX * dbo.ARTIKELDATEN.ZUY <= 215992 THEN 'F05'
															ELSE 
																CASE
																	WHEN dbo.ARTIKELDATEN.ZUX * dbo.ARTIKELDATEN.ZUY > 216550 AND dbo.ARTIKELDATEN.ZUX * dbo.ARTIKELDATEN.ZUY <= 280600 THEN 'F06'
																	ELSE 
																		CASE
																			WHEN dbo.ARTIKELDATEN.ZUX * dbo.ARTIKELDATEN.ZUY > 280600 THEN 'F08' --dbo.ARTIKELDATEN.ZUX * dbo.ARTIKELDATEN.ZUY = 324520 THEN 'F08'
																			ELSE 
																				CASE
																					WHEN dbo.ARTIKELDATEN.ZUX * dbo.ARTIKELDATEN.ZUY > 215992 AND dbo.ARTIKELDATEN.ZUX * dbo.ARTIKELDATEN.ZUY <= 216550 THEN 'F09'
																					ELSE 
																						CASE
																							WHEN dbo.ARTIKELDATEN.ZUX * dbo.ARTIKELDATEN.ZUY > 140300 AND dbo.ARTIKELDATEN.ZUX * dbo.ARTIKELDATEN.ZUY <= 188860 THEN 'F17'
																							ELSE 
																								'???'
																						END
																				END
																		END
																END
														END
												END AS FF

											FROM         dbo.DATA0038 INNER JOIN
																  dbo.DATA0006 AS D6 ON dbo.DATA0038.SOURCE_PTR = D6.RKEY INNER JOIN
																  dbo.ARTIKELDATEN ON D6.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
											WHERE     
													(dbo.DATA0038.TTYPE = 2) AND (dbo.ARTIKELDATEN.BMVersion = 2) AND (dbo.DATA0038.PARAMETER_5 IS NOT NULL)  
													AND (LTRIM(RTRIM(dbo.DATA0038.PARAMETER_5)) <> '.') AND (LTRIM(RTRIM(dbo.DATA0038.PARAMETER_5)) <> '')  
													AND	(D6.RKEY = D0006.RKEY) --'  -092660-01-000') --'  -092660-01-000')
										) AS tblFF
									) AS tblSuchMuster
								)
							ELSE
								D17.RKEY
						END AS ALT_Material_PTR

					--FROM         dbo.DATA0006 AS D0006 INNER JOIN
					--					  dbo.DATA0048 ON D0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
					--					  dbo.DATA0050 ON D0006.CUST_PART_PTR = dbo.DATA0050.RKEY INNER JOIN
					--					  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
					--					  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY INNER JOIN
					--					  dbo.ARTIKELDATEN ON dbo.DATA0050.RKEY = dbo.ARTIKELDATEN.CUST_PART_PTR INNER JOIN
					--					  dbo.DATA0067 ON D0006.RKEY = dbo.DATA0067.WO_PTR INNER JOIN
					--					  dbo.DATA0017 AS D17 ON dbo.DATA0067.INVT_PTR = D17.RKEY
					FROM         dbo.DATA0006 AS D0006 INNER JOIN
						  dbo.DATA0048 ON D0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
						  dbo.DATA0050 ON D0006.CUST_PART_PTR = dbo.DATA0050.RKEY INNER JOIN
						  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
						  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY INNER JOIN
						  dbo.ARTIKELDATEN ON dbo.DATA0050.RKEY = dbo.ARTIKELDATEN.CUST_PART_PTR INNER JOIN
						  dbo.DATA0067 ON D0006.RKEY = dbo.DATA0067.WO_PTR INNER JOIN
						  dbo.DATA0017 AS D17 ON dbo.DATA0067.INVT_PTR = D17.RKEY INNER JOIN
						  dbo.DATA0008 ON D17.PROD_CODE_SELL_PTR = dbo.DATA0008.RKEY INNER JOIN
						  dbo.DATA0007 ON dbo.DATA0008.PR_GRP_POINTER = dbo.DATA0007.RKEY
					WHERE     
						ISNULL(D17.LONG_INVENTORY_PART_NUMBER, '') <>''
						AND dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103)
						AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103)
						AND LEFT(dbo.DATA0034.DEPT_CODE, 4)='MLPR'
						AND dbo.DATA0007.PR_GRP_CODE LIKE '%-PRE'
				) AS tblStkListe
		) AS tblAltArt
		--WHERE Bezeichnung  <> 'Zur besonderen Verfügung'
		GROUP BY
			--D17_PTR,
			ALT_Material_PTR,
			Bezeichnung,
			VerrPreis,
			m2
	END

	IF @Case_ = 'Matverbrauch_BMDickeCuLief_alt'
	BEGIN
		--DECLARE 
		--@para4 varchar(255),
		--@para5 varchar(255)
		--SET @para4 = '01.01.2015'	--Datum Von
		--SET @para5 = '31.03.2015'	--Datum Bis

		SELECT
			Bezeichnung,
			SUM(SollMenge) AS SollMengeStk,
			SUM(IstMenge) AS IstMengeStk,
			SUM(Soll_m2) AS Soll_m2,
			SUM(Ist_m2) AS Ist_m2,
			AVG(VerrPreis) AS VerrPreis
		FROM
		(



			SELECT
				FA,
				LONG_INVENTORY_PART_NUMBER AS Bezeichnung,
				(IstMenge - SollMenge) AS Mehrverbrauch,
				SollMenge,
				IstMenge,
				m2,
				Soll_m2,
				Ist_m2,
				VerrPreis,
				Transaktion
			FROM
			(
				SELECT
					'' AS FA,
					D17.LONG_INVENTORY_PART_NUMBER,
					0 AS SollMenge,
					dbo.DATA0095.QUANTITY AS IstMenge,
					CAST(REPLACE(D17.ANALYSIS_CODE5, ',', '.') AS NUMERIC(10, 4)) AS m2,
					(0*CAST(REPLACE(D17.ANALYSIS_CODE5, ',', '.') AS NUMERIC(10, 4)))AS Soll_m2,
					(dbo.DATA0095.QUANTITY*CAST(REPLACE(D17.ANALYSIS_CODE5, ',', '.') AS NUMERIC(10, 4)))AS Ist_m2,
					D17.STD_COST AS VerrPreis,
					'Inventur' AS Transaktion
				FROM         dbo.DATA0095 INNER JOIN
							  dbo.DATA0017 AS D17 ON dbo.DATA0095.INVT_PTR = D17.RKEY
				WHERE     dbo.DATA0095.TRAN_TP = 23 
						AND (dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103)) 
						AND (dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)) 
						AND (D17.TTYPE = 'R') 
						AND (LEFT(D17.LONG_INVENTORY_PART_NUMBER, 2) = 'F4') 
						AND (D17.S_B_N = 'B')
				--ORDER BY D17.LONG_INVENTORY_PART_NUMBER
				UNION ALL
/*
				SELECT
					FA,
					LONG_INVENTORY_PART_NUMBER,
					SUM(DISTINCT SollMenge) AS SollMenge,
					SUM(IstMenge) AS IstMenge,
					SUM(DISTINCT m2) AS m2,
					SUM(DISTINCT Soll_m2) AS Soll_m2,
					SUM(Ist_m2) AS Ist_m2,
					AVG(VerrPreis) AS VerrPreis,
					Transaktion
				FROM
				(
				SELECT
					dbo.DATA0006.WORK_ORDER_NUMBER AS FA,
					D17.LONG_INVENTORY_PART_NUMBER,
					ISNULL(
							(dbo.DATA0067.QUAN_BOM*CAST(CAST(dbo.DATA0006.QUAN_SCH AS FLOAT) / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT))
						, 0) AS SollMenge,
					dbo.DATA0095.QUANTITY AS IstMenge,
					CAST(REPLACE(D17.ANALYSIS_CODE5, ',', '.') AS NUMERIC(10, 4)) AS m2,
					(
						ISNULL(
								(dbo.DATA0067.QUAN_BOM*CAST(CAST(dbo.DATA0006.QUAN_SCH AS FLOAT) / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT))
						, 0)
						*
						CAST(REPLACE(D17.ANALYSIS_CODE5, ',', '.') AS NUMERIC(10, 4)))AS Soll_m2,
					(dbo.DATA0095.QUANTITY*CAST(REPLACE(D17.ANALYSIS_CODE5, ',', '.') AS NUMERIC(10, 4)))AS Ist_m2,
					D17.STD_COST AS VerrPreis,
					'FA' AS Transaktion
				FROM         dbo.ARTIKELDATEN INNER JOIN
							  dbo.DATA0067 INNER JOIN
							  dbo.DATA0006 ON dbo.DATA0067.WO_PTR = dbo.DATA0006.RKEY ON dbo.ARTIKELDATEN.CUST_PART_PTR = dbo.DATA0006.CUST_PART_PTR RIGHT OUTER JOIN
							  dbo.DATA0095 INNER JOIN
							  dbo.DATA0017 AS D17 ON dbo.DATA0095.INVT_PTR = D17.RKEY ON dbo.DATA0067.RKEY = dbo.DATA0095.SRCE_PTR
				WHERE     dbo.DATA0095.TRAN_TP IN (13, 14)
						AND (dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103)) 
						AND (dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)) 
						AND (D17.TTYPE = 'R') 
						AND (LEFT(D17.LONG_INVENTORY_PART_NUMBER, 2) = 'F4') 
						AND (D17.S_B_N = 'B')
				) AS tblArtzuFA
				GROUP BY
					FA,
					LONG_INVENTORY_PART_NUMBER,
					--SollMenge,
					--IstMenge,
					--m2,
					--Soll_m2,
					--Ist_m2,
					--VerrPreis,
					Transaktion
				--ORDER BY D17.LONG_INVENTORY_PART_NUMBER
*/

				SELECT
					FA,
					LONG_INVENTORY_PART_NUMBER,
					SUM(DISTINCT SollMenge) AS SollMenge,
					SUM(IstMenge) AS IstMenge,
					SUM(DISTINCT m2) AS m2,
					SUM(DISTINCT Soll_m2) AS Soll_m2,
					SUM(Ist_m2) AS Ist_m2,
					AVG(VerrPreis) AS VerrPreis,
					Transaktion
				FROM
				(
					SELECT
						FA,
						LONG_INVENTORY_PART_NUMBER,
						--INV_PART_DESCRIPTION,
						--POOL_ALTERNATIV,
						SollMenge,
						IstMenge,
						m2,
						Soll_m2,
						Ist_m2,
						VerrPreis, --(SELECT STD_COST FROM DATA0017 WHERE RKEY=D17_PTR) AS VerrPreis,
						'FA' AS Transaktion
					FROM
					(
						SELECT
							TRAN_D17.RKEY AS D17_PTR,
							D0006.WORK_ORDER_NUMBER AS FA,
							TRAN_D17.LONG_INVENTORY_PART_NUMBER,
							STL_D17.INV_PART_DESCRIPTION,
							dbo.F_dsi_PoolToInventory(STL_D17.INV_PART_DESCRIPTION, D0006.RKEY, 2) AS POOL_ALTERNATIV,
							0 AS SollMenge,
							dbo.DATA0095.QUANTITY AS IstMenge,
							CAST(REPLACE(TRAN_D17.ANALYSIS_CODE5, ',', '.') AS NUMERIC(10, 4)) AS m2,
							0 AS Soll_m2,
							(dbo.DATA0095.QUANTITY*CAST(REPLACE(TRAN_D17.ANALYSIS_CODE5, ',', '.') AS NUMERIC(10, 4)))AS Ist_m2,
							TRAN_D17.STD_COST AS VerrPreis,
							'FA' AS Transaktion
						FROM         dbo.ARTIKELDATEN INNER JOIN
							  dbo.DATA0067 INNER JOIN
							  dbo.DATA0006 AS D0006 ON dbo.DATA0067.WO_PTR = D0006.RKEY ON dbo.ARTIKELDATEN.CUST_PART_PTR = D0006.CUST_PART_PTR INNER JOIN
							  dbo.DATA0017 AS STL_D17 ON dbo.DATA0067.INVT_PTR = STL_D17.RKEY RIGHT OUTER JOIN
							  dbo.DATA0095 INNER JOIN
							  dbo.DATA0017 AS TRAN_D17 ON dbo.DATA0095.INVT_PTR = TRAN_D17.RKEY ON dbo.DATA0067.RKEY = dbo.DATA0095.SRCE_PTR
						WHERE     dbo.DATA0095.TRAN_TP IN (13, 14)
								AND (dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103)) 
								AND (dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)) 
								AND (TRAN_D17.TTYPE = 'R') 
								AND (LEFT(TRAN_D17.LONG_INVENTORY_PART_NUMBER, 2) = 'F4') 
								AND (TRAN_D17.S_B_N = 'B')
					) AS tblInv1
					WHERE
						LONG_INVENTORY_PART_NUMBER <> POOL_ALTERNATIV

					UNION ALL

					SELECT
						FA,
						--LONG_INVENTORY_PART_NUMBER AS Bezeichnung,
						--INV_PART_DESCRIPTION,
						(SELECT TOP 1 LONG_INVENTORY_PART_NUMBER FROM dbo.DATA0017 WHERE RKEY=POOL_ALTERNATIV_PTR) AS LONG_INVENTORY_PART_NUMBER,
						SollMenge,
						IstMenge,
						m2,
						Soll_m2,
						Ist_m2,
						(SELECT STD_COST FROM DATA0017 WHERE DATA0017.RKEY=POOL_ALTERNATIV_PTR) AS VerrPreis,
						Transaktion
					FROM
					(
						SELECT
							--(SELECT RKEY FROM DATA0017 WHERE LONG_INVENTORY_PART_NUMBER = dbo.F_dsi_PoolToInventory(STL_D17.INV_PART_DESCRIPTION, D0006.RKEY, 2)) AS D17PTR_,
							--0 AS D17PTR_,
							D0006.WORK_ORDER_NUMBER AS FA,
							TRAN_D17.LONG_INVENTORY_PART_NUMBER AS LONG_INVENTORY_PART_NUMBER_,
							STL_D17.INV_PART_DESCRIPTION,
							dbo.F_dsi_PoolToInventory2(STL_D17.INV_PART_DESCRIPTION, D0006.RKEY, 2) AS POOL_ALTERNATIV_PTR,
							ISNULL(
									(dbo.DATA0067.QUAN_BOM*CAST(CAST(D0006.QUAN_SCH AS FLOAT) / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT))
								, 0) AS SollMenge,
							0 AS IstMenge,
							CAST(REPLACE(TRAN_D17.ANALYSIS_CODE5, ',', '.') AS NUMERIC(10, 4)) AS m2,
							(
								ISNULL(
										(dbo.DATA0067.QUAN_BOM*CAST(CAST(D0006.QUAN_SCH AS FLOAT) / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT))
								, 0)
								*
								CAST(REPLACE(TRAN_D17.ANALYSIS_CODE5, ',', '.') AS NUMERIC(10, 4)))AS Soll_m2,
							0 AS Ist_m2,
							TRAN_D17.STD_COST AS VerrPreis,
							'FA' AS Transaktion
						FROM         dbo.ARTIKELDATEN INNER JOIN
							  dbo.DATA0067 INNER JOIN
							  dbo.DATA0006 AS D0006 ON dbo.DATA0067.WO_PTR = D0006.RKEY ON dbo.ARTIKELDATEN.CUST_PART_PTR = D0006.CUST_PART_PTR INNER JOIN
							  dbo.DATA0017 AS STL_D17 ON dbo.DATA0067.INVT_PTR = STL_D17.RKEY RIGHT OUTER JOIN
							  dbo.DATA0095 INNER JOIN
							  dbo.DATA0017 AS TRAN_D17 ON dbo.DATA0095.INVT_PTR = TRAN_D17.RKEY ON dbo.DATA0067.RKEY = dbo.DATA0095.SRCE_PTR
						WHERE     dbo.DATA0095.TRAN_TP IN (13, 14)
								AND (dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103)) 
								AND (dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)) 
								AND (TRAN_D17.TTYPE = 'R') 
								AND (LEFT(TRAN_D17.LONG_INVENTORY_PART_NUMBER, 2) = 'F4') 
								AND (TRAN_D17.S_B_N = 'B')
					) AS tblInv1
					WHERE
						LONG_INVENTORY_PART_NUMBER_ <> (SELECT TOP 1 LONG_INVENTORY_PART_NUMBER FROM dbo.DATA0017 WHERE RKEY=POOL_ALTERNATIV_PTR)

					UNION ALL

					SELECT
						FA,
						LONG_INVENTORY_PART_NUMBER,
						--INV_PART_DESCRIPTION,
						--POOL_ALTERNATIV AS Bezeichnung,
						SollMenge,
						IstMenge,
						m2,
						Soll_m2,
						Ist_m2,
						VerrPreis, --(SELECT STD_COST FROM DATA0017 WHERE RKEY=D17_PTR) AS VerrPreis,
						'FA' AS Transaktion
					FROM
					(
						SELECT
							TRAN_D17.RKEY AS D17_PTR,
							D0006.WORK_ORDER_NUMBER AS FA,
							TRAN_D17.LONG_INVENTORY_PART_NUMBER,
							STL_D17.INV_PART_DESCRIPTION,
							dbo.F_dsi_PoolToInventory(STL_D17.INV_PART_DESCRIPTION, D0006.RKEY, 2) AS POOL_ALTERNATIV,
							ISNULL(
									(dbo.DATA0067.QUAN_BOM*CAST(CAST(D0006.QUAN_SCH AS FLOAT) / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT))
								, 0) AS SollMenge,
							dbo.DATA0095.QUANTITY AS IstMenge,
							CAST(REPLACE(TRAN_D17.ANALYSIS_CODE5, ',', '.') AS NUMERIC(10, 4)) AS m2,
							(
								ISNULL(
										(dbo.DATA0067.QUAN_BOM*CAST(CAST(D0006.QUAN_SCH AS FLOAT) / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT))
								, 0)
								*
								CAST(REPLACE(TRAN_D17.ANALYSIS_CODE5, ',', '.') AS NUMERIC(10, 4)))AS Soll_m2,
							(dbo.DATA0095.QUANTITY*CAST(REPLACE(TRAN_D17.ANALYSIS_CODE5, ',', '.') AS NUMERIC(10, 4)))AS Ist_m2,
							TRAN_D17.STD_COST AS VerrPreis,
							'FA' AS Transaktion
						FROM         dbo.ARTIKELDATEN INNER JOIN
							  dbo.DATA0067 INNER JOIN
							  dbo.DATA0006 AS D0006 ON dbo.DATA0067.WO_PTR = D0006.RKEY ON dbo.ARTIKELDATEN.CUST_PART_PTR = D0006.CUST_PART_PTR INNER JOIN
							  dbo.DATA0017 AS STL_D17 ON dbo.DATA0067.INVT_PTR = STL_D17.RKEY RIGHT OUTER JOIN
							  dbo.DATA0095 INNER JOIN
							  dbo.DATA0017 AS TRAN_D17 ON dbo.DATA0095.INVT_PTR = TRAN_D17.RKEY ON dbo.DATA0067.RKEY = dbo.DATA0095.SRCE_PTR
						WHERE     dbo.DATA0095.TRAN_TP IN (13, 14)
								AND (dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103)) 
								AND (dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)) 
								AND (TRAN_D17.TTYPE = 'R') 
								AND (LEFT(TRAN_D17.LONG_INVENTORY_PART_NUMBER, 2) = 'F4') 
								AND (TRAN_D17.S_B_N = 'B')
					) AS tblInvPool
					WHERE
						LONG_INVENTORY_PART_NUMBER = POOL_ALTERNATIV
				) AS tblInvPoolGrp
				GROUP BY
					FA,
					LONG_INVENTORY_PART_NUMBER,
					Transaktion


				UNION ALL
				SELECT
					'' AS FA,
					D17.LONG_INVENTORY_PART_NUMBER,
					0 AS SollMenge,
					dbo.DATA0095.QUANTITY AS IstMenge,
					CAST(REPLACE(D17.ANALYSIS_CODE5, ',', '.') AS NUMERIC(10, 4)) AS m2,
					(0*CAST(REPLACE(D17.ANALYSIS_CODE5, ',', '.') AS NUMERIC(10, 4)))AS Soll_m2,
					(dbo.DATA0095.QUANTITY*CAST(REPLACE(D17.ANALYSIS_CODE5, ',', '.') AS NUMERIC(10, 4)))AS Ist_m2,
					D17.STD_COST AS VerrPreis,
					'Arbeitsgang' AS Transaktion
				FROM         dbo.DATA0095 INNER JOIN
								  dbo.DATA0017 AS D17 ON dbo.DATA0095.INVT_PTR = D17.RKEY INNER JOIN
								  dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
				WHERE     dbo.DATA0095.TRAN_TP IN (15, 16)
						AND (dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103)) 
						AND (dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)) 
						AND (D17.TTYPE = 'R') 
						AND (LEFT(D17.LONG_INVENTORY_PART_NUMBER, 2) = 'F4') 
						AND (D17.S_B_N = 'B')
				--ORDER BY D17.LONG_INVENTORY_PART_NUMBER
/*
				UNION ALL
				SELECT
					FA,
					LONG_INVENTORY_PART_NUMBER,
					SUM(DISTINCT SollMenge) AS SollMenge,
					SUM(IstMenge) AS IstMenge,
					SUM(DISTINCT m2) AS m2,
					SUM(DISTINCT Soll_m2) AS Soll_m2,
					SUM(Ist_m2) AS Ist_m2,
					AVG(VerrPreis) AS VerrPreis,
					Transaktion
				FROM
				(
					SELECT
						dbo.DATA0006.WORK_ORDER_NUMBER AS FA,
						D17.LONG_INVENTORY_PART_NUMBER,
						ISNULL(
								(dbo.DATA0067.QUAN_BOM*CAST(CAST(dbo.DATA0006.QUAN_SCH AS FLOAT) / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT))
							, 0) AS SollMenge,
						0 AS IstMenge,
						CAST(REPLACE(D17.ANALYSIS_CODE5, ',', '.') AS NUMERIC(10, 4)) AS m2,
						(
							ISNULL(
									(dbo.DATA0067.QUAN_BOM*CAST(CAST(dbo.DATA0006.QUAN_SCH AS FLOAT) / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT))
							, 0)
							*
							CAST(REPLACE(D17.ANALYSIS_CODE5, ',', '.') AS NUMERIC(10, 4)))AS Soll_m2,
						0 AS Ist_m2,
						D17.STD_COST AS VerrPreis,
						'STL' AS Transaktion
					FROM         dbo.DATA0048 INNER JOIN
										  dbo.DATA0017 AS D17 INNER JOIN
										  dbo.ARTIKELDATEN INNER JOIN
										  dbo.DATA0067 INNER JOIN
										  dbo.DATA0006 ON dbo.DATA0067.WO_PTR = dbo.DATA0006.RKEY ON dbo.ARTIKELDATEN.CUST_PART_PTR = dbo.DATA0006.CUST_PART_PTR ON 
										  D17.RKEY = dbo.DATA0067.INVT_PTR ON dbo.DATA0048.WO_PTR = dbo.DATA0006.RKEY INNER JOIN
										  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY LEFT OUTER JOIN
										  dbo.DATA0095 ON dbo.DATA0067.RKEY = dbo.DATA0095.SRCE_PTR
					WHERE     
						(D17.TTYPE = 'R') 
						AND (LEFT(D17.LONG_INVENTORY_PART_NUMBER, 2) = 'F4') 
						AND (D17.S_B_N = 'B') 
						AND (dbo.DATA0048.TDATE >= CONVERT(DATETIME, '01.01.2015', 103)) 
						AND (dbo.DATA0048.TDATE <= CONVERT(DATETIME, '31.07.2015', 103)) 
						AND (LEFT(dbo.DATA0034.DEPT_CODE, 4) = 'MLPR' OR LEFT(dbo.DATA0034.DEPT_CODE, 3) = 'ZU-') 
						AND ISNULL(dbo.DATA0095.RKEY, 0)=0
				) AS tblArtzuFA
				GROUP BY
					FA,
					LONG_INVENTORY_PART_NUMBER,
					Transaktion
*/
			) AS tblUnionArtAusgaben
		) AS tblUnionArtAusgabenEnd
		GROUP BY
			Bezeichnung
		ORDER BY 
			Bezeichnung
		--LONG_INVENTORY_PART_NUMBER
	END

	IF @Case_ = 'Matverbrauch_BMDickeCu'
	BEGIN                                                                                                                 
		--DECLARE 
		--@para4 varchar(255),
		--@para5 varchar(255)
		--SET @para4 = '01.01.2015'	--Datum Von
		--SET @para5 = '31.03.2015'	--Datum Bis

		--DECLARE @tblFF table(FF varchar(3), FFMass char(50))
		--INSERT @tblFF(FF, FFMass) SELECT  'F02', '460Kx305'
		--INSERT @tblFF(FF, FFMass) SELECT  'F05', '532Kx406'
		--INSERT @tblFF(FF, FFMass) SELECT  'F06', '610x460K'
		--INSERT @tblFF(FF, FFMass) SELECT  'F08', '610x532K'
		--INSERT @tblFF(FF, FFMass) SELECT  'F09', '610x355K'
		--INSERT @tblFF(FF, FFMass) SELECT  'F17', '532Kx355'

		SELECT
			Art AS Bezeichnung,
			Soll_Art,
			--FFMasse,
			--INV_PART_NUMBER,
			--Ist_Art,
			--Bezeichnung,
			SUM(SollMenge)AS SollMengeStk,
			SUM(IstMenge)AS IstMengeStk,
			SUM(SollMenge*CAST(REPLACE(m2, ',', '.') AS NUMERIC(10, 4)))AS Soll_m2,
			SUM(IstMenge*CAST(REPLACE(m2, ',', '.') AS NUMERIC(10, 4)))AS Ist_m2,
			MAX(VerrPreis) AS VerrPreis

		FROM
		(
			SELECT DISTINCT
				--dbo.DATA0067.WO_PTR, 
				D17.INV_PART_NUMBER, 
				D17.INV_PART_DESCRIPTION AS Ist_Art, 
				D17.LONG_INVENTORY_PART_NUMBER AS Bezeichnung,
				--DATA0017_1.INV_PART_NUMBER AS Expr1, 
				DATA0017_1.INV_PART_DESCRIPTION AS Soll_Art, 
				--DATA0017_2.INV_PART_NUMBER AS Expr3, 
				--DATA0017_2.INV_PART_DESCRIPTION AS Ist_Art2, 
				--dbo.DATA0067.RKEY AS D67_PTR,
				dbo.DATA0006.WORK_ORDER_NUMBER, 
				dbo.DATA0067.QUAN_BOM, 
				dbo.DATA0067.QUAN_ISSUED, 
				--dbo.DATA0067.QUAN_ALT1_ISSUED,
				--dbo.DATA0067.QUAN_ALT1_ISSUED+dbo.DATA0067.QUAN_ALT2_ISSUED+dbo.DATA0067.QUAN_ALT3_ISSUED+dbo.DATA0067.QUAN_ALT4_ISSUED+dbo.DATA0067.QUAN_ALT5_ISSUED AS IstMenge,
				dbo.DATA0095.QUANTITY AS IstMenge,
				CAST(CAST(dbo.DATA0006.QUAN_SCH AS FLOAT) / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) AS AnzZU,
				ISNULL(
						(dbo.DATA0067.QUAN_BOM*CAST(CAST(dbo.DATA0006.QUAN_SCH AS FLOAT) / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT))
					, 0) AS SollMenge,
				D17.ANALYSIS_CODE5 AS m2,
				D17.STD_COST AS VerrPreis,
				'FR 4  ' + SUBSTRING(D17.INV_PART_DESCRIPTION, 2, 1) + ',' + SUBSTRING(D17.INV_PART_DESCRIPTION, 3, 2) 
					+ ' ' + SUBSTRING(D17.INV_PART_DESCRIPTION, 5, 3) + '/' + SUBSTRING(D17.INV_PART_DESCRIPTION, 8, 3) 
					AS Art
				--ISNULL(
				--		(SELECT TOP 1 FFMass FROM @tblFF AS tblFF 
				--		WHERE tblFF.FF COLLATE SQL_Latin1_General_CP1_CI_AS LIKE SUBSTRING(D17.INV_PART_DESCRIPTION,34, 3) + '%')
				-- , '') AS FFMasse
				
				
			--FROM         dbo.DATA0095 INNER JOIN
			--					  dbo.DATA0067 INNER JOIN
			--					  dbo.DATA0006 ON dbo.DATA0067.WO_PTR = dbo.DATA0006.RKEY INNER JOIN
			--					  dbo.DATA0017 AS DATA0017_1 ON dbo.DATA0067.INVT_PTR = DATA0017_1.RKEY ON dbo.DATA0095.SRCE_PTR = dbo.DATA0067.RKEY INNER JOIN
			--					  dbo.DATA0017 AS D17 ON dbo.DATA0095.INVT_PTR = D17.RKEY INNER JOIN
			--					  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR LEFT OUTER JOIN
			--					  dbo.DATA0017 AS DATA0017_2 ON dbo.DATA0067.INVT_ALT1_PTR = DATA0017_2.RKEY
			FROM         dbo.ARTIKELDATEN INNER JOIN
                      dbo.DATA0067 INNER JOIN
                      dbo.DATA0006 ON dbo.DATA0067.WO_PTR = dbo.DATA0006.RKEY INNER JOIN
                      dbo.DATA0017 AS DATA0017_1 ON dbo.DATA0067.INVT_PTR = DATA0017_1.RKEY ON 
                      dbo.ARTIKELDATEN.CUST_PART_PTR = dbo.DATA0006.CUST_PART_PTR RIGHT OUTER JOIN
                      dbo.DATA0095 INNER JOIN
                      dbo.DATA0017 AS D17 ON dbo.DATA0095.INVT_PTR = D17.RKEY ON dbo.DATA0067.RKEY = dbo.DATA0095.SRCE_PTR LEFT OUTER JOIN
                      dbo.DATA0017 AS DATA0017_2 ON dbo.DATA0067.INVT_ALT1_PTR = DATA0017_2.RKEY
			WHERE     --(dbo.DATA0095.TRAN_TP = 14 OR dbo.DATA0095.TRAN_TP = 13) 
						dbo.DATA0095.TRAN_TP IN (13, 14, 15, 16)
						AND (dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103))
						AND (dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103))
						AND LEFT(D17.LONG_INVENTORY_PART_NUMBER, 2)='F4' AND D17.TTYPE = 'R'
		) AS tblBM
		GROUP BY
			Art,
			Soll_Art
			--FFMasse
		ORDER BY
			Art
	END

	IF @Case_ = 'Matverbrauch_BMDicke'
	BEGIN                                                                                                               
		--DECLARE 
		--@para4 varchar(255),
		--@para5 varchar(255)
		--SET @para4 = '01.01.2015'	--Datum Von
		--SET @para5 = '31.03.2015'	--Datum Bis

		--DECLARE @tblFFDicke table(FF varchar(3), FFMass char(50))
		--INSERT @tblFFDicke(FF, FFMass) SELECT  'F02', '460Kx305'
		--INSERT @tblFFDicke(FF, FFMass) SELECT  'F05', '532Kx406'
		--INSERT @tblFFDicke(FF, FFMass) SELECT  'F06', '610x460K'
		--INSERT @tblFFDicke(FF, FFMass) SELECT  'F08', '610x532K'
		--INSERT @tblFFDicke(FF, FFMass) SELECT  'F09', '610x355K'
		--INSERT @tblFFDicke(FF, FFMass) SELECT  'F17', '532Kx355'

		SELECT
			Art AS Bezeichnung,
			Soll_Art,
			--FFMasse,
			--INV_PART_NUMBER,
			--Ist_Art,
			--Bezeichnung,
			SUM(SollMenge)AS SollMengeStk,
			SUM(IstMenge)AS IstMengeStk,
			SUM(SollMenge*CAST(REPLACE(m2, ',', '.') AS NUMERIC(10, 4)))AS Soll_m2,
			SUM(IstMenge*CAST(REPLACE(m2, ',', '.') AS NUMERIC(10, 4)))AS Ist_m2,
			MAX(VerrPreis) AS VerrPreis

		FROM
		(
			SELECT DISTINCT
				--dbo.DATA0067.WO_PTR, 
				D17.INV_PART_NUMBER, 
				D17.INV_PART_DESCRIPTION AS Ist_Art, 
				D17.LONG_INVENTORY_PART_NUMBER AS Bezeichnung,
				--DATA0017_1.INV_PART_NUMBER AS Expr1, 
				DATA0017_1.INV_PART_DESCRIPTION AS Soll_Art, 
				--DATA0017_2.INV_PART_NUMBER AS Expr3, 
				--DATA0017_2.INV_PART_DESCRIPTION AS Ist_Art2, 
				--dbo.DATA0067.RKEY AS D67_PTR,
				dbo.DATA0006.WORK_ORDER_NUMBER, 
				dbo.DATA0067.QUAN_BOM, 
				dbo.DATA0067.QUAN_ISSUED, 
				--dbo.DATA0067.QUAN_ALT1_ISSUED,
				--dbo.DATA0067.QUAN_ALT1_ISSUED+dbo.DATA0067.QUAN_ALT2_ISSUED+dbo.DATA0067.QUAN_ALT3_ISSUED+dbo.DATA0067.QUAN_ALT4_ISSUED+dbo.DATA0067.QUAN_ALT5_ISSUED AS IstMenge,
				dbo.DATA0095.QUANTITY AS IstMenge,
				CAST(CAST(dbo.DATA0006.QUAN_SCH AS FLOAT) / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) AS AnzZU,
				ISNULL(
						(dbo.DATA0067.QUAN_BOM*CAST(CAST(dbo.DATA0006.QUAN_SCH AS FLOAT) / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT))
					, 0) AS SollMenge,
				D17.ANALYSIS_CODE5 AS m2,
				D17.STD_COST AS VerrPreis,
				'FR 4  ' + SUBSTRING(D17.INV_PART_DESCRIPTION, 2, 1) + ',' + SUBSTRING(D17.INV_PART_DESCRIPTION, 3, 2) + '  '  AS Art
				--ISNULL(
				--		(SELECT TOP 1 FFMass FROM @tblFF AS tblFF 
				--		WHERE tblFF.FF COLLATE SQL_Latin1_General_CP1_CI_AS LIKE SUBSTRING(D17.INV_PART_DESCRIPTION,34, 3) + '%')
				-- , '') AS FFMasse
				
				
			--FROM         dbo.DATA0095 INNER JOIN
			--					  dbo.DATA0067 INNER JOIN
			--					  dbo.DATA0006 ON dbo.DATA0067.WO_PTR = dbo.DATA0006.RKEY INNER JOIN
			--					  dbo.DATA0017 AS DATA0017_1 ON dbo.DATA0067.INVT_PTR = DATA0017_1.RKEY ON dbo.DATA0095.SRCE_PTR = dbo.DATA0067.RKEY INNER JOIN
			--					  dbo.DATA0017 AS D17 ON dbo.DATA0095.INVT_PTR = D17.RKEY INNER JOIN
			--					  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR LEFT OUTER JOIN
			--					  dbo.DATA0017 AS DATA0017_2 ON dbo.DATA0067.INVT_ALT1_PTR = DATA0017_2.RKEY
			FROM         dbo.ARTIKELDATEN INNER JOIN
                      dbo.DATA0067 INNER JOIN
                      dbo.DATA0006 ON dbo.DATA0067.WO_PTR = dbo.DATA0006.RKEY INNER JOIN
                      dbo.DATA0017 AS DATA0017_1 ON dbo.DATA0067.INVT_PTR = DATA0017_1.RKEY ON 
                      dbo.ARTIKELDATEN.CUST_PART_PTR = dbo.DATA0006.CUST_PART_PTR RIGHT OUTER JOIN
                      dbo.DATA0095 INNER JOIN
                      dbo.DATA0017 AS D17 ON dbo.DATA0095.INVT_PTR = D17.RKEY ON dbo.DATA0067.RKEY = dbo.DATA0095.SRCE_PTR LEFT OUTER JOIN
                      dbo.DATA0017 AS DATA0017_2 ON dbo.DATA0067.INVT_ALT1_PTR = DATA0017_2.RKEY
			WHERE     --(dbo.DATA0095.TRAN_TP = 14 OR dbo.DATA0095.TRAN_TP = 13) 
						dbo.DATA0095.TRAN_TP IN (13, 14, 15, 16)
						AND (dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103))
						AND (dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103))
						AND LEFT(D17.LONG_INVENTORY_PART_NUMBER, 2)='F4' AND D17.TTYPE = 'R'
		) AS tblBM
		GROUP BY
			Art,
			Soll_Art
			--FFMasse
		ORDER BY
			Art
	END

	IF @Case_ = 'Matverbrauch_BM'
	BEGIN      
		--DECLARE 
		--@para4 varchar(255),
		--@para5 varchar(255)
		--SET @para4 = '01.01.2015'	--Datum Von
		--SET @para5 = '31.03.2015'	--Datum Bis

		DECLARE @tblFF table(FF varchar(3), FFMass char(50))

		INSERT @tblFF(FF, FFMass) SELECT  'F02', '460Kx305'
		INSERT @tblFF(FF, FFMass) SELECT  'F05', '532Kx406'
		INSERT @tblFF(FF, FFMass) SELECT  'F06', '610x460K'
		INSERT @tblFF(FF, FFMass) SELECT  'F08', '610x532K'
		INSERT @tblFF(FF, FFMass) SELECT  'F09', '610x355K'
		INSERT @tblFF(FF, FFMass) SELECT  'F17', '532Kx355'

		SELECT
			(Art COLLATE SQL_Latin1_General_CP1_CI_AS) + (FFMasse COLLATE SQL_Latin1_General_CP1_CI_AS) AS Bezeichnung,
			Soll_Art,
			--FFMasse,
			--INV_PART_NUMBER,
			--Ist_Art,
			--Bezeichnung,
			SUM(SollMenge)AS SollMengeStk,
			SUM(IstMenge)AS IstMengeStk,
			SUM(SollMenge*CAST(REPLACE(m2, ',', '.') AS NUMERIC(10, 4)))AS Soll_m2,
			SUM(IstMenge*CAST(REPLACE(m2, ',', '.') AS NUMERIC(10, 4)))AS Ist_m2,
			MAX(VerrPreis) AS VerrPreis

		FROM
		(
			SELECT DISTINCT
				--dbo.DATA0067.WO_PTR, 
				D17.INV_PART_NUMBER, 
				D17.INV_PART_DESCRIPTION AS Ist_Art, 
				D17.LONG_INVENTORY_PART_NUMBER AS Bezeichnung,
				--DATA0017_1.INV_PART_NUMBER AS Expr1, 
				DATA0017_1.INV_PART_DESCRIPTION AS Soll_Art, 
				--DATA0017_2.INV_PART_NUMBER AS Expr3, 
				--DATA0017_2.INV_PART_DESCRIPTION AS Ist_Art2, 
				--dbo.DATA0067.RKEY AS D67_PTR,
				dbo.DATA0006.WORK_ORDER_NUMBER, 
				dbo.DATA0067.QUAN_BOM, 
				dbo.DATA0067.QUAN_ISSUED, 
				--dbo.DATA0067.QUAN_ALT1_ISSUED,
				--dbo.DATA0067.QUAN_ALT1_ISSUED+dbo.DATA0067.QUAN_ALT2_ISSUED+dbo.DATA0067.QUAN_ALT3_ISSUED+dbo.DATA0067.QUAN_ALT4_ISSUED+dbo.DATA0067.QUAN_ALT5_ISSUED AS IstMenge,
				dbo.DATA0095.QUANTITY AS IstMenge,
				CAST(CAST(dbo.DATA0006.QUAN_SCH AS FLOAT) / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) AS AnzZU,
				ISNULL(
						(dbo.DATA0067.QUAN_BOM*CAST(CAST(dbo.DATA0006.QUAN_SCH AS FLOAT) / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT))
					, 0) AS SollMenge,
				D17.ANALYSIS_CODE5 AS m2,
				D17.STD_COST AS VerrPreis,
				'FR 4  ' + SUBSTRING(D17.INV_PART_DESCRIPTION, 2, 1) + ',' + SUBSTRING(D17.INV_PART_DESCRIPTION, 3, 2) 
					+ ' ' + SUBSTRING(D17.INV_PART_DESCRIPTION, 5, 3) + '/' + SUBSTRING(D17.INV_PART_DESCRIPTION, 8, 3) 
					+ '  '  AS Art,
				ISNULL(
						(SELECT TOP 1 FFMass FROM @tblFF AS tblFF 
						WHERE tblFF.FF COLLATE SQL_Latin1_General_CP1_CI_AS LIKE SUBSTRING(D17.INV_PART_DESCRIPTION,34, 3) + '%')
				 , '') AS FFMasse
				
				
			--FROM         dbo.DATA0095 INNER JOIN
			--					  dbo.DATA0067 INNER JOIN
			--					  dbo.DATA0006 ON dbo.DATA0067.WO_PTR = dbo.DATA0006.RKEY INNER JOIN
			--					  dbo.DATA0017 AS DATA0017_1 ON dbo.DATA0067.INVT_PTR = DATA0017_1.RKEY ON dbo.DATA0095.SRCE_PTR = dbo.DATA0067.RKEY INNER JOIN
			--					  dbo.DATA0017 AS D17 ON dbo.DATA0095.INVT_PTR = D17.RKEY INNER JOIN
			--					  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR LEFT OUTER JOIN
			--					  dbo.DATA0017 AS DATA0017_2 ON dbo.DATA0067.INVT_ALT1_PTR = DATA0017_2.RKEY
			FROM         dbo.ARTIKELDATEN INNER JOIN
                      dbo.DATA0067 INNER JOIN
                      dbo.DATA0006 ON dbo.DATA0067.WO_PTR = dbo.DATA0006.RKEY INNER JOIN
                      dbo.DATA0017 AS DATA0017_1 ON dbo.DATA0067.INVT_PTR = DATA0017_1.RKEY ON 
                      dbo.ARTIKELDATEN.CUST_PART_PTR = dbo.DATA0006.CUST_PART_PTR RIGHT OUTER JOIN
                      dbo.DATA0095 INNER JOIN
                      dbo.DATA0017 AS D17 ON dbo.DATA0095.INVT_PTR = D17.RKEY ON dbo.DATA0067.RKEY = dbo.DATA0095.SRCE_PTR LEFT OUTER JOIN
                      dbo.DATA0017 AS DATA0017_2 ON dbo.DATA0067.INVT_ALT1_PTR = DATA0017_2.RKEY
			WHERE     --(dbo.DATA0095.TRAN_TP = 14 OR dbo.DATA0095.TRAN_TP = 13) 
						dbo.DATA0095.TRAN_TP IN (13, 14, 15, 16)
						AND (dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103))
						AND (dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103))
						AND LEFT(D17.LONG_INVENTORY_PART_NUMBER, 2)='F4' AND D17.TTYPE = 'R'
		) AS tblBM
		GROUP BY
			(Art COLLATE SQL_Latin1_General_CP1_CI_AS) + (FFMasse COLLATE SQL_Latin1_General_CP1_CI_AS),
			Soll_Art
			--FFMasse
		ORDER BY
			(Art COLLATE SQL_Latin1_General_CP1_CI_AS) + (FFMasse COLLATE SQL_Latin1_General_CP1_CI_AS)                                                                                                   
	END

	IF @Case_ = 'Matverbrauch_ML_TrennFolieBV'
	BEGIN
			--DECLARE 
            --@para4 varchar(255),
            --@para5 varchar(255)
            --SET @para4 = '01.01.2015'    --Datum Von
            --SET @para5 = '31.05.2015'    --Datum Bis

            DECLARE @tblAnlageArtikelMLTrennFolieBV table(
                                                                 D17_PTR NUMERIC(10, 0),
                                                                 Abteilung varchar(250),
                                                                 Anlage varchar(250),
                                                                 Artikel char(20), 
                                                                 Bezeichnung char(40), 
                                                                 VerbrauchSOLL DECIMAL(20, 7),
                                                                 VerrPreis DECIMAL(20, 7),
                                                                 LagerEinheit varchar(5)
                                                                 )

            INSERT @tblAnlageArtikelMLTrennFolieBV(D17_PTR, Abteilung, Anlage, Artikel, Bezeichnung, VerbrauchSOLL, VerrPreis, LagerEinheit)
            SELECT  DISTINCT dbo.DATA0017.RKEY AS D17_PTR, LIVE2.dbo.MatRueck_Abteilung.Abteilung, 
                        'ML PRessen II' AS Anlage, --LIVE2.dbo.MatRueck_Anlage.Anlage, 
                        dbo.DATA0017.INV_PART_NUMBER AS Artikel, 
                        dbo.DATA0017.INV_PART_DESCRIPTION AS Bezeichnung, 
                        LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, 
                        dbo.DATA0017.STD_COST AS VerrPreis,
                        dbo.DATA0002.UNIT_CODE AS LagerEinheit
            FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
                               LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
                               LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
                               dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
                               dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
                               dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
                               LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
                               dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
            GROUP BY dbo.DATA0017.RKEY, LIVE2.dbo.MatRueck_Abteilung.Abteilung, LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID,
                        dbo.DATA0017.INV_PART_NUMBER, dbo.DATA0017.INV_PART_DESCRIPTION, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STOCK_PURCH, 
                        dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE, dbo.DATA0017.CONSIGN_ONHAND_QTY,
                        dbo.DATA0017.ACTIVE_FLAG, dbo.DATA0017.STD_COST, LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial
            HAVING      --dbo.DATA0017.ACTIVE_FLAG='Y' AND 
                             (LIVE2.dbo.MatRueck_Anlage.ID = 19)
                             AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(1 AS bit)
                             AND dbo.DATA0017.RKEY = 918 --Trennfolie für blind via

--SELECT * FROM @tblAnlageArtikelFDgalvAu

            SELECT
                  Abteilung, 
                  Anlage, 
                  Artikel, 
                  Bezeichnung, 
                  Verbrauch,
                  Durchsatz,
                  Durchsatz2,
                  Verbrauch*VerrPreis AS abs_Kosten,
                  CASE 
                        WHEN Durchsatz>0 THEN
                             (Verbrauch*VerrPreis)/Durchsatz 
                        ELSE
                             0
                  END AS rel_Kosten,
                  CASE 
                        WHEN Durchsatz>0 THEN
                             (Verbrauch*VerrPreis)/Durchsatz*100 
                        ELSE
                             0
                  END AS KS_IstKosten,
                  VerrPreis*VerbrauchSOLL*100 AS SollKosten,
                  CASE
                        WHEN (VerrPreis*VerbrauchSOLL*100)>0 AND Durchsatz>0 THEN
                             (((Verbrauch*VerrPreis)/Durchsatz*100)-(VerrPreis*VerbrauchSOLL*100.000000))/(VerrPreis*VerbrauchSOLL*100.000000) 
                        ELSE
                             0
                  END AS Abweichung,
                  (Verbrauch*VerrPreis)-(VerrPreis*Durchsatz*VerbrauchSOLL) AS MehrMinderKosten,
                  (Verbrauch*VerrPreis) AS IstKosten,
                  VerrPreis,
                  CAST(VerbrauchSOLL*100.000000 AS DECIMAL(20, 7)) AS SollV_100,
                  CASE 
                        WHEN Durchsatz>0 THEN
                             (Verbrauch/Durchsatz)*100.000000 
                        ELSE
                             0
                  END AS IstV_100,
                  BzgGr,
                  BzgGr2,
                  LagerEinheit,
                  ISNULL((
                             SELECT TOP 1 CASE WHEN LTRIM(RTRIM(ISNULL(ANALYSIS_CODE5, '')))='' THEN '0' ELSE ANALYSIS_CODE5 END
                             FROM dbo.DATA0017 WHERE RKEY = D17_PTR)
                  , 0) AS MatFl,
                  (
                        SELECT TOP 1 CASE WHEN LTRIM(RTRIM(ISNULL(ANALYSIS_CODE1, '')))='' THEN '0' ELSE ANALYSIS_CODE1 END
                        FROM dbo.DATA0017 WHERE RKEY = D17_PTR
                  ) AS AC_01,
				  VerbrauchSOLL

            FROM
            (
                  SELECT 
                        D17_PTR, 
                        Abteilung, 
                        Anlage, 
                        Artikel, 
                        Bezeichnung, 
						0 AS VerbrauchSOLL,
                        (
                             ISNULL((
								SELECT
									SUM(ISNULL(QUANTITY, 0)) AS RES
								FROM 
									dbo.DATA0095
								WHERE 
									dbo.DATA0095.TRAN_TP IN (13, 14, 15, 16) 
									AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
									AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  
									AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR
                             ), 0)
                             +
                             ISNULL((
                                   SELECT 
                                         ISNULL((
                                               (-1)*SUM(QUANTITY) 
                                               *
                                               ISNULL((
                                                     SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
                                                     FROM LIVE2.dbo.NachKalk_MatVerteilung
                                                     WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = 19
                                                                 AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = tblAnlageArtikel_.D17_PTR
                                               ), 0) 
                                         ), 0) AS RES 

                                    FROM 
                                         dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
                                   WHERE 
                                         dbo.DATA0095.TRAN_TP = 23
                                         AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
                                         AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
                                         AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR
                             ), 0) 
                        ) AS Verbrauch,
                        --ISNULL((SELECT TOP 1 Durchsatz FROM @tblDurchsatzMLTrennFolie), 0) 
						0 AS Durchsatz,
                        --ISNULL((SELECT TOP 1 BzgGr FROM @tblDurchsatzMLTrennFolie), 0) 
						'' AS BzgGr,
                        --ISNULL((SELECT TOP 1 Durchsatz2 FROM @tblDurchsatzMLTrennFolie), 0) 
						0 AS Durchsatz2,
                        --ISNULL((SELECT TOP 1 BzgGr2 FROM @tblDurchsatzMLTrennFolie), 0) 
						'' AS BzgGr2,
                        VerrPreis,
                        LagerEinheit

                  FROM @tblAnlageArtikelMLTrennFolieBV AS tblAnlageArtikel_
            ) AS tblJeAnlage
            ORDER BY IstKosten DESC
	END

	IF @Case_ = 'Matverbrauch_ML_Presspolster'
	BEGIN
			--DECLARE 
            --@para4 varchar(255),
            --@para5 varchar(255)
            --SET @para4 = '01.01.2015'    --Datum Von
            --SET @para5 = '31.03.2015'    --Datum Bis

            DECLARE @tblAnlageArtikelMLPP table(
                                                                 D17_PTR NUMERIC(10, 0),
                                                                 Abteilung varchar(250),
                                                                 Anlage varchar(250),
                                                                 Artikel char(20), 
                                                                 Bezeichnung char(40), 
                                                                 VerbrauchSOLL DECIMAL(20, 7),
                                                                 VerrPreis DECIMAL(20, 7),
                                                                 LagerEinheit varchar(5)
                                                                 )

            INSERT @tblAnlageArtikelMLPP(D17_PTR, Abteilung, Anlage, Artikel, Bezeichnung, VerbrauchSOLL, VerrPreis, LagerEinheit)
            SELECT  DISTINCT dbo.DATA0017.RKEY AS D17_PTR, LIVE2.dbo.MatRueck_Abteilung.Abteilung, 
                        'ML PRessen IV' AS Anlage, --LIVE2.dbo.MatRueck_Anlage.Anlage, 
                        dbo.DATA0017.INV_PART_NUMBER AS Artikel, 
                        dbo.DATA0017.INV_PART_DESCRIPTION AS Bezeichnung, 
                        LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, 
                        dbo.DATA0017.STD_COST AS VerrPreis,
                        dbo.DATA0002.UNIT_CODE AS LagerEinheit
            FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
                               LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
                               LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
                               dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
                               dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
                               dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
                               LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
                               dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
            GROUP BY dbo.DATA0017.RKEY, LIVE2.dbo.MatRueck_Abteilung.Abteilung, LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID,
                        dbo.DATA0017.INV_PART_NUMBER, dbo.DATA0017.INV_PART_DESCRIPTION, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STOCK_PURCH, 
                        dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE, dbo.DATA0017.CONSIGN_ONHAND_QTY,
                        dbo.DATA0017.ACTIVE_FLAG, dbo.DATA0017.STD_COST, LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial
            HAVING      --dbo.DATA0017.ACTIVE_FLAG='Y' AND 
                             (LIVE2.dbo.MatRueck_Anlage.ID = 19)
                             AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(1 AS bit)
                             AND dbo.DATA0017.RKEY IN (35, 289, 1525, 66230, 36, 37, 2161, 48273, 54580)	-- Presspappen / 575 x 450
																											-- Presspappen / 500 x 345
																											-- Presspappen / 650 x 500
																											-- Presspappen / 650 x 500 mm / 0,62 mm
																											-- Presspolster YOM00-500x345mm
																											-- Presspolster YOM00-575x448mm
																											-- Presspolster YOM00-650x500mm
																											-- Presspolster YOM01-575x450mm
																											-- Presspolster YOM01-650x500mm




--SELECT * FROM @tblAnlageArtikelFDgalvAu

            SELECT
                  Abteilung, 
                  Anlage, 
                  Artikel, 
                  Bezeichnung, 
                  Verbrauch,
                  Durchsatz,
                  Durchsatz2,
                  Verbrauch*VerrPreis AS abs_Kosten,
                  CASE 
                        WHEN Durchsatz>0 THEN
                             (Verbrauch*VerrPreis)/Durchsatz 
                        ELSE
                             0
                  END AS rel_Kosten,
                  CASE 
                        WHEN Durchsatz>0 THEN
                             (Verbrauch*VerrPreis)/Durchsatz*100 
                        ELSE
                             0
                  END AS KS_IstKosten,
                  VerrPreis*VerbrauchSOLL*100 AS SollKosten,
                  CASE
                        WHEN (VerrPreis*VerbrauchSOLL*100)>0 AND Durchsatz>0 THEN
                             (((Verbrauch*VerrPreis)/Durchsatz*100)-(VerrPreis*VerbrauchSOLL*100.000000))/(VerrPreis*VerbrauchSOLL*100.000000) 
                        ELSE
                             0
                  END AS Abweichung,
                  (Verbrauch*VerrPreis)-(VerrPreis*Durchsatz*VerbrauchSOLL) AS MehrMinderKosten,
                  (Verbrauch*VerrPreis) AS IstKosten,
                  VerrPreis,
                  CAST(VerbrauchSOLL*100.000000 AS DECIMAL(20, 7)) AS SollV_100,
                  CASE 
                        WHEN Durchsatz>0 THEN
                             (Verbrauch/Durchsatz)*100.000000 
                        ELSE
                             0
                  END AS IstV_100,
                  BzgGr,
                  BzgGr2,
                  LagerEinheit,
                  ISNULL((
                             SELECT TOP 1 CASE WHEN LTRIM(RTRIM(ISNULL(ANALYSIS_CODE5, '')))='' THEN '0' ELSE ANALYSIS_CODE5 END
                             FROM dbo.DATA0017 WHERE RKEY = D17_PTR)
                  , 0) AS MatFl,
                  (
                        SELECT TOP 1 CASE WHEN LTRIM(RTRIM(ISNULL(ANALYSIS_CODE1, '')))='' THEN '0' ELSE ANALYSIS_CODE1 END
                        FROM dbo.DATA0017 WHERE RKEY = D17_PTR
                  ) AS AC_01,
				  VerbrauchSOLL

            FROM
            (
                  SELECT 
                        D17_PTR, 
                        Abteilung, 
                        Anlage, 
                        Artikel, 
                        Bezeichnung, 

						(
							SELECT TOP 1
								 SUM(
										(
											CAST(
												CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) --Anz ZU
												/
												CASE
													WHEN dbo.ARTIKELDATEN.LPD < 1.6 THEN
														5
													ELSE
														CASE
															WHEN dbo.ARTIKELDATEN.LPD >= 1.6 AND dbo.ARTIKELDATEN.LPD <= 2.2 THEN
																4
															ELSE
																CASE
																	WHEN dbo.ARTIKELDATEN.LPD >= 2.3 AND dbo.ARTIKELDATEN.LPD <= 3.2 THEN
																		3
																	ELSE
																		CASE
																			WHEN dbo.ARTIKELDATEN.LPD >= 3.3 AND dbo.ARTIKELDATEN.LPD <= 4.5 THEN
																				2
																			ELSE
																				1
																		END
																END
														END
												END
											+ 0.9999 AS INT)
											*
											2
										)
										--+
										--(
										--	2
										--	*
										--	CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) --Anz ZU
										--)
										* 457.0 * 305.0 / 1000000
									   --(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
									   --/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000)
								 ) AS RES
							FROM         dbo.DATA0006 INNER JOIN
														   dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
														   dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
														   dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
														   dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
														   dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
							WHERE     (dbo.DATA0038.TTYPE = 2) AND
											 (dbo.DATA0048.TDATE >=CONVERT(DATETIME, @para4, 103)) 
											 AND (dbo.DATA0048.TDATE <=CONVERT(DATETIME, @para5, 103)) 
											 AND LEFT(dbo.DATA0034.DEPT_CODE, 5) = 'MLPR-'
						) AS VerbrauchSOLL,
						--0 AS VerbrauchSOLL,
                        (
                             ISNULL((
								SELECT
									SUM(ISNULL(QUANTITY, 0)) AS RES
								FROM 
									dbo.DATA0095
								WHERE 
									dbo.DATA0095.TRAN_TP IN (13, 14, 15, 16) 
									AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
									AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  
									AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR
                             ), 0)
                             +
                             ISNULL((
                                   SELECT 
                                         ISNULL((
                                               (-1)*SUM(QUANTITY) 
                                               *
                                               ISNULL((
                                                     SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
                                                     FROM LIVE2.dbo.NachKalk_MatVerteilung
                                                     WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = 19
                                                                 AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = tblAnlageArtikel_.D17_PTR
                                               ), 0) 
                                         ), 0) AS RES 

                                    FROM 
                                         dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
                                   WHERE 
                                         dbo.DATA0095.TRAN_TP = 23
                                         AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
                                         AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
                                         AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR
                             ), 0) 
                        ) AS Verbrauch,
                        --ISNULL((SELECT TOP 1 Durchsatz FROM @tblDurchsatzMLTrennFolie), 0) 
						0 AS Durchsatz,
                        --ISNULL((SELECT TOP 1 BzgGr FROM @tblDurchsatzMLTrennFolie), 0) 
						'' AS BzgGr,
                        --ISNULL((SELECT TOP 1 Durchsatz2 FROM @tblDurchsatzMLTrennFolie), 0) 
						0 AS Durchsatz2,
                        --ISNULL((SELECT TOP 1 BzgGr2 FROM @tblDurchsatzMLTrennFolie), 0) 
						'' AS BzgGr2,
                        VerrPreis,
                        LagerEinheit

                  FROM @tblAnlageArtikelMLPP AS tblAnlageArtikel_
            ) AS tblJeAnlage
            ORDER BY IstKosten DESC
	END

	IF @Case_ = 'Matverbrauch_ML_TrennFolie'
	BEGIN
			--DECLARE 
            --@para4 varchar(255),
            --@para5 varchar(255)
            --SET @para4 = '01.01.2015'    --Datum Von
            --SET @para5 = '31.03.2015'    --Datum Bis

            DECLARE @tblAnlageArtikelMLTrennFolie table(
                                                                 D17_PTR NUMERIC(10, 0),
                                                                 Abteilung varchar(250),
                                                                 Anlage varchar(250),
                                                                 Artikel char(20), 
                                                                 Bezeichnung char(40), 
                                                                 VerbrauchSOLL DECIMAL(20, 7),
                                                                 VerrPreis DECIMAL(20, 7),
                                                                 LagerEinheit varchar(5)
                                                                 )

            INSERT @tblAnlageArtikelMLTrennFolie(D17_PTR, Abteilung, Anlage, Artikel, Bezeichnung, VerbrauchSOLL, VerrPreis, LagerEinheit)
            SELECT  DISTINCT dbo.DATA0017.RKEY AS D17_PTR, LIVE2.dbo.MatRueck_Abteilung.Abteilung, 
                        'ML PRessen II' AS Anlage, --LIVE2.dbo.MatRueck_Anlage.Anlage, 
                        dbo.DATA0017.INV_PART_NUMBER AS Artikel, 
                        dbo.DATA0017.INV_PART_DESCRIPTION AS Bezeichnung, 
                        LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, 
                        dbo.DATA0017.STD_COST AS VerrPreis,
                        dbo.DATA0002.UNIT_CODE AS LagerEinheit
            FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
                               LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
                               LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
                               dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
                               dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
                               dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
                               LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
                               dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
            GROUP BY dbo.DATA0017.RKEY, LIVE2.dbo.MatRueck_Abteilung.Abteilung, LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID,
                        dbo.DATA0017.INV_PART_NUMBER, dbo.DATA0017.INV_PART_DESCRIPTION, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STOCK_PURCH, 
                        dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE, dbo.DATA0017.CONSIGN_ONHAND_QTY,
                        dbo.DATA0017.ACTIVE_FLAG, dbo.DATA0017.STD_COST, LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial
            HAVING      --dbo.DATA0017.ACTIVE_FLAG='Y' AND 
                             (LIVE2.dbo.MatRueck_Anlage.ID = 19)
                             AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(1 AS bit)
                             AND dbo.DATA0017.RKEY = 34 --Trennfolie

--SELECT * FROM @tblAnlageArtikelFDgalvAu

            SELECT
                  Abteilung, 
                  Anlage, 
                  Artikel, 
                  Bezeichnung, 
                  Verbrauch,
                  Durchsatz,
                  Durchsatz2,
                  Verbrauch*VerrPreis AS abs_Kosten,
                  CASE 
                        WHEN Durchsatz>0 THEN
                             (Verbrauch*VerrPreis)/Durchsatz 
                        ELSE
                             0
                  END AS rel_Kosten,
                  CASE 
                        WHEN Durchsatz>0 THEN
                             (Verbrauch*VerrPreis)/Durchsatz*100 
                        ELSE
                             0
                  END AS KS_IstKosten,
                  VerrPreis*VerbrauchSOLL*100 AS SollKosten,
                  CASE
                        WHEN (VerrPreis*VerbrauchSOLL*100)>0 AND Durchsatz>0 THEN
                             (((Verbrauch*VerrPreis)/Durchsatz*100)-(VerrPreis*VerbrauchSOLL*100.000000))/(VerrPreis*VerbrauchSOLL*100.000000) 
                        ELSE
                             0
                  END AS Abweichung,
                  (Verbrauch*VerrPreis)-(VerrPreis*Durchsatz*VerbrauchSOLL) AS MehrMinderKosten,
                  (Verbrauch*VerrPreis) AS IstKosten,
                  VerrPreis,
                  CAST(VerbrauchSOLL*100.000000 AS DECIMAL(20, 7)) AS SollV_100,
                  CASE 
                        WHEN Durchsatz>0 THEN
                             (Verbrauch/Durchsatz)*100.000000 
                        ELSE
                             0
                  END AS IstV_100,
                  BzgGr,
                  BzgGr2,
                  LagerEinheit,
                  ISNULL((
                             SELECT TOP 1 CASE WHEN LTRIM(RTRIM(ISNULL(ANALYSIS_CODE5, '')))='' THEN '0' ELSE ANALYSIS_CODE5 END
                             FROM dbo.DATA0017 WHERE RKEY = D17_PTR)
                  , 0) AS MatFl,
                  (
                        SELECT TOP 1 CASE WHEN LTRIM(RTRIM(ISNULL(ANALYSIS_CODE1, '')))='' THEN '0' ELSE ANALYSIS_CODE1 END
                        FROM dbo.DATA0017 WHERE RKEY = D17_PTR
                  ) AS AC_01,
				  VerbrauchSOLL

            FROM
            (
                  SELECT 
                        D17_PTR, 
                        Abteilung, 
                        Anlage, 
                        Artikel, 
                        Bezeichnung, 
						(
							SELECT TOP 1
								 SUM(
										(
											CAST(
												CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) --Anz ZU
												/
												CASE
													WHEN dbo.ARTIKELDATEN.LPD < 1.6 THEN
														5
													ELSE
														CASE
															WHEN dbo.ARTIKELDATEN.LPD >= 1.6 AND dbo.ARTIKELDATEN.LPD <= 2.2 THEN
																4
															ELSE
																CASE
																	WHEN dbo.ARTIKELDATEN.LPD >= 2.3 AND dbo.ARTIKELDATEN.LPD <= 3.2 THEN
																		3
																	ELSE
																		CASE
																			WHEN dbo.ARTIKELDATEN.LPD >= 3.3 AND dbo.ARTIKELDATEN.LPD <= 4.5 THEN
																				2
																			ELSE
																				1
																		END
																END
														END
												END
											+ 0.9999 AS INT)
											*
											4
										)
										+
										(
											2
											*
											CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) --Anz ZU
										)
										* 457.0 * 305.0 / 1000000
									   --(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
									   --/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000)
								 ) AS RES
							FROM         dbo.DATA0006 INNER JOIN
														   dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
														   dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
														   dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
														   dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
														   dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
							WHERE     (dbo.DATA0038.TTYPE = 2) AND
											 (dbo.DATA0048.TDATE >=CONVERT(DATETIME, @para4, 103)) 
											 AND (dbo.DATA0048.TDATE <=CONVERT(DATETIME, @para5, 103)) 
											 AND LEFT(dbo.DATA0034.DEPT_CODE, 5) = 'MLPR-'
						) AS VerbrauchSOLL,
                        (
                             ISNULL((
								SELECT
									SUM(ISNULL(QUANTITY, 0)) AS RES
								FROM 
									dbo.DATA0095
								WHERE 
									dbo.DATA0095.TRAN_TP IN (13, 14, 15, 16) 
									AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
									AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  
									AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR
                             ), 0)
                             +
                             ISNULL((
                                   SELECT 
                                         ISNULL((
                                               (-1)*SUM(QUANTITY) 
                                               *
                                               ISNULL((
                                                     SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
                                                     FROM LIVE2.dbo.NachKalk_MatVerteilung
                                                     WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = 19
                                                                 AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = tblAnlageArtikel_.D17_PTR
                                               ), 0) 
                                         ), 0) AS RES 

                                    FROM 
                                         dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
                                   WHERE 
                                         dbo.DATA0095.TRAN_TP = 23
                                         AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
                                         AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
                                         AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR
                             ), 0) 
                        ) AS Verbrauch,
                        --ISNULL((SELECT TOP 1 Durchsatz FROM @tblDurchsatzMLTrennFolie), 0) 
						0 AS Durchsatz,
                        --ISNULL((SELECT TOP 1 BzgGr FROM @tblDurchsatzMLTrennFolie), 0) 
						'' AS BzgGr,
                        --ISNULL((SELECT TOP 1 Durchsatz2 FROM @tblDurchsatzMLTrennFolie), 0) 
						0 AS Durchsatz2,
                        --ISNULL((SELECT TOP 1 BzgGr2 FROM @tblDurchsatzMLTrennFolie), 0) 
						'' AS BzgGr2,
                        VerrPreis,
                        LagerEinheit

                  FROM @tblAnlageArtikelMLTrennFolie AS tblAnlageArtikel_
            ) AS tblJeAnlage
            ORDER BY IstKosten DESC
	END

	IF @Case_ = 'Matverbrauch_ML_Pressbleche'
	BEGIN
			--DECLARE 
            --@para4 varchar(255),
            --@para5 varchar(255)
            --SET @para4 = '01.01.2015'    --Datum Von
            --SET @para5 = '31.03.2015'    --Datum Bis

            DECLARE @tblDurchsatzMLPRBL table(
                                                                       DEPT_CODE char(10), 
                                                                       Durchsatz NUMERIC(10, 4),
                                                                       BzgGr varchar(20)
                                                                 )


            INSERT @tblDurchsatzMLPRBL(DEPT_CODE, Durchsatz, BzgGr)
            SELECT
                  'MLPR-01-06' AS DEPT_CODE,
                  ISNULL((
                        SELECT TOP 1    
                             SUM(
                                   (dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
                                   / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000)) 
                             AS RES
						FROM         dbo.DATA0006 INNER JOIN
													   dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
													   dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
													   dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
													   dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
													   dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
						WHERE     (dbo.DATA0038.TTYPE = 2) AND
										 (dbo.DATA0048.TDATE >=CONVERT(DATETIME, @para4, 103)) 
										 AND (dbo.DATA0048.TDATE <=CONVERT(DATETIME, @para5, 103)) 
										 AND dbo.DATA0034.DEPT_CODE LIKE 'MLPR-%'
                  ), 0) AS Durchsatz,
				  'Zu-m2' AS BzgGr


            DECLARE @tblAnlageArtikelMLPRBL table(
                                                                 D17_PTR NUMERIC(10, 0),
                                                                 Abteilung varchar(250),
                                                                 Anlage varchar(250),
                                                                 Artikel char(20), 
                                                                 Bezeichnung char(40), 
                                                                 VerbrauchSOLL DECIMAL(20, 7),
                                                                 VerrPreis DECIMAL(20, 7),
                                                                 LagerEinheit varchar(5)
                                                                 )

            INSERT @tblAnlageArtikelMLPRBL(D17_PTR, Abteilung, Anlage, Artikel, Bezeichnung, VerbrauchSOLL, VerrPreis, LagerEinheit)
            SELECT  DISTINCT dbo.DATA0017.RKEY AS D17_PTR, LIVE2.dbo.MatRueck_Abteilung.Abteilung, 
                        'ML-Pressbleche' AS Anlage, --LIVE2.dbo.MatRueck_Anlage.Anlage, 
                        dbo.DATA0017.INV_PART_NUMBER AS Artikel, 
                        dbo.DATA0017.INV_PART_DESCRIPTION AS Bezeichnung, 
                        LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, 
                        dbo.DATA0017.STD_COST AS VerrPreis,
                        dbo.DATA0002.UNIT_CODE AS LagerEinheit
            FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
                               LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
                               LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
                               dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
                               dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
                               dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
                               LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
                               dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
            GROUP BY dbo.DATA0017.RKEY, LIVE2.dbo.MatRueck_Abteilung.Abteilung, LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID,
                        dbo.DATA0017.INV_PART_NUMBER, dbo.DATA0017.INV_PART_DESCRIPTION, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STOCK_PURCH, 
                        dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE, dbo.DATA0017.CONSIGN_ONHAND_QTY,
                        dbo.DATA0017.ACTIVE_FLAG, dbo.DATA0017.STD_COST, LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial
            HAVING      --dbo.DATA0017.ACTIVE_FLAG='Y' AND 
                             (LIVE2.dbo.MatRueck_Anlage.ID = 149)
                             AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(1 AS bit)




--SELECT * FROM @tblAnlageArtikelFDgalvAu

            SELECT
                  Abteilung, 
                  Anlage, 
                  Artikel, 
                  Bezeichnung, 
                  Verbrauch,
                  Durchsatz,
                  --Durchsatz2,
                  Verbrauch*VerrPreis AS abs_Kosten,
                  CASE 
                        WHEN Durchsatz>0 THEN
                             (Verbrauch*VerrPreis)/Durchsatz 
                        ELSE
                             0
                  END AS rel_Kosten,
                  CASE 
                        WHEN Durchsatz>0 THEN
                             (Verbrauch*VerrPreis)/Durchsatz*100 
                        ELSE
                             0
                  END AS KS_IstKosten,
                  VerrPreis*VerbrauchSOLL*100 AS SollKosten,
                  CASE
                        WHEN (VerrPreis*VerbrauchSOLL*100)>0 AND Durchsatz>0 THEN
                             (((Verbrauch*VerrPreis)/Durchsatz*100)-(VerrPreis*VerbrauchSOLL*100.000000))/(VerrPreis*VerbrauchSOLL*100.000000) 
                        ELSE
                             0
                  END AS Abweichung,
                  (Verbrauch*VerrPreis)-(VerrPreis*Durchsatz*VerbrauchSOLL) AS MehrMinderKosten,
                  (Verbrauch*VerrPreis) AS IstKosten,
                  VerrPreis,
                  CAST(VerbrauchSOLL*100.000000 AS DECIMAL(20, 7)) AS SollV_100,
                  CASE 
                        WHEN Durchsatz>0 THEN
                             (Verbrauch/Durchsatz)*100.000000 
                        ELSE
                             0
                  END AS IstV_100,
                  BzgGr,
                  --BzgGr2,
                  LagerEinheit,
                  ISNULL((
                             SELECT TOP 1 CASE WHEN LTRIM(RTRIM(ISNULL(ANALYSIS_CODE5, '')))='' THEN '0' ELSE ANALYSIS_CODE5 END
                             FROM dbo.DATA0017 WHERE RKEY = D17_PTR)
                  , 0) AS MatFl,
                  (
                        SELECT TOP 1 CASE WHEN LTRIM(RTRIM(ISNULL(ANALYSIS_CODE1, '')))='' THEN '0' ELSE ANALYSIS_CODE1 END
                        FROM dbo.DATA0017 WHERE RKEY = D17_PTR
                  ) AS AC_01,
				  VerbrauchSOLL

            FROM
            (
                  SELECT 
                        D17_PTR, 
                        Abteilung, 
                        Anlage, 
                        Artikel, 
                        Bezeichnung, 
						0 AS VerbrauchSOLL,
                        (
                             ISNULL((
/*
								SELECT
									SUM(ISNULL(QUANTITY, 0)) AS RES
								FROM 
									dbo.DATA0095
								WHERE 
									dbo.DATA0095.TRAN_TP IN (13, 14, 15, 16) 
									AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
									AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  
									AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR
*/
								SELECT
									SUM(ISNULL(tblDATA0095.QUANTITY, 0)) AS RES
								FROM
								(
									SELECT     LIVE2.dbo.MatRueck_Anlage.ID AS Anlage_PTR, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY AS D17_RKEY, dbo.DATA0017.INV_PART_DESCRIPTION AS ArtBezeichnung,
												dbo.DATA0002.UNIT_CODE AS Lagereinheit, dbo.DATA0017.STOCK_PURCH 
									FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
											  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
											  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
											  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
											  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
											  dbo.DATA0034 ON LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR = dbo.DATA0034.RKEY
									WHERE dbo.DATA0034.DEPT_CODE IN ('MLPR-01-05', 'MLPR-01-06') --@para2
									GROUP BY LIVE2.dbo.MatRueck_Anlage.ID, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY, dbo.DATA0017.INV_PART_DESCRIPTION , dbo.DATA0017.STOCK_PURCH, dbo.DATA0002.UNIT_CODE 
									HAVING LIVE2.dbo.MatRueck_Anlage.ID IN (19, 149) --(LIVE2.dbo.MatRueck_Anlage.Anlage = @Anlage)
								) AS tblAnlageArtikel INNER JOIN --LEFT OUTER JOIN 
								(SELECT QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, MONTH(TRAN_DATE) AS Monat, TRAN_TP 
								--FROM dbo.DATA0095 INNER JOIN  dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY 
								FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
								WHERE dbo.DATA0095.TRAN_TP IN (15, 16) AND dbo.DATA0034.DEPT_CODE IN ('MLPR-01-05', 'MLPR-01-06')
								AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
								AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  
								AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR ) AS tblDATA0095 
								ON tblAnlageArtikel.D17_RKEY = tblDATA0095.INVT_PTR
                             ), 0)
                             +
                             ISNULL((
                                   SELECT 
                                         ISNULL((
                                               (-1)*SUM(QUANTITY) 
                                               *
                                               ISNULL((
                                                     SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
                                                     FROM LIVE2.dbo.NachKalk_MatVerteilung
                                                     WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = 149
                                                                 AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = tblAnlageArtikel_.D17_PTR
                                               ), 0) 
                                         ), 0) AS RES 

                                    FROM 
                                         dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
                                   WHERE 
                                         dbo.DATA0095.TRAN_TP = 23
                                         AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
                                         AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
                                         AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR
                             ), 0) 
                        ) AS Verbrauch,
                        ISNULL((SELECT TOP 1 Durchsatz FROM @tblDurchsatzMLPRBL), 0) AS Durchsatz,
                        ISNULL((SELECT TOP 1 BzgGr FROM @tblDurchsatzMLPRBL), 0) AS BzgGr,
                        --ISNULL((SELECT TOP 1 Durchsatz2 FROM @tblDurchsatzMLTrennFolie), 0) 
						--0 AS Durchsatz2,
                        --ISNULL((SELECT TOP 1 BzgGr2 FROM @tblDurchsatzMLTrennFolie), 0) 
						--'' AS BzgGr2,
                        VerrPreis,
                        LagerEinheit

                  FROM @tblAnlageArtikelMLPRBL AS tblAnlageArtikel_
            ) AS tblJeAnlage
            ORDER BY IstKosten DESC
	END

	IF @Case_ = 'Matverbrauch_ML_PresspolsterSatzExcel'
	BEGIN
		--DECLARE 
        --@para3 varchar(255),
        --@para4 varchar(255),
        --@para5 varchar(255)
        --SET @para3 = 'YOM01-650x500mm'    --YOM%
        --SET @para4 = '01.03.2015'    --Datum Von
        --SET @para5 = '31.03.2015'    --Datum Bis


        DECLARE @tblAnlageArtikelMLPRESSPOLSATZ table(
                                                             D17_PTR NUMERIC(10, 0),
                                                             Abteilung varchar(250),
                                                             Anlage varchar(250),
                                                             Artikel char(20), 
                                                             Bezeichnung char(40), 
                                                             VerbrauchSOLL DECIMAL(20, 7),
                                                             --VerrPreis DECIMAL(20, 7),
                                                             LagerEinheit varchar(5)
                                                             )

        INSERT @tblAnlageArtikelMLPRESSPOLSATZ(D17_PTR, Abteilung, Anlage, Artikel, Bezeichnung, VerbrauchSOLL, LagerEinheit)

        SELECT  DISTINCT dbo.DATA0017.RKEY AS D17_PTR, LIVE2.dbo.MatRueck_Abteilung.Abteilung, 
                    'ML Presspolster Satz' AS Anlage, --LIVE2.dbo.MatRueck_Anlage.Anlage, 
                    dbo.DATA0017.INV_PART_NUMBER AS Artikel, 
                    dbo.DATA0017.INV_PART_DESCRIPTION AS Bezeichnung, 
                    LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, 
                    --dbo.DATA0017.STD_COST AS VerrPreis,
                    dbo.DATA0002.UNIT_CODE AS LagerEinheit
        FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
                           LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
                           LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
                           dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
                           dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
                           dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
                           LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
                           dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
        GROUP BY dbo.DATA0017.RKEY, LIVE2.dbo.MatRueck_Abteilung.Abteilung, LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID,
                    dbo.DATA0017.INV_PART_NUMBER, dbo.DATA0017.INV_PART_DESCRIPTION, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STOCK_PURCH, 
                    dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE, dbo.DATA0017.CONSIGN_ONHAND_QTY,
                    dbo.DATA0017.ACTIVE_FLAG, dbo.DATA0017.STD_COST, LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial
        HAVING      --dbo.DATA0017.ACTIVE_FLAG='Y' AND 
                         (LIVE2.dbo.MatRueck_Anlage.ID = 19)
							AND dbo.DATA0017.INV_PART_DESCRIPTION LIKE '%' + RTRIM(@para3) + '%'
							AND dbo.DATA0017.INV_PART_DESCRIPTION NOT LIKE 'Presspolster %'
							AND dbo.DATA0017.QUAN_ON_HAND = 0
                         --AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(1 AS bit)

--SELECT * FROM @tblAnlageArtikelMLPRESSPOL

		SELECT
            D17_PTR, 
            Abteilung, 
            Anlage, 
            Artikel, 
            Bezeichnung, 
			(
				SELECT     TOP 1 LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL
				FROM         dbo.DATA0017 INNER JOIN
									  LIVE2.dbo.NachKalk_MatVerteilung ON dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
				WHERE     (dbo.DATA0017.INV_PART_DESCRIPTION LIKE 'Presspolster %' + RTRIM(@para3) + '%')
			) AS VerbrauchSOLL,
			(SELECT MIN(TRAN_DATE) FROM dbo.DATA0095 WHERE INVT_PTR=tblAnlageArtikel_.D17_PTR) AS StartDatum,
			(SELECT MAX(TRAN_DATE) FROM dbo.DATA0095 WHERE INVT_PTR=tblAnlageArtikel_.D17_PTR) AS AusbauDatum,
			(
				ABS(ISNULL((
						SELECT TOP 1
							QUANTITY
						FROM dbo.DATA0095
						WHERE
							INVT_PTR=tblAnlageArtikel_.D17_PTR 
						ORDER BY RKEY
				), 0))
				-
				ABS(ISNULL((
						SELECT TOP 1
							QUANTITY
						FROM dbo.DATA0095
						WHERE
							INVT_PTR=tblAnlageArtikel_.D17_PTR 
						ORDER BY RKEY DESC
				), 0)) 
			) AS IstZyklen,
			(
				SELECT     TOP 1 STD_COST
				FROM         dbo.DATA0017 
				WHERE     (dbo.DATA0017.INV_PART_DESCRIPTION LIKE 'Presspolster %' + RTRIM(@para3) + '%')
			) AS VerrPreis,
			(
				SELECT TOP 1 STD_COST FROM dbo.DATA0017 WHERE RKEY = 35
			) AS VerrPreis_575x450,
			(
				SELECT TOP 1 STD_COST FROM dbo.DATA0017 WHERE RKEY = 1525
			) AS VerrPreis_650x500

		FROM @tblAnlageArtikelMLPRESSPOLSATZ AS tblAnlageArtikel_
	END

	IF @Case_ = 'Matverbrauch_ML_PresspolsterExcel'
	BEGIN
		--DECLARE 
        --@para4 varchar(255),
        --@para5 varchar(255)
        --SET @para4 = '01.03.2015'    --Datum Von
        --SET @para5 = '31.03.2015'    --Datum Bis

/*
        DECLARE @tblDurchsatzMLPRESSPOL table(
                                                                   DEPT_CODE char(10), 
                                                                   Durchsatz NUMERIC(10, 4),
                                                                   BzgGr varchar(20)
                                                             )


        INSERT @tblDurchsatzMLPRESSPOL(DEPT_CODE, Durchsatz, BzgGr)
        SELECT
              'MLPR-01-05' AS DEPT_CODE,
              ISNULL((
                    SELECT TOP 1    
                         SUM(
                               (dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
                               / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000)) 
                         AS RES
					FROM         dbo.DATA0006 INNER JOIN
												   dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
												   dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
												   dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
												   dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
												   dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
					WHERE     (dbo.DATA0038.TTYPE = 2) AND
									 (dbo.DATA0048.TDATE >=CONVERT(DATETIME, @para4, 103)) 
									 AND (dbo.DATA0048.TDATE <=CONVERT(DATETIME, @para5, 103)) 
									 AND dbo.DATA0034.DEPT_CODE LIKE 'MLPR-%'
              ), 0) AS Durchsatz,
			  'Zu-m2' AS BzgGr
*/
		SET @para4 = '13.03.2013'

        DECLARE @tblAnlageArtikelMLPRESSPOL table(
                                                             D17_PTR NUMERIC(10, 0),
                                                             Abteilung varchar(250),
                                                             Anlage varchar(250),
                                                             Artikel char(20), 
                                                             Bezeichnung char(40), 
                                                             VerbrauchSOLL DECIMAL(20, 7),
                                                             VerrPreis DECIMAL(20, 7),
                                                             LagerEinheit varchar(5)
                                                             )

        INSERT @tblAnlageArtikelMLPRESSPOL(D17_PTR, Abteilung, Anlage, Artikel, Bezeichnung, VerbrauchSOLL, VerrPreis, LagerEinheit)
        SELECT  DISTINCT dbo.DATA0017.RKEY AS D17_PTR, LIVE2.dbo.MatRueck_Abteilung.Abteilung, 
                    'ML-Presspolster' AS Anlage, --LIVE2.dbo.MatRueck_Anlage.Anlage, 
                    dbo.DATA0017.INV_PART_NUMBER AS Artikel, 
                    dbo.DATA0017.INV_PART_DESCRIPTION AS Bezeichnung, 
                    LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, 
                    dbo.DATA0017.STD_COST AS VerrPreis,
                    dbo.DATA0002.UNIT_CODE AS LagerEinheit
        FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
                           LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
                           LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
                           dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
                           dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
                           dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
                           LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
                           dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
        GROUP BY dbo.DATA0017.RKEY, LIVE2.dbo.MatRueck_Abteilung.Abteilung, LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID,
                    dbo.DATA0017.INV_PART_NUMBER, dbo.DATA0017.INV_PART_DESCRIPTION, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STOCK_PURCH, 
                    dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE, dbo.DATA0017.CONSIGN_ONHAND_QTY,
                    dbo.DATA0017.ACTIVE_FLAG, dbo.DATA0017.STD_COST, LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial
        HAVING      --dbo.DATA0017.ACTIVE_FLAG='Y' AND 
                         (LIVE2.dbo.MatRueck_Anlage.ID = 19)
                         AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(1 AS bit)
						 AND dbo.DATA0017.INV_PART_DESCRIPTION LIKE 'Presspolster %'

		

		SELECT
			*,
			VerrPreis*Verbrauch AS IstKosten
		FROM
		(
			SELECT 
				D17_PTR, 
				Abteilung, 
				Anlage, 
				Artikel, 
				Bezeichnung, 
				VerbrauchSOLL, 
				VerrPreis, 
				LagerEinheit,
				(
					 ISNULL((
						SELECT
							SUM(ISNULL(tblDATA0095.QUANTITY, 0)) AS RES
						FROM
						(
							SELECT     LIVE2.dbo.MatRueck_Anlage.ID AS Anlage_PTR, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY AS D17_RKEY, dbo.DATA0017.INV_PART_DESCRIPTION AS ArtBezeichnung,
										dbo.DATA0002.UNIT_CODE AS Lagereinheit, dbo.DATA0017.STOCK_PURCH 
							FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
									  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
									  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
									  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
									  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
									  dbo.DATA0034 ON LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR = dbo.DATA0034.RKEY
							WHERE dbo.DATA0034.DEPT_CODE = 'MLPR-01-05' --@para2
							GROUP BY LIVE2.dbo.MatRueck_Anlage.ID, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY, dbo.DATA0017.INV_PART_DESCRIPTION , dbo.DATA0017.STOCK_PURCH, dbo.DATA0002.UNIT_CODE 
							HAVING LIVE2.dbo.MatRueck_Anlage.ID = 19 --(LIVE2.dbo.MatRueck_Anlage.Anlage = @Anlage)
						) AS tblAnlageArtikel INNER JOIN --LEFT OUTER JOIN 
						(SELECT QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, MONTH(TRAN_DATE) AS Monat, TRAN_TP 
						--FROM dbo.DATA0095 INNER JOIN  dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY 
						FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
						WHERE dbo.DATA0095.TRAN_TP IN (15, 16) AND dbo.DATA0034.DEPT_CODE = 'MLPR-01-05'
						AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
						AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  
						AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR ) AS tblDATA0095 
						ON tblAnlageArtikel.D17_RKEY = tblDATA0095.INVT_PTR
					 ), 0)
					 +
					 ISNULL((
						   SELECT 
								 ISNULL((
									   (-1)*SUM(QUANTITY) 
									   *
									   ISNULL((
											 SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
											 FROM LIVE2.dbo.NachKalk_MatVerteilung
											 WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = 19
														 AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = tblAnlageArtikel_.D17_PTR
									   ), 0) 
								 ), 0) AS RES 

							FROM 
								 dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
						   WHERE 
								 dbo.DATA0095.TRAN_TP = 23
								 AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
								 AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
								 AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR
					 ), 0) 
				) AS Verbrauch,
				--ISNULL((SELECT TOP 1 Durchsatz FROM @tblDurchsatzMLPRESSPOL), 0) AS Durchsatz
				0 AS Durchsatz

			FROM 
				@tblAnlageArtikelMLPRESSPOL AS tblAnlageArtikel_
		) AS tblPPExcel
		ORDER BY VerrPreis*Verbrauch DESC
	END

	IF @Case_ = 'Matverbrauch_ML_Plasma'
	BEGIN
			--DECLARE 
            --@para4 varchar(255),
            --@para5 varchar(255)
            --SET @para4 = '01.01.2010'    --Datum Von
            --SET @para5 = '31.05.2015'    --Datum Bis

            DECLARE @tblDurchsatzMLPLASMA table(
                                                                       DEPT_CODE char(10), 
                                                                       Durchsatz NUMERIC(10, 4),
                                                                       BzgGr varchar(20)
                                                                 )


            INSERT @tblDurchsatzMLPLASMA(DEPT_CODE, Durchsatz, BzgGr)
            SELECT
                  'MLPL01-01' AS DEPT_CODE,
                  ISNULL((
                        SELECT TOP 1    
                             SUM(
                                   (dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
                                   / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000)) 
                             AS RES
						FROM         dbo.DATA0006 INNER JOIN
													   dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
													   dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
													   dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
													   dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
													   dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
						WHERE     (dbo.DATA0038.TTYPE = 2) AND
										 (dbo.DATA0048.TDATE >=CONVERT(DATETIME, @para4, 103)) 
										 AND (dbo.DATA0048.TDATE <=CONVERT(DATETIME, @para5, 103)) 
										 AND dbo.DATA0034.DEPT_CODE = 'MLPL-01-01'
                  ), 0) AS Durchsatz,
				  'Zu-m2' AS BzgGr


            DECLARE @tblAnlageArtikelMLPLASMA table(
                                                                 D17_PTR NUMERIC(10, 0),
                                                                 Abteilung varchar(250),
                                                                 Anlage varchar(250),
                                                                 Artikel char(20), 
                                                                 Bezeichnung char(40), 
                                                                 VerbrauchSOLL DECIMAL(20, 7),
                                                                 VerrPreis DECIMAL(20, 7),
                                                                 LagerEinheit varchar(5)
                                                                 )

            INSERT @tblAnlageArtikelMLPLASMA(D17_PTR, Abteilung, Anlage, Artikel, Bezeichnung, VerbrauchSOLL, VerrPreis, LagerEinheit)
            SELECT  DISTINCT dbo.DATA0017.RKEY AS D17_PTR, LIVE2.dbo.MatRueck_Abteilung.Abteilung, 
                        'Plasma Ätze' AS Anlage, --LIVE2.dbo.MatRueck_Anlage.Anlage, 
                        dbo.DATA0017.INV_PART_NUMBER AS Artikel, 
                        dbo.DATA0017.INV_PART_DESCRIPTION AS Bezeichnung, 
                        LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, 
                        dbo.DATA0017.STD_COST AS VerrPreis,
                        dbo.DATA0002.UNIT_CODE AS LagerEinheit
            FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
                               LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
                               LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
                               dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
                               dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
                               dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
                               LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
                               dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
            GROUP BY dbo.DATA0017.RKEY, LIVE2.dbo.MatRueck_Abteilung.Abteilung, LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID,
                        dbo.DATA0017.INV_PART_NUMBER, dbo.DATA0017.INV_PART_DESCRIPTION, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STOCK_PURCH, 
                        dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE, dbo.DATA0017.CONSIGN_ONHAND_QTY,
                        dbo.DATA0017.ACTIVE_FLAG, dbo.DATA0017.STD_COST, LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial
            HAVING      --dbo.DATA0017.ACTIVE_FLAG='Y' AND 
                             (LIVE2.dbo.MatRueck_Anlage.ID = 94)
                             AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(1 AS bit)




--SELECT * FROM @tblAnlageArtikelFDgalvAu

            SELECT
                  Abteilung, 
                  Anlage, 
                  Artikel, 
                  Bezeichnung, 
                  Verbrauch,
                  Durchsatz,
                  --Durchsatz2,
                  Verbrauch*VerrPreis AS abs_Kosten,
                  CASE 
                        WHEN Durchsatz>0 THEN
                             (Verbrauch*VerrPreis)/Durchsatz 
                        ELSE
                             0
                  END AS rel_Kosten,
                  CASE 
                        WHEN Durchsatz>0 THEN
                             (Verbrauch*VerrPreis)/Durchsatz*100 
                        ELSE
                             0
                  END AS KS_IstKosten,
                  VerrPreis*VerbrauchSOLL*100 AS SollKosten,
                  CASE
                        WHEN (VerrPreis*VerbrauchSOLL*100)>0 AND Durchsatz>0 THEN
                             (((Verbrauch*VerrPreis)/Durchsatz*100)-(VerrPreis*VerbrauchSOLL*100.000000))/(VerrPreis*VerbrauchSOLL*100.000000) 
                        ELSE
                             0
                  END AS Abweichung,
                  (Verbrauch*VerrPreis)-(VerrPreis*Durchsatz*VerbrauchSOLL) AS MehrMinderKosten,
                  (Verbrauch*VerrPreis) AS IstKosten,
                  VerrPreis,
                  CAST(VerbrauchSOLL*100.000000 AS DECIMAL(20, 7)) AS SollV_100,
                  CASE 
                        WHEN Durchsatz>0 THEN
                             (Verbrauch/Durchsatz)*100.000000 
                        ELSE
                             0
                  END AS IstV_100,
                  BzgGr,
                  --BzgGr2,
                  LagerEinheit,
                  ISNULL((
                             SELECT TOP 1 CASE WHEN LTRIM(RTRIM(ISNULL(ANALYSIS_CODE5, '')))='' THEN '0' ELSE ANALYSIS_CODE5 END
                             FROM dbo.DATA0017 WHERE RKEY = D17_PTR)
                  , 0) AS MatFl,
                  (
                        SELECT TOP 1 CASE WHEN LTRIM(RTRIM(ISNULL(ANALYSIS_CODE1, '')))='' THEN '0' ELSE ANALYSIS_CODE1 END
                        FROM dbo.DATA0017 WHERE RKEY = D17_PTR
                  ) AS AC_01,
				  VerbrauchSOLL

            FROM
            (
                  SELECT 
                        D17_PTR, 
                        Abteilung, 
                        Anlage, 
                        Artikel, 
                        Bezeichnung, 
						VerbrauchSOLL,
                        (
                             ISNULL((
/*
								SELECT
									SUM(ISNULL(QUANTITY, 0)) AS RES
								FROM 
									dbo.DATA0095
								WHERE 
									dbo.DATA0095.TRAN_TP IN (13, 14, 15, 16) 
									AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
									AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  
									AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR
*/
								SELECT
									SUM(ISNULL(tblDATA0095.QUANTITY, 0)) AS RES
								FROM
								(
									SELECT     LIVE2.dbo.MatRueck_Anlage.ID AS Anlage_PTR, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY AS D17_RKEY, dbo.DATA0017.INV_PART_DESCRIPTION AS ArtBezeichnung,
												dbo.DATA0002.UNIT_CODE AS Lagereinheit, dbo.DATA0017.STOCK_PURCH 
									FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
											  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
											  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
											  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
											  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
											  dbo.DATA0034 ON LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR = dbo.DATA0034.RKEY
									WHERE dbo.DATA0034.DEPT_CODE = 'MLPL-01-01' --@para2
									GROUP BY LIVE2.dbo.MatRueck_Anlage.ID, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY, dbo.DATA0017.INV_PART_DESCRIPTION , dbo.DATA0017.STOCK_PURCH, dbo.DATA0002.UNIT_CODE 
									HAVING LIVE2.dbo.MatRueck_Anlage.ID = 94 --(LIVE2.dbo.MatRueck_Anlage.Anlage = @Anlage)
								) AS tblAnlageArtikel INNER JOIN --LEFT OUTER JOIN 
								(SELECT QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, MONTH(TRAN_DATE) AS Monat, TRAN_TP 
								--FROM dbo.DATA0095 INNER JOIN  dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY 
								FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
								WHERE dbo.DATA0095.TRAN_TP IN (15, 16) AND dbo.DATA0034.DEPT_CODE = 'MLPL-01-01'
								AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
								AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  
								AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR ) AS tblDATA0095 
								ON tblAnlageArtikel.D17_RKEY = tblDATA0095.INVT_PTR
                             ), 0)
                             +
                             ISNULL((
                                   SELECT 
                                         ISNULL((
                                               (-1)*SUM(QUANTITY) 
                                               *
                                               ISNULL((
                                                     SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
                                                     FROM LIVE2.dbo.NachKalk_MatVerteilung
                                                     WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = 94
                                                                 AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = tblAnlageArtikel_.D17_PTR
                                               ), 0) 
                                         ), 0) AS RES 

                                    FROM 
                                         dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
                                   WHERE 
                                         dbo.DATA0095.TRAN_TP = 23
                                         AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
                                         AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
                                         AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR
                             ), 0) 
                        ) AS Verbrauch,
                        ISNULL((SELECT TOP 1 Durchsatz FROM @tblDurchsatzMLPLASMA), 0) AS Durchsatz,
                        ISNULL((SELECT TOP 1 BzgGr FROM @tblDurchsatzMLPLASMA), 0) AS BzgGr,
                        --ISNULL((SELECT TOP 1 Durchsatz2 FROM @tblDurchsatzMLTrennFolie), 0) 
						--0 AS Durchsatz2,
                        --ISNULL((SELECT TOP 1 BzgGr2 FROM @tblDurchsatzMLTrennFolie), 0) 
						--'' AS BzgGr2,
                        VerrPreis,
                        LagerEinheit

                  FROM @tblAnlageArtikelMLPLASMA AS tblAnlageArtikel_
            ) AS tblJeAnlage
            ORDER BY IstKosten DESC
	END

	IF @Case_ = 'Matverbrauch_ML_Schweissen'
	BEGIN
			--DECLARE 
            --@para4 varchar(255),
            --@para5 varchar(255)
            --SET @para4 = '01.01.2010'    --Datum Von
            --SET @para5 = '31.05.2015'    --Datum Bis

            DECLARE @tblAnlageArtikelMLSCHW table(
                                                                 D17_PTR NUMERIC(10, 0),
                                                                 Abteilung varchar(250),
                                                                 Anlage varchar(250),
                                                                 Artikel char(20), 
                                                                 Bezeichnung char(40), 
                                                                 VerbrauchSOLL DECIMAL(20, 7),
                                                                 VerrPreis DECIMAL(20, 7),
                                                                 LagerEinheit varchar(5),
                                                                 QUAN_ON_HAND DECIMAL(20, 7)
                                                                 )

            INSERT @tblAnlageArtikelMLSCHW(D17_PTR, Abteilung, Anlage, Artikel, Bezeichnung, VerbrauchSOLL, VerrPreis, LagerEinheit, QUAN_ON_HAND)
            SELECT  DISTINCT dbo.DATA0017.RKEY AS D17_PTR, LIVE2.dbo.MatRueck_Abteilung.Abteilung, 
                        'ML Schweißen' AS Anlage, --LIVE2.dbo.MatRueck_Anlage.Anlage, 
                        dbo.DATA0017.INV_PART_NUMBER AS Artikel, 
                        dbo.DATA0017.INV_PART_DESCRIPTION AS Bezeichnung, 
                        LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, 
                        dbo.DATA0017.STD_COST AS VerrPreis,
                        dbo.DATA0002.UNIT_CODE AS LagerEinheit, dbo.DATA0017.QUAN_ON_HAND
            FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
                               LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
                               LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
                               dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
                               dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
                               dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
                               LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
                               dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
            GROUP BY dbo.DATA0017.RKEY, LIVE2.dbo.MatRueck_Abteilung.Abteilung, LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID,
                        dbo.DATA0017.INV_PART_NUMBER, dbo.DATA0017.INV_PART_DESCRIPTION, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STOCK_PURCH, 
                        dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE, dbo.DATA0017.CONSIGN_ONHAND_QTY,
                        dbo.DATA0017.ACTIVE_FLAG, dbo.DATA0017.STD_COST, LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial
            HAVING      --dbo.DATA0017.ACTIVE_FLAG='Y' AND 
                             (LIVE2.dbo.MatRueck_Anlage.ID = 112)
                             AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(1 AS bit)




--SELECT * FROM @tblAnlageArtikelFDgalvAu

            SELECT
                  Abteilung, 
                  Anlage, 
                  Artikel, 
                  Bezeichnung, 
                  Verbrauch,
                  Durchsatz,
                  Durchsatz2,
                  Verbrauch*VerrPreis AS abs_Kosten,
                  CASE 
                        WHEN Durchsatz>0 THEN
                             (Verbrauch*VerrPreis)/Durchsatz 
                        ELSE
                             0
                  END AS rel_Kosten,
                  CASE 
                        WHEN Durchsatz>0 THEN
                             (Verbrauch*VerrPreis)/Durchsatz*100 
                        ELSE
                             0
                  END AS KS_IstKosten,
                  VerrPreis*VerbrauchSOLL*100 AS SollKosten,
                  CASE
                        WHEN (VerrPreis*VerbrauchSOLL*100)>0 AND Durchsatz>0 THEN
                             (((Verbrauch*VerrPreis)/Durchsatz*100)-(VerrPreis*VerbrauchSOLL*100.000000))/(VerrPreis*VerbrauchSOLL*100.000000) 
                        ELSE
                             0
                  END AS Abweichung,
                  (Verbrauch*VerrPreis)-(VerrPreis*Durchsatz*VerbrauchSOLL) AS MehrMinderKosten,
                  (Verbrauch*VerrPreis) AS IstKosten,
                  VerrPreis,
                  CAST(VerbrauchSOLL*100.000000 AS DECIMAL(20, 7)) AS SollV_100,
                  CASE 
                        WHEN Durchsatz>0 THEN
                             (Verbrauch/Durchsatz)*100.000000 
                        ELSE
                             0
                  END AS IstV_100,
                  BzgGr,
                  BzgGr2,
                  LagerEinheit,
                  ISNULL((
                             SELECT TOP 1 CASE WHEN LTRIM(RTRIM(ISNULL(ANALYSIS_CODE5, '')))='' THEN '0' ELSE ANALYSIS_CODE5 END
                             FROM dbo.DATA0017 WHERE RKEY = D17_PTR)
                  , 0) AS MatFl,
                  (
                        SELECT TOP 1 CASE WHEN LTRIM(RTRIM(ISNULL(ANALYSIS_CODE1, '')))='' THEN '0' ELSE ANALYSIS_CODE1 END
                        FROM dbo.DATA0017 WHERE RKEY = D17_PTR
                  ) AS AC_01,
				  VerbrauchSOLL,
				  QUAN_ON_HAND

            FROM
            (
                  SELECT 
                        D17_PTR, 
                        Abteilung, 
                        Anlage, 
                        Artikel, 
                        Bezeichnung, 
						0 AS VerbrauchSOLL,
                        (
                             ISNULL((
/*
								SELECT
									SUM(ISNULL(QUANTITY, 0)) AS RES
								FROM 
									dbo.DATA0095
								WHERE 
									dbo.DATA0095.TRAN_TP IN (13, 14, 15, 16) 
									AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
									AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  
									AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR
*/
								SELECT
									SUM(ISNULL(tblDATA0095.QUANTITY, 0)) AS RES
								FROM
								(
									SELECT     LIVE2.dbo.MatRueck_Anlage.ID AS Anlage_PTR, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY AS D17_RKEY, dbo.DATA0017.INV_PART_DESCRIPTION AS ArtBezeichnung,
												dbo.DATA0002.UNIT_CODE AS Lagereinheit, dbo.DATA0017.STOCK_PURCH 
									FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
											  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
											  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
											  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
											  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
											  dbo.DATA0034 ON LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR = dbo.DATA0034.RKEY
									WHERE dbo.DATA0034.DEPT_CODE = 'MLSW-01-01' --@para2
									GROUP BY LIVE2.dbo.MatRueck_Anlage.ID, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY, dbo.DATA0017.INV_PART_DESCRIPTION , dbo.DATA0017.STOCK_PURCH, dbo.DATA0002.UNIT_CODE 
									HAVING LIVE2.dbo.MatRueck_Anlage.ID = 112 --(LIVE2.dbo.MatRueck_Anlage.Anlage = @Anlage)
								) AS tblAnlageArtikel INNER JOIN --LEFT OUTER JOIN 
								(SELECT QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, MONTH(TRAN_DATE) AS Monat, TRAN_TP 
								--FROM dbo.DATA0095 INNER JOIN  dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY 
								FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
								WHERE dbo.DATA0095.TRAN_TP IN (15, 16) AND dbo.DATA0034.DEPT_CODE = 'MLSW-01-01'
								AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
								AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  
								AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR ) AS tblDATA0095 
								ON tblAnlageArtikel.D17_RKEY = tblDATA0095.INVT_PTR
                             ), 0)
                             +
                             ISNULL((
                                   SELECT 
                                         ISNULL((
                                               (-1)*SUM(QUANTITY) 
                                               *
                                               ISNULL((
                                                     SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
                                                     FROM LIVE2.dbo.NachKalk_MatVerteilung
                                                     WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = 112
                                                                 AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = tblAnlageArtikel_.D17_PTR
                                               ), 0) 
                                         ), 0) AS RES 

                                    FROM 
                                         dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
                                   WHERE 
                                         dbo.DATA0095.TRAN_TP = 23
                                         AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
                                         AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
                                         AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR
                             ), 0) 
                        ) AS Verbrauch,
                        --ISNULL((SELECT TOP 1 Durchsatz FROM @tblDurchsatzMLTrennFolie), 0) 
						0 AS Durchsatz,
                        --ISNULL((SELECT TOP 1 BzgGr FROM @tblDurchsatzMLTrennFolie), 0) 
						'' AS BzgGr,
                        --ISNULL((SELECT TOP 1 Durchsatz2 FROM @tblDurchsatzMLTrennFolie), 0) 
						0 AS Durchsatz2,
                        --ISNULL((SELECT TOP 1 BzgGr2 FROM @tblDurchsatzMLTrennFolie), 0) 
						'' AS BzgGr2,
                        VerrPreis,
                        LagerEinheit,
						QUAN_ON_HAND

                  FROM @tblAnlageArtikelMLSCHW AS tblAnlageArtikel_
            ) AS tblJeAnlage
            ORDER BY IstKosten DESC
	END

	IF @Case_ = 'Matverbrauch_ML_DruckFolie'
	BEGIN
			--DECLARE 
            --@para4 varchar(255),
            --@para5 varchar(255)
            --SET @para4 = '01.01.2015'    --Datum Von
            --SET @para5 = '31.03.2015'    --Datum Bis

            DECLARE @tblDurchsatzMLDruckFolie table(
                                                                       DEPT_CODE char(10), 
                                                                       Durchsatz NUMERIC(10, 4),
                                                                       BzgGr varchar(20),
                                                                       Durchsatz2 NUMERIC(10, 4),
                                                                       BzgGr2 varchar(20)
                                                                 )


            INSERT @tblDurchsatzMLDruckFolie(DEPT_CODE, Durchsatz, BzgGr, Durchsatz2, BzgGr2)
            SELECT
                  'ML' AS DEPT_CODE,
                  ISNULL((
                        SELECT TOP 1    
                             SUM(
                                   (dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
                                   / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000)) 
                             AS RES
						FROM         dbo.DATA0006 INNER JOIN
													   dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
													   dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
													   dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
													   dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
													   dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
						WHERE     (dbo.DATA0038.TTYPE = 2) AND
										 (dbo.DATA0048.TDATE >=CONVERT(DATETIME, @para4, 103)) 
										 AND (dbo.DATA0048.TDATE <=CONVERT(DATETIME, @para5, 103)) 
										 AND LEFT(dbo.DATA0034.DEPT_CODE, 5) = 'MLPR-'
                  ), 0) AS Durchsatz,
                  'Zu-m2' AS BzgGr,
                  ISNULL((
                        SELECT TOP 1    
                             SUM(
                                   (dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
                                   / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000)) 
                             AS RES
						FROM         dbo.DATA0006 INNER JOIN
													   dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
													   dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
													   dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
													   dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
													   dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
						WHERE     --(dbo.DATA0038.TTYPE = 2) AND
										(dbo.DATA0048.TDATE >=CONVERT(DATETIME, @para4, 103)) 
										AND (dbo.DATA0048.TDATE <=CONVERT(DATETIME, @para5, 103)) 
										AND LEFT(dbo.DATA0034.DEPT_CODE, 5) = 'MLPR-'
										AND dbo.DATA0006.RKEY IN (
																	SELECT DISTINCT 
																		dbo.DATA0006.RKEY
																	FROM  dbo.DATA0006 INNER JOIN
																			dbo.DATA0067 ON dbo.DATA0006.RKEY = dbo.DATA0067.WO_PTR INNER JOIN
																			dbo.DATA0017 ON dbo.DATA0067.INVT_PTR = dbo.DATA0017.RKEY
																	WHERE 
																		dbo.DATA0017.INV_PART_DESCRIPTION LIKE 'Deckfolie%'
																	)
                  ), 0) AS Durchsatz2,
                  'Zu-m2' AS BzgGr2

--SELECT * FROM @tblDurchsatz

            DECLARE @tblSollMLDruckFolie table(
                                                DF_460_x_305 FLOAT, 
                                                DF_532_x_406 FLOAT, 
												DF_610_x_460 FLOAT, 
												DF_Rest FLOAT
                                              )
            INSERT @tblSollMLDruckFolie(DF_460_x_305, DF_532_x_406, DF_610_x_460, DF_Rest)

			SELECT
				SUM(DF_460_x_305) AS DF_460_x_305,
				SUM(DF_532_x_406) AS DF_532_x_406,
				SUM(DF_610_x_460) AS DF_610_x_460,
				SUM(DF_Rest) AS DF_Rest

			FROM
			(
				SELECT 
					--dbo.DATA0006.WORK_ORDER_NUMBER,  
					--dbo.ARTIKELDATEN.ZuX, dbo.ARTIKELDATEN.ZuY,
					--dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY AS FL, 
					SUM(CAST(
						CASE
							WHEN (dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY) >= 133286 AND (dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY) <= 147315 THEN
							   --(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
							   --/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000)
							   CAST((460.0 * 305.0 * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
							   / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000) AS FLOAT)
							ELSE
								0
						END AS FLOAT)
					) AS DF_460_x_305,
					SUM(CAST(
						CASE
							WHEN (dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY) >= 205192 AND (dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY) <= 226792 THEN
							   CAST((532.0 * 406.0 * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
							   / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000) AS FLOAT)
							ELSE
								0
						END AS FLOAT)
					) AS DF_532_x_406,
					SUM(CAST(
						CASE
							WHEN (dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY) >= 266570 AND (dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY) <= 294630 THEN
							   CAST((610.0 * 460.0 * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
							   / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000) AS FLOAT)
							ELSE
								0
						END AS FLOAT)
					) AS DF_610_x_460,
					SUM(CAST(
						CASE
							WHEN (dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY < 133286)
								OR (dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY > 294630)
								OR (dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY > 147315 AND dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY < 205192) 
								OR (dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY > 226792 AND dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY < 266570) THEN
							   CAST((dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
							   / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000) AS FLOAT)
							ELSE
								0
						END AS FLOAT)
					) AS DF_Rest

				FROM         dbo.DATA0006 INNER JOIN
											   dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
											   dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
											   dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
											   dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
											   dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
				WHERE     --(dbo.DATA0038.TTYPE = 2) AND
								(dbo.DATA0048.TDATE >=CONVERT(DATETIME, @para4, 103)) 
								AND (dbo.DATA0048.TDATE <=CONVERT(DATETIME, @para5, 103)) 
								AND LEFT(dbo.DATA0034.DEPT_CODE, 5) = 'MLPR-'
								AND dbo.DATA0006.RKEY IN (
															SELECT DISTINCT D6_PTR
															FROM
															(
																SELECT 
																	dbo.DATA0006.RKEY AS D6_PTR,
																	COUNT(dbo.DATA0006.RKEY) AS AnzFolien
																FROM         dbo.DATA0006 INNER JOIN
																					  dbo.DATA0067 ON dbo.DATA0006.RKEY = dbo.DATA0067.WO_PTR INNER JOIN
																					  dbo.DATA0017 ON dbo.DATA0067.INVT_PTR = dbo.DATA0017.RKEY
																WHERE  
																	dbo.DATA0017.INV_PART_DESCRIPTION LIKE 'Deckfolie%'
																GROUP BY
																	dbo.DATA0006.RKEY
															) AS tblFolie1x
															WHERE AnzFolien = 1
															)


				UNION ALL

				SELECT   
					--dbo.DATA0006.WORK_ORDER_NUMBER, 
					--dbo.ARTIKELDATEN.ZuX, dbo.ARTIKELDATEN.ZuY, 
					--dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY AS FL, 
					SUM(CAST(
						CASE
							WHEN (dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY) >= 133286 AND (dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY) <= 147315 THEN
							   --(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
							   --/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000)
							   CAST((2 * 460.0 * 305.0 * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
							   / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000) AS FLOAT)
							ELSE
								0
						END AS FLOAT)
					) AS DF_460_x_305,
					SUM(CAST(
						CASE
							WHEN (dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY) >= 205192 AND (dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY) <= 226792 THEN
							   CAST((2 * 532.0 * 406.0 * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
							   / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000) AS FLOAT)
							ELSE
								0
						END AS FLOAT)
					) AS DF_532_x_406,
					SUM(CAST(
						CASE
							WHEN (dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY) >= 266570 AND (dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY) <= 294630 THEN
							   CAST((2 * 610.0 * 460.0 * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
							   / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000) AS FLOAT)
							ELSE
								0
						END AS FLOAT)
					) AS DF_610_x_460,
					SUM(CAST(
						CASE
							WHEN (dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY < 133286)
								OR (dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY > 294630)
								OR (dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY > 147315 AND dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY < 205192) 
								OR (dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY > 226792 AND dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY < 266570) THEN
							   CAST((2 * dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY  * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
							   / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000) AS FLOAT)
							ELSE
								0
						END AS FLOAT)
					) AS DF_Rest

				FROM         dbo.DATA0006 INNER JOIN
											   dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
											   dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
											   dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
											   dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
											   dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
				WHERE     --(dbo.DATA0038.TTYPE = 2) AND
								(dbo.DATA0048.TDATE >=CONVERT(DATETIME, @para4, 103)) 
								AND (dbo.DATA0048.TDATE <=CONVERT(DATETIME, @para5, 103)) 
								AND LEFT(dbo.DATA0034.DEPT_CODE, 5) = 'MLPR-'
								AND dbo.DATA0006.RKEY IN (
															SELECT DISTINCT D6_PTR
															FROM
															(
																SELECT 
																	dbo.DATA0006.RKEY AS D6_PTR,
																	COUNT(dbo.DATA0006.RKEY) AS AnzFolien
																FROM         dbo.DATA0006 INNER JOIN
																					  dbo.DATA0067 ON dbo.DATA0006.RKEY = dbo.DATA0067.WO_PTR INNER JOIN
																					  dbo.DATA0017 ON dbo.DATA0067.INVT_PTR = dbo.DATA0017.RKEY
																WHERE  
																	dbo.DATA0017.INV_PART_DESCRIPTION LIKE 'Deckfolie%'
																GROUP BY
																	dbo.DATA0006.RKEY
															) AS tblFolie1x
															WHERE AnzFolien = 2
															)
			) AS tblUnionDruckFolie




            DECLARE @tblAnlageArtikelMLDruckFolie table(
                                                                 D17_PTR NUMERIC(10, 0),
                                                                 Abteilung varchar(250),
                                                                 Anlage varchar(250),
                                                                 Artikel char(20), 
                                                                 Bezeichnung char(40), 
                                                                 VerbrauchSOLL DECIMAL(20, 7),
                                                                 VerrPreis DECIMAL(20, 7),
                                                                 LagerEinheit varchar(5)
                                                                 )

            INSERT @tblAnlageArtikelMLDruckFolie(D17_PTR, Abteilung, Anlage, Artikel, Bezeichnung, VerbrauchSOLL, VerrPreis, LagerEinheit)
            SELECT  DISTINCT dbo.DATA0017.RKEY AS D17_PTR, LIVE2.dbo.MatRueck_Abteilung.Abteilung, 
                        'ML PRessen I' AS Anlage, --LIVE2.dbo.MatRueck_Anlage.Anlage, 
                        dbo.DATA0017.INV_PART_NUMBER AS Artikel, 
                        dbo.DATA0017.INV_PART_DESCRIPTION AS Bezeichnung, 
                        LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, 
                        dbo.DATA0017.STD_COST AS VerrPreis,
                        dbo.DATA0002.UNIT_CODE AS LagerEinheit
            FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
                               LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
                               LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
                               dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
                               dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
                               dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
                               LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
                               dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
            GROUP BY dbo.DATA0017.RKEY, LIVE2.dbo.MatRueck_Abteilung.Abteilung, LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID,
                        dbo.DATA0017.INV_PART_NUMBER, dbo.DATA0017.INV_PART_DESCRIPTION, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STOCK_PURCH, 
                        dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE, dbo.DATA0017.CONSIGN_ONHAND_QTY,
                        dbo.DATA0017.ACTIVE_FLAG, dbo.DATA0017.STD_COST, LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial
            HAVING      --dbo.DATA0017.ACTIVE_FLAG='Y' AND 
                             (LIVE2.dbo.MatRueck_Anlage.ID = 19)
                             AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(1 AS bit)
                             AND dbo.DATA0017.RKEY IN (44860, 38, 1163) --Druckausgleichsfolie  406x532, Druckausgleichsfolie  460x305, Druckausgleichsfolie  460x610

--SELECT * FROM @tblAnlageArtikelFDgalvAu

            SELECT
                  Abteilung, 
                  Anlage, 
                  Artikel, 
                  Bezeichnung, 
                  Verbrauch,
                  Durchsatz,
                  Durchsatz2,
                  Verbrauch*VerrPreis AS abs_Kosten,
                  CASE 
                        WHEN Durchsatz>0 THEN
                             (Verbrauch*VerrPreis)/Durchsatz 
                        ELSE
                             0
                  END AS rel_Kosten,
                  CASE 
                        WHEN Durchsatz>0 THEN
                             (Verbrauch*VerrPreis)/Durchsatz*100 
                        ELSE
                             0
                  END AS KS_IstKosten,
                  VerrPreis*VerbrauchSOLL*100 AS SollKosten,
                  CASE
                        WHEN (VerrPreis*VerbrauchSOLL*100)>0 AND Durchsatz>0 THEN
                             (((Verbrauch*VerrPreis)/Durchsatz*100)-(VerrPreis*VerbrauchSOLL*100.000000))/(VerrPreis*VerbrauchSOLL*100.000000) 
                        ELSE
                             0
                  END AS Abweichung,
                  (Verbrauch*VerrPreis)-(VerrPreis*Durchsatz*VerbrauchSOLL) AS MehrMinderKosten,
                  (Verbrauch*VerrPreis) AS IstKosten,
                  VerrPreis,
                  CAST(VerbrauchSOLL*100.000000 AS DECIMAL(20, 7)) AS SollV_100,
                  CASE 
                        WHEN Durchsatz>0 THEN
                             (Verbrauch/Durchsatz)*100.000000 
                        ELSE
                             0
                  END AS IstV_100,
                  BzgGr,
                  BzgGr2,
                  LagerEinheit,
                  ISNULL((
                             SELECT TOP 1 CASE WHEN LTRIM(RTRIM(ISNULL(ANALYSIS_CODE5, '')))='' THEN '0' ELSE ANALYSIS_CODE5 END
                             FROM dbo.DATA0017 WHERE RKEY = D17_PTR)
                  , 0) AS MatFl,
                  (
                        SELECT TOP 1 CASE WHEN LTRIM(RTRIM(ISNULL(ANALYSIS_CODE1, '')))='' THEN '0' ELSE ANALYSIS_CODE1 END
                        FROM dbo.DATA0017 WHERE RKEY = D17_PTR
                  ) AS AC_01,
				  VerbrauchSOLL

            FROM
            (
                  SELECT 
                        D17_PTR, 
                        Abteilung, 
                        Anlage, 
                        Artikel, 
                        Bezeichnung, 
						CASE
							WHEN D17_PTR = 38 THEN
								(SELECT TOP 1 DF_460_x_305 FROM @tblSollMLDruckFolie)
							ELSE
								CASE
									WHEN D17_PTR = 44860 THEN 
										(SELECT TOP 1 DF_532_x_406 FROM @tblSollMLDruckFolie)
									ELSE
										CASE
											WHEN D17_PTR = 1163 THEN 
												(SELECT TOP 1 DF_610_x_460 FROM @tblSollMLDruckFolie)
											ELSE	
												0
										END
								END
                        END AS VerbrauchSOLL,
                        (
                             ISNULL((
/*
                                   SELECT
                                         SUM(ISNULL(tblDATA0095.QUANTITY, 0)) AS RES
                                   FROM
                                   (
                                         SELECT     LIVE2.dbo.MatRueck_Anlage.ID AS Anlage_PTR, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY AS D17_RKEY, dbo.DATA0017.INV_PART_DESCRIPTION AS ArtBezeichnung,
                                                           dbo.DATA0002.UNIT_CODE AS Lagereinheit, dbo.DATA0017.STOCK_PURCH 
                                         FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
                                                       LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
                                                       LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
                                                       dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
                                                       dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
                                                       dbo.DATA0034 ON LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR = dbo.DATA0034.RKEY
                                         --WHERE dbo.DATA0034.DEPT_CODE = 'LAMI-01-02' --@para2
                                         GROUP BY LIVE2.dbo.MatRueck_Anlage.ID, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY, dbo.DATA0017.INV_PART_DESCRIPTION , dbo.DATA0017.STOCK_PURCH, dbo.DATA0002.UNIT_CODE 
                                         HAVING LIVE2.dbo.MatRueck_Anlage.ID = 29--(LIVE2.dbo.MatRueck_Anlage.Anlage = @Anlage)
                                   ) AS tblAnlageArtikel INNER JOIN --LEFT OUTER JOIN 
                                   (SELECT QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, MONTH(TRAN_DATE) AS Monat, TRAN_TP 
                                   --FROM dbo.DATA0095 INNER JOIN  dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY 
                                   FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
                                   WHERE dbo.DATA0095.TRAN_TP IN (15, 16) --AND dbo.DATA0034.DEPT_CODE = 'LAMI-01-02'
                                   AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
                                   AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  
								   AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR ) AS tblDATA0095 
                                   ON tblAnlageArtikel.D17_RKEY = tblDATA0095.INVT_PTR
                                   --) AS myTblSub   
*/
								SELECT
									SUM(ISNULL(QUANTITY, 0)) AS RES
								FROM 
									dbo.DATA0095
								WHERE 
									dbo.DATA0095.TRAN_TP IN (13, 14, 15, 16) 
									AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
									AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  
									AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR
                             ), 0)
                             +
                             ISNULL((
                                   SELECT 
                                         ISNULL((
                                               (-1)*SUM(QUANTITY) 
                                               *
                                               ISNULL((
                                                     SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
                                                     FROM LIVE2.dbo.NachKalk_MatVerteilung
                                                     WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = 19
                                                                 AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = tblAnlageArtikel_.D17_PTR
                                               ), 0) 
                                         ), 0) AS RES 

                                    FROM 
                                         dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
                                   WHERE 
                                         dbo.DATA0095.TRAN_TP = 23
                                         AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
                                         AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
                                         AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR
                             ), 0) 
                        ) AS Verbrauch,
                        ISNULL((SELECT TOP 1 Durchsatz FROM @tblDurchsatzMLDruckFolie), 0) AS Durchsatz,
                        ISNULL((SELECT TOP 1 BzgGr FROM @tblDurchsatzMLDruckFolie), 0) AS BzgGr,
                        ISNULL((SELECT TOP 1 Durchsatz2 FROM @tblDurchsatzMLDruckFolie), 0) AS Durchsatz2,
                        ISNULL((SELECT TOP 1 BzgGr2 FROM @tblDurchsatzMLDruckFolie), 0) AS BzgGr2,
                        VerrPreis,
                        LagerEinheit

                  FROM @tblAnlageArtikelMLDruckFolie AS tblAnlageArtikel_
            ) AS tblJeAnlage
            ORDER BY IstKosten DESC
	END

	IF @Case_ = 'Matverbrauch_FDAu'
	BEGIN
		--DECLARE 
		--@para4 varchar(255),
		--@para5 varchar(255)
		--SET @para4 = '01.01.2015'	--Datum Von
		--SET @para5 = '31.03.2015'	--Datum Bis

		DECLARE @tblDurchsatzFDAu table(
												DEPT_CODE char(10), 
												Durchsatz NUMERIC(10, 4),
												BzgGr varchar(20)
											)


		INSERT @tblDurchsatzFDAu(DEPT_CODE, Durchsatz, BzgGr)
		SELECT
			'LAMI-01-02' AS DEPT_CODE,
			ISNULL((
				SELECT TOP 1    
					SUM(
						(dbo.ARTIKELDATEN.ZuX * dbo.ARTIKELDATEN.ZuY * CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) 
						/ dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT) / 1000000)) 
					AS RES
		FROM         dbo.DATA0006 INNER JOIN
							  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
							  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
							  dbo.DATA0056 ON dbo.DATA0048.TPUT_PTR = dbo.DATA0056.RKEY LEFT OUTER JOIN --INNER JOIN
							  dbo.DATA0038 ON dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER AND dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR INNER JOIN
							  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
		WHERE     (dbo.DATA0038.TTYPE = 2) AND
					(dbo.DATA0048.TDATE >=CONVERT(DATETIME, @para4, 103)) 
					AND (dbo.DATA0048.TDATE <=CONVERT(DATETIME, @para5, 103)) 
					AND LEFT(dbo.DATA0034.DEPT_CODE, 4) = 'LAMI'
					AND (
							(dbo.DATA0038.PARAMETER_2 = '1.Laminat.GvAuAg;' OR dbo.DATA0038.PARAMETER_2 = '2.Laminat.GvAuAg;')
						)
			), 0) AS Durchsatz,
			'Zu-m2' AS BzgGr

--SELECT * FROM @tblDurchsatz

		DECLARE @tblAnlageArtikelFDgalvAu table(
											D17_PTR NUMERIC(10, 0),
											Abteilung varchar(250),
											Anlage varchar(250),
											Artikel char(20), 
											Bezeichnung char(40), 
											VerbrauchSOLL DECIMAL(20, 7),
											VerrPreis DECIMAL(20, 7),
											LagerEinheit varchar(5)
											)

		INSERT @tblAnlageArtikelFDgalvAu(D17_PTR, Abteilung, Anlage, Artikel, Bezeichnung, VerbrauchSOLL, VerrPreis, LagerEinheit)
		SELECT  DISTINCT dbo.DATA0017.RKEY AS D17_PTR, LIVE2.dbo.MatRueck_Abteilung.Abteilung, 
				'Laminieren galv Au' AS Anlage, --LIVE2.dbo.MatRueck_Anlage.Anlage, 
				dbo.DATA0017.INV_PART_NUMBER AS Artikel, 
				dbo.DATA0017.INV_PART_DESCRIPTION AS Bezeichnung, 
				LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, 
				dbo.DATA0017.STD_COST AS VerrPreis,
				dbo.DATA0002.UNIT_CODE AS LagerEinheit
		FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
					  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
					  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
					  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
					  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
					  dbo.DATA0002 AS DATA0002_1 ON dbo.DATA0017.PURCH_UNIT_PTR = DATA0002_1.RKEY INNER JOIN
					  LIVE2.dbo.NachKalk_MatVerteilung ON LIVE2.dbo.MatRueck_Anlage.ID = LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR AND 
					  dbo.DATA0017.RKEY = LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR
		GROUP BY dbo.DATA0017.RKEY, LIVE2.dbo.MatRueck_Abteilung.Abteilung, LIVE2.dbo.MatRueck_Anlage.Anlage, LIVE2.dbo.MatRueck_Anlage.ID,
				dbo.DATA0017.INV_PART_NUMBER, dbo.DATA0017.INV_PART_DESCRIPTION, dbo.DATA0002.UNIT_CODE, dbo.DATA0017.STOCK_PURCH, 
				dbo.DATA0017.QUAN_ON_HAND, DATA0002_1.UNIT_CODE, dbo.DATA0017.CONSIGN_ONHAND_QTY,
				dbo.DATA0017.ACTIVE_FLAG, dbo.DATA0017.STD_COST, LIVE2.dbo.NachKalk_MatVerteilung.VerbrauchSOLL, LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial
		HAVING      --dbo.DATA0017.ACTIVE_FLAG='Y' AND 
					(LIVE2.dbo.MatRueck_Anlage.ID = 29)
					AND LIVE2.dbo.NachKalk_MatVerteilung.KSMaterial = CAST(1 AS bit)

--SELECT * FROM @tblAnlageArtikelFDgalvAu

		SELECT
			Abteilung, 
			Anlage, 
			Artikel, 
			Bezeichnung, 
			Verbrauch,
			Durchsatz,
			Verbrauch*VerrPreis AS abs_Kosten,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch*VerrPreis)/Durchsatz 
				ELSE
					0
			END AS rel_Kosten,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch*VerrPreis)/Durchsatz*100 
				ELSE
					0
			END AS KS_IstKosten,
			VerrPreis*VerbrauchSOLL*100 AS SollKosten,
			CASE
				WHEN (VerrPreis*VerbrauchSOLL*100)>0 AND Durchsatz>0 THEN
					(((Verbrauch*VerrPreis)/Durchsatz*100)-(VerrPreis*VerbrauchSOLL*100.000000))/(VerrPreis*VerbrauchSOLL*100.000000) 
				ELSE
					0
			END AS Abweichung,
			(Verbrauch*VerrPreis)-(VerrPreis*Durchsatz*VerbrauchSOLL) AS MehrMinderKosten,
			(Verbrauch*VerrPreis) AS IstKosten,
			VerrPreis,
			CAST(VerbrauchSOLL*100.000000 AS DECIMAL(20, 7)) AS SollV_100,
			CASE 
				WHEN Durchsatz>0 THEN
					(Verbrauch/Durchsatz)*100.000000 
				ELSE
					0
			END AS IstV_100,
			BzgGr,
			LagerEinheit,
			ISNULL((
					SELECT TOP 1 CASE WHEN LTRIM(RTRIM(ISNULL(ANALYSIS_CODE5, '')))='' THEN '0' ELSE ANALYSIS_CODE5 END
					 FROM dbo.DATA0017 WHERE RKEY = D17_PTR)
			, 0) AS MatFl,
			(
				SELECT TOP 1 CASE WHEN LTRIM(RTRIM(ISNULL(ANALYSIS_CODE1, '')))='' THEN '0' ELSE ANALYSIS_CODE1 END
				FROM dbo.DATA0017 WHERE RKEY = D17_PTR
			) AS AC_01

		FROM
		(
			SELECT 
				D17_PTR, 
				Abteilung, 
				Anlage, 
				Artikel, 
				Bezeichnung, 
				0 AS VerbrauchSOLL,
				(
					ISNULL((
						SELECT
							SUM(ISNULL(tblDATA0095.QUANTITY, 0)) AS RES
						FROM
						(
							SELECT     LIVE2.dbo.MatRueck_Anlage.ID AS Anlage_PTR, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY AS D17_RKEY, dbo.DATA0017.INV_PART_DESCRIPTION AS ArtBezeichnung,
										dbo.DATA0002.UNIT_CODE AS Lagereinheit, dbo.DATA0017.STOCK_PURCH 
							FROM         LIVE2.dbo.MatRueck_Abteilung INNER JOIN
									  LIVE2.dbo.MatRueck_Transaktion ON LIVE2.dbo.MatRueck_Abteilung.ID = LIVE2.dbo.MatRueck_Transaktion.Abteilung_PTR INNER JOIN
									  LIVE2.dbo.MatRueck_Anlage ON LIVE2.dbo.MatRueck_Transaktion.Anlage_PTR = LIVE2.dbo.MatRueck_Anlage.ID INNER JOIN
									  dbo.DATA0017 ON LIVE2.dbo.MatRueck_Transaktion.D17_Art_PTR = dbo.DATA0017.RKEY INNER JOIN
									  dbo.DATA0002 ON dbo.DATA0017.STOCK_UNIT_PTR = dbo.DATA0002.RKEY INNER JOIN
									  dbo.DATA0034 ON LIVE2.dbo.MatRueck_Transaktion.D34_Dept_PTR = dbo.DATA0034.RKEY
							WHERE dbo.DATA0034.DEPT_CODE = 'LAMI-01-02' --@para2
							GROUP BY LIVE2.dbo.MatRueck_Anlage.ID, LIVE2.dbo.MatRueck_Anlage.Anlage, dbo.DATA0017.RKEY, dbo.DATA0017.INV_PART_DESCRIPTION , dbo.DATA0017.STOCK_PURCH, dbo.DATA0002.UNIT_CODE 
							HAVING LIVE2.dbo.MatRueck_Anlage.ID = 29--(LIVE2.dbo.MatRueck_Anlage.Anlage = @Anlage)
						) AS tblAnlageArtikel INNER JOIN --LEFT OUTER JOIN 
						(SELECT QUANTITY, INVT_PTR, YEAR(TRAN_DATE) AS Jahr, TRAN_DATE, MONTH(TRAN_DATE) AS Monat, TRAN_TP 
						--FROM dbo.DATA0095 INNER JOIN  dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY 
						FROM dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
						WHERE dbo.DATA0095.TRAN_TP IN (15, 16) AND dbo.DATA0034.DEPT_CODE = 'LAMI-01-02'
						AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
						AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103)  AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR ) AS tblDATA0095 
						ON tblAnlageArtikel.D17_RKEY = tblDATA0095.INVT_PTR
						--) AS myTblSub	
					), 0)
					+
					ISNULL((
						SELECT 
							ISNULL((
								(-1)*SUM(QUANTITY) 
								*
								ISNULL((
									SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
									FROM LIVE2.dbo.NachKalk_MatVerteilung
									WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = 29
											AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = tblAnlageArtikel_.D17_PTR
								), 0) 
							), 0) AS RES 

						FROM 
							dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
						WHERE 
							dbo.DATA0095.TRAN_TP = 23
							AND dbo.DATA0095.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
							AND dbo.DATA0095.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
							AND dbo.DATA0095.INVT_PTR = tblAnlageArtikel_.D17_PTR
					), 0) 
				) AS Verbrauch,
				ISNULL((SELECT TOP 1 Durchsatz FROM @tblDurchsatzFDAu), 0) AS Durchsatz,
				ISNULL((SELECT TOP 1 BzgGr FROM @tblDurchsatzFDAu), 0) AS BzgGr,
				VerrPreis,
				LagerEinheit

			FROM @tblAnlageArtikelFDgalvAu AS tblAnlageArtikel_
		) AS tblJeAnlage
		ORDER BY IstKosten DESC
	END

	IF @Case_ = 'Matverbrauch_EP'
	BEGIN

		--DECLARE 
		--@para1 varchar(255),
		--@para2 varchar(255),
		--@para4 varchar(255),
		--@para5 varchar(255)
		--SET @para1 = 'SES Festresist-Stripper' 
		--SET @para2 = 'BLHO-01-01' 
		--SET @para4 = '01.01.2015' 
		--SET @para5 = '30.04.2015' 

		SELECT
			CAST('01.' + STR(Monat) + '.' + STR(Jahr) AS DATETIME) AS Datum,
			Jahr,
			Monat,

			ISNULL((
				SELECT TOP 1
					SUM(ISNULL(DATA0095.QUANTITY, 0)) AS RES
				FROM 
					dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
				WHERE dbo.DATA0095.TRAN_TP IN (15, 16) AND dbo.DATA0034.DEPT_CODE = 'EPFI-01-03'
					AND YEAR(dbo.DATA0095.TRAN_DATE) =  tblPruefSpitz.Jahr
					AND MONTH(dbo.DATA0095.TRAN_DATE) =  tblPruefSpitz.Monat
					AND dbo.DATA0095.INVT_PTR = 37798 --Prüfspitzen
	
			), 0) AS Verbrauch_Ult1,
			ISNULL((
				SELECT TOP 1
					SUM(ISNULL(DATA0095.QUANTITY, 0)) AS RES
				FROM 
					dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
				WHERE dbo.DATA0095.TRAN_TP IN (15, 16) AND dbo.DATA0034.DEPT_CODE = 'EPFI-01-04'
					AND YEAR(dbo.DATA0095.TRAN_DATE) =  tblPruefSpitz.Jahr
					AND MONTH(dbo.DATA0095.TRAN_DATE) =  tblPruefSpitz.Monat
					AND dbo.DATA0095.INVT_PTR = 37798 --Prüfspitzen
	
			), 0) AS Verbrauch_Ult2,
			ISNULL((
				SELECT TOP 1
					SUM(ISNULL(DATA0095.QUANTITY, 0)) AS RES
				FROM 
					dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
				WHERE dbo.DATA0095.TRAN_TP IN (15, 16) AND dbo.DATA0034.DEPT_CODE = 'EPFI-01-01'
					AND YEAR(dbo.DATA0095.TRAN_DATE) =  tblPruefSpitz.Jahr
					AND MONTH(dbo.DATA0095.TRAN_DATE) =  tblPruefSpitz.Monat
					AND dbo.DATA0095.INVT_PTR = 37798 --Prüfspitzen
	
			), 0) AS Verbrauch_Loc8,
			ISNULL((
				SELECT TOP 1
					ISNULL((
						(-1)*SUM(QUANTITY) 
						*
						ISNULL((
							SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
							FROM LIVE2.dbo.NachKalk_MatVerteilung
							WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = 53 --FT Ultim8-1
									AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = 37798
						), 1) 
					), 0) AS RES 

				FROM 
					dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
				WHERE 
					dbo.DATA0095.TRAN_TP = 23
					AND YEAR(dbo.DATA0095.TRAN_DATE) =  tblPruefSpitz.Jahr
					AND MONTH(dbo.DATA0095.TRAN_DATE) =  tblPruefSpitz.Monat
					AND dbo.DATA0095.INVT_PTR = 37798
			), 0) AS Inventur_Ult1,
			ISNULL((
				SELECT TOP 1
					ISNULL((
						(-1)*SUM(QUANTITY) 
						*
						ISNULL((
							SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
							FROM LIVE2.dbo.NachKalk_MatVerteilung
							WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = 54 --FT Ultim8-2
									AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = 37798
						), 1) 
					), 0) AS RES 

				FROM 
					dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
				WHERE 
					dbo.DATA0095.TRAN_TP = 23
					AND YEAR(dbo.DATA0095.TRAN_DATE) =  tblPruefSpitz.Jahr
					AND MONTH(dbo.DATA0095.TRAN_DATE) =  tblPruefSpitz.Monat
					AND dbo.DATA0095.INVT_PTR = 37798
			), 0) AS Inventur_Ult2,
			ISNULL((
				SELECT TOP 1
					ISNULL((
						(-1)*SUM(QUANTITY) 
						*
						ISNULL((
							SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
							FROM LIVE2.dbo.NachKalk_MatVerteilung
							WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = 55 --FT Loc8 Light
									AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = 37798
						), 1) 
					), 0) AS RES 

				FROM 
					dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
				WHERE 
					dbo.DATA0095.TRAN_TP = 23
					AND YEAR(dbo.DATA0095.TRAN_DATE) =  tblPruefSpitz.Jahr
					AND MONTH(dbo.DATA0095.TRAN_DATE) =  tblPruefSpitz.Monat
					AND dbo.DATA0095.INVT_PTR = 37798
			), 0) AS Inventur_Loc8,
			ISNULL((SELECT TOP 1 STD_COST FROM dbo.DATA0017 WHERE RKEY=37798), 0) AS VerrPreis,

			ISNULL((
					SELECT TOP 1
						--SUM(CAST(QUANTITY AS NUMERIC(10, 4)) * CAST(PRICE AS NUMERIC(10, 4)) / CAST(EX_RATE AS NUMERIC(10, 4))) / SUM(CAST(QUANTITY AS NUMERIC(10, 4))) AS DMon_Preis
						(
							SUM(CAST(QUANTITY AS NUMERIC(10, 4)) * CAST(PRICE AS NUMERIC(10, 4)) / CAST(EX_RATE AS NUMERIC(10, 4)))
							-
							SUM(CAST(QUANTITY AS NUMERIC(10, 4)) * CAST(STD_COST AS NUMERIC(10, 4)))
						) AS RES

					FROM
					(
					SELECT     
						CASE 
							WHEN ISNULL(dbo.DATA0108.PRICE, 0)>0 THEN
								ISNULL(dbo.DATA0108.QUANTITY, 0)
							ELSE
								ISNULL(dbo.DATA0071.QUAN_ORD, 0)
						END AS QUANTITY,
						CASE 
							WHEN ISNULL(dbo.DATA0108.PRICE, 0)>0 THEN
								ISNULL(dbo.DATA0108.PRICE, 0)
							ELSE
								ISNULL(dbo.DATA0071.PRICE, 0)
						END AS PRICE,
						CASE 
							WHEN ISNULL(dbo.DATA0108.PRICE, 0)>0 THEN
								ISNULL(dbo.DATA0107.EX_RATE, 0)
							ELSE
								ISNULL(dbo.DATA0070.EXCHANGE_RATE, 0)
						END AS EX_RATE,
						dbo.DATA0017.STD_COST,
						dbo.DATA0107.INV_DATE,
						dbo.DATA0070.PO_DATE

					FROM         dbo.DATA0070 INNER JOIN
						  dbo.DATA0071 ON dbo.DATA0070.RKEY = dbo.DATA0071.PO_PTR INNER JOIN
						  dbo.DATA0017 ON dbo.DATA0071.INVT_PTR = dbo.DATA0017.RKEY LEFT OUTER JOIN
						  dbo.DATA0108 INNER JOIN
						  dbo.DATA0107 ON dbo.DATA0108.DATA0107_PTR = dbo.DATA0107.RKEY ON dbo.DATA0071.RKEY = dbo.DATA0108.DATA0071_PTR
					WHERE     (dbo.DATA0071.INVT_PTR = 37798) 
					) AS tblPreis
					WHERE
							(YEAR(INV_DATE) = tblPruefSpitz.Jahr AND MONTH(INV_DATE) = tblPruefSpitz.Monat) 
							OR
							(YEAR(PO_DATE) = tblPruefSpitz.Jahr AND MONTH(PO_DATE) = tblPruefSpitz.Monat)
			), 0) AS Preisabweichung,
			ISNULL((
					SELECT TOP 1
						SUM(CAST(QUANTITY AS NUMERIC(10, 4))) AS RES

					FROM
					(
					SELECT     
						CASE 
							WHEN ISNULL(dbo.DATA0108.PRICE, 0)>0 THEN
								ISNULL(dbo.DATA0108.QUANTITY, 0)
							ELSE
								ISNULL(dbo.DATA0071.QUAN_ORD, 0)
						END AS QUANTITY,
						CASE 
							WHEN ISNULL(dbo.DATA0108.PRICE, 0)>0 THEN
								ISNULL(dbo.DATA0108.PRICE, 0)
							ELSE
								ISNULL(dbo.DATA0071.PRICE, 0)
						END AS PRICE,
						CASE 
							WHEN ISNULL(dbo.DATA0108.PRICE, 0)>0 THEN
								ISNULL(dbo.DATA0107.EX_RATE, 0)
							ELSE
								ISNULL(dbo.DATA0070.EXCHANGE_RATE, 0)
						END AS EX_RATE,
						dbo.DATA0017.STD_COST,
						dbo.DATA0107.INV_DATE,
						dbo.DATA0070.PO_DATE

					FROM         dbo.DATA0070 INNER JOIN
						  dbo.DATA0071 ON dbo.DATA0070.RKEY = dbo.DATA0071.PO_PTR INNER JOIN
						  dbo.DATA0017 ON dbo.DATA0071.INVT_PTR = dbo.DATA0017.RKEY LEFT OUTER JOIN
						  dbo.DATA0108 INNER JOIN
						  dbo.DATA0107 ON dbo.DATA0108.DATA0107_PTR = dbo.DATA0107.RKEY ON dbo.DATA0071.RKEY = dbo.DATA0108.DATA0071_PTR
					WHERE     (dbo.DATA0071.INVT_PTR = 37798) 
					) AS tblPreis
					WHERE
							(YEAR(INV_DATE) = tblPruefSpitz.Jahr AND MONTH(INV_DATE) = tblPruefSpitz.Monat) 
							OR
							(YEAR(PO_DATE) = tblPruefSpitz.Jahr AND MONTH(PO_DATE) = tblPruefSpitz.Monat)
			), 0) AS EKMenge

		FROM
		(
			SELECT DISTINCT
				YEAR(D95.TRAN_DATE) AS Jahr,
				MONTH(D95.TRAN_DATE) AS Monat
			FROM
				dbo.DATA0095 AS D95
			WHERE
				--YEAR(D95.TRAN_DATE) = YEAR(GETDATE())
				--AND MONTH(D95.TRAN_DATE) < MONTH(GETDATE())
				D95.TRAN_DATE >= CONVERT(DATETIME, @para4, 103) 
				AND D95.TRAN_DATE <= CONVERT(DATETIME, @para5, 103) 
				AND D95.INVT_PTR = 37798
		) AS tblPruefSpitz
	END

	IF @Case_ = 'DatenCuREC'
	BEGIN

		--DECLARE
		--	@para4 varchar(255),
		--	@para5 varchar(255)
		--SET @para4 = '01.01.2015'
		--SET @para5 = '31.03.2015'


		SELECT
			Bezeichnung,
			ISNULL(Cu_ZUm2, 0) AS ZUm2,
			ISNULL(Cu_in_Kg, 0) AS Kg,
			ISNULL(Cu_AnzZU, 0) AS AnzZU
		FROM
		(
			SELECT     TOP 100 PERCENT 
				'0 bis 15 µm' AS Bezeichnung,
				SUM(CASE WHEN dbo.ARTIKELDATEN.CuD_B=0 OR (( CASE WHEN dbo.ARTIKELDATEN.LE>1 THEN 2 ELSE 1 END *dbo.ARTIKELDATEN.ZuX*dbo.ARTIKELDATEN.ZuY/1000000) - (dbo.ARTIKELDATEN.CuFl_L+dbo.ARTIKELDATEN.CuFl_B)/100)/( CASE WHEN dbo.ARTIKELDATEN.LE>1 THEN 2 ELSE 1 END *dbo.ARTIKELDATEN.ZuX*dbo.ARTIKELDATEN.ZuY/1000000) <= 0
								OR (( CASE WHEN dbo.ARTIKELDATEN.LE>1 THEN 2 ELSE 1 END *dbo.ARTIKELDATEN.ZuX*dbo.ARTIKELDATEN.ZuY/1000000) - (dbo.ARTIKELDATEN.CuFl_L+dbo.ARTIKELDATEN.CuFl_B)/100)/( CASE WHEN dbo.ARTIKELDATEN.LE>1 THEN 2 ELSE 1 END *dbo.ARTIKELDATEN.ZuX*dbo.ARTIKELDATEN.ZuY/1000000) >= 1 THEN
						ROUND(
							(( CASE WHEN dbo.ARTIKELDATEN.LE>1 THEN 2 ELSE 1 END *dbo.ARTIKELDATEN.ZuX*dbo.ARTIKELDATEN.ZuY/1000000)*0.6)*dbo.ARTIKELDATEN.CuD_B*8.92/1000*(CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT))
							, 4)
						ELSE
						ROUND(
							(( CASE WHEN dbo.ARTIKELDATEN.LE>1 THEN 2 ELSE 1 END *dbo.ARTIKELDATEN.ZuX*dbo.ARTIKELDATEN.ZuY/1000000)-(dbo.ARTIKELDATEN.CuFl_L+dbo.ARTIKELDATEN.CuFl_B)/100)*dbo.ARTIKELDATEN.CuD_B*8.92/1000*(CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT))
							, 4)
				END) AS Cu_in_Kg,
				SUM(ROUND(
					ISNULL((CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT)*dbo.ARTIKELDATEN.ZuX*dbo.ARTIKELDATEN.ZuY/1000000), 0) 
					, 4)) AS Cu_ZUm2,
				SUM(ROUND(
					ISNULL(CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT), 0) 
					, 4)) AS Cu_AnzZU

				FROM         dbo.DATA0056 WITH (nolock) LEFT OUTER JOIN
									  dbo.DATA0038 ON dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR AND dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER RIGHT OUTER JOIN
									  dbo.ARTIKELDATEN RIGHT OUTER JOIN
									  dbo.DATA0048 WITH (nolock) INNER JOIN
									  dbo.DATA0034 WITH (nolock) ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
									  dbo.DATA0006 WITH (nolock) ON dbo.DATA0048.WO_PTR = dbo.DATA0006.RKEY ON dbo.ARTIKELDATEN.CUST_PART_PTR = dbo.DATA0006.CUST_PART_PTR ON 
									  dbo.DATA0056.RKEY = dbo.DATA0048.TPUT_PTR
				WHERE     
					dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT > 0 
					AND dbo.DATA0038.TTYPE = 2 
					AND (dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103))
					AND (dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103))
					AND dbo.DATA0034.RKEY IN (86, 328, 329, 53, 452) --(dbo.DATA0034.DEPT_CODE LIKE 'ÄTZA%')
					AND dbo.ARTIKELDATEN.CuD_B>0 AND dbo.ARTIKELDATEN.CuD_B<=15

			UNION ALL

			SELECT     TOP 100 PERCENT 
				'16 bis 30 µm' AS Bezeichnung,
				SUM(CASE WHEN dbo.ARTIKELDATEN.CuD_B=0 OR (( CASE WHEN dbo.ARTIKELDATEN.LE>1 THEN 2 ELSE 1 END *dbo.ARTIKELDATEN.ZuX*dbo.ARTIKELDATEN.ZuY/1000000) - (dbo.ARTIKELDATEN.CuFl_L+dbo.ARTIKELDATEN.CuFl_B)/100)/( CASE WHEN dbo.ARTIKELDATEN.LE>1 THEN 2 ELSE 1 END *dbo.ARTIKELDATEN.ZuX*dbo.ARTIKELDATEN.ZuY/1000000) <= 0
								OR (( CASE WHEN dbo.ARTIKELDATEN.LE>1 THEN 2 ELSE 1 END *dbo.ARTIKELDATEN.ZuX*dbo.ARTIKELDATEN.ZuY/1000000) - (dbo.ARTIKELDATEN.CuFl_L+dbo.ARTIKELDATEN.CuFl_B)/100)/( CASE WHEN dbo.ARTIKELDATEN.LE>1 THEN 2 ELSE 1 END *dbo.ARTIKELDATEN.ZuX*dbo.ARTIKELDATEN.ZuY/1000000) >= 1 THEN
						ROUND(
							(( CASE WHEN dbo.ARTIKELDATEN.LE>1 THEN 2 ELSE 1 END *dbo.ARTIKELDATEN.ZuX*dbo.ARTIKELDATEN.ZuY/1000000)*0.6)*dbo.ARTIKELDATEN.CuD_B*8.92/1000*(CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT))
							, 4)
						ELSE
						ROUND(
							(( CASE WHEN dbo.ARTIKELDATEN.LE>1 THEN 2 ELSE 1 END *dbo.ARTIKELDATEN.ZuX*dbo.ARTIKELDATEN.ZuY/1000000)-(dbo.ARTIKELDATEN.CuFl_L+dbo.ARTIKELDATEN.CuFl_B)/100)*dbo.ARTIKELDATEN.CuD_B*8.92/1000*(CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT))
							, 4)
				END) AS Cu_in_Kg,
				SUM(ROUND(
					ISNULL((CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT)*dbo.ARTIKELDATEN.ZuX*dbo.ARTIKELDATEN.ZuY/1000000), 0) 
					, 4)) AS Cu_ZUm2,
				SUM(ROUND(
					ISNULL(CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT), 0) 
					, 4)) AS Cu_AnzZU

				FROM         dbo.DATA0056 WITH (nolock) LEFT OUTER JOIN
									  dbo.DATA0038 ON dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR AND dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER RIGHT OUTER JOIN
									  dbo.ARTIKELDATEN RIGHT OUTER JOIN
									  dbo.DATA0048 WITH (nolock) INNER JOIN
									  dbo.DATA0034 WITH (nolock) ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
									  dbo.DATA0006 WITH (nolock) ON dbo.DATA0048.WO_PTR = dbo.DATA0006.RKEY ON dbo.ARTIKELDATEN.CUST_PART_PTR = dbo.DATA0006.CUST_PART_PTR ON 
									  dbo.DATA0056.RKEY = dbo.DATA0048.TPUT_PTR
				WHERE     
					dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT > 0 
					AND dbo.DATA0038.TTYPE = 2 
					AND (dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103))
					AND (dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103))
					AND dbo.DATA0034.RKEY IN (86, 328, 329, 53, 452) --(dbo.DATA0034.DEPT_CODE LIKE 'ÄTZA%')
					AND dbo.ARTIKELDATEN.CuD_B>15 AND dbo.ARTIKELDATEN.CuD_B<=30

			UNION ALL

			SELECT     TOP 100 PERCENT 
				'31 bis 65 µm' AS Bezeichnung,
				SUM(CASE WHEN dbo.ARTIKELDATEN.CuD_B=0 OR (( CASE WHEN dbo.ARTIKELDATEN.LE>1 THEN 2 ELSE 1 END *dbo.ARTIKELDATEN.ZuX*dbo.ARTIKELDATEN.ZuY/1000000) - (dbo.ARTIKELDATEN.CuFl_L+dbo.ARTIKELDATEN.CuFl_B)/100)/( CASE WHEN dbo.ARTIKELDATEN.LE>1 THEN 2 ELSE 1 END *dbo.ARTIKELDATEN.ZuX*dbo.ARTIKELDATEN.ZuY/1000000) <= 0
								OR (( CASE WHEN dbo.ARTIKELDATEN.LE>1 THEN 2 ELSE 1 END *dbo.ARTIKELDATEN.ZuX*dbo.ARTIKELDATEN.ZuY/1000000) - (dbo.ARTIKELDATEN.CuFl_L+dbo.ARTIKELDATEN.CuFl_B)/100)/( CASE WHEN dbo.ARTIKELDATEN.LE>1 THEN 2 ELSE 1 END *dbo.ARTIKELDATEN.ZuX*dbo.ARTIKELDATEN.ZuY/1000000) >= 1 THEN
						ROUND(
							(( CASE WHEN dbo.ARTIKELDATEN.LE>1 THEN 2 ELSE 1 END *dbo.ARTIKELDATEN.ZuX*dbo.ARTIKELDATEN.ZuY/1000000)*0.6)*dbo.ARTIKELDATEN.CuD_B*8.92/1000*(CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT))
							, 4)
						ELSE
						ROUND(
							(( CASE WHEN dbo.ARTIKELDATEN.LE>1 THEN 2 ELSE 1 END *dbo.ARTIKELDATEN.ZuX*dbo.ARTIKELDATEN.ZuY/1000000)-(dbo.ARTIKELDATEN.CuFl_L+dbo.ARTIKELDATEN.CuFl_B)/100)*dbo.ARTIKELDATEN.CuD_B*8.92/1000*(CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT))
							, 4)
				END) AS Cu_in_Kg,
				SUM(ROUND(
					ISNULL((CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT)*dbo.ARTIKELDATEN.ZuX*dbo.ARTIKELDATEN.ZuY/1000000), 0) 
					, 4)) AS Cu_ZUm2,
				SUM(ROUND(
					ISNULL(CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT), 0) 
					, 4)) AS Cu_AnzZU

				FROM         dbo.DATA0056 WITH (nolock) LEFT OUTER JOIN
									  dbo.DATA0038 ON dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR AND dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER RIGHT OUTER JOIN
									  dbo.ARTIKELDATEN RIGHT OUTER JOIN
									  dbo.DATA0048 WITH (nolock) INNER JOIN
									  dbo.DATA0034 WITH (nolock) ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
									  dbo.DATA0006 WITH (nolock) ON dbo.DATA0048.WO_PTR = dbo.DATA0006.RKEY ON dbo.ARTIKELDATEN.CUST_PART_PTR = dbo.DATA0006.CUST_PART_PTR ON 
									  dbo.DATA0056.RKEY = dbo.DATA0048.TPUT_PTR
				WHERE     
					dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT > 0 
					AND dbo.DATA0038.TTYPE = 2 
					AND (dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103))
					AND (dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103))
					AND dbo.DATA0034.RKEY IN (86, 328, 329, 53, 452) --(dbo.DATA0034.DEPT_CODE LIKE 'ÄTZA%')
					AND dbo.ARTIKELDATEN.CuD_B>30 AND dbo.ARTIKELDATEN.CuD_B<=65

			UNION ALL

			SELECT     TOP 100 PERCENT 
				'66 bis 90 µm' AS Bezeichnung,
				SUM(CASE WHEN dbo.ARTIKELDATEN.CuD_B=0 OR (( CASE WHEN dbo.ARTIKELDATEN.LE>1 THEN 2 ELSE 1 END *dbo.ARTIKELDATEN.ZuX*dbo.ARTIKELDATEN.ZuY/1000000) - (dbo.ARTIKELDATEN.CuFl_L+dbo.ARTIKELDATEN.CuFl_B)/100)/( CASE WHEN dbo.ARTIKELDATEN.LE>1 THEN 2 ELSE 1 END *dbo.ARTIKELDATEN.ZuX*dbo.ARTIKELDATEN.ZuY/1000000) <= 0
								OR (( CASE WHEN dbo.ARTIKELDATEN.LE>1 THEN 2 ELSE 1 END *dbo.ARTIKELDATEN.ZuX*dbo.ARTIKELDATEN.ZuY/1000000) - (dbo.ARTIKELDATEN.CuFl_L+dbo.ARTIKELDATEN.CuFl_B)/100)/( CASE WHEN dbo.ARTIKELDATEN.LE>1 THEN 2 ELSE 1 END *dbo.ARTIKELDATEN.ZuX*dbo.ARTIKELDATEN.ZuY/1000000) >= 1 THEN
						ROUND(
							(( CASE WHEN dbo.ARTIKELDATEN.LE>1 THEN 2 ELSE 1 END *dbo.ARTIKELDATEN.ZuX*dbo.ARTIKELDATEN.ZuY/1000000)*0.6)*dbo.ARTIKELDATEN.CuD_B*8.92/1000*(CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT))
							, 4)
						ELSE
						ROUND(
							(( CASE WHEN dbo.ARTIKELDATEN.LE>1 THEN 2 ELSE 1 END *dbo.ARTIKELDATEN.ZuX*dbo.ARTIKELDATEN.ZuY/1000000)-(dbo.ARTIKELDATEN.CuFl_L+dbo.ARTIKELDATEN.CuFl_B)/100)*dbo.ARTIKELDATEN.CuD_B*8.92/1000*(CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT))
							, 4)
				END) AS Cu_in_Kg,
				SUM(ROUND(
					ISNULL((CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT)*dbo.ARTIKELDATEN.ZuX*dbo.ARTIKELDATEN.ZuY/1000000), 0) 
					, 4)) AS Cu_ZUm2,
				SUM(ROUND(
					ISNULL(CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT), 0) 
					, 4)) AS Cu_AnzZU

				FROM         dbo.DATA0056 WITH (nolock) LEFT OUTER JOIN
									  dbo.DATA0038 ON dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR AND dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER RIGHT OUTER JOIN
									  dbo.ARTIKELDATEN RIGHT OUTER JOIN
									  dbo.DATA0048 WITH (nolock) INNER JOIN
									  dbo.DATA0034 WITH (nolock) ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
									  dbo.DATA0006 WITH (nolock) ON dbo.DATA0048.WO_PTR = dbo.DATA0006.RKEY ON dbo.ARTIKELDATEN.CUST_PART_PTR = dbo.DATA0006.CUST_PART_PTR ON 
									  dbo.DATA0056.RKEY = dbo.DATA0048.TPUT_PTR
				WHERE     
					dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT > 0 
					AND dbo.DATA0038.TTYPE = 2 
					AND (dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103))
					AND (dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103))
					AND dbo.DATA0034.RKEY IN (86, 328, 329, 53, 452) --(dbo.DATA0034.DEPT_CODE LIKE 'ÄTZA%')
					AND dbo.ARTIKELDATEN.CuD_B>65 AND dbo.ARTIKELDATEN.CuD_B<=90

			UNION ALL

			SELECT     TOP 100 PERCENT 
				'91 bis 110 µm' AS Bezeichnung,
				SUM(CASE WHEN dbo.ARTIKELDATEN.CuD_B=0 OR (( CASE WHEN dbo.ARTIKELDATEN.LE>1 THEN 2 ELSE 1 END *dbo.ARTIKELDATEN.ZuX*dbo.ARTIKELDATEN.ZuY/1000000) - (dbo.ARTIKELDATEN.CuFl_L+dbo.ARTIKELDATEN.CuFl_B)/100)/( CASE WHEN dbo.ARTIKELDATEN.LE>1 THEN 2 ELSE 1 END *dbo.ARTIKELDATEN.ZuX*dbo.ARTIKELDATEN.ZuY/1000000) <= 0
								OR (( CASE WHEN dbo.ARTIKELDATEN.LE>1 THEN 2 ELSE 1 END *dbo.ARTIKELDATEN.ZuX*dbo.ARTIKELDATEN.ZuY/1000000) - (dbo.ARTIKELDATEN.CuFl_L+dbo.ARTIKELDATEN.CuFl_B)/100)/( CASE WHEN dbo.ARTIKELDATEN.LE>1 THEN 2 ELSE 1 END *dbo.ARTIKELDATEN.ZuX*dbo.ARTIKELDATEN.ZuY/1000000) >= 1 THEN
						ROUND(
							(( CASE WHEN dbo.ARTIKELDATEN.LE>1 THEN 2 ELSE 1 END *dbo.ARTIKELDATEN.ZuX*dbo.ARTIKELDATEN.ZuY/1000000)*0.6)*dbo.ARTIKELDATEN.CuD_B*8.92/1000*(CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT))
							, 4)
						ELSE
						ROUND(
							(( CASE WHEN dbo.ARTIKELDATEN.LE>1 THEN 2 ELSE 1 END *dbo.ARTIKELDATEN.ZuX*dbo.ARTIKELDATEN.ZuY/1000000)-(dbo.ARTIKELDATEN.CuFl_L+dbo.ARTIKELDATEN.CuFl_B)/100)*dbo.ARTIKELDATEN.CuD_B*8.92/1000*(CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT))
							, 4)
				END) AS Cu_in_Kg,
				SUM(ROUND(
					ISNULL((CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT)*dbo.ARTIKELDATEN.ZuX*dbo.ARTIKELDATEN.ZuY/1000000), 0) 
					, 4)) AS Cu_ZUm2,
				SUM(ROUND(
					ISNULL(CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT), 0) 
					, 4)) AS Cu_AnzZU

				FROM         dbo.DATA0056 WITH (nolock) LEFT OUTER JOIN
									  dbo.DATA0038 ON dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR AND dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER RIGHT OUTER JOIN
									  dbo.ARTIKELDATEN RIGHT OUTER JOIN
									  dbo.DATA0048 WITH (nolock) INNER JOIN
									  dbo.DATA0034 WITH (nolock) ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
									  dbo.DATA0006 WITH (nolock) ON dbo.DATA0048.WO_PTR = dbo.DATA0006.RKEY ON dbo.ARTIKELDATEN.CUST_PART_PTR = dbo.DATA0006.CUST_PART_PTR ON 
									  dbo.DATA0056.RKEY = dbo.DATA0048.TPUT_PTR
				WHERE     
					dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT > 0 
					AND dbo.DATA0038.TTYPE = 2 
					AND (dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103))
					AND (dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103))
					AND dbo.DATA0034.RKEY IN (86, 328, 329, 53, 452) --(dbo.DATA0034.DEPT_CODE LIKE 'ÄTZA%')
					AND dbo.ARTIKELDATEN.CuD_B>90 AND dbo.ARTIKELDATEN.CuD_B<=110

			UNION ALL

			SELECT     TOP 100 PERCENT 
				'> 110 µm' AS Bezeichnung,
				SUM(CASE WHEN dbo.ARTIKELDATEN.CuD_B=0 OR (( CASE WHEN dbo.ARTIKELDATEN.LE>1 THEN 2 ELSE 1 END *dbo.ARTIKELDATEN.ZuX*dbo.ARTIKELDATEN.ZuY/1000000) - (dbo.ARTIKELDATEN.CuFl_L+dbo.ARTIKELDATEN.CuFl_B)/100)/( CASE WHEN dbo.ARTIKELDATEN.LE>1 THEN 2 ELSE 1 END *dbo.ARTIKELDATEN.ZuX*dbo.ARTIKELDATEN.ZuY/1000000) <= 0
								OR (( CASE WHEN dbo.ARTIKELDATEN.LE>1 THEN 2 ELSE 1 END *dbo.ARTIKELDATEN.ZuX*dbo.ARTIKELDATEN.ZuY/1000000) - (dbo.ARTIKELDATEN.CuFl_L+dbo.ARTIKELDATEN.CuFl_B)/100)/( CASE WHEN dbo.ARTIKELDATEN.LE>1 THEN 2 ELSE 1 END *dbo.ARTIKELDATEN.ZuX*dbo.ARTIKELDATEN.ZuY/1000000) >= 1 THEN
						ROUND(
							(( CASE WHEN dbo.ARTIKELDATEN.LE>1 THEN 2 ELSE 1 END *dbo.ARTIKELDATEN.ZuX*dbo.ARTIKELDATEN.ZuY/1000000)*0.6)*dbo.ARTIKELDATEN.CuD_B*8.92/1000*(CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT))
							, 4)
						ELSE
						ROUND(
							(( CASE WHEN dbo.ARTIKELDATEN.LE>1 THEN 2 ELSE 1 END *dbo.ARTIKELDATEN.ZuX*dbo.ARTIKELDATEN.ZuY/1000000)-(dbo.ARTIKELDATEN.CuFl_L+dbo.ARTIKELDATEN.CuFl_B)/100)*dbo.ARTIKELDATEN.CuD_B*8.92/1000*(CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT))
							, 4)
				END) AS Cu_in_Kg,
				SUM(ROUND(
					ISNULL((CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT)*dbo.ARTIKELDATEN.ZuX*dbo.ARTIKELDATEN.ZuY/1000000), 0) 
					, 4)) AS Cu_ZUm2,
				SUM(ROUND(
					ISNULL(CAST(CAST(dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT AS FLOAT) / dbo.ARTIKELDATEN.ELP_Zu + 0.9999 AS INT), 0) 
					, 4)) AS Cu_AnzZU

				FROM         dbo.DATA0056 WITH (nolock) LEFT OUTER JOIN
									  dbo.DATA0038 ON dbo.DATA0056.WO_PTR = dbo.DATA0038.SOURCE_PTR AND dbo.DATA0056.STEP = dbo.DATA0038.STEP_NUMBER RIGHT OUTER JOIN
									  dbo.ARTIKELDATEN RIGHT OUTER JOIN
									  dbo.DATA0048 WITH (nolock) INNER JOIN
									  dbo.DATA0034 WITH (nolock) ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
									  dbo.DATA0006 WITH (nolock) ON dbo.DATA0048.WO_PTR = dbo.DATA0006.RKEY ON dbo.ARTIKELDATEN.CUST_PART_PTR = dbo.DATA0006.CUST_PART_PTR ON 
									  dbo.DATA0056.RKEY = dbo.DATA0048.TPUT_PTR
				WHERE     
					dbo.DATA0048.QTY_PROD + dbo.DATA0048.QTY_REJECT > 0 
					AND dbo.DATA0038.TTYPE = 2 
					AND (dbo.DATA0048.TDATE >= CONVERT(DATETIME, @para4, 103))
					AND (dbo.DATA0048.TDATE <= CONVERT(DATETIME, @para5, 103))
					AND dbo.DATA0034.RKEY IN (86, 328, 329, 53, 452) --(dbo.DATA0034.DEPT_CODE LIKE 'ÄTZA%')
					AND dbo.ARTIKELDATEN.CuD_B>110 
			) AS tblCuRecDaten
	END

	IF @Case_ = 'Matverbrauch_EP_Jahr'
	BEGIN

		--DECLARE 
		--@para1 varchar(255),
		--@para2 varchar(255),
		--@para4 varchar(255),
		--@para5 varchar(255)
		--SET @para1 = 'SES Festresist-Stripper' 
		--SET @para2 = 'BLHO-01-01' 
		--SET @para4 = '01.01.2015' 
		--SET @para5 = '30.04.2015' 

		SELECT
			--CAST('01.' + STR(Monat) + '.' + STR(Jahr) AS DATETIME) AS Datum,
			Jahr,
			--Monat,

			ISNULL((
				SELECT TOP 1
					SUM(ISNULL(DATA0095.QUANTITY, 0)) AS RES
				FROM 
					dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
				WHERE dbo.DATA0095.TRAN_TP IN (15, 16) AND dbo.DATA0034.DEPT_CODE = 'EPFI-01-03'
					AND YEAR(dbo.DATA0095.TRAN_DATE) =  tblPruefSpitz.Jahr
					--AND MONTH(dbo.DATA0095.TRAN_DATE) =  tblPruefSpitz.Monat
					AND dbo.DATA0095.INVT_PTR = 37798 --Prüfspitzen
	
			), 0) AS Verbrauch_Ult1,
			ISNULL((
				SELECT TOP 1
					SUM(ISNULL(DATA0095.QUANTITY, 0)) AS RES
				FROM 
					dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
				WHERE dbo.DATA0095.TRAN_TP IN (15, 16) AND dbo.DATA0034.DEPT_CODE = 'EPFI-01-04'
					AND YEAR(dbo.DATA0095.TRAN_DATE) =  tblPruefSpitz.Jahr
					--AND MONTH(dbo.DATA0095.TRAN_DATE) =  tblPruefSpitz.Monat
					AND dbo.DATA0095.INVT_PTR = 37798 --Prüfspitzen
	
			), 0) AS Verbrauch_Ult2,
			ISNULL((
				SELECT TOP 1
					SUM(ISNULL(DATA0095.QUANTITY, 0)) AS RES
				FROM 
					dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
				WHERE dbo.DATA0095.TRAN_TP IN (15, 16) AND dbo.DATA0034.DEPT_CODE = 'EPFI-01-01'
					AND YEAR(dbo.DATA0095.TRAN_DATE) =  tblPruefSpitz.Jahr
					--AND MONTH(dbo.DATA0095.TRAN_DATE) =  tblPruefSpitz.Monat
					AND dbo.DATA0095.INVT_PTR = 37798 --Prüfspitzen
	
			), 0) AS Verbrauch_Loc8,
			ISNULL((
				SELECT TOP 1
					ISNULL((
						(-1)*SUM(QUANTITY) 
						*
						ISNULL((
							SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
							FROM LIVE2.dbo.NachKalk_MatVerteilung
							WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = 53 --FT Ultim8-1
									AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = 37798
						), 1) 
					), 0) AS RES 

				FROM 
					dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
				WHERE 
					dbo.DATA0095.TRAN_TP = 23
					AND YEAR(dbo.DATA0095.TRAN_DATE) =  Jahr
					--AND MONTH(dbo.DATA0095.TRAN_DATE) =  Monat
					AND dbo.DATA0095.INVT_PTR = 37798
			), 0) AS Inventur_Ult1,
			ISNULL((
				SELECT TOP 1
					ISNULL((
						(-1)*SUM(QUANTITY) 
						*
						ISNULL((
							SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
							FROM LIVE2.dbo.NachKalk_MatVerteilung
							WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = 54 --FT Ultim8-2
									AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = 37798
						), 1) 
					), 0) AS RES 

				FROM 
					dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
				WHERE 
					dbo.DATA0095.TRAN_TP = 23
					AND YEAR(dbo.DATA0095.TRAN_DATE) =  Jahr
					--AND MONTH(dbo.DATA0095.TRAN_DATE) =  Monat
					AND dbo.DATA0095.INVT_PTR = 37798
			), 0) AS Inventur_Ult2,
			ISNULL((
				SELECT TOP 1
					ISNULL((
						(-1)*SUM(QUANTITY) 
						*
						ISNULL((
							SELECT TOP 1 CAST(LIVE2.dbo.NachKalk_MatVerteilung.Verteilung_Prozent AS NUMERIC(10, 4))/100
							FROM LIVE2.dbo.NachKalk_MatVerteilung
							WHERE LIVE2.dbo.NachKalk_MatVerteilung.Anlage_PTR = 55 --FT Loc8 Light
									AND LIVE2.dbo.NachKalk_MatVerteilung.D17_PTR = 37798
						), 1) 
					), 0) AS RES 

				FROM 
					dbo.DATA0095 LEFT OUTER JOIN dbo.DATA0034 ON dbo.DATA0095.SRCE_PTR = dbo.DATA0034.RKEY
				WHERE 
					dbo.DATA0095.TRAN_TP = 23
					AND YEAR(dbo.DATA0095.TRAN_DATE) =  Jahr
					--AND MONTH(dbo.DATA0095.TRAN_DATE) =  Monat
					AND dbo.DATA0095.INVT_PTR = 37798
			), 0) AS Inventur_Loc8,
			ISNULL((SELECT TOP 1 STD_COST FROM dbo.DATA0017 WHERE RKEY=37798), 0) AS VerrPreis,

			ISNULL((
					SELECT TOP 1
						--SUM(CAST(QUANTITY AS NUMERIC(10, 4)) * CAST(PRICE AS NUMERIC(10, 4)) / CAST(EX_RATE AS NUMERIC(10, 4))) / SUM(CAST(QUANTITY AS NUMERIC(10, 4))) AS DMon_Preis
						(
							SUM(CAST(QUANTITY AS NUMERIC(10, 4)) * CAST(PRICE AS NUMERIC(10, 4)) / CAST(EX_RATE AS NUMERIC(10, 4)))
							-
							SUM(CAST(QUANTITY AS NUMERIC(10, 4)) * CAST(STD_COST AS NUMERIC(10, 4)))
						) AS RES
					FROM
					(
					SELECT     
						CASE 
							WHEN ISNULL(dbo.DATA0108.PRICE, 0)>0 THEN
								ISNULL(dbo.DATA0108.QUANTITY, 0)
							ELSE
								ISNULL(dbo.DATA0071.QUAN_ORD, 0)
						END AS QUANTITY,
						CASE 
							WHEN ISNULL(dbo.DATA0108.PRICE, 0)>0 THEN
								ISNULL(dbo.DATA0108.PRICE, 0)
							ELSE
								ISNULL(dbo.DATA0071.PRICE, 0)
						END AS PRICE,
						CASE 
							WHEN ISNULL(dbo.DATA0108.PRICE, 0)>0 THEN
								ISNULL(dbo.DATA0107.EX_RATE, 0)
							ELSE
								ISNULL(dbo.DATA0070.EXCHANGE_RATE, 0)
						END AS EX_RATE,
						dbo.DATA0017.STD_COST,
						dbo.DATA0107.INV_DATE,
						dbo.DATA0070.PO_DATE

					FROM         dbo.DATA0070 INNER JOIN
						  dbo.DATA0071 ON dbo.DATA0070.RKEY = dbo.DATA0071.PO_PTR INNER JOIN
						  dbo.DATA0017 ON dbo.DATA0071.INVT_PTR = dbo.DATA0017.RKEY LEFT OUTER JOIN
						  dbo.DATA0108 INNER JOIN
						  dbo.DATA0107 ON dbo.DATA0108.DATA0107_PTR = dbo.DATA0107.RKEY ON dbo.DATA0071.RKEY = dbo.DATA0108.DATA0071_PTR					WHERE     (dbo.DATA0071.INVT_PTR = 37798) 
					) AS tblPreis
					WHERE
							(YEAR(INV_DATE) = tblPruefSpitz.Jahr) 
							OR
							(YEAR(PO_DATE) = tblPruefSpitz.Jahr)
			), 0) AS Preisabweichung,
			ISNULL((
					SELECT TOP 1
						SUM(CAST(QUANTITY AS NUMERIC(10, 4))) AS RES
					FROM
					(
					SELECT     
						CASE 
							WHEN ISNULL(dbo.DATA0108.PRICE, 0)>0 THEN
								ISNULL(dbo.DATA0108.QUANTITY, 0)
							ELSE
								ISNULL(dbo.DATA0071.QUAN_ORD, 0)
						END AS QUANTITY,
						CASE 
							WHEN ISNULL(dbo.DATA0108.PRICE, 0)>0 THEN
								ISNULL(dbo.DATA0108.PRICE, 0)
							ELSE
								ISNULL(dbo.DATA0071.PRICE, 0)
						END AS PRICE,
						CASE 
							WHEN ISNULL(dbo.DATA0108.PRICE, 0)>0 THEN
								ISNULL(dbo.DATA0107.EX_RATE, 0)
							ELSE
								ISNULL(dbo.DATA0070.EXCHANGE_RATE, 0)
						END AS EX_RATE,
						dbo.DATA0017.STD_COST,
						dbo.DATA0107.INV_DATE,
						dbo.DATA0070.PO_DATE

					FROM         dbo.DATA0070 INNER JOIN
						  dbo.DATA0071 ON dbo.DATA0070.RKEY = dbo.DATA0071.PO_PTR INNER JOIN
						  dbo.DATA0017 ON dbo.DATA0071.INVT_PTR = dbo.DATA0017.RKEY LEFT OUTER JOIN
						  dbo.DATA0108 INNER JOIN
						  dbo.DATA0107 ON dbo.DATA0108.DATA0107_PTR = dbo.DATA0107.RKEY ON dbo.DATA0071.RKEY = dbo.DATA0108.DATA0071_PTR					WHERE     (dbo.DATA0071.INVT_PTR = 37798) 
					) AS tblPreis
					WHERE
							(YEAR(INV_DATE) = tblPruefSpitz.Jahr) 
							OR
							(YEAR(PO_DATE) = tblPruefSpitz.Jahr)
			), 0) AS EKMenge

		FROM
		(
			SELECT DISTINCT
				YEAR(D95.TRAN_DATE) AS Jahr
				--MONTH(D95.TRAN_DATE) AS Monat
			FROM
				dbo.DATA0095 AS D95
			WHERE
				YEAR(D95.TRAN_DATE) > 2012
				--AND MONTH(D95.TRAN_DATE) < MONTH(GETDATE())
				AND D95.INVT_PTR = 37798
		) AS tblPruefSpitz
	END

	IF @Case_ = 'Matverbrauch_AVCAM_Wiederholer'
	BEGIN
		--DECLARE
		--	@p_para1 varchar(255)
		--SET @p_para1 = 2016

		DECLARE @tblCAMDNC table(FA varchar(16))
		INSERT @tblCAMDNC(FA) 
		SELECT DISTINCT
			FA
		FROM
		(
			SELECT 
				'  -' + BASE_WO + '-01-000' AS FA
			FROM         dbo.DATA0006 INNER JOIN
								dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
								dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
								dbo.DATA0050 ON dbo.DATA0006.CUST_PART_PTR = dbo.DATA0050.RKEY
				WHERE   
						--dbo.DATA0048.TDATE >= CONVERT(DATETIME, '01.01.2015', 103) 
						--AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, '31.12.2015', 103) 
						YEAR(dbo.DATA0048.TDATE) = CAST(@p_para1 AS INT)
						AND DATA0006.ROOT_PTR=0
						AND LEFT(dbo.DATA0034.DEPT_CODE, 3) ='CAM'
						AND SUBSTRING(dbo.DATA0006.WORK_ORDER_NUMBER, 11, 2) = '01'
						AND LEFT(dbo.DATA0006.WORK_ORDER_NUMBER, 2) = '  '
			UNION ALL

			SELECT 
				'  -' + BASE_WO + '-01-000' AS FA
			FROM         dbo.DATA0006 INNER JOIN
								dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
								dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
								dbo.DATA0050 ON dbo.DATA0006.CUST_PART_PTR = dbo.DATA0050.RKEY
				WHERE   
						--dbo.DATA0048.TDATE >= CONVERT(DATETIME, '01.01.2015', 103) 
						--AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, '31.12.2015', 103) 
						YEAR(dbo.DATA0048.TDATE) = CAST(@p_para1 AS INT)
						AND DATA0006.ROOT_PTR=0
						AND LEFT(dbo.DATA0034.DEPT_CODE, 3) ='DNC'
						AND SUBSTRING(dbo.DATA0006.WORK_ORDER_NUMBER, 11, 2) = '01'
						AND LEFT(dbo.DATA0006.WORK_ORDER_NUMBER, 2) = '  '
		) AS tblCAMDNC

		DECLARE @tblCAMDNC_VJ table(FA varchar(16))
		INSERT @tblCAMDNC_VJ(FA) 
		SELECT DISTINCT
			FA
		FROM
		(
			SELECT 
				'  -' + BASE_WO + '-01-000' AS FA
			FROM         dbo.DATA0006 INNER JOIN
								dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
								dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
								dbo.DATA0050 ON dbo.DATA0006.CUST_PART_PTR = dbo.DATA0050.RKEY
				WHERE   
						--dbo.DATA0048.TDATE >= CONVERT(DATETIME, '01.01.2015', 103) 
						--AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, '31.12.2015', 103) 
						YEAR(dbo.DATA0048.TDATE) = CAST(@p_para1 AS INT)-1
						AND DATA0006.ROOT_PTR=0
						AND LEFT(dbo.DATA0034.DEPT_CODE, 3) ='CAM'
						AND SUBSTRING(dbo.DATA0006.WORK_ORDER_NUMBER, 11, 2) = '01'
						AND LEFT(dbo.DATA0006.WORK_ORDER_NUMBER, 2) = '  '
			UNION ALL

			SELECT 
				'  -' + BASE_WO + '-01-000' AS FA
			FROM         dbo.DATA0006 INNER JOIN
								dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
								dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
								dbo.DATA0050 ON dbo.DATA0006.CUST_PART_PTR = dbo.DATA0050.RKEY
				WHERE   
						--dbo.DATA0048.TDATE >= CONVERT(DATETIME, '01.01.2015', 103) 
						--AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, '31.12.2015', 103) 
						YEAR(dbo.DATA0048.TDATE) = CAST(@p_para1 AS INT)-1
						AND DATA0006.ROOT_PTR=0
						AND LEFT(dbo.DATA0034.DEPT_CODE, 3) ='DNC'
						AND SUBSTRING(dbo.DATA0006.WORK_ORDER_NUMBER, 11, 2) = '01'
						AND LEFT(dbo.DATA0006.WORK_ORDER_NUMBER, 2) = '  '
		) AS tblCAMDNC_VJ


		SELECT DISTINCT
			0 AS Monat,
			COUNT(DISTINCT '  -' + BASE_WO + '-01-000') AS AnzFA
		FROM         dbo.DATA0006 INNER JOIN
						  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
						  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
						  dbo.DATA0050 ON dbo.DATA0006.CUST_PART_PTR = dbo.DATA0050.RKEY
		WHERE   
					--dbo.DATA0048.TDATE >= CONVERT(DATETIME, '01.01.2015', 103) 
					--AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, '31.12.2015', 103) 
					YEAR(dbo.DATA0048.TDATE) = CAST(@p_para1 AS INT)-1
					AND DATA0006.ROOT_PTR=0
					AND LEFT(dbo.DATA0050.CP_REV, 1) <> '3'
					--AND LEFT(dbo.DATA0034.DEPT_CODE, 3) IN ('CAM', 'DNC')
					AND '  -' + BASE_WO + '-01-000' COLLATE Latin1_General_CI_AI NOT IN (SELECT FA FROM @tblCAMDNC_VJ)

		UNION ALL

		SELECT DISTINCT
			MONTH(dbo.DATA0048.TDATE) AS Monat,
			COUNT(DISTINCT '  -' + BASE_WO + '-01-000') AS AnzFA
		FROM         dbo.DATA0006 INNER JOIN
						  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
						  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
						  dbo.DATA0050 ON dbo.DATA0006.CUST_PART_PTR = dbo.DATA0050.RKEY
		WHERE   
					--dbo.DATA0048.TDATE >= CONVERT(DATETIME, '01.01.2015', 103) 
					--AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, '31.12.2015', 103) 
					YEAR(dbo.DATA0048.TDATE) = CAST(@p_para1 AS INT)
					AND DATA0006.ROOT_PTR=0
					AND LEFT(dbo.DATA0050.CP_REV, 1) <> '3'
					--AND LEFT(dbo.DATA0034.DEPT_CODE, 3) IN ('CAM', 'DNC')
					AND '  -' + BASE_WO + '-01-000' COLLATE Latin1_General_CI_AI NOT IN (SELECT FA FROM @tblCAMDNC)
		GROUP BY
			MONTH(dbo.DATA0048.TDATE)

	END

	IF @Case_ = 'Matverbrauch_AVCAM_Neu'
	BEGIN
		SELECT 
			0 AS Monat,
			COUNT(FA) as AnzFA
		FROM
		(
			SELECT DISTINCT
				MONTH(dbo.DATA0048.TDATE) AS Monat,
				'  -' + BASE_WO + '-01-000' AS FA
			FROM         dbo.DATA0006 INNER JOIN
							  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
							  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
							  dbo.DATA0050 ON dbo.DATA0006.CUST_PART_PTR = dbo.DATA0050.RKEY
			WHERE   
						--dbo.DATA0048.TDATE >= CONVERT(DATETIME, '01.01.2015', 103) 
						--AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, '31.12.2015', 103) 
						YEAR(dbo.DATA0048.TDATE) = CAST(@p_para1 AS INT)-1
						AND DATA0006.ROOT_PTR=0
						AND LEFT(dbo.DATA0034.DEPT_CODE, 3) ='DNC'
						AND SUBSTRING(dbo.DATA0006.WORK_ORDER_NUMBER, 11, 2) = '01'
						AND LEFT(dbo.DATA0006.WORK_ORDER_NUMBER, 2) = '  '
		) as tblNeu

		UNION ALL

		SELECT 
			Monat,
			COUNT(FA) as AnzFA
		FROM
		(
			SELECT DISTINCT
				MONTH(dbo.DATA0048.TDATE) AS Monat,
				'  -' + BASE_WO + '-01-000' AS FA
			FROM         dbo.DATA0006 INNER JOIN
							  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
							  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
							  dbo.DATA0050 ON dbo.DATA0006.CUST_PART_PTR = dbo.DATA0050.RKEY
			WHERE   
						--dbo.DATA0048.TDATE >= CONVERT(DATETIME, '01.01.2015', 103) 
						--AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, '31.12.2015', 103) 
						YEAR(dbo.DATA0048.TDATE) = CAST(@p_para1 AS INT)
						AND DATA0006.ROOT_PTR=0
						AND LEFT(dbo.DATA0034.DEPT_CODE, 3) ='DNC'
						AND SUBSTRING(dbo.DATA0006.WORK_ORDER_NUMBER, 11, 2) = '01'
						AND LEFT(dbo.DATA0006.WORK_ORDER_NUMBER, 2) = '  '
		) as tblNeu
		GROUP BY
			Monat
	END

	IF @Case_ = 'Matverbrauch_AVCAM_Aenderung'
	BEGIN
		SELECT 
			0 AS Monat,
			COUNT(DISTINCT FA) as AnzFA
		FROM
		(
			SELECT DISTINCT
				'  -' + BASE_WO + '-01-000' AS FA
			FROM         dbo.DATA0006 INNER JOIN
							  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
							  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
							  dbo.DATA0050 ON dbo.DATA0006.CUST_PART_PTR = dbo.DATA0050.RKEY
			WHERE   
						--dbo.DATA0048.TDATE >= CONVERT(DATETIME, '01.01.2015', 103) 
						--AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, '31.12.2015', 103) 
						YEAR(dbo.DATA0048.TDATE) = CAST(@p_para1 AS INT)-1
						AND DATA0006.ROOT_PTR=0
						AND LEFT(dbo.DATA0034.DEPT_CODE, 3) IN ('CAM', 'DNC')
						AND SUBSTRING(dbo.DATA0006.WORK_ORDER_NUMBER, 11, 2) = '01'
						AND LEFT(dbo.DATA0006.WORK_ORDER_NUMBER, 2) = '  '
		) as tblAend
		WHERE
		FA NOT IN (
			SELECT DISTINCT
				'  -' + BASE_WO + '-01-000' AS FA
		FROM         dbo.DATA0006 INNER JOIN
							  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
							  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
							  dbo.DATA0050 ON dbo.DATA0006.CUST_PART_PTR = dbo.DATA0050.RKEY
				WHERE   
						--dbo.DATA0048.TDATE >= CONVERT(DATETIME, '01.01.2015', 103) 
						--AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, '31.12.2015', 103) 
						YEAR(dbo.DATA0048.TDATE) = CAST(@p_para1 AS INT)-1
						AND DATA0006.ROOT_PTR=0
						AND LEFT(dbo.DATA0034.DEPT_CODE, 3) ='DNC'
						AND SUBSTRING(dbo.DATA0006.WORK_ORDER_NUMBER, 11, 2) = '01'
						AND LEFT(dbo.DATA0006.WORK_ORDER_NUMBER, 2) = '  '
		)

		UNION ALL

		SELECT 
			Monat,
			COUNT(DISTINCT FA) as AnzFA
		FROM
		(
			SELECT DISTINCT
				MONTH(dbo.DATA0048.TDATE) AS Monat,
				'  -' + BASE_WO + '-01-000' AS FA
			FROM         dbo.DATA0006 INNER JOIN
							  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
							  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
							  dbo.DATA0050 ON dbo.DATA0006.CUST_PART_PTR = dbo.DATA0050.RKEY
			WHERE   
						--dbo.DATA0048.TDATE >= CONVERT(DATETIME, '01.01.2015', 103) 
						--AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, '31.12.2015', 103) 
						YEAR(dbo.DATA0048.TDATE) = CAST(@p_para1 AS INT)
						AND DATA0006.ROOT_PTR=0
						AND LEFT(dbo.DATA0034.DEPT_CODE, 3) IN ('CAM', 'DNC')
						AND SUBSTRING(dbo.DATA0006.WORK_ORDER_NUMBER, 11, 2) = '01'
						AND LEFT(dbo.DATA0006.WORK_ORDER_NUMBER, 2) = '  '
		) as tblAend
		WHERE
		FA NOT IN (
			SELECT DISTINCT
				'  -' + BASE_WO + '-01-000' AS FA
		FROM         dbo.DATA0006 INNER JOIN
							  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
							  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
							  dbo.DATA0050 ON dbo.DATA0006.CUST_PART_PTR = dbo.DATA0050.RKEY
				WHERE   
						--dbo.DATA0048.TDATE >= CONVERT(DATETIME, '01.01.2015', 103) 
						--AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, '31.12.2015', 103) 
						YEAR(dbo.DATA0048.TDATE) = CAST(@p_para1 AS INT)
						AND DATA0006.ROOT_PTR=0
						AND LEFT(dbo.DATA0034.DEPT_CODE, 3) ='DNC'
						AND SUBSTRING(dbo.DATA0006.WORK_ORDER_NUMBER, 11, 2) = '01'
						AND LEFT(dbo.DATA0006.WORK_ORDER_NUMBER, 2) = '  '
		)
		GROUP BY
			Monat
	END

	IF @Case_ = 'Matverbrauch_AVCAM_AnzLagen'
	BEGIN
		--DECLARE
		--	@p_para1 varchar(255)
		--SET @p_para1 = 2016

		SELECT
			Monat,
			SUM(RES) AS AnzLE
		FROM
		(	
			SELECT 
				Monat,
				SUM(LE) as RES
			FROM
			(
				SELECT DISTINCT
					MONTH(dbo.DATA0048.TDATE) AS Monat,
					--'  -' + BASE_WO + '-01-000' AS FA,
					dbo.DATA0006.WORK_ORDER_NUMBER AS FA,
					dbo.ARTIKELDATEN.LE
				FROM         dbo.DATA0006 INNER JOIN
								  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
								  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
								  dbo.DATA0050 ON dbo.DATA0006.CUST_PART_PTR = dbo.DATA0050.RKEY INNER JOIN
								  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
				WHERE   
						--dbo.DATA0048.TDATE >= CONVERT(DATETIME, @DatumVon, 103) 
						--AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @DatumBis, 103) 
						YEAR(dbo.DATA0048.TDATE) = CAST(@p_para1 AS INT)
						AND DATA0006.ROOT_PTR=0
						AND LEFT(dbo.DATA0034.DEPT_CODE, 3) ='DNC'
						AND SUBSTRING(dbo.DATA0006.WORK_ORDER_NUMBER, 11, 2) = '01'
						AND LEFT(dbo.DATA0006.WORK_ORDER_NUMBER, 2) = '  '
			) as tblAend
			GROUP BY
				Monat

			UNION ALL

			SELECT 
				Monat,
				SUM(LE) as RES
			FROM
			(
				SELECT DISTINCT
					MONTH(dbo.DATA0048.TDATE) AS Monat,
					--'  -' + BASE_WO + '-01-000' AS FA, 
					dbo.DATA0006.WORK_ORDER_NUMBER AS FA,
					dbo.ARTIKELDATEN.LE
			FROM         dbo.DATA0006 INNER JOIN
								  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
								  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
								  dbo.DATA0050 ON dbo.DATA0006.CUST_PART_PTR = dbo.DATA0050.RKEY INNER JOIN
								  dbo.ARTIKELDATEN ON dbo.DATA0006.CUST_PART_PTR = dbo.ARTIKELDATEN.CUST_PART_PTR
				WHERE   
							--dbo.DATA0048.TDATE >= CONVERT(DATETIME, @DatumVon, 103) 
							--AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @DatumBis, 103) 
							YEAR(dbo.DATA0048.TDATE) = CAST(@p_para1 AS INT)
							AND DATA0006.ROOT_PTR=0
							AND LEFT(dbo.DATA0034.DEPT_CODE, 3) IN ('CAM', 'DNC')
							AND SUBSTRING(dbo.DATA0006.WORK_ORDER_NUMBER, 11, 2) = '01'
							AND LEFT(dbo.DATA0006.WORK_ORDER_NUMBER, 2) = '  '
			) as tblAend
			WHERE
				FA NOT IN (
						SELECT DISTINCT
						--'  -' + BASE_WO + '-01-000' AS FA
							dbo.DATA0006.WORK_ORDER_NUMBER
						FROM         dbo.DATA0006 INNER JOIN
									  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
									  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
									  dbo.DATA0050 ON dbo.DATA0006.CUST_PART_PTR = dbo.DATA0050.RKEY
						WHERE   
								--dbo.DATA0048.TDATE >= CONVERT(DATETIME, @DatumVon, 103) 
								--AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, @DatumBis, 103) 
								YEAR(dbo.DATA0048.TDATE) = CAST(@p_para1 AS INT)
								AND DATA0006.ROOT_PTR=0
								AND LEFT(dbo.DATA0034.DEPT_CODE, 3) ='DNC'
								AND SUBSTRING(dbo.DATA0006.WORK_ORDER_NUMBER, 11, 2) = '01'
								AND LEFT(dbo.DATA0006.WORK_ORDER_NUMBER, 2) = '  '
						)
			GROUP BY
				Monat
		) AS tblSumLagen	
		GROUP BY
			Monat
	END

	IF @Case_ = 'Matverbrauch_AVCAM_Handel'
	BEGIN
		SELECT 
			0 AS Monat,
			COUNT(DISTINCT FA) as AnzFA
		FROM
		(
			SELECT DISTINCT
				--MONTH(dbo.DATA0048.TDATE) AS Monat,
				'  -' + BASE_WO + '-01-000' AS FA
				--left(cp_rev, 1) AS AendSt
			FROM         dbo.DATA0006 INNER JOIN
							  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
							  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
							  dbo.DATA0050 ON dbo.DATA0006.CUST_PART_PTR = dbo.DATA0050.RKEY
			WHERE   
						--dbo.DATA0048.TDATE >= CONVERT(DATETIME, '01.01.2015', 103) 
						--AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, '31.12.2015', 103) 
						YEAR(dbo.DATA0048.TDATE) = CAST(@p_para1 AS INT)-1
						AND DATA0006.ROOT_PTR=0
						--AND LEFT(dbo.DATA0034.DEPT_CODE, 3) IN ('CAM', 'DNC')
						AND LEFT(dbo.DATA0050.CP_REV, 1)='3'
						AND SUBSTRING(dbo.DATA0006.WORK_ORDER_NUMBER, 11, 2) = '01'
						AND LEFT(dbo.DATA0006.WORK_ORDER_NUMBER, 2) = '  '
		) as tblHandel

		UNION ALL

		SELECT 
			Monat,
			COUNT(DISTINCT FA) as AnzFA
		FROM
		(
			SELECT DISTINCT
				MONTH(dbo.DATA0048.TDATE) AS Monat,
				'  -' + BASE_WO + '-01-000' AS FA
				--left(cp_rev, 1) AS AendSt
			FROM         dbo.DATA0006 INNER JOIN
							  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
							  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
							  dbo.DATA0050 ON dbo.DATA0006.CUST_PART_PTR = dbo.DATA0050.RKEY
			WHERE   
						--dbo.DATA0048.TDATE >= CONVERT(DATETIME, '01.01.2015', 103) 
						--AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, '31.12.2015', 103) 
						YEAR(dbo.DATA0048.TDATE) = CAST(@p_para1 AS INT)
						AND DATA0006.ROOT_PTR=0
						--AND LEFT(dbo.DATA0034.DEPT_CODE, 3) IN ('CAM', 'DNC')
						AND LEFT(dbo.DATA0050.CP_REV, 1)='3'
						AND SUBSTRING(dbo.DATA0006.WORK_ORDER_NUMBER, 11, 2) = '01'
						AND LEFT(dbo.DATA0006.WORK_ORDER_NUMBER, 2) = '  '
		) as tblHandel
		GROUP BY
			Monat
	END

	IF @Case_ = 'Matverbrauch_AVCAM_S_R_M_Inhouse'
	BEGIN
		SELECT
			CASE WHEN FAArt=' ' THEN ' Ur-FA' ELSE FAArt END AS FAArt,
			CASE WHEN S_R_M='  ' THEN ' Ur-FA' ELSE S_R_M END AS S_R_M,
			COUNT(FA) as Anz_FA
		FROM
		(
			SELECT DISTINCT
				--'  -' + BASE_WO + '-01-000' AS FA
				LEFT(dbo.DATA0006.WORK_ORDER_NUMBER, 2) AS S_R_M,
				LEFT(dbo.DATA0006.WORK_ORDER_NUMBER, 9) AS FA,
				LEFT(dbo.DATA0006.WORK_ORDER_NUMBER, 1) AS FAArt
		FROM         dbo.DATA0006 INNER JOIN
							  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
							  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
							  dbo.DATA0050 ON dbo.DATA0006.CUST_PART_PTR = dbo.DATA0050.RKEY
				WHERE   
						--dbo.DATA0048.TDATE >= CONVERT(DATETIME, '01.01.2015', 103) 
						--AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, '31.12.2015', 103) 
						YEAR(dbo.DATA0048.TDATE) = CAST(@p_para1 AS INT)
						AND DATA0006.ROOT_PTR=0
						--AND LEFT(dbo.DATA0034.DEPT_CODE, 3) ='DNC'
						AND data0006.ROOT_PTR=0
						AND LEFT(dbo.DATA0050.CP_REV, 1) <> '3'
						--AND LEFT(dbo.DATA0006.WORK_ORDER_NUMBER, 3)<>'  -'
						AND LEFT(dbo.DATA0006.WORK_ORDER_NUMBER, 1)<>'T'
						AND SUBSTRING(dbo.DATA0006.WORK_ORDER_NUMBER, 11, 2) = '01'
						--AND LEFT(dbo.DATA0006.WORK_ORDER_NUMBER, 2) = '  '
		) as tblAend
		GROUP BY
			FAArt,
			S_R_M
		ORDER BY
			FAArt
	END

	IF @Case_ = 'Matverbrauch_AVCAM_S_R_M_Handel'
	BEGIN
		SELECT
			CASE WHEN FAArt=' ' THEN ' Ur-FA' ELSE FAArt END AS FAArt,
			CASE WHEN S_R_M='  ' THEN ' Ur-FA' ELSE S_R_M END AS S_R_M,
			COUNT(FA) as Anz_FA
		FROM
		(
			SELECT DISTINCT
				--'  -' + BASE_WO + '-01-000' AS FA
				LEFT(dbo.DATA0006.WORK_ORDER_NUMBER, 2) AS S_R_M,
				LEFT(dbo.DATA0006.WORK_ORDER_NUMBER, 9) AS FA,
				LEFT(dbo.DATA0006.WORK_ORDER_NUMBER, 1) AS FAArt
		FROM         dbo.DATA0006 INNER JOIN
							  dbo.DATA0048 ON dbo.DATA0006.RKEY = dbo.DATA0048.WO_PTR INNER JOIN
							  dbo.DATA0034 ON dbo.DATA0048.WORK_CENTER_PTR = dbo.DATA0034.RKEY INNER JOIN
							  dbo.DATA0050 ON dbo.DATA0006.CUST_PART_PTR = dbo.DATA0050.RKEY
				WHERE   
						--dbo.DATA0048.TDATE >= CONVERT(DATETIME, '01.01.2015', 103) 
						--AND dbo.DATA0048.TDATE <= CONVERT(DATETIME, '31.12.2015', 103) 
						YEAR(dbo.DATA0048.TDATE) = CAST(@p_para1 AS INT)
						AND DATA0006.ROOT_PTR=0
						--AND LEFT(dbo.DATA0034.DEPT_CODE, 3) ='DNC'
						AND data0006.ROOT_PTR=0
						AND LEFT(dbo.DATA0050.CP_REV, 1) = '3'
						--AND LEFT(dbo.DATA0006.WORK_ORDER_NUMBER, 3)<>'  -'
						AND LEFT(dbo.DATA0006.WORK_ORDER_NUMBER, 1)<>'T'
						AND SUBSTRING(dbo.DATA0006.WORK_ORDER_NUMBER, 11, 2) = '01'
						--AND LEFT(dbo.DATA0006.WORK_ORDER_NUMBER, 2) = '  '
		) as tblAend
		GROUP BY
			FAArt,
			S_R_M
		ORDER BY
			FAArt
	END

	IF @Case_ = 'Matverbrauch_AVCAM_Kosten'
	BEGIN
		DECLARE @tblExcelSheets table(Kst_ INT, Sheet INT, Datum VARCHAR(20))

		--DECLARE 
		--	@para1 varchar(255),
		--	@para2 varchar(255)
		--SET @para1 = '2015'
		--SET @para2 = '360'

		INSERT @tblExcelSheets(Kst_, Sheet) SELECT 365, 4
		INSERT @tblExcelSheets(Kst_, Sheet) SELECT 100, 5
		INSERT @tblExcelSheets(Kst_, Sheet) SELECT 370, 6
		INSERT @tblExcelSheets(Kst_, Sheet) SELECT 117, 7
		INSERT @tblExcelSheets(Kst_, Sheet) SELECT 280, 8
		INSERT @tblExcelSheets(Kst_, Sheet) SELECT 110, 9
		INSERT @tblExcelSheets(Kst_, Sheet) SELECT 140, 10
		INSERT @tblExcelSheets(Kst_, Sheet) SELECT 125, 11
		INSERT @tblExcelSheets(Kst_, Sheet) SELECT 127, 12
		INSERT @tblExcelSheets(Kst_, Sheet) SELECT 135, 13
		INSERT @tblExcelSheets(Kst_, Sheet) SELECT 130, 14
		INSERT @tblExcelSheets(Kst_, Sheet) SELECT 190, 15
		INSERT @tblExcelSheets(Kst_, Sheet) SELECT 163, 16
		INSERT @tblExcelSheets(Kst_, Sheet) SELECT 160, 17
		INSERT @tblExcelSheets(Kst_, Sheet) SELECT 285, 18
		INSERT @tblExcelSheets(Kst_, Sheet) SELECT 161, 19
		INSERT @tblExcelSheets(Kst_, Sheet) SELECT 162, 20
		INSERT @tblExcelSheets(Kst_, Sheet) SELECT 290, 21
		INSERT @tblExcelSheets(Kst_, Sheet) SELECT 305, 22
		INSERT @tblExcelSheets(Kst_, Sheet) SELECT 308, 23
		INSERT @tblExcelSheets(Kst_, Sheet) SELECT 300, 24
		INSERT @tblExcelSheets(Kst_, Sheet) SELECT 310, 25
		INSERT @tblExcelSheets(Kst_, Sheet) SELECT 180, 26
		INSERT @tblExcelSheets(Kst_, Sheet) SELECT 320, 27
		INSERT @tblExcelSheets(Kst_, Sheet) SELECT 240, 28
		INSERT @tblExcelSheets(Kst_, Sheet) SELECT 250, 29
		INSERT @tblExcelSheets(Kst_, Sheet) SELECT 220, 30
		INSERT @tblExcelSheets(Kst_, Sheet) SELECT 205, 31
		INSERT @tblExcelSheets(Kst_, Sheet) SELECT 210, 32
		INSERT @tblExcelSheets(Kst_, Sheet) SELECT 215, 33
		INSERT @tblExcelSheets(Kst_, Sheet) SELECT 170, 34
		INSERT @tblExcelSheets(Kst_, Sheet) SELECT 123, 35
		INSERT @tblExcelSheets(Kst_, Sheet) SELECT 124, 36
		INSERT @tblExcelSheets(Kst_, Sheet) SELECT 326, 37
		INSERT @tblExcelSheets(Kst_, Sheet) SELECT 350, 38
		INSERT @tblExcelSheets(Kst_, Sheet) SELECT 360, 39
		INSERT @tblExcelSheets(Kst_, Sheet) SELECT 355, 40

		DECLARE @tblPersonalKosten table(Kst INT, ExcelSheet INT, PersonalKosten FLOAT, Datum VARCHAR(20))
		INSERT @tblPersonalKosten(Kst, ExcelSheet, PersonalKosten, Datum) 
		SELECT
			Kst,
			ISNULL((SELECT TOP 1 Sheet FROM @tblExcelSheets WHERE Kst_ = Kst), 0) ExcelSheet,
			--Datum,
			SUM(Kosten) AS PersonalKosten,
			Datum
		FROM
		(
			SELECT
				CASE 
					WHEN KStKTr_.AnwNummer=999 THEN 355
					ELSE
						CASE 
							WHEN KStKTr_.AnwNummer=380 THEN 350
							ELSE
								CASE 
									WHEN KStKTr_.AnwNummer=122 THEN 124
									ELSE
										KStKTr_.AnwNummer
								END
						END
				END AS Kst,
				--ISNULL((SELECT TOP 1 Sheet FROM @tblExcelSheets WHERE Kst = KStKTr_.AnwNummer), 0) AS ExcelSheet,
				CONVERT(DATETIME, '01.01.' + LTRIM(STR(YEAR(KOMenge_.WJBeginn))), 103) AS Datum,
				ISNULL(KOMenge_.MengeJan, 0) - CASE WHEN KStKTr_.AnwNummer=360 THEN 100000/12 ELSE 0 END AS Kosten
			FROM 
				(GGP_SRV_104.SA100.dbo.KOMassGr AS KOMassGr_ INNER JOIN GGP_SRV_104.SA100.dbo.KOMenge AS KOMenge_ 
				ON KOMassGr_.DVKOMassGr = KOMenge_.DVKOMassGr) INNER JOIN GGP_SRV_104.SA100.dbo.KStKTr AS KStKTr_
				ON KOMenge_.DVKSt = KStKTr_.Nummer
			WHERE 
				KOMassGr_.Kuerzel='Personal' 

			UNION ALL

			SELECT
				CASE 
					WHEN KStKTr_.AnwNummer=999 THEN 355
					ELSE
						CASE 
							WHEN KStKTr_.AnwNummer=380 THEN 350
							ELSE
								CASE 
									WHEN KStKTr_.AnwNummer=122 THEN 124
									ELSE
										KStKTr_.AnwNummer
								END
						END
				END AS Kst,
				--ISNULL((SELECT TOP 1 Sheet FROM @tblExcelSheets WHERE Kst = KStKTr_.AnwNummer), 0) AS ExcelSheet,
				CONVERT(DATETIME, '01.02.' + LTRIM(STR(YEAR(KOMenge_.WJBeginn))), 103) AS Datum,
				ISNULL(KOMenge_.MengeFeb-KOMenge_.MengeJan, 0) - CASE WHEN KStKTr_.AnwNummer=360 THEN 100000/12 ELSE 0 END AS Kosten
			FROM 
				(GGP_SRV_104.SA100.dbo.KOMassGr AS KOMassGr_ INNER JOIN GGP_SRV_104.SA100.dbo.KOMenge AS KOMenge_ 
				ON KOMassGr_.DVKOMassGr = KOMenge_.DVKOMassGr) INNER JOIN GGP_SRV_104.SA100.dbo.KStKTr AS KStKTr_
				ON KOMenge_.DVKSt = KStKTr_.Nummer
			WHERE 
				KOMassGr_.Kuerzel='Personal' 

			UNION ALL

			SELECT
				CASE 
					WHEN KStKTr_.AnwNummer=999 THEN 355
					ELSE
						CASE 
							WHEN KStKTr_.AnwNummer=380 THEN 350
							ELSE
								CASE 
									WHEN KStKTr_.AnwNummer=122 THEN 124
									ELSE
										KStKTr_.AnwNummer
								END
						END
				END AS Kst,
				--ISNULL((SELECT TOP 1 Sheet FROM @tblExcelSheets WHERE Kst = KStKTr_.AnwNummer), 0) AS ExcelSheet,
				CONVERT(DATETIME, '01.03.' + LTRIM(STR(YEAR(KOMenge_.WJBeginn))), 103) AS Datum,
				ISNULL(KOMenge_.MengeMar-KOMenge_.MengeFeb, 0) - CASE WHEN KStKTr_.AnwNummer=360 THEN 100000/12 ELSE 0 END AS Kosten
			FROM 
				(GGP_SRV_104.SA100.dbo.KOMassGr AS KOMassGr_ INNER JOIN GGP_SRV_104.SA100.dbo.KOMenge AS KOMenge_ 
				ON KOMassGr_.DVKOMassGr = KOMenge_.DVKOMassGr) INNER JOIN GGP_SRV_104.SA100.dbo.KStKTr AS KStKTr_
				ON KOMenge_.DVKSt = KStKTr_.Nummer
			WHERE 
				KOMassGr_.Kuerzel='Personal'

			UNION ALL

			SELECT
				CASE 
					WHEN KStKTr_.AnwNummer=999 THEN 355
					ELSE
						CASE 
							WHEN KStKTr_.AnwNummer=380 THEN 350
							ELSE
								CASE 
									WHEN KStKTr_.AnwNummer=122 THEN 124
									ELSE
										KStKTr_.AnwNummer
								END
						END
				END AS Kst,
				--ISNULL((SELECT TOP 1 Sheet FROM @tblExcelSheets WHERE Kst = KStKTr_.AnwNummer), 0) AS ExcelSheet,
				CONVERT(DATETIME, '01.04.' + LTRIM(STR(YEAR(KOMenge_.WJBeginn))), 103) AS Datum,
				ISNULL(KOMenge_.MengeApr-KOMenge_.MengeMar, 0) - CASE WHEN KStKTr_.AnwNummer=360 THEN 100000/12 ELSE 0 END AS Kosten
			FROM 
				(GGP_SRV_104.SA100.dbo.KOMassGr AS KOMassGr_ INNER JOIN GGP_SRV_104.SA100.dbo.KOMenge AS KOMenge_ 
				ON KOMassGr_.DVKOMassGr = KOMenge_.DVKOMassGr) INNER JOIN GGP_SRV_104.SA100.dbo.KStKTr AS KStKTr_
				ON KOMenge_.DVKSt = KStKTr_.Nummer
			WHERE 
				KOMassGr_.Kuerzel='Personal'

			UNION ALL

			SELECT
				CASE 
					WHEN KStKTr_.AnwNummer=999 THEN 355
					ELSE
						CASE 
							WHEN KStKTr_.AnwNummer=380 THEN 350
							ELSE
								CASE 
									WHEN KStKTr_.AnwNummer=122 THEN 124
									ELSE
										KStKTr_.AnwNummer
								END
						END
				END AS Kst,
				--ISNULL((SELECT TOP 1 Sheet FROM @tblExcelSheets WHERE Kst = KStKTr_.AnwNummer), 0) AS ExcelSheet,
				CONVERT(DATETIME, '01.05.' + LTRIM(STR(YEAR(KOMenge_.WJBeginn))), 103) AS Datum,
				ISNULL(KOMenge_.MengeMai-KOMenge_.MengeApr, 0) - CASE WHEN KStKTr_.AnwNummer=360 THEN 100000/12 ELSE 0 END AS Kosten
			FROM 
				(GGP_SRV_104.SA100.dbo.KOMassGr AS KOMassGr_ INNER JOIN GGP_SRV_104.SA100.dbo.KOMenge AS KOMenge_ 
				ON KOMassGr_.DVKOMassGr = KOMenge_.DVKOMassGr) INNER JOIN GGP_SRV_104.SA100.dbo.KStKTr AS KStKTr_
				ON KOMenge_.DVKSt = KStKTr_.Nummer
			WHERE 
				KOMassGr_.Kuerzel='Personal'

			UNION ALL

			SELECT
				CASE 
					WHEN KStKTr_.AnwNummer=999 THEN 355
					ELSE
						CASE 
							WHEN KStKTr_.AnwNummer=380 THEN 350
							ELSE
								CASE 
									WHEN KStKTr_.AnwNummer=122 THEN 124
									ELSE
										KStKTr_.AnwNummer
								END
						END
				END AS Kst,
				--ISNULL((SELECT TOP 1 Sheet FROM @tblExcelSheets WHERE Kst = KStKTr_.AnwNummer), 0) AS ExcelSheet,			
				CONVERT(DATETIME, '01.06.' + LTRIM(STR(YEAR(KOMenge_.WJBeginn))), 103) AS Datum,
				ISNULL(KOMenge_.MengeJun-KOMenge_.MengeMai, 0) - CASE WHEN KStKTr_.AnwNummer=360 THEN 100000/12 ELSE 0 END AS Kosten
			FROM 
				(GGP_SRV_104.SA100.dbo.KOMassGr AS KOMassGr_ INNER JOIN GGP_SRV_104.SA100.dbo.KOMenge AS KOMenge_ 
				ON KOMassGr_.DVKOMassGr = KOMenge_.DVKOMassGr) INNER JOIN GGP_SRV_104.SA100.dbo.KStKTr AS KStKTr_
				ON KOMenge_.DVKSt = KStKTr_.Nummer
			WHERE 
				KOMassGr_.Kuerzel='Personal'

			UNION ALL

			SELECT
				CASE 
					WHEN KStKTr_.AnwNummer=999 THEN 355
					ELSE
						CASE 
							WHEN KStKTr_.AnwNummer=380 THEN 350
							ELSE
								CASE 
									WHEN KStKTr_.AnwNummer=122 THEN 124
									ELSE
										KStKTr_.AnwNummer
								END
						END
				END AS Kst,
				--ISNULL((SELECT TOP 1 Sheet FROM @tblExcelSheets WHERE Kst = KStKTr_.AnwNummer), 0) AS ExcelSheet,
				CONVERT(DATETIME, '01.07.' + LTRIM(STR(YEAR(KOMenge_.WJBeginn))), 103) AS Datum,
				ISNULL(KOMenge_.MengeJul-KOMenge_.MengeJun, 0) - CASE WHEN KStKTr_.AnwNummer=360 THEN 100000/12 ELSE 0 END AS Kosten
			FROM 
				(GGP_SRV_104.SA100.dbo.KOMassGr AS KOMassGr_ INNER JOIN GGP_SRV_104.SA100.dbo.KOMenge AS KOMenge_ 
				ON KOMassGr_.DVKOMassGr = KOMenge_.DVKOMassGr) INNER JOIN GGP_SRV_104.SA100.dbo.KStKTr AS KStKTr_
				ON KOMenge_.DVKSt = KStKTr_.Nummer
			WHERE 
				KOMassGr_.Kuerzel='Personal'

			UNION ALL

			SELECT
				CASE 
					WHEN KStKTr_.AnwNummer=999 THEN 355
					ELSE
						CASE 
							WHEN KStKTr_.AnwNummer=380 THEN 350
							ELSE
								CASE 
									WHEN KStKTr_.AnwNummer=122 THEN 124
									ELSE
										KStKTr_.AnwNummer
								END
						END
				END AS Kst,
				--ISNULL((SELECT TOP 1 Sheet FROM @tblExcelSheets WHERE Kst = KStKTr_.AnwNummer), 0) AS ExcelSheet,
				CONVERT(DATETIME, '01.08.' + LTRIM(STR(YEAR(KOMenge_.WJBeginn))), 103) AS Datum,
				ISNULL(KOMenge_.MengeAug-KOMenge_.MengeJul, 0) - CASE WHEN KStKTr_.AnwNummer=360 THEN 100000/12 ELSE 0 END AS Kosten
			FROM 
				(GGP_SRV_104.SA100.dbo.KOMassGr AS KOMassGr_ INNER JOIN GGP_SRV_104.SA100.dbo.KOMenge AS KOMenge_ 
				ON KOMassGr_.DVKOMassGr = KOMenge_.DVKOMassGr) INNER JOIN GGP_SRV_104.SA100.dbo.KStKTr AS KStKTr_
				ON KOMenge_.DVKSt = KStKTr_.Nummer
			WHERE 
				KOMassGr_.Kuerzel='Personal'

			UNION ALL

			SELECT
				CASE 
					WHEN KStKTr_.AnwNummer=999 THEN 355
					ELSE
						CASE 
							WHEN KStKTr_.AnwNummer=380 THEN 350
							ELSE
								CASE 
									WHEN KStKTr_.AnwNummer=122 THEN 124
									ELSE
										KStKTr_.AnwNummer
								END
						END
				END AS Kst,
				--ISNULL((SELECT TOP 1 Sheet FROM @tblExcelSheets WHERE Kst = KStKTr_.AnwNummer), 0) AS ExcelSheet,
				CONVERT(DATETIME, '01.09.' + LTRIM(STR(YEAR(KOMenge_.WJBeginn))), 103) AS Datum,
				ISNULL(KOMenge_.MengeSep-KOMenge_.MengeAug, 0) - CASE WHEN KStKTr_.AnwNummer=360 THEN 100000/12 ELSE 0 END AS Kosten
			FROM 
				(GGP_SRV_104.SA100.dbo.KOMassGr AS KOMassGr_ INNER JOIN GGP_SRV_104.SA100.dbo.KOMenge AS KOMenge_ 
				ON KOMassGr_.DVKOMassGr = KOMenge_.DVKOMassGr) INNER JOIN GGP_SRV_104.SA100.dbo.KStKTr AS KStKTr_
				ON KOMenge_.DVKSt = KStKTr_.Nummer
			WHERE 
				KOMassGr_.Kuerzel='Personal'

			UNION ALL

			SELECT
				CASE 
					WHEN KStKTr_.AnwNummer=999 THEN 355
					ELSE
						CASE 
							WHEN KStKTr_.AnwNummer=380 THEN 350
							ELSE
								CASE 
									WHEN KStKTr_.AnwNummer=122 THEN 124
									ELSE
										KStKTr_.AnwNummer
								END
						END
				END AS Kst,
				--ISNULL((SELECT TOP 1 Sheet FROM @tblExcelSheets WHERE Kst = KStKTr_.AnwNummer), 0) AS ExcelSheet,
				CONVERT(DATETIME, '01.10.' + LTRIM(STR(YEAR(KOMenge_.WJBeginn))), 103) AS Datum,
				ISNULL(KOMenge_.MengeOkt-KOMenge_.MengeSep, 0) - CASE WHEN KStKTr_.AnwNummer=360 THEN 100000/12 ELSE 0 END AS Kosten
			FROM 
				(GGP_SRV_104.SA100.dbo.KOMassGr AS KOMassGr_ INNER JOIN GGP_SRV_104.SA100.dbo.KOMenge AS KOMenge_ 
				ON KOMassGr_.DVKOMassGr = KOMenge_.DVKOMassGr) INNER JOIN GGP_SRV_104.SA100.dbo.KStKTr AS KStKTr_
				ON KOMenge_.DVKSt = KStKTr_.Nummer
			WHERE 
				KOMassGr_.Kuerzel='Personal'

			UNION ALL

			SELECT
				CASE 
					WHEN KStKTr_.AnwNummer=999 THEN 355
					ELSE
						CASE 
							WHEN KStKTr_.AnwNummer=380 THEN 350
							ELSE
								CASE 
									WHEN KStKTr_.AnwNummer=122 THEN 124
									ELSE
										KStKTr_.AnwNummer
								END
						END
				END AS Kst,
				--ISNULL((SELECT TOP 1 Sheet FROM @tblExcelSheets WHERE Kst = KStKTr_.AnwNummer), 0) AS ExcelSheet,
				CONVERT(DATETIME, '01.11.' + LTRIM(STR(YEAR(KOMenge_.WJBeginn))), 103) AS Datum,
				ISNULL(KOMenge_.MengeNov-KOMenge_.MengeOkt, 0) - CASE WHEN KStKTr_.AnwNummer=360 THEN 100000/12 ELSE 0 END AS Kosten
			FROM 
				(GGP_SRV_104.SA100.dbo.KOMassGr AS KOMassGr_ INNER JOIN GGP_SRV_104.SA100.dbo.KOMenge AS KOMenge_ 
				ON KOMassGr_.DVKOMassGr = KOMenge_.DVKOMassGr) INNER JOIN GGP_SRV_104.SA100.dbo.KStKTr AS KStKTr_
				ON KOMenge_.DVKSt = KStKTr_.Nummer
			WHERE 
				KOMassGr_.Kuerzel='Personal'

			UNION ALL

			SELECT
				CASE 
					WHEN KStKTr_.AnwNummer=999 THEN 355
					ELSE
						CASE 
							WHEN KStKTr_.AnwNummer=380 THEN 350
							ELSE
								CASE 
									WHEN KStKTr_.AnwNummer=122 THEN 124
									ELSE
										KStKTr_.AnwNummer
								END
						END
				END AS Kst,
				--ISNULL((SELECT TOP 1 Sheet FROM @tblExcelSheets WHERE Kst = KStKTr_.AnwNummer), 0) AS ExcelSheet,
				CONVERT(DATETIME, '01.12.' + LTRIM(STR(YEAR(KOMenge_.WJBeginn))), 103) AS Datum,
				ISNULL(KOMenge_.MengeDez-KOMenge_.MengeNov, 0) - CASE WHEN KStKTr_.AnwNummer=360 THEN 100000/12 ELSE 0 END AS Kosten
			FROM 
				(GGP_SRV_104.SA100.dbo.KOMassGr AS KOMassGr_ INNER JOIN GGP_SRV_104.SA100.dbo.KOMenge AS KOMenge_ 
				ON KOMassGr_.DVKOMassGr = KOMenge_.DVKOMassGr) INNER JOIN GGP_SRV_104.SA100.dbo.KStKTr AS KStKTr_
				ON KOMenge_.DVKSt = KStKTr_.Nummer
			WHERE 
				KOMassGr_.Kuerzel='Personal'
		) AS tblPersKosten
		WHERE
			--Datum >= CONVERT(DATETIME, @para1, 103)
			--AND Datum <= CONVERT(DATETIME, @para2, 103)
			YEAR(Datum) = @para1
		GROUP BY
			Kst,
			Datum

		-----------------------------------------------------------------
		--Kostenstelle 105 verteilen auf Zuschnitt und Aetzen alkalisch
		DECLARE
			@Kst_105 FLOAT
		SET @Kst_105 = (SELECT TOP 1 SUM(PersonalKosten) AS RES FROM @tblPersonalKosten WHERE Kst=105)/2
		DELETE FROM @tblPersonalKosten WHERE Kst=105 

		UPDATE --AetzenAlkalisch
			@tblPersonalKosten
		SET 
			PersonalKosten = PersonalKosten + @Kst_105
		WHERE 
			Kst = 305

		UPDATE --Zuschnitt
			@tblPersonalKosten
		SET 
			PersonalKosten = PersonalKosten + @Kst_105
		WHERE 
			Kst = 190			
		-----------------------------------------------------------------			

		-----------------------------------------------------------------
		--Kostenstelle 200 verteilen auf Bohren, Fräsen, Ritzen und Zuschnitt
		DECLARE
			@AnzMA_Bohren FLOAT
		SET @AnzMA_Bohren = (
								SELECT TOP 1
									SUM(AnzMA) AS AnzMA_Bohren
								FROM
								(
									SELECT
										Name,
										SUM(Soll) AS SollStd,
										SUM(Ist) AS IstStd,
										CASE WHEN SUM(Soll)>0 THEN SUM(Ist)/SUM(Soll) ELSE 1 END AS AnzMA
									FROM
									(
										SELECT DISTINCT
											Name, Soll, Ist, Fehlgrund, ID_MSAccess
										FROM LIVE2.dbo.AnwStd
										WHERE 
											Kst=205 --Bohren
											--AND Datum >= CONVERT(DATETIME, @para1, 103)
											--AND Datum <= CONVERT(DATETIME, @para2, 103)
											AND YEAR(Datum) = @para1
											AND Fehlgrund = 'ISTAZ'
									) AS tblAStd
									GROUP BY
										Name
								) AS tblAnzMA
							)

		DECLARE
			@AnzMA_Fraesen FLOAT
		SET @AnzMA_Fraesen = (
								SELECT TOP 1
									SUM(AnzMA) AS AnzMA_Fraesen
								FROM
								(
									SELECT
										Name,
										SUM(Soll) AS SollStd,
										SUM(Ist) AS IstStd,
										CASE WHEN SUM(Soll)>0 THEN SUM(Ist)/SUM(Soll) ELSE 1 END AS AnzMA
									FROM
									(
										SELECT DISTINCT
											Name, Soll, Ist, Fehlgrund, ID_MSAccess
										FROM LIVE2.dbo.AnwStd
										WHERE 
											Kst=210 --Fräsen
											--AND Datum >= CONVERT(DATETIME, @para1, 103)
											--AND Datum <= CONVERT(DATETIME, @para2, 103)
											AND YEAR(Datum) = @para1
											AND Fehlgrund = 'ISTAZ'
									) AS tblAStd
									GROUP BY
										Name
								) AS tblAnzMA
							)

		DECLARE
			@AnzMA_Ritzen FLOAT
		SET @AnzMA_Ritzen = (
								SELECT TOP 1
									SUM(AnzMA) AS AnzMA_Ritzen
								FROM
								(
									SELECT
										Name,
										SUM(Soll) AS SollStd,
										SUM(Ist) AS IstStd,
										CASE WHEN SUM(Soll)>0 THEN SUM(Ist)/SUM(Soll) ELSE 1 END AS AnzMA
									FROM
									(
										SELECT DISTINCT
											Name, Soll, Ist, Fehlgrund, ID_MSAccess
										FROM LIVE2.dbo.AnwStd
										WHERE 
											Kst=215 --Ritzen
											--AND Datum >= CONVERT(DATETIME, @para1, 103)
											--AND Datum <= CONVERT(DATETIME, @para2, 103)
											AND YEAR(Datum) = @para1
											AND Fehlgrund = 'ISTAZ'
									) AS tblAStd
									GROUP BY
										Name
								) AS tblAnzMA
							)

		DECLARE
			@AnzMA_Zuschnitt FLOAT
		SET @AnzMA_Zuschnitt = (
								SELECT TOP 1
									SUM(AnzMA) AS AnzMA_Zuschnitt
								FROM
								(
									SELECT
										Name,
										SUM(Soll) AS SollStd,
										SUM(Ist) AS IstStd,
										CASE WHEN SUM(Soll)>0 THEN SUM(Ist)/SUM(Soll) ELSE 1 END AS AnzMA
									FROM
									(
										SELECT DISTINCT
											Name, Soll, Ist, Fehlgrund, ID_MSAccess
										FROM LIVE2.dbo.AnwStd
										WHERE 
											Kst=190 --Zuschnitt
											--AND Datum >= CONVERT(DATETIME, @para1, 103)
											--AND Datum <= CONVERT(DATETIME, @para2, 103)
											AND YEAR(Datum) = @para1
											AND Fehlgrund = 'ISTAZ'
									) AS tblAStd
									GROUP BY
										Name
								) AS tblAnzMA
							)

		DECLARE
			@Kst_200 FLOAT
		SET @Kst_200 = (SELECT TOP 1 SUM(PersonalKosten) AS RES FROM @tblPersonalKosten WHERE Kst=200)/(@AnzMA_Bohren+@AnzMA_Fraesen+@AnzMA_Ritzen+@AnzMA_Zuschnitt)
		DELETE FROM @tblPersonalKosten WHERE Kst=200 


		UPDATE --Bohren
			@tblPersonalKosten
		SET 
			PersonalKosten = PersonalKosten + (@AnzMA_Bohren * @Kst_200)
		WHERE 
			Kst = 205

		UPDATE --Fräsen
			@tblPersonalKosten
		SET 
			PersonalKosten = PersonalKosten + (@AnzMA_Fraesen * @Kst_200)
		WHERE 
			Kst = 210		
			
		UPDATE --Ritzen
			@tblPersonalKosten
		SET 
			PersonalKosten = PersonalKosten + (@AnzMA_Ritzen * @Kst_200)
		WHERE 
			Kst = 215		

		UPDATE --Zuschnitt
			@tblPersonalKosten
		SET 
			PersonalKosten = PersonalKosten + (@AnzMA_Zuschnitt * @Kst_200)
		WHERE 
			Kst = 190
		-----------------------------------------------------------------	



		-----------------------------------------------------------------
		DECLARE @tblLeasingKosten table(Kst INT, ExcelSheet INT, LeasingKosten FLOAT, Datum VARCHAR(20) )
		INSERT @tblLeasingKosten(Kst, ExcelSheet, LeasingKosten, Datum) 
		SELECT
			Kst,
			ISNULL((SELECT TOP 1 Sheet FROM @tblExcelSheets WHERE Kst_ = Kst), 0) ExcelSheet,
			--Datum,
			SUM(Betrag) AS LeasingKosten,
			Datum
		FROM
		(
			SELECT 
				CONVERT(DATETIME, RTRIM(STR(DAY(Buchung_.Buchungsperiode))) + '.'  + LTRIM(STR(MONTH(Buchung_.Buchungsperiode))) + '.' + LTRIM(STR(YEAR(Buchung_.Buchungsperiode))), 103) AS Datum,
				--KOREDaten_.Kostenstelle AS Kst, 
				CASE 
					WHEN KOREDaten_.Kostenstelle=223 THEN 220
					ELSE
						KOREDaten_.Kostenstelle
				END AS Kst,
				Sum(KOREDaten_.Betrag) AS Betrag
			FROM 
				((GGP_SRV_104.SA100.dbo.KOREDaten AS KOREDaten_ INNER JOIN GGP_SRV_104.SA100.dbo.KOKArtPrim AS KOKArtPrim_ ON KOREDaten_.DVKOKArt = KOKArtPrim_.DVKOKArt) 
				INNER JOIN GGP_SRV_104.SA100.dbo.Buchung AS Buchung_
				ON KOREDaten_.DVBuchungsnummer = Buchung_.DVBuchungsnummer) INNER JOIN GGP_SRV_104.SA100.dbo.KStKTr AS KStKTr_ ON KOREDaten_.Kostenstelle = KStKTr_.AnwNummer
			GROUP BY 
				Buchung_.Buchungsperiode, 
				KOKArtPrim_.AnwNummer, 
				KOREDaten_.Kostenstelle
			HAVING 
				--Buchung_.Buchungsperiode >= CONVERT(DATETIME, @para1, 103) 
				--AND Buchung_.Buchungsperiode <= CONVERT(DATETIME, @para1, 103)  
				--CONVERT(DATETIME, RTRIM(STR(DAY(Buchung_.Buchungsperiode))) + '.'  + LTRIM(STR(MONTH(Buchung_.Buchungsperiode))) + '.' + LTRIM(STR(YEAR(Buchung_.Buchungsperiode))), 103)
				-->= CONVERT(DATETIME, @para1, 103) 
				--AND
				--CONVERT(DATETIME, RTRIM(STR(DAY(Buchung_.Buchungsperiode))) + '.'  + LTRIM(STR(MONTH(Buchung_.Buchungsperiode))) + '.' + LTRIM(STR(YEAR(Buchung_.Buchungsperiode))), 103)
				-- <= CONVERT(DATETIME, @para2, 103) 
				YEAR(Buchung_.Buchungsperiode) = @para1
				AND KOKArtPrim_.AnwNummer IN ('6834', '6835', '6836', '6837', '6838', '6839', '6840', '6841' 	
													, '6842', '6843', '6844' 
													, '6846', '6847', '6848', '6849' 
													, '6851', '6852', '6853', '6854' 
													, '6857', '6858' 
													, '6860', '6861', '6862', '6863', '6864', '6865', '6866', '6867', '6868')
		) AS tblLeasing
		GROUP BY
			Kst,
			Datum

		-----------------------------------------------------------------
		--Kostenstelle 999 verteilen auf Verwaltung und Vertrieb
		DECLARE
			@Kst_350_360 FLOAT
		SET @Kst_350_360 = (SELECT TOP 1 SUM(LeasingKosten) AS RES FROM @tblLeasingKosten WHERE Kst=999)/2
		DELETE FROM @tblLeasingKosten WHERE Kst=999 

		UPDATE --Verwaltung
			@tblLeasingKosten
		SET 
			LeasingKosten = LeasingKosten + @Kst_350_360
		WHERE 
			Kst = 350

		UPDATE --Vertrieb
			@tblLeasingKosten
		SET 
			LeasingKosten = LeasingKosten + @Kst_350_360
		WHERE 
			Kst = 360			
		-----------------------------------------------------------------		

				DECLARE @tblInstKosten table(Kst INT, ExcelSheet INT, InstKosten FLOAT, Datum varchar(29))
		INSERT @tblInstKosten(Kst, ExcelSheet, InstKosten, Datum) 
		SELECT
			Kst,
			ISNULL((SELECT TOP 1 Sheet FROM @tblExcelSheets WHERE Kst_ = Kst), 0) ExcelSheet,
			SUM(Betrag) AS InstKosten,
			Datum
		FROM
		(
			SELECT 
				--CONVERT(DATETIME, RTRIM(STR(DAY(Buchung_.Buchungsperiode))) + '.'  + LTRIM(STR(MONTH(Buchung_.Buchungsperiode))) + '.' + LTRIM(STR(YEAR(Buchung_.Buchungsperiode))), 103) AS Datum,
				Buchung_.Buchungsperiode AS Datum,
				--KOREDaten_.Kostenstelle AS Kst, 
				CASE 
					WHEN KOREDaten_.Kostenstelle=200 THEN 205 --Bohrerei
					ELSE
						CASE 
							WHEN KOREDaten_.Kostenstelle=222 THEN 220 --Siebdruck
							ELSE
								CASE 
									WHEN KOREDaten_.Kostenstelle=380 THEN 362 --Versand
									ELSE
										KOREDaten_.Kostenstelle
								END
						END
				END AS Kst,
				Sum(KOREDaten_.Betrag) AS Betrag
			FROM         GGP_SRV_104.SA100.dbo.KOREDaten AS KOREDaten_ INNER JOIN
						  GGP_SRV_104.SA100.dbo.KOKArtPrim AS KOKArtPrim_ ON KOREDaten_.DVKOKArt = KOKArtPrim_.DVKOKArt INNER JOIN
						  GGP_SRV_104.SA100.dbo.Buchung AS Buchung_ ON KOREDaten_.DVBuchungsnummer = Buchung_.DVBuchungsnummer INNER JOIN
						  GGP_SRV_104.SA100.dbo.KStKTr AS KStKTr_ ON KOREDaten_.Kostenstelle = KStKTr_.AnwNummer
			WHERE
				--Buchung_.Buchungsperiode >= CONVERT(DATETIME, @para1, 103) 
				--AND Buchung_.Buchungsperiode <= CONVERT(DATETIME, @para2, 103) 
				YEAR(Buchung_.Buchungsperiode) = @para1
				AND (
						(KOKArtPrim_.AnwNummer >= '6450' And KOKArtPrim_.AnwNummer <= '6497')
						OR
						KOKArtPrim_.AnwNummer = '6973'
					)
			GROUP BY 
				Buchung_.Buchungsperiode, 
				KOKArtPrim_.AnwNummer, 
				KOREDaten_.Kostenstelle 
		) AS tblInst
		GROUP BY
			Kst,
			Datum

		-----------------------------------------------------------------
		--Kostenstelle 390 verteilen auf Verwaltung, Vertrieb und QS
		DECLARE
			@Kst_350_360_125 FLOAT
		SET @Kst_350_360_125 = (SELECT TOP 1 SUM(InstKosten) AS RES FROM @tblInstKosten WHERE Kst=390)/3
		DELETE FROM @tblInstKosten WHERE Kst=390 

		UPDATE --Verwaltung
			@tblInstKosten
		SET 
			InstKosten = InstKosten + @Kst_350_360_125
		WHERE 
			Kst = 350

		UPDATE --Vertrieb
			@tblInstKosten
		SET 
			InstKosten = InstKosten + @Kst_350_360_125
		WHERE 
			Kst = 360			

		UPDATE --QS
			@tblInstKosten
		SET 
			InstKosten = InstKosten + @Kst_350_360_125
		WHERE 
			Kst = 125	
		-----------------------------------------------------------------


		DECLARE @tblSoKosten table(Kst INT, ExcelSheet INT, SoKosten FLOAT, Datum varchar(20))
		INSERT @tblSoKosten(Kst, ExcelSheet, SoKosten, Datum) 
		SELECT
			Kst,
			ISNULL((SELECT TOP 1 Sheet FROM @tblExcelSheets WHERE Kst_ = Kst), 0) ExcelSheet,
			SUM(Betrag) AS SoKosten,
			Datum
		FROM
		(
			SELECT 
				--CONVERT(DATETIME, RTRIM(STR(DAY(Buchung_.Buchungsperiode))) + '.'  + LTRIM(STR(MONTH(Buchung_.Buchungsperiode))) + '.' + LTRIM(STR(YEAR(Buchung_.Buchungsperiode))), 103) AS Datum,
				Buchung_.Buchungsperiode AS Datum,
				--KOREDaten_.Kostenstelle AS Kst, 
				CASE 
					WHEN KOREDaten_.Kostenstelle=200 THEN 210 --Fräsen
					ELSE
						CASE 
							WHEN KOREDaten_.Kostenstelle=221 OR KOREDaten_.Kostenstelle=222 OR KOREDaten_.Kostenstelle=223 THEN 220 --Siebdruck
							ELSE
								CASE 
									WHEN KOREDaten_.Kostenstelle=340 THEN 100 --Instandhaltung
									ELSE
										CASE 
											WHEN KOREDaten_.Kostenstelle=390 THEN 125 --QS
											ELSE
												KOREDaten_.Kostenstelle
										END
								END
						END
				END AS Kst,
				Sum(KOREDaten_.Betrag) AS Betrag
			FROM         GGP_SRV_104.SA100.dbo.KOREDaten AS KOREDaten_ INNER JOIN
						  GGP_SRV_104.SA100.dbo.KOKArtPrim AS KOKArtPrim_ ON KOREDaten_.DVKOKArt = KOKArtPrim_.DVKOKArt INNER JOIN
						  GGP_SRV_104.SA100.dbo.Buchung AS Buchung_ ON KOREDaten_.DVBuchungsnummer = Buchung_.DVBuchungsnummer INNER JOIN
						  GGP_SRV_104.SA100.dbo.KStKTr AS KStKTr_ ON KOREDaten_.Kostenstelle = KStKTr_.AnwNummer
			WHERE
				--Buchung_.Buchungsperiode >= CONVERT(DATETIME, @para1, 103) 
				--AND Buchung_.Buchungsperiode <= CONVERT(DATETIME, @para2, 103) 
				YEAR(Buchung_.Buchungsperiode) = @para1
				AND (
						(KOKArtPrim_.AnwNummer IN ('6313', '6855', '6314', '6315', '6436', '6845', '6850', '6856', '6879', '6790', '6312', '6440'))
						OR
						(KOKArtPrim_.AnwNummer >= '6320' And KOKArtPrim_.AnwNummer <= '6350')
						OR
						(KOKArtPrim_.AnwNummer >= '7650' And KOKArtPrim_.AnwNummer <= '7693')
						OR
						(KOKArtPrim_.AnwNummer >= '6400' And KOKArtPrim_.AnwNummer <= '6430')
						OR
						(KOKArtPrim_.AnwNummer >= '6500' And KOKArtPrim_.AnwNummer <= '6580')
						OR
						(KOKArtPrim_.AnwNummer >= '6600' And KOKArtPrim_.AnwNummer <= '6689')
						OR
						(KOKArtPrim_.AnwNummer >= '6700' And KOKArtPrim_.AnwNummer <= '6789')
						OR
						(KOKArtPrim_.AnwNummer >= '6800' And KOKArtPrim_.AnwNummer <= '6821')
						OR
						(KOKArtPrim_.AnwNummer >= '6824' And KOKArtPrim_.AnwNummer <= '6833')
						OR
						(KOKArtPrim_.AnwNummer >= '6300' And KOKArtPrim_.AnwNummer <= '6311')
						OR
						(KOKArtPrim_.AnwNummer >= '6870' And KOKArtPrim_.AnwNummer <= '6959')
					)
			GROUP BY 
				Buchung_.Buchungsperiode, 
				KOKArtPrim_.AnwNummer, 
				KOREDaten_.Kostenstelle 
		) AS tblSo
		GROUP BY
			Kst,
			Datum

		-----------------------------------------------------------------
		--Kostenstelle 105 verteilen auf Verwaltung, Vertrieb und QS
		--DECLARE
		--	@Kst_350_360_125 FLOAT
		SET @Kst_350_360_125 = (SELECT TOP 1 SUM(SoKosten) AS RES FROM @tblSoKosten WHERE Kst=105)/3
		DELETE FROM @tblSoKosten WHERE Kst=105 

		UPDATE --Verwaltung
			@tblSoKosten
		SET 
			SoKosten = SoKosten + @Kst_350_360_125
		WHERE 
			Kst = 350

		UPDATE --Vertrieb
			@tblSoKosten
		SET 
			SoKosten = SoKosten + @Kst_350_360_125
		WHERE 
			Kst = 360			

		UPDATE --QS
			@tblSoKosten
		SET 
			SoKosten = SoKosten + @Kst_350_360_125
		WHERE 
			Kst = 125	
		-----------------------------------------------------------------



		SELECT
			--Art,
			JahrMonat,
			SUM(Kosten) AS GesamtKosten
		FROM
		(
			SELECT 
				'Personalkosten' AS Art,
				RTRIM(STR(YEAR(Datum))) + '.' + CASE WHEN MONTH(Datum) < 10 THEN '0' + LTRIM(STR(MONTH(Datum))) ELSE LTRIM(STR(MONTH(Datum))) END AS JahrMonat, 
				SUM(PersonalKosten) AS Kosten 
			FROM @tblPersonalKosten WHERE Kst = CAST(@para2 AS INT) --360 --IN (360, 350, 127, 135, 130)
			GROUP BY
				RTRIM(STR(YEAR(Datum))) + '.' + CASE WHEN MONTH(Datum) < 10 THEN '0' + LTRIM(STR(MONTH(Datum))) ELSE LTRIM(STR(MONTH(Datum))) END

			UNION ALL

			SELECT 
				'Leasingkosten' AS Art,
				RTRIM(STR(YEAR(Datum))) + '.' + CASE WHEN MONTH(Datum) < 10 THEN '0' + LTRIM(STR(MONTH(Datum))) ELSE LTRIM(STR(MONTH(Datum))) END AS JahrMonat, 
				SUM(LeasingKosten) AS Kosten 
			FROM @tblLeasingKosten WHERE Kst = CAST(@para2 AS INT) --IN (360, 350, 127, 135, 130)
			GROUP BY
				RTRIM(STR(YEAR(Datum))) + '.' + CASE WHEN MONTH(Datum) < 10 THEN '0' + LTRIM(STR(MONTH(Datum))) ELSE LTRIM(STR(MONTH(Datum))) END

			UNION ALL

			SELECT 
				'Energiekosten' AS Art,
				Bezeichnung AS JahrMonat,
				SUM(Betrag) AS Kosten
			FROM
			(
			SELECT 
				KOKArtPrim_.Bezeichnung,
				KOREDaten_.Betrag
			FROM         GGP_SRV_104.SA100.dbo.KOREDaten AS KOREDaten_ INNER JOIN
						  GGP_SRV_104.SA100.dbo.KOKArtPrim AS KOKArtPrim_ ON KOREDaten_.DVKOKArt = KOKArtPrim_.DVKOKArt INNER JOIN
						  GGP_SRV_104.SA100.dbo.Buchung AS Buchung_ ON KOREDaten_.DVBuchungsnummer = Buchung_.DVBuchungsnummer
			WHERE  
				KOKArtPrim_.AnwNummer IN ('5190', '5191', '5192', '5193', '5194')
				--AND Buchung_.Buchungsperiode>=CONVERT(DATETIME, @para1, 103) 
				--AND Buchung_.Buchungsperiode<=CONVERT(DATETIME, @para2, 103) 
				AND YEAR(Buchung_.Buchungsperiode) = @para1
				--AND KOKArtPrim_.AnwNummer IN ('5190', '5192', '5194')
			) AS tblEnergie
			GROUP BY
				Bezeichnung

			UNION ALL

			SELECT
				'Instkosten' AS Art,
				RTRIM(STR(YEAR(Datum))) + '.' + CASE WHEN MONTH(Datum) < 10 THEN '0' + LTRIM(STR(MONTH(Datum))) ELSE LTRIM(STR(MONTH(Datum))) END AS JahrMonat, 
				SUM(InstKosten) AS Kosten 
			FROM @tblInstKosten WHERE Kst = CAST(@para2 AS INT) --360 --IN (360, 350, 127, 135, 130)
			GROUP BY
				RTRIM(STR(YEAR(Datum))) + '.' + CASE WHEN MONTH(Datum) < 10 THEN '0' + LTRIM(STR(MONTH(Datum))) ELSE LTRIM(STR(MONTH(Datum))) END

			UNION ALL

			SELECT 
				'Sokosten' AS Art,
				RTRIM(STR(YEAR(Datum))) + '.' + CASE WHEN MONTH(Datum) < 10 THEN '0' + LTRIM(STR(MONTH(Datum))) ELSE LTRIM(STR(MONTH(Datum))) END AS JahrMonat, 
				SUM(SoKosten) AS Kosten 
			FROM @tblSoKosten WHERE Kst = CAST(@para2 AS INT) --360 --IN (360, 350, 127, 135, 130)
			GROUP BY
				RTRIM(STR(YEAR(Datum))) + '.' + CASE WHEN MONTH(Datum) < 10 THEN '0' + LTRIM(STR(MONTH(Datum))) ELSE LTRIM(STR(MONTH(Datum))) END
		) AS tblGesamtKosten
		GROUP BY
			--Art,
			JahrMonat
	END

END
